/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.importaciones.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.importaciones.util.PedidoCompraImporConstantesFunciones;
import com.bydan.erp.importaciones.util.PedidoCompraImporParameterReturnGeneral;
//import com.bydan.erp.importaciones.util.PedidoCompraImporParameterGeneral;
//import com.bydan.erp.importaciones.presentation.report.source.PedidoCompraImporBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.importaciones.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.importaciones.resources.reportes.AuxiliarReportes;


import com.bydan.erp.importaciones.util.*;
import com.bydan.erp.importaciones.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.importaciones.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.importaciones.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class PedidoCompraImporBeanSwingJInternalFrame extends PedidoCompraImporJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(PedidoCompraImporBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<PedidoCompraImpor> pedidocompraimporValidator = new ClassValidator<PedidoCompraImpor>(PedidoCompraImpor.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public PedidoCompraImpor pedidocompraimpor;	
	public PedidoCompraImpor pedidocompraimporAux;
	public PedidoCompraImpor pedidocompraimporAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public PedidoCompraImpor pedidocompraimporTotales;
	public Long idPedidoCompraImporActual;
	public Long iIdNuevoPedidoCompraImpor=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboModulo="";

	public List<Modulo> modulosForeignKey;

	public List<Modulo> getmodulosForeignKey() {
		return modulosForeignKey;
	}

	public void setmodulosForeignKey(List<Modulo> modulosForeignKey) {
		this.modulosForeignKey = modulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Modulo moduloForeignKey;

	public Modulo getmoduloForeignKey() {
		return moduloForeignKey;
	}

	public void setmoduloForeignKey(Modulo moduloForeignKey) {
		this.moduloForeignKey = moduloForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboPais="";

	public List<Pais> paissForeignKey;

	public List<Pais> getpaissForeignKey() {
		return paissForeignKey;
	}

	public void setpaissForeignKey(List<Pais> paissForeignKey) {
		this.paissForeignKey = paissForeignKey;
	}

	//OBJETO FK ACTUAL
	public Pais paisForeignKey;

	public Pais getpaisForeignKey() {
		return paisForeignKey;
	}

	public void setpaisForeignKey(Pais paisForeignKey) {
		this.paisForeignKey = paisForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboClienteProveedor="";

	public List<Cliente> clienteproveedorsForeignKey;

	public List<Cliente> getclienteproveedorsForeignKey() {
		return clienteproveedorsForeignKey;
	}

	public void setclienteproveedorsForeignKey(List<Cliente> clienteproveedorsForeignKey) {
		this.clienteproveedorsForeignKey = clienteproveedorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteproveedorForeignKey;

	public Cliente getclienteproveedorForeignKey() {
		return clienteproveedorForeignKey;
	}

	public void setclienteproveedorForeignKey(Cliente clienteproveedorForeignKey) {
		this.clienteproveedorForeignKey = clienteproveedorForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboUsuario="";

	public List<Usuario> usuariosForeignKey;

	public List<Usuario> getusuariosForeignKey() {
		return usuariosForeignKey;
	}

	public void setusuariosForeignKey(List<Usuario> usuariosForeignKey) {
		this.usuariosForeignKey = usuariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Usuario usuarioForeignKey;

	public Usuario getusuarioForeignKey() {
		return usuarioForeignKey;
	}

	public void setusuarioForeignKey(Usuario usuarioForeignKey) {
		this.usuarioForeignKey = usuarioForeignKey;
	}

	public String sFinalQueryComboTipoCambio="";

	public List<TipoCambio> tipocambiosForeignKey;

	public List<TipoCambio> gettipocambiosForeignKey() {
		return tipocambiosForeignKey;
	}

	public void settipocambiosForeignKey(List<TipoCambio> tipocambiosForeignKey) {
		this.tipocambiosForeignKey = tipocambiosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCambio tipocambioForeignKey;

	public TipoCambio gettipocambioForeignKey() {
		return tipocambioForeignKey;
	}

	public void settipocambioForeignKey(TipoCambio tipocambioForeignKey) {
		this.tipocambioForeignKey = tipocambioForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboTipoProrrateoImpor="";

	public List<TipoProrrateoImpor> tipoprorrateoimporsForeignKey;

	public List<TipoProrrateoImpor> gettipoprorrateoimporsForeignKey() {
		return tipoprorrateoimporsForeignKey;
	}

	public void settipoprorrateoimporsForeignKey(List<TipoProrrateoImpor> tipoprorrateoimporsForeignKey) {
		this.tipoprorrateoimporsForeignKey = tipoprorrateoimporsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoProrrateoImpor tipoprorrateoimporForeignKey;

	public TipoProrrateoImpor gettipoprorrateoimporForeignKey() {
		return tipoprorrateoimporForeignKey;
	}

	public void settipoprorrateoimporForeignKey(TipoProrrateoImpor tipoprorrateoimporForeignKey) {
		this.tipoprorrateoimporForeignKey = tipoprorrateoimporForeignKey;
	}

	public String sFinalQueryComboEmbarcador="";

	public List<Embarcador> embarcadorsForeignKey;

	public List<Embarcador> getembarcadorsForeignKey() {
		return embarcadorsForeignKey;
	}

	public void setembarcadorsForeignKey(List<Embarcador> embarcadorsForeignKey) {
		this.embarcadorsForeignKey = embarcadorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Embarcador embarcadorForeignKey;

	public Embarcador getembarcadorForeignKey() {
		return embarcadorForeignKey;
	}

	public void setembarcadorForeignKey(Embarcador embarcadorForeignKey) {
		this.embarcadorForeignKey = embarcadorForeignKey;
	}

	public String sFinalQueryComboTipoViaTransporte="";

	public List<TipoViaTransporte> tipoviatransportesForeignKey;

	public List<TipoViaTransporte> gettipoviatransportesForeignKey() {
		return tipoviatransportesForeignKey;
	}

	public void settipoviatransportesForeignKey(List<TipoViaTransporte> tipoviatransportesForeignKey) {
		this.tipoviatransportesForeignKey = tipoviatransportesForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoViaTransporte tipoviatransporteForeignKey;

	public TipoViaTransporte gettipoviatransporteForeignKey() {
		return tipoviatransporteForeignKey;
	}

	public void settipoviatransporteForeignKey(TipoViaTransporte tipoviatransporteForeignKey) {
		this.tipoviatransporteForeignKey = tipoviatransporteForeignKey;
	}

	public String sFinalQueryComboPuerto="";

	public List<Puerto> puertosForeignKey;

	public List<Puerto> getpuertosForeignKey() {
		return puertosForeignKey;
	}

	public void setpuertosForeignKey(List<Puerto> puertosForeignKey) {
		this.puertosForeignKey = puertosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Puerto puertoForeignKey;

	public Puerto getpuertoForeignKey() {
		return puertoForeignKey;
	}

	public void setpuertoForeignKey(Puerto puertoForeignKey) {
		this.puertoForeignKey = puertoForeignKey;
	}

	public String sFinalQueryComboPuertoDestino="";

	public List<Puerto> puertodestinosForeignKey;

	public List<Puerto> getpuertodestinosForeignKey() {
		return puertodestinosForeignKey;
	}

	public void setpuertodestinosForeignKey(List<Puerto> puertodestinosForeignKey) {
		this.puertodestinosForeignKey = puertodestinosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Puerto puertodestinoForeignKey;

	public Puerto getpuertodestinoForeignKey() {
		return puertodestinoForeignKey;
	}

	public void setpuertodestinoForeignKey(Puerto puertodestinoForeignKey) {
		this.puertodestinoForeignKey = puertodestinoForeignKey;
	}

	public String sFinalQueryComboTipoTerminosImpor="";

	public List<TipoTerminosImpor> tipoterminosimporsForeignKey;

	public List<TipoTerminosImpor> gettipoterminosimporsForeignKey() {
		return tipoterminosimporsForeignKey;
	}

	public void settipoterminosimporsForeignKey(List<TipoTerminosImpor> tipoterminosimporsForeignKey) {
		this.tipoterminosimporsForeignKey = tipoterminosimporsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoTerminosImpor tipoterminosimporForeignKey;

	public TipoTerminosImpor gettipoterminosimporForeignKey() {
		return tipoterminosimporForeignKey;
	}

	public void settipoterminosimporForeignKey(TipoTerminosImpor tipoterminosimporForeignKey) {
		this.tipoterminosimporForeignKey = tipoterminosimporForeignKey;
	}

	public String sFinalQueryComboEstadoPedidoCompra="";

	public List<EstadoPedidoCompra> estadopedidocomprasForeignKey;

	public List<EstadoPedidoCompra> getestadopedidocomprasForeignKey() {
		return estadopedidocomprasForeignKey;
	}

	public void setestadopedidocomprasForeignKey(List<EstadoPedidoCompra> estadopedidocomprasForeignKey) {
		this.estadopedidocomprasForeignKey = estadopedidocomprasForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoPedidoCompra estadopedidocompraForeignKey;

	public EstadoPedidoCompra getestadopedidocompraForeignKey() {
		return estadopedidocompraForeignKey;
	}

	public void setestadopedidocompraForeignKey(EstadoPedidoCompra estadopedidocompraForeignKey) {
		this.estadopedidocompraForeignKey = estadopedidocompraForeignKey;
	}

	public String sFinalQueryComboFormato="";

	public List<Formato> formatosForeignKey;

	public List<Formato> getformatosForeignKey() {
		return formatosForeignKey;
	}

	public void setformatosForeignKey(List<Formato> formatosForeignKey) {
		this.formatosForeignKey = formatosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoForeignKey;

	public Formato getformatoForeignKey() {
		return formatoForeignKey;
	}

	public void setformatoForeignKey(Formato formatoForeignKey) {
		this.formatoForeignKey = formatoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idClienteProveedorActual=0L;

	public Long getidClienteProveedorActual() {
		return idClienteProveedorActual;
	}

	public void setidClienteProveedorActual(Long idClienteProveedorActual) {
		this.idClienteProveedorActual= idClienteProveedorActual;
	}
	public Long idEmpleadoActual=0L;

	public Long getidEmpleadoActual() {
		return idEmpleadoActual;
	}

	public void setidEmpleadoActual(Long idEmpleadoActual) {
		this.idEmpleadoActual= idEmpleadoActual;
	}
	public Long idTipoCambioActual=0L;

	public Long getidTipoCambioActual() {
		return idTipoCambioActual;
	}

	public void setidTipoCambioActual(Long idTipoCambioActual) {
		this.idTipoCambioActual= idTipoCambioActual;
	}
	
	

	public Boolean isTienePermisosDetallePedidoCompraImpor=false;

	public Boolean getIsTienePermisosDetallePedidoCompraImpor() {
		return isTienePermisosDetallePedidoCompraImpor;
	}

	public void setIsTienePermisosDetallePedidoCompraImpor(Boolean isTienePermisosDetallePedidoCompraImpor) {
		this.isTienePermisosDetallePedidoCompraImpor= isTienePermisosDetallePedidoCompraImpor;
	}


	public Boolean isTienePermisosLiquidacionImpuestoImpor=false;

	public Boolean getIsTienePermisosLiquidacionImpuestoImpor() {
		return isTienePermisosLiquidacionImpuestoImpor;
	}

	public void setIsTienePermisosLiquidacionImpuestoImpor(Boolean isTienePermisosLiquidacionImpuestoImpor) {
		this.isTienePermisosLiquidacionImpuestoImpor= isTienePermisosLiquidacionImpuestoImpor;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoPedidoCompraImpor;
	public Boolean isPermisoNuevoPedidoCompraImpor;
	public Boolean isPermisoActualizarPedidoCompraImpor;
	public Boolean isPermisoActualizarOriginalPedidoCompraImpor;
	public Boolean isPermisoEliminarPedidoCompraImpor;
	public Boolean isPermisoGuardarCambiosPedidoCompraImpor;
	public Boolean isPermisoConsultaPedidoCompraImpor;
	public Boolean isPermisoBusquedaPedidoCompraImpor;
	public Boolean isPermisoReportePedidoCompraImpor;
	public Boolean isPermisoPaginacionMedioPedidoCompraImpor;
	public Boolean isPermisoPaginacionAltoPedidoCompraImpor;
	public Boolean isPermisoPaginacionTodoPedidoCompraImpor;
	public Boolean isPermisoCopiarPedidoCompraImpor;
	public Boolean isPermisoVerFormPedidoCompraImpor;
	public Boolean isPermisoDuplicarPedidoCompraImpor;
	public Boolean isPermisoOrdenPedidoCompraImpor;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public PedidoCompraImporParameterReturnGeneral pedidocompraimporReturnGeneral;
	public PedidoCompraImporParameterReturnGeneral pedidocompraimporParameterGeneral;
	
	

	public DetallePedidoCompraImporLogic detallepedidocompraimporLogic=null;

	public DetallePedidoCompraImporLogic getDetallePedidoCompraImporLogic() {
		return detallepedidocompraimporLogic;
	}

	public void setDetallePedidoCompraImporLogic(DetallePedidoCompraImporLogic detallepedidocompraimporLogic) {
		this.detallepedidocompraimporLogic = detallepedidocompraimporLogic;
	}


	public LiquidacionImpuestoImporLogic liquidacionimpuestoimporLogic=null;

	public LiquidacionImpuestoImporLogic getLiquidacionImpuestoImporLogic() {
		return liquidacionimpuestoimporLogic;
	}

	public void setLiquidacionImpuestoImporLogic(LiquidacionImpuestoImporLogic liquidacionimpuestoimporLogic) {
		this.liquidacionimpuestoimporLogic = liquidacionimpuestoimporLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoPedidoCompraImpor=false;
	public Boolean esParaAccionDesdeFormularioPedidoCompraImpor=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected PedidoCompraImporSessionBeanAdditional pedidocompraimporSessionBeanAdditional=null;
	
	public PedidoCompraImporSessionBeanAdditional getPedidoCompraImporSessionBeanAdditional() {
		return this.pedidocompraimporSessionBeanAdditional;
	}
	
	public void setPedidoCompraImporSessionBeanAdditional(PedidoCompraImporSessionBeanAdditional pedidocompraimporSessionBeanAdditional) {
		try {
			this.pedidocompraimporSessionBeanAdditional=pedidocompraimporSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected PedidoCompraImporBeanSwingJInternalFrameAdditional pedidocompraimporBeanSwingJInternalFrameAdditional=null;
	//public class PedidoCompraImporBeanSwingJInternalFrame
	
	public PedidoCompraImporBeanSwingJInternalFrameAdditional getPedidoCompraImporBeanSwingJInternalFrameAdditional() {
		return this.pedidocompraimporBeanSwingJInternalFrameAdditional;
	}
	
	public void setPedidoCompraImporBeanSwingJInternalFrameAdditional(PedidoCompraImporBeanSwingJInternalFrameAdditional pedidocompraimporBeanSwingJInternalFrameAdditional) {
		try {
			this.pedidocompraimporBeanSwingJInternalFrameAdditional=pedidocompraimporBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public PedidoCompraImporLogic pedidocompraimporLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public PedidoCompraImpor pedidocompraimporBean;
	public PedidoCompraImporConstantesFunciones pedidocompraimporConstantesFunciones;
	//public PedidoCompraImporParameterReturnGeneral pedidocompraimporReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public ModuloLogic moduloLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public PaisLogic paisLogic;
	public ClienteLogic clienteLogic;
	public ClienteLogic clienteproveedorLogic;
	public EmpleadoLogic empleadoLogic;
	public UsuarioLogic usuarioLogic;
	public TipoCambioLogic tipocambioLogic;
	public MonedaLogic monedaLogic;
	public TipoProrrateoImporLogic tipoprorrateoimporLogic;
	public EmbarcadorLogic embarcadorLogic;
	public TipoViaTransporteLogic tipoviatransporteLogic;
	public PuertoLogic puertoLogic;
	public PuertoLogic puertodestinoLogic;
	public TipoTerminosImporLogic tipoterminosimporLogic;
	public EstadoPedidoCompraLogic estadopedidocompraLogic;
	public FormatoLogic formatoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	
	//PARAMETROS
	
	
	//public List<PedidoCompraImpor> pedidocompraimpors;	
	//public List<PedidoCompraImpor> pedidocompraimporsEliminados;
	//public List<PedidoCompraImpor> pedidocompraimporsAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoPedidoCompraImpor=false;
	public Boolean isVisibilidadCeldaDuplicarPedidoCompraImpor=true;
	public Boolean isVisibilidadCeldaCopiarPedidoCompraImpor=true;
	public Boolean isVisibilidadCeldaVerFormPedidoCompraImpor=true;
	public Boolean isVisibilidadCeldaOrdenPedidoCompraImpor=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=false;
	public Boolean isVisibilidadCeldaModificarPedidoCompraImpor=false;
	public Boolean isVisibilidadCeldaActualizarPedidoCompraImpor=false;
	public Boolean isVisibilidadCeldaEliminarPedidoCompraImpor=false;
	public Boolean isVisibilidadCeldaCancelarPedidoCompraImpor=false;
	public Boolean isVisibilidadCeldaGuardarPedidoCompraImpor=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdClienteProveedor=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmbarcador=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=false;
	public Boolean isVisibilidadFK_IdFormato=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdModulo=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdPais=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdPuerto=false;
	public Boolean isVisibilidadFK_IdPuertoDestino=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoCambio=false;
	public Boolean isVisibilidadFK_IdTipoProrrateoImpor=false;
	public Boolean isVisibilidadFK_IdTipoTerminosImpor=false;
	public Boolean isVisibilidadFK_IdTipoViaTransporte=false;
	public Boolean isVisibilidadFK_IdUsuario=false;
	
	public Long getiIdNuevoPedidoCompraImpor() {
		return this.iIdNuevoPedidoCompraImpor;
	}

	public void setiIdNuevoPedidoCompraImpor(Long iIdNuevoPedidoCompraImpor) {
		this.iIdNuevoPedidoCompraImpor = iIdNuevoPedidoCompraImpor;
	}
	
	public Long getidPedidoCompraImporActual() {
		return this.idPedidoCompraImporActual;
	}

	public void setidPedidoCompraImporActual(Long idPedidoCompraImporActual) {
		this.idPedidoCompraImporActual = idPedidoCompraImporActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public PedidoCompraImpor getpedidocompraimpor() {
		return this.pedidocompraimpor;
	}

	public void setpedidocompraimpor(PedidoCompraImpor pedidocompraimpor) {
		this.pedidocompraimpor = pedidocompraimpor;
	}
	
	public PedidoCompraImpor getpedidocompraimporAux() {
		return this.pedidocompraimporAux;
	}

	public void setpedidocompraimporAux(PedidoCompraImpor pedidocompraimporAux) {
		this.pedidocompraimporAux = pedidocompraimporAux;
	}				
	
	public PedidoCompraImpor getpedidocompraimporAnterior() {
		return this.pedidocompraimporAnterior;
	}

	public void setpedidocompraimporAnterior(PedidoCompraImpor pedidocompraimporAnterior) {
		this.pedidocompraimporAnterior = pedidocompraimporAnterior;
	}	
	
	public PedidoCompraImpor getpedidocompraimporTotales() {
		return this.pedidocompraimporTotales;
	}

	public void setpedidocompraimporTotales(PedidoCompraImpor pedidocompraimporTotales) {
		this.pedidocompraimporTotales = pedidocompraimporTotales;
	}	
	
	public PedidoCompraImpor getpedidocompraimporBean() {
		return this.pedidocompraimporBean;
	}

	public void setpedidocompraimporBean(PedidoCompraImpor pedidocompraimporBean) {
		this.pedidocompraimporBean = pedidocompraimporBean;
	}	
	
	public PedidoCompraImporParameterReturnGeneral getpedidocompraimporReturnGeneral() {
		return this.pedidocompraimporReturnGeneral;
	}

	public void setpedidocompraimporReturnGeneral(PedidoCompraImporParameterReturnGeneral pedidocompraimporReturnGeneral) {
		this.pedidocompraimporReturnGeneral = pedidocompraimporReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_cliente_proveedorFK_IdClienteProveedor=-1L;

	public Long getid_cliente_proveedorFK_IdClienteProveedor() {
		return this.id_cliente_proveedorFK_IdClienteProveedor;
	}

	public void setid_cliente_proveedorFK_IdClienteProveedor(Long id_cliente_proveedorFK_IdClienteProveedor) {
		this.id_cliente_proveedorFK_IdClienteProveedor = id_cliente_proveedorFK_IdClienteProveedor;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_embarcadorFK_IdEmbarcador=-1L;

	public Long getid_embarcadorFK_IdEmbarcador() {
		return this.id_embarcadorFK_IdEmbarcador;
	}

	public void setid_embarcadorFK_IdEmbarcador(Long id_embarcadorFK_IdEmbarcador) {
		this.id_embarcadorFK_IdEmbarcador = id_embarcadorFK_IdEmbarcador;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra=-1L;

	public Long getid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra() {
		return this.id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra;
	}

	public void setid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra(Long id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra) {
		this.id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra = id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra;
	}

	public Long id_formatoFK_IdFormato=-1L;

	public Long getid_formatoFK_IdFormato() {
		return this.id_formatoFK_IdFormato;
	}

	public void setid_formatoFK_IdFormato(Long id_formatoFK_IdFormato) {
		this.id_formatoFK_IdFormato = id_formatoFK_IdFormato;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_moduloFK_IdModulo=-1L;

	public Long getid_moduloFK_IdModulo() {
		return this.id_moduloFK_IdModulo;
	}

	public void setid_moduloFK_IdModulo(Long id_moduloFK_IdModulo) {
		this.id_moduloFK_IdModulo = id_moduloFK_IdModulo;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_paisFK_IdPais=-1L;

	public Long getid_paisFK_IdPais() {
		return this.id_paisFK_IdPais;
	}

	public void setid_paisFK_IdPais(Long id_paisFK_IdPais) {
		this.id_paisFK_IdPais = id_paisFK_IdPais;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_puertoFK_IdPuerto=-1L;

	public Long getid_puertoFK_IdPuerto() {
		return this.id_puertoFK_IdPuerto;
	}

	public void setid_puertoFK_IdPuerto(Long id_puertoFK_IdPuerto) {
		this.id_puertoFK_IdPuerto = id_puertoFK_IdPuerto;
	}

	public Long id_puerto_destinoFK_IdPuertoDestino=-1L;

	public Long getid_puerto_destinoFK_IdPuertoDestino() {
		return this.id_puerto_destinoFK_IdPuertoDestino;
	}

	public void setid_puerto_destinoFK_IdPuertoDestino(Long id_puerto_destinoFK_IdPuertoDestino) {
		this.id_puerto_destinoFK_IdPuertoDestino = id_puerto_destinoFK_IdPuertoDestino;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_cambioFK_IdTipoCambio=null;

	public Long getid_tipo_cambioFK_IdTipoCambio() {
		return this.id_tipo_cambioFK_IdTipoCambio;
	}

	public void setid_tipo_cambioFK_IdTipoCambio(Long id_tipo_cambioFK_IdTipoCambio) {
		this.id_tipo_cambioFK_IdTipoCambio = id_tipo_cambioFK_IdTipoCambio;
	}

	public Long id_tipo_prorrateo_imporFK_IdTipoProrrateoImpor=-1L;

	public Long getid_tipo_prorrateo_imporFK_IdTipoProrrateoImpor() {
		return this.id_tipo_prorrateo_imporFK_IdTipoProrrateoImpor;
	}

	public void setid_tipo_prorrateo_imporFK_IdTipoProrrateoImpor(Long id_tipo_prorrateo_imporFK_IdTipoProrrateoImpor) {
		this.id_tipo_prorrateo_imporFK_IdTipoProrrateoImpor = id_tipo_prorrateo_imporFK_IdTipoProrrateoImpor;
	}

	public Long id_tipo_terminos_imporFK_IdTipoTerminosImpor=-1L;

	public Long getid_tipo_terminos_imporFK_IdTipoTerminosImpor() {
		return this.id_tipo_terminos_imporFK_IdTipoTerminosImpor;
	}

	public void setid_tipo_terminos_imporFK_IdTipoTerminosImpor(Long id_tipo_terminos_imporFK_IdTipoTerminosImpor) {
		this.id_tipo_terminos_imporFK_IdTipoTerminosImpor = id_tipo_terminos_imporFK_IdTipoTerminosImpor;
	}

	public Long id_tipo_via_transporteFK_IdTipoViaTransporte=-1L;

	public Long getid_tipo_via_transporteFK_IdTipoViaTransporte() {
		return this.id_tipo_via_transporteFK_IdTipoViaTransporte;
	}

	public void setid_tipo_via_transporteFK_IdTipoViaTransporte(Long id_tipo_via_transporteFK_IdTipoViaTransporte) {
		this.id_tipo_via_transporteFK_IdTipoViaTransporte = id_tipo_via_transporteFK_IdTipoViaTransporte;
	}

	public Long id_usuarioFK_IdUsuario=-1L;

	public Long getid_usuarioFK_IdUsuario() {
		return this.id_usuarioFK_IdUsuario;
	}

	public void setid_usuarioFK_IdUsuario(Long id_usuarioFK_IdUsuario) {
		this.id_usuarioFK_IdUsuario = id_usuarioFK_IdUsuario;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public PedidoCompraImporLogic getPedidoCompraImporLogic()	{		
		return pedidocompraimporLogic;
	}

	public void setPedidoCompraImporLogic(PedidoCompraImporLogic pedidocompraimporLogic) {
		this.pedidocompraimporLogic = pedidocompraimporLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoPedidoCompraImpor() {
		return isEsNuevoPedidoCompraImpor;
	}

	public void setIsEsNuevoPedidoCompraImpor(Boolean isEsNuevoPedidoCompraImpor) {
		this.isEsNuevoPedidoCompraImpor = isEsNuevoPedidoCompraImpor;
	}

	public Boolean getEsParaAccionDesdeFormularioPedidoCompraImpor() {
		return esParaAccionDesdeFormularioPedidoCompraImpor;
	}
	
	public void setEsParaAccionDesdeFormularioPedidoCompraImpor(Boolean esParaAccionDesdeFormularioPedidoCompraImpor) {
		this.esParaAccionDesdeFormularioPedidoCompraImpor = esParaAccionDesdeFormularioPedidoCompraImpor;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.modulosForeignKey=new ArrayList<Modulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ModuloLogic moduloLogic=new ModuloLogic();

			//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

					moduloLogic.getTodosModulosWithConnection(sFinalQuery,new Pagination());

					this.modulosForeignKey=moduloLogic.getModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					moduloLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidModuloActual());
					this.modulosForeignKey.add(moduloLogic.getModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPaissForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.paissForeignKey=new ArrayList<Pais>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PaisLogic paisLogic=new PaisLogic();

			//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

					paisLogic.getTodosPaissWithConnection(sFinalQuery,new Pagination());

					this.paissForeignKey=paisLogic.getPaiss();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPais(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					paisLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidPaisActual());
					this.paissForeignKey.add(paisLogic.getPais());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClienteProveedorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clienteproveedorsForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionClienteProveedor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteproveedorLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clienteproveedorsForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaClienteProveedor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidClienteProveedorActual());
					this.clienteproveedorsForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUsuariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.usuariosForeignKey=new ArrayList<Usuario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UsuarioLogic usuarioLogic=new UsuarioLogic();

			//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

					usuarioLogic.getTodosUsuariosWithConnection(sFinalQuery,new Pagination());

					this.usuariosForeignKey=usuarioLogic.getUsuarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUsuario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidUsuarioActual());
					this.usuariosForeignKey.add(usuarioLogic.getUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCambiosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCambioLogic tipocambioLogic=new TipoCambioLogic();

			//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

					tipocambioLogic.getTodosTipoCambiosWithConnection(sFinalQuery,new Pagination());

					this.tipocambiosForeignKey=tipocambioLogic.getTipoCambios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCambio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidTipoCambioActual());
					this.tipocambiosForeignKey.add(tipocambioLogic.getTipoCambio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoProrrateoImporsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoprorrateoimporsForeignKey=new ArrayList<TipoProrrateoImpor>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoProrrateoImporLogic tipoprorrateoimporLogic=new TipoProrrateoImporLogic();

			//tipoprorrateoimporLogic.getTipoProrrateoImporDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionTipoProrrateoImpor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoprorrateoimporLogic.getTipoProrrateoImporDataAccess().setIsForForeingKeyData(true);

					tipoprorrateoimporLogic.getTodosTipoProrrateoImporsWithConnection(sFinalQuery,new Pagination());

					this.tipoprorrateoimporsForeignKey=tipoprorrateoimporLogic.getTipoProrrateoImpors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoProrrateoImpor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprorrateoimporLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidTipoProrrateoImporActual());
					this.tipoprorrateoimporsForeignKey.add(tipoprorrateoimporLogic.getTipoProrrateoImpor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmbarcadorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.embarcadorsForeignKey=new ArrayList<Embarcador>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmbarcadorLogic embarcadorLogic=new EmbarcadorLogic();

			//embarcadorLogic.getEmbarcadorDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEmbarcador()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//embarcadorLogic.getEmbarcadorDataAccess().setIsForForeingKeyData(true);

					embarcadorLogic.getTodosEmbarcadorsWithConnection(sFinalQuery,new Pagination());

					this.embarcadorsForeignKey=embarcadorLogic.getEmbarcadors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmbarcador(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					embarcadorLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidEmbarcadorActual());
					this.embarcadorsForeignKey.add(embarcadorLogic.getEmbarcador());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoViaTransportesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoviatransportesForeignKey=new ArrayList<TipoViaTransporte>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoViaTransporteLogic tipoviatransporteLogic=new TipoViaTransporteLogic();

			//tipoviatransporteLogic.getTipoViaTransporteDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionTipoViaTransporte()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoviatransporteLogic.getTipoViaTransporteDataAccess().setIsForForeingKeyData(true);

					tipoviatransporteLogic.getTodosTipoViaTransportesWithConnection(sFinalQuery,new Pagination());

					this.tipoviatransportesForeignKey=tipoviatransporteLogic.getTipoViaTransportes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoViaTransporte(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoviatransporteLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidTipoViaTransporteActual());
					this.tipoviatransportesForeignKey.add(tipoviatransporteLogic.getTipoViaTransporte());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPuertosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.puertosForeignKey=new ArrayList<Puerto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PuertoLogic puertoLogic=new PuertoLogic();

			//puertoLogic.getPuertoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPuerto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//puertoLogic.getPuertoDataAccess().setIsForForeingKeyData(true);

					puertoLogic.getTodosPuertosWithConnection(sFinalQuery,new Pagination());

					this.puertosForeignKey=puertoLogic.getPuertos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPuerto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					puertoLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidPuertoActual());
					this.puertosForeignKey.add(puertoLogic.getPuerto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPuertoDestinosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.puertodestinosForeignKey=new ArrayList<Puerto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PuertoLogic puertoLogic=new PuertoLogic();

			//puertoLogic.getPuertoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPuertoDestino()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//puertodestinoLogic.getPuertoDataAccess().setIsForForeingKeyData(true);

					puertoLogic.getTodosPuertosWithConnection(sFinalQuery,new Pagination());

					this.puertodestinosForeignKey=puertoLogic.getPuertos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPuertoDestino(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					puertoLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidPuertoDestinoActual());
					this.puertodestinosForeignKey.add(puertoLogic.getPuerto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoTerminosImporsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoterminosimporsForeignKey=new ArrayList<TipoTerminosImpor>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoTerminosImporLogic tipoterminosimporLogic=new TipoTerminosImporLogic();

			//tipoterminosimporLogic.getTipoTerminosImporDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionTipoTerminosImpor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoterminosimporLogic.getTipoTerminosImporDataAccess().setIsForForeingKeyData(true);

					tipoterminosimporLogic.getTodosTipoTerminosImporsWithConnection(sFinalQuery,new Pagination());

					this.tipoterminosimporsForeignKey=tipoterminosimporLogic.getTipoTerminosImpors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoTerminosImpor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoterminosimporLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidTipoTerminosImporActual());
					this.tipoterminosimporsForeignKey.add(tipoterminosimporLogic.getTipoTerminosImpor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoPedidoComprasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadopedidocomprasForeignKey=new ArrayList<EstadoPedidoCompra>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoPedidoCompraLogic estadopedidocompraLogic=new EstadoPedidoCompraLogic();

			//estadopedidocompraLogic.getEstadoPedidoCompraDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoCompra()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadopedidocompraLogic.getEstadoPedidoCompraDataAccess().setIsForForeingKeyData(true);

					estadopedidocompraLogic.getTodosEstadoPedidoComprasWithConnection(sFinalQuery,new Pagination());

					this.estadopedidocomprasForeignKey=estadopedidocompraLogic.getEstadoPedidoCompras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoPedidoCompra(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadopedidocompraLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidEstadoPedidoCompraActual());
					this.estadopedidocomprasForeignKey.add(estadopedidocompraLogic.getEstadoPedidoCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormato(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidFormatoActual());
					this.formatosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(pedidocompraimporSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaPedidoCompraImpor.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaPedidoCompraImporGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaPedidoCompraImporGenerico!=null && jComboBoxid_empresaPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_empresaPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalPedidoCompraImpor.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalPedidoCompraImporGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalPedidoCompraImporGenerico!=null && jComboBoxid_sucursalPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_sucursalPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualModuloForeignKey(Long idModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(moduloTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setModulo(moduloTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor.setSelectedItem(moduloTemp);
					}
				} else {
					//jComboBoxid_moduloPedidoCompraImpor.setSelectedItem(moduloTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualModuloForeignKeyDescripcion(Long idModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}


			sDescripcion=ModuloConstantesFunciones.getModuloDescripcion(moduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualModuloForeignKeyGenerico(Long idModuloSeleccionado,JComboBox jComboBoxid_moduloPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(moduloTemp!=null) {
				jComboBoxid_moduloPedidoCompraImporGenerico.setSelectedItem(moduloTemp);
			} else {
				if(jComboBoxid_moduloPedidoCompraImporGenerico!=null && jComboBoxid_moduloPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_moduloPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioPedidoCompraImpor.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioPedidoCompraImporGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioPedidoCompraImporGenerico!=null && jComboBoxid_ejercicioPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoPedidoCompraImpor.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoPedidoCompraImporGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoPedidoCompraImporGenerico!=null && jComboBoxid_periodoPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_periodoPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPaisForeignKey(Long idPaisSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(paisTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setPais(paisTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor.setSelectedItem(paisTemp);
					}
				} else {
					//jComboBoxid_paisPedidoCompraImpor.setSelectedItem(paisTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPais") || sFormularioTipoBusqueda.equals("Todos")){
					if(paisTemp!=null && jComboBoxid_paisFK_IdPaisPedidoCompraImpor!=null) {
						jComboBoxid_paisFK_IdPaisPedidoCompraImpor.setSelectedItem(paisTemp);
					} else {
						if(jComboBoxid_paisFK_IdPaisPedidoCompraImpor!=null) {
							//jComboBoxid_paisFK_IdPaisPedidoCompraImpor.setSelectedItem(paisTemp);
							if(jComboBoxid_paisFK_IdPaisPedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_paisFK_IdPaisPedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPaisForeignKeyDescripcion(Long idPaisSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}


			sDescripcion=PaisConstantesFunciones.getPaisDescripcion(paisTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPaisForeignKeyGenerico(Long idPaisSeleccionado,JComboBox jComboBoxid_paisPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(paisTemp!=null) {
				jComboBoxid_paisPedidoCompraImporGenerico.setSelectedItem(paisTemp);
			} else {
				if(jComboBoxid_paisPedidoCompraImporGenerico!=null && jComboBoxid_paisPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_paisPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clientePedidoCompraImpor.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClientePedidoCompraImpor!=null) {
						jComboBoxid_clienteFK_IdClientePedidoCompraImpor.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClientePedidoCompraImpor!=null) {
							//jComboBoxid_clienteFK_IdClientePedidoCompraImpor.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClientePedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClientePedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clientePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clientePedidoCompraImporGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clientePedidoCompraImporGenerico!=null && jComboBoxid_clientePedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_clientePedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteProveedorForeignKey(Long idClienteProveedorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteproveedorTemp=null;

			for(Cliente clienteproveedorAux:clienteproveedorsForeignKey) {
				if(clienteproveedorAux.getId()!=null && clienteproveedorAux.getId().equals(idClienteProveedorSeleccionado)) {
					clienteproveedorTemp=clienteproveedorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteproveedorTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setClienteProveedor(clienteproveedorTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor.setSelectedItem(clienteproveedorTemp);
					}
				} else {
					//jComboBoxid_cliente_proveedorPedidoCompraImpor.setSelectedItem(clienteproveedorTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdClienteProveedor") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteproveedorTemp!=null && jComboBoxid_cliente_proveedorFK_IdClienteProveedorPedidoCompraImpor!=null) {
						jComboBoxid_cliente_proveedorFK_IdClienteProveedorPedidoCompraImpor.setSelectedItem(clienteproveedorTemp);
					} else {
						if(jComboBoxid_cliente_proveedorFK_IdClienteProveedorPedidoCompraImpor!=null) {
							//jComboBoxid_cliente_proveedorFK_IdClienteProveedorPedidoCompraImpor.setSelectedItem(clienteproveedorTemp);
							if(jComboBoxid_cliente_proveedorFK_IdClienteProveedorPedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_cliente_proveedorFK_IdClienteProveedorPedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteProveedorForeignKeyDescripcion(Long idClienteProveedorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteproveedorTemp=null;

			for(Cliente clienteproveedorAux:clienteproveedorsForeignKey) {
				if(clienteproveedorAux.getId()!=null && clienteproveedorAux.getId().equals(idClienteProveedorSeleccionado)) {
					clienteproveedorTemp=clienteproveedorAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteproveedorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteProveedorForeignKeyGenerico(Long idClienteProveedorSeleccionado,JComboBox jComboBoxid_cliente_proveedorPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Cliente  clienteproveedorTemp=null;

			for(Cliente clienteproveedorAux:clienteproveedorsForeignKey) {
				if(clienteproveedorAux.getId()!=null && clienteproveedorAux.getId().equals(idClienteProveedorSeleccionado)) {
					clienteproveedorTemp=clienteproveedorAux;
					break;
				}
			}

			if(clienteproveedorTemp!=null) {
				jComboBoxid_cliente_proveedorPedidoCompraImporGenerico.setSelectedItem(clienteproveedorTemp);
			} else {
				if(jComboBoxid_cliente_proveedorPedidoCompraImporGenerico!=null && jComboBoxid_cliente_proveedorPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_cliente_proveedorPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoPedidoCompraImpor.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoTemp!=null && jComboBoxid_empleadoFK_IdEmpleadoPedidoCompraImpor!=null) {
						jComboBoxid_empleadoFK_IdEmpleadoPedidoCompraImpor.setSelectedItem(empleadoTemp);
					} else {
						if(jComboBoxid_empleadoFK_IdEmpleadoPedidoCompraImpor!=null) {
							//jComboBoxid_empleadoFK_IdEmpleadoPedidoCompraImpor.setSelectedItem(empleadoTemp);
							if(jComboBoxid_empleadoFK_IdEmpleadoPedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_empleadoFK_IdEmpleadoPedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoPedidoCompraImporGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoPedidoCompraImporGenerico!=null && jComboBoxid_empleadoPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_empleadoPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUsuarioForeignKey(Long idUsuarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(usuarioTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setUsuario(usuarioTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor.setSelectedItem(usuarioTemp);
					}
				} else {
					//jComboBoxid_usuarioPedidoCompraImpor.setSelectedItem(usuarioTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUsuarioForeignKeyDescripcion(Long idUsuarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}


			sDescripcion=UsuarioConstantesFunciones.getUsuarioDescripcion(usuarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUsuarioForeignKeyGenerico(Long idUsuarioSeleccionado,JComboBox jComboBoxid_usuarioPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(usuarioTemp!=null) {
				jComboBoxid_usuarioPedidoCompraImporGenerico.setSelectedItem(usuarioTemp);
			} else {
				if(jComboBoxid_usuarioPedidoCompraImporGenerico!=null && jComboBoxid_usuarioPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_usuarioPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCambioForeignKey(Long idTipoCambioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocambioTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setTipoCambio(tipocambioTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor.setSelectedItem(tipocambioTemp);
					}
				} else {
					//jComboBoxid_tipo_cambioPedidoCompraImpor.setSelectedItem(tipocambioTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCambioForeignKeyDescripcion(Long idTipoCambioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}


			sDescripcion=TipoCambioConstantesFunciones.getTipoCambioDescripcion(tipocambioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCambioForeignKeyGenerico(Long idTipoCambioSeleccionado,JComboBox jComboBoxid_tipo_cambioPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(tipocambioTemp!=null) {
				jComboBoxid_tipo_cambioPedidoCompraImporGenerico.setSelectedItem(tipocambioTemp);
			} else {
				if(jComboBoxid_tipo_cambioPedidoCompraImporGenerico!=null && jComboBoxid_tipo_cambioPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_tipo_cambioPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaPedidoCompraImpor.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaPedidoCompraImporGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaPedidoCompraImporGenerico!=null && jComboBoxid_monedaPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_monedaPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoProrrateoImporForeignKey(Long idTipoProrrateoImporSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoProrrateoImpor  tipoprorrateoimporTemp=null;

			for(TipoProrrateoImpor tipoprorrateoimporAux:tipoprorrateoimporsForeignKey) {
				if(tipoprorrateoimporAux.getId()!=null && tipoprorrateoimporAux.getId().equals(idTipoProrrateoImporSeleccionado)) {
					tipoprorrateoimporTemp=tipoprorrateoimporAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoprorrateoimporTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setTipoProrrateoImpor(tipoprorrateoimporTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.setSelectedItem(tipoprorrateoimporTemp);
					}
				} else {
					//jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.setSelectedItem(tipoprorrateoimporTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoProrrateoImpor") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoprorrateoimporTemp!=null && jComboBoxid_tipo_prorrateo_imporFK_IdTipoProrrateoImporPedidoCompraImpor!=null) {
						jComboBoxid_tipo_prorrateo_imporFK_IdTipoProrrateoImporPedidoCompraImpor.setSelectedItem(tipoprorrateoimporTemp);
					} else {
						if(jComboBoxid_tipo_prorrateo_imporFK_IdTipoProrrateoImporPedidoCompraImpor!=null) {
							//jComboBoxid_tipo_prorrateo_imporFK_IdTipoProrrateoImporPedidoCompraImpor.setSelectedItem(tipoprorrateoimporTemp);
							if(jComboBoxid_tipo_prorrateo_imporFK_IdTipoProrrateoImporPedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_tipo_prorrateo_imporFK_IdTipoProrrateoImporPedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoProrrateoImporForeignKeyDescripcion(Long idTipoProrrateoImporSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoProrrateoImpor  tipoprorrateoimporTemp=null;

			for(TipoProrrateoImpor tipoprorrateoimporAux:tipoprorrateoimporsForeignKey) {
				if(tipoprorrateoimporAux.getId()!=null && tipoprorrateoimporAux.getId().equals(idTipoProrrateoImporSeleccionado)) {
					tipoprorrateoimporTemp=tipoprorrateoimporAux;
					break;
				}
			}


			sDescripcion=TipoProrrateoImporConstantesFunciones.getTipoProrrateoImporDescripcion(tipoprorrateoimporTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoProrrateoImporForeignKeyGenerico(Long idTipoProrrateoImporSeleccionado,JComboBox jComboBoxid_tipo_prorrateo_imporPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			TipoProrrateoImpor  tipoprorrateoimporTemp=null;

			for(TipoProrrateoImpor tipoprorrateoimporAux:tipoprorrateoimporsForeignKey) {
				if(tipoprorrateoimporAux.getId()!=null && tipoprorrateoimporAux.getId().equals(idTipoProrrateoImporSeleccionado)) {
					tipoprorrateoimporTemp=tipoprorrateoimporAux;
					break;
				}
			}

			if(tipoprorrateoimporTemp!=null) {
				jComboBoxid_tipo_prorrateo_imporPedidoCompraImporGenerico.setSelectedItem(tipoprorrateoimporTemp);
			} else {
				if(jComboBoxid_tipo_prorrateo_imporPedidoCompraImporGenerico!=null && jComboBoxid_tipo_prorrateo_imporPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_tipo_prorrateo_imporPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmbarcadorForeignKey(Long idEmbarcadorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Embarcador  embarcadorTemp=null;

			for(Embarcador embarcadorAux:embarcadorsForeignKey) {
				if(embarcadorAux.getId()!=null && embarcadorAux.getId().equals(idEmbarcadorSeleccionado)) {
					embarcadorTemp=embarcadorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(embarcadorTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setEmbarcador(embarcadorTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor.setSelectedItem(embarcadorTemp);
					}
				} else {
					//jComboBoxid_embarcadorPedidoCompraImpor.setSelectedItem(embarcadorTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmbarcador") || sFormularioTipoBusqueda.equals("Todos")){
					if(embarcadorTemp!=null && jComboBoxid_embarcadorFK_IdEmbarcadorPedidoCompraImpor!=null) {
						jComboBoxid_embarcadorFK_IdEmbarcadorPedidoCompraImpor.setSelectedItem(embarcadorTemp);
					} else {
						if(jComboBoxid_embarcadorFK_IdEmbarcadorPedidoCompraImpor!=null) {
							//jComboBoxid_embarcadorFK_IdEmbarcadorPedidoCompraImpor.setSelectedItem(embarcadorTemp);
							if(jComboBoxid_embarcadorFK_IdEmbarcadorPedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_embarcadorFK_IdEmbarcadorPedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmbarcadorForeignKeyDescripcion(Long idEmbarcadorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Embarcador  embarcadorTemp=null;

			for(Embarcador embarcadorAux:embarcadorsForeignKey) {
				if(embarcadorAux.getId()!=null && embarcadorAux.getId().equals(idEmbarcadorSeleccionado)) {
					embarcadorTemp=embarcadorAux;
					break;
				}
			}


			sDescripcion=EmbarcadorConstantesFunciones.getEmbarcadorDescripcion(embarcadorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmbarcadorForeignKeyGenerico(Long idEmbarcadorSeleccionado,JComboBox jComboBoxid_embarcadorPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Embarcador  embarcadorTemp=null;

			for(Embarcador embarcadorAux:embarcadorsForeignKey) {
				if(embarcadorAux.getId()!=null && embarcadorAux.getId().equals(idEmbarcadorSeleccionado)) {
					embarcadorTemp=embarcadorAux;
					break;
				}
			}

			if(embarcadorTemp!=null) {
				jComboBoxid_embarcadorPedidoCompraImporGenerico.setSelectedItem(embarcadorTemp);
			} else {
				if(jComboBoxid_embarcadorPedidoCompraImporGenerico!=null && jComboBoxid_embarcadorPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_embarcadorPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoViaTransporteForeignKey(Long idTipoViaTransporteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoViaTransporte  tipoviatransporteTemp=null;

			for(TipoViaTransporte tipoviatransporteAux:tipoviatransportesForeignKey) {
				if(tipoviatransporteAux.getId()!=null && tipoviatransporteAux.getId().equals(idTipoViaTransporteSeleccionado)) {
					tipoviatransporteTemp=tipoviatransporteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoviatransporteTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setTipoViaTransporte(tipoviatransporteTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor.setSelectedItem(tipoviatransporteTemp);
					}
				} else {
					//jComboBoxid_tipo_via_transportePedidoCompraImpor.setSelectedItem(tipoviatransporteTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoViaTransporte") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoviatransporteTemp!=null && jComboBoxid_tipo_via_transporteFK_IdTipoViaTransportePedidoCompraImpor!=null) {
						jComboBoxid_tipo_via_transporteFK_IdTipoViaTransportePedidoCompraImpor.setSelectedItem(tipoviatransporteTemp);
					} else {
						if(jComboBoxid_tipo_via_transporteFK_IdTipoViaTransportePedidoCompraImpor!=null) {
							//jComboBoxid_tipo_via_transporteFK_IdTipoViaTransportePedidoCompraImpor.setSelectedItem(tipoviatransporteTemp);
							if(jComboBoxid_tipo_via_transporteFK_IdTipoViaTransportePedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_tipo_via_transporteFK_IdTipoViaTransportePedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoViaTransporteForeignKeyDescripcion(Long idTipoViaTransporteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoViaTransporte  tipoviatransporteTemp=null;

			for(TipoViaTransporte tipoviatransporteAux:tipoviatransportesForeignKey) {
				if(tipoviatransporteAux.getId()!=null && tipoviatransporteAux.getId().equals(idTipoViaTransporteSeleccionado)) {
					tipoviatransporteTemp=tipoviatransporteAux;
					break;
				}
			}


			sDescripcion=TipoViaTransporteConstantesFunciones.getTipoViaTransporteDescripcion(tipoviatransporteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoViaTransporteForeignKeyGenerico(Long idTipoViaTransporteSeleccionado,JComboBox jComboBoxid_tipo_via_transportePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			TipoViaTransporte  tipoviatransporteTemp=null;

			for(TipoViaTransporte tipoviatransporteAux:tipoviatransportesForeignKey) {
				if(tipoviatransporteAux.getId()!=null && tipoviatransporteAux.getId().equals(idTipoViaTransporteSeleccionado)) {
					tipoviatransporteTemp=tipoviatransporteAux;
					break;
				}
			}

			if(tipoviatransporteTemp!=null) {
				jComboBoxid_tipo_via_transportePedidoCompraImporGenerico.setSelectedItem(tipoviatransporteTemp);
			} else {
				if(jComboBoxid_tipo_via_transportePedidoCompraImporGenerico!=null && jComboBoxid_tipo_via_transportePedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_tipo_via_transportePedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPuertoForeignKey(Long idPuertoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Puerto  puertoTemp=null;

			for(Puerto puertoAux:puertosForeignKey) {
				if(puertoAux.getId()!=null && puertoAux.getId().equals(idPuertoSeleccionado)) {
					puertoTemp=puertoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(puertoTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setPuerto(puertoTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor.setSelectedItem(puertoTemp);
					}
				} else {
					//jComboBoxid_puertoPedidoCompraImpor.setSelectedItem(puertoTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPuerto") || sFormularioTipoBusqueda.equals("Todos")){
					if(puertoTemp!=null && jComboBoxid_puertoFK_IdPuertoPedidoCompraImpor!=null) {
						jComboBoxid_puertoFK_IdPuertoPedidoCompraImpor.setSelectedItem(puertoTemp);
					} else {
						if(jComboBoxid_puertoFK_IdPuertoPedidoCompraImpor!=null) {
							//jComboBoxid_puertoFK_IdPuertoPedidoCompraImpor.setSelectedItem(puertoTemp);
							if(jComboBoxid_puertoFK_IdPuertoPedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_puertoFK_IdPuertoPedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPuertoForeignKeyDescripcion(Long idPuertoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Puerto  puertoTemp=null;

			for(Puerto puertoAux:puertosForeignKey) {
				if(puertoAux.getId()!=null && puertoAux.getId().equals(idPuertoSeleccionado)) {
					puertoTemp=puertoAux;
					break;
				}
			}


			sDescripcion=PuertoConstantesFunciones.getPuertoDescripcion(puertoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPuertoForeignKeyGenerico(Long idPuertoSeleccionado,JComboBox jComboBoxid_puertoPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Puerto  puertoTemp=null;

			for(Puerto puertoAux:puertosForeignKey) {
				if(puertoAux.getId()!=null && puertoAux.getId().equals(idPuertoSeleccionado)) {
					puertoTemp=puertoAux;
					break;
				}
			}

			if(puertoTemp!=null) {
				jComboBoxid_puertoPedidoCompraImporGenerico.setSelectedItem(puertoTemp);
			} else {
				if(jComboBoxid_puertoPedidoCompraImporGenerico!=null && jComboBoxid_puertoPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_puertoPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPuertoDestinoForeignKey(Long idPuertoDestinoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Puerto  puertodestinoTemp=null;

			for(Puerto puertodestinoAux:puertodestinosForeignKey) {
				if(puertodestinoAux.getId()!=null && puertodestinoAux.getId().equals(idPuertoDestinoSeleccionado)) {
					puertodestinoTemp=puertodestinoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(puertodestinoTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setPuertoDestino(puertodestinoTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor.setSelectedItem(puertodestinoTemp);
					}
				} else {
					//jComboBoxid_puerto_destinoPedidoCompraImpor.setSelectedItem(puertodestinoTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPuertoDestino") || sFormularioTipoBusqueda.equals("Todos")){
					if(puertodestinoTemp!=null && jComboBoxid_puerto_destinoFK_IdPuertoDestinoPedidoCompraImpor!=null) {
						jComboBoxid_puerto_destinoFK_IdPuertoDestinoPedidoCompraImpor.setSelectedItem(puertodestinoTemp);
					} else {
						if(jComboBoxid_puerto_destinoFK_IdPuertoDestinoPedidoCompraImpor!=null) {
							//jComboBoxid_puerto_destinoFK_IdPuertoDestinoPedidoCompraImpor.setSelectedItem(puertodestinoTemp);
							if(jComboBoxid_puerto_destinoFK_IdPuertoDestinoPedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_puerto_destinoFK_IdPuertoDestinoPedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPuertoDestinoForeignKeyDescripcion(Long idPuertoDestinoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Puerto  puertodestinoTemp=null;

			for(Puerto puertodestinoAux:puertodestinosForeignKey) {
				if(puertodestinoAux.getId()!=null && puertodestinoAux.getId().equals(idPuertoDestinoSeleccionado)) {
					puertodestinoTemp=puertodestinoAux;
					break;
				}
			}


			sDescripcion=PuertoConstantesFunciones.getPuertoDescripcion(puertodestinoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPuertoDestinoForeignKeyGenerico(Long idPuertoDestinoSeleccionado,JComboBox jComboBoxid_puerto_destinoPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Puerto  puertodestinoTemp=null;

			for(Puerto puertodestinoAux:puertodestinosForeignKey) {
				if(puertodestinoAux.getId()!=null && puertodestinoAux.getId().equals(idPuertoDestinoSeleccionado)) {
					puertodestinoTemp=puertodestinoAux;
					break;
				}
			}

			if(puertodestinoTemp!=null) {
				jComboBoxid_puerto_destinoPedidoCompraImporGenerico.setSelectedItem(puertodestinoTemp);
			} else {
				if(jComboBoxid_puerto_destinoPedidoCompraImporGenerico!=null && jComboBoxid_puerto_destinoPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_puerto_destinoPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoTerminosImporForeignKey(Long idTipoTerminosImporSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoTerminosImpor  tipoterminosimporTemp=null;

			for(TipoTerminosImpor tipoterminosimporAux:tipoterminosimporsForeignKey) {
				if(tipoterminosimporAux.getId()!=null && tipoterminosimporAux.getId().equals(idTipoTerminosImporSeleccionado)) {
					tipoterminosimporTemp=tipoterminosimporAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoterminosimporTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setTipoTerminosImpor(tipoterminosimporTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor.setSelectedItem(tipoterminosimporTemp);
					}
				} else {
					//jComboBoxid_tipo_terminos_imporPedidoCompraImpor.setSelectedItem(tipoterminosimporTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoTerminosImpor") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoterminosimporTemp!=null && jComboBoxid_tipo_terminos_imporFK_IdTipoTerminosImporPedidoCompraImpor!=null) {
						jComboBoxid_tipo_terminos_imporFK_IdTipoTerminosImporPedidoCompraImpor.setSelectedItem(tipoterminosimporTemp);
					} else {
						if(jComboBoxid_tipo_terminos_imporFK_IdTipoTerminosImporPedidoCompraImpor!=null) {
							//jComboBoxid_tipo_terminos_imporFK_IdTipoTerminosImporPedidoCompraImpor.setSelectedItem(tipoterminosimporTemp);
							if(jComboBoxid_tipo_terminos_imporFK_IdTipoTerminosImporPedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_tipo_terminos_imporFK_IdTipoTerminosImporPedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoTerminosImporForeignKeyDescripcion(Long idTipoTerminosImporSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoTerminosImpor  tipoterminosimporTemp=null;

			for(TipoTerminosImpor tipoterminosimporAux:tipoterminosimporsForeignKey) {
				if(tipoterminosimporAux.getId()!=null && tipoterminosimporAux.getId().equals(idTipoTerminosImporSeleccionado)) {
					tipoterminosimporTemp=tipoterminosimporAux;
					break;
				}
			}


			sDescripcion=TipoTerminosImporConstantesFunciones.getTipoTerminosImporDescripcion(tipoterminosimporTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoTerminosImporForeignKeyGenerico(Long idTipoTerminosImporSeleccionado,JComboBox jComboBoxid_tipo_terminos_imporPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			TipoTerminosImpor  tipoterminosimporTemp=null;

			for(TipoTerminosImpor tipoterminosimporAux:tipoterminosimporsForeignKey) {
				if(tipoterminosimporAux.getId()!=null && tipoterminosimporAux.getId().equals(idTipoTerminosImporSeleccionado)) {
					tipoterminosimporTemp=tipoterminosimporAux;
					break;
				}
			}

			if(tipoterminosimporTemp!=null) {
				jComboBoxid_tipo_terminos_imporPedidoCompraImporGenerico.setSelectedItem(tipoterminosimporTemp);
			} else {
				if(jComboBoxid_tipo_terminos_imporPedidoCompraImporGenerico!=null && jComboBoxid_tipo_terminos_imporPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_tipo_terminos_imporPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoPedidoCompraForeignKey(Long idEstadoPedidoCompraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoPedidoCompra  estadopedidocompraTemp=null;

			for(EstadoPedidoCompra estadopedidocompraAux:estadopedidocomprasForeignKey) {
				if(estadopedidocompraAux.getId()!=null && estadopedidocompraAux.getId().equals(idEstadoPedidoCompraSeleccionado)) {
					estadopedidocompraTemp=estadopedidocompraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadopedidocompraTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setEstadoPedidoCompra(estadopedidocompraTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor.setSelectedItem(estadopedidocompraTemp);
					}
				} else {
					//jComboBoxid_estado_pedido_compraPedidoCompraImpor.setSelectedItem(estadopedidocompraTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoCompraEstadoPedoCompra") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadopedidocompraTemp!=null && jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor!=null) {
						jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor.setSelectedItem(estadopedidocompraTemp);
					} else {
						if(jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor!=null) {
							//jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor.setSelectedItem(estadopedidocompraTemp);
							if(jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoPedidoCompraForeignKeyDescripcion(Long idEstadoPedidoCompraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoPedidoCompra  estadopedidocompraTemp=null;

			for(EstadoPedidoCompra estadopedidocompraAux:estadopedidocomprasForeignKey) {
				if(estadopedidocompraAux.getId()!=null && estadopedidocompraAux.getId().equals(idEstadoPedidoCompraSeleccionado)) {
					estadopedidocompraTemp=estadopedidocompraAux;
					break;
				}
			}


			sDescripcion=EstadoPedidoCompraConstantesFunciones.getEstadoPedidoCompraDescripcion(estadopedidocompraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoPedidoCompraForeignKeyGenerico(Long idEstadoPedidoCompraSeleccionado,JComboBox jComboBoxid_estado_pedido_compraPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			EstadoPedidoCompra  estadopedidocompraTemp=null;

			for(EstadoPedidoCompra estadopedidocompraAux:estadopedidocomprasForeignKey) {
				if(estadopedidocompraAux.getId()!=null && estadopedidocompraAux.getId().equals(idEstadoPedidoCompraSeleccionado)) {
					estadopedidocompraTemp=estadopedidocompraAux;
					break;
				}
			}

			if(estadopedidocompraTemp!=null) {
				jComboBoxid_estado_pedido_compraPedidoCompraImporGenerico.setSelectedItem(estadopedidocompraTemp);
			} else {
				if(jComboBoxid_estado_pedido_compraPedidoCompraImporGenerico!=null && jComboBoxid_estado_pedido_compraPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_estado_pedido_compraPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoForeignKey(Long idFormatoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setFormato(formatoTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor.setSelectedItem(formatoTemp);
					}
				} else {
					//jComboBoxid_formatoPedidoCompraImpor.setSelectedItem(formatoTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoForeignKeyDescripcion(Long idFormatoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoForeignKeyGenerico(Long idFormatoSeleccionado,JComboBox jComboBoxid_formatoPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(formatoTemp!=null) {
				jComboBoxid_formatoPedidoCompraImporGenerico.setSelectedItem(formatoTemp);
			} else {
				if(jComboBoxid_formatoPedidoCompraImporGenerico!=null && jComboBoxid_formatoPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_formatoPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioPedidoCompraImpor.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioPedidoCompraImporGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioPedidoCompraImporGenerico!=null && jComboBoxid_anioPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_anioPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.pedidocompraimpor!=null) {
						this.pedidocompraimpor.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesPedidoCompraImpor.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesPedidoCompraImporGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesPedidoCompraImporGenerico!=null && jComboBoxid_mesPedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_mesPedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_empresaPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaPedidoCompraImporGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaPedidoCompraImporGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				pedidocompraimpor.setid_empresa(empresaAux.getId());
				pedidocompraimpor.setempresa_descripcion(PedidoCompraImporConstantesFunciones.getEmpresaDescripcion(empresaAux));
				pedidocompraimpor.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_sucursalPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalPedidoCompraImporGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalPedidoCompraImporGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				pedidocompraimpor.setid_sucursal(sucursalAux.getId());
				pedidocompraimpor.setsucursal_descripcion(PedidoCompraImporConstantesFunciones.getSucursalDescripcion(sucursalAux));
				pedidocompraimpor.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarModuloForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_moduloPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Modulo  moduloAux=new Modulo();

			if(jComboBoxid_moduloPedidoCompraImporGenerico==null) {
				moduloAux=(Modulo)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor.getSelectedItem();
			} else {
				moduloAux=(Modulo)jComboBoxid_moduloPedidoCompraImporGenerico.getSelectedItem();
			}

			if(moduloAux!=null && moduloAux.getId()!=null) {
				pedidocompraimpor.setid_modulo(moduloAux.getId());
				pedidocompraimpor.setmodulo_descripcion(PedidoCompraImporConstantesFunciones.getModuloDescripcion(moduloAux));
				pedidocompraimpor.setModulo(moduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_ejercicioPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioPedidoCompraImporGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioPedidoCompraImporGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				pedidocompraimpor.setid_ejercicio(ejercicioAux.getId());
				pedidocompraimpor.setejercicio_descripcion(PedidoCompraImporConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				pedidocompraimpor.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_periodoPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoPedidoCompraImporGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoPedidoCompraImporGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				pedidocompraimpor.setid_periodo(periodoAux.getId());
				pedidocompraimpor.setperiodo_descripcion(PedidoCompraImporConstantesFunciones.getPeriodoDescripcion(periodoAux));
				pedidocompraimpor.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPaisForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_paisPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Pais  paisAux=new Pais();

			if(jComboBoxid_paisPedidoCompraImporGenerico==null) {
				paisAux=(Pais)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor.getSelectedItem();
			} else {
				paisAux=(Pais)jComboBoxid_paisPedidoCompraImporGenerico.getSelectedItem();
			}

			if(paisAux!=null && paisAux.getId()!=null) {
				pedidocompraimpor.setid_pais(paisAux.getId());
				pedidocompraimpor.setpais_descripcion(PedidoCompraImporConstantesFunciones.getPaisDescripcion(paisAux));
				pedidocompraimpor.setPais(paisAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_clientePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clientePedidoCompraImporGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clientePedidoCompraImporGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				pedidocompraimpor.setid_cliente(clienteAux.getId());
				pedidocompraimpor.setcliente_descripcion(PedidoCompraImporConstantesFunciones.getClienteDescripcion(clienteAux));
				pedidocompraimpor.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteProveedorForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_cliente_proveedorPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_cliente_proveedorPedidoCompraImporGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_cliente_proveedorPedidoCompraImporGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				pedidocompraimpor.setid_cliente_proveedor(clienteAux.getId());
				pedidocompraimpor.setclienteproveedor_descripcion(PedidoCompraImporConstantesFunciones.getClienteProveedorDescripcion(clienteAux));
				pedidocompraimpor.setClienteProveedor(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_empleadoPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoPedidoCompraImporGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoPedidoCompraImporGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				pedidocompraimpor.setid_empleado(empleadoAux.getId());
				pedidocompraimpor.setempleado_descripcion(PedidoCompraImporConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				pedidocompraimpor.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUsuarioForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_usuarioPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioAux=new Usuario();

			if(jComboBoxid_usuarioPedidoCompraImporGenerico==null) {
				usuarioAux=(Usuario)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor.getSelectedItem();
			} else {
				usuarioAux=(Usuario)jComboBoxid_usuarioPedidoCompraImporGenerico.getSelectedItem();
			}

			if(usuarioAux!=null && usuarioAux.getId()!=null) {
				pedidocompraimpor.setid_usuario(usuarioAux.getId());
				pedidocompraimpor.setusuario_descripcion(PedidoCompraImporConstantesFunciones.getUsuarioDescripcion(usuarioAux));
				pedidocompraimpor.setUsuario(usuarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCambioForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_tipo_cambioPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioAux=new TipoCambio();

			if(jComboBoxid_tipo_cambioPedidoCompraImporGenerico==null) {
				tipocambioAux=(TipoCambio)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor.getSelectedItem();
			} else {
				tipocambioAux=(TipoCambio)jComboBoxid_tipo_cambioPedidoCompraImporGenerico.getSelectedItem();
			}

			if(tipocambioAux!=null) {
				pedidocompraimpor.setid_tipo_cambio(tipocambioAux.getId());
				pedidocompraimpor.settipocambio_descripcion(PedidoCompraImporConstantesFunciones.getTipoCambioDescripcion(tipocambioAux));
				pedidocompraimpor.setTipoCambio(tipocambioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_monedaPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaPedidoCompraImporGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaPedidoCompraImporGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				pedidocompraimpor.setid_moneda(monedaAux.getId());
				pedidocompraimpor.setmoneda_descripcion(PedidoCompraImporConstantesFunciones.getMonedaDescripcion(monedaAux));
				pedidocompraimpor.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoProrrateoImporForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_tipo_prorrateo_imporPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			TipoProrrateoImpor  tipoprorrateoimporAux=new TipoProrrateoImpor();

			if(jComboBoxid_tipo_prorrateo_imporPedidoCompraImporGenerico==null) {
				tipoprorrateoimporAux=(TipoProrrateoImpor)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.getSelectedItem();
			} else {
				tipoprorrateoimporAux=(TipoProrrateoImpor)jComboBoxid_tipo_prorrateo_imporPedidoCompraImporGenerico.getSelectedItem();
			}

			if(tipoprorrateoimporAux!=null && tipoprorrateoimporAux.getId()!=null) {
				pedidocompraimpor.setid_tipo_prorrateo_impor(tipoprorrateoimporAux.getId());
				pedidocompraimpor.settipoprorrateoimpor_descripcion(PedidoCompraImporConstantesFunciones.getTipoProrrateoImporDescripcion(tipoprorrateoimporAux));
				pedidocompraimpor.setTipoProrrateoImpor(tipoprorrateoimporAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmbarcadorForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_embarcadorPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Embarcador  embarcadorAux=new Embarcador();

			if(jComboBoxid_embarcadorPedidoCompraImporGenerico==null) {
				embarcadorAux=(Embarcador)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor.getSelectedItem();
			} else {
				embarcadorAux=(Embarcador)jComboBoxid_embarcadorPedidoCompraImporGenerico.getSelectedItem();
			}

			if(embarcadorAux!=null && embarcadorAux.getId()!=null) {
				pedidocompraimpor.setid_embarcador(embarcadorAux.getId());
				pedidocompraimpor.setembarcador_descripcion(PedidoCompraImporConstantesFunciones.getEmbarcadorDescripcion(embarcadorAux));
				pedidocompraimpor.setEmbarcador(embarcadorAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoViaTransporteForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_tipo_via_transportePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			TipoViaTransporte  tipoviatransporteAux=new TipoViaTransporte();

			if(jComboBoxid_tipo_via_transportePedidoCompraImporGenerico==null) {
				tipoviatransporteAux=(TipoViaTransporte)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor.getSelectedItem();
			} else {
				tipoviatransporteAux=(TipoViaTransporte)jComboBoxid_tipo_via_transportePedidoCompraImporGenerico.getSelectedItem();
			}

			if(tipoviatransporteAux!=null && tipoviatransporteAux.getId()!=null) {
				pedidocompraimpor.setid_tipo_via_transporte(tipoviatransporteAux.getId());
				pedidocompraimpor.settipoviatransporte_descripcion(PedidoCompraImporConstantesFunciones.getTipoViaTransporteDescripcion(tipoviatransporteAux));
				pedidocompraimpor.setTipoViaTransporte(tipoviatransporteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPuertoForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_puertoPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Puerto  puertoAux=new Puerto();

			if(jComboBoxid_puertoPedidoCompraImporGenerico==null) {
				puertoAux=(Puerto)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor.getSelectedItem();
			} else {
				puertoAux=(Puerto)jComboBoxid_puertoPedidoCompraImporGenerico.getSelectedItem();
			}

			if(puertoAux!=null && puertoAux.getId()!=null) {
				pedidocompraimpor.setid_puerto(puertoAux.getId());
				pedidocompraimpor.setpuerto_descripcion(PedidoCompraImporConstantesFunciones.getPuertoDescripcion(puertoAux));
				pedidocompraimpor.setPuerto(puertoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPuertoDestinoForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_puerto_destinoPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Puerto  puertoAux=new Puerto();

			if(jComboBoxid_puerto_destinoPedidoCompraImporGenerico==null) {
				puertoAux=(Puerto)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor.getSelectedItem();
			} else {
				puertoAux=(Puerto)jComboBoxid_puerto_destinoPedidoCompraImporGenerico.getSelectedItem();
			}

			if(puertoAux!=null && puertoAux.getId()!=null) {
				pedidocompraimpor.setid_puerto_destino(puertoAux.getId());
				pedidocompraimpor.setpuertodestino_descripcion(PedidoCompraImporConstantesFunciones.getPuertoDestinoDescripcion(puertoAux));
				pedidocompraimpor.setPuertoDestino(puertoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoTerminosImporForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_tipo_terminos_imporPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			TipoTerminosImpor  tipoterminosimporAux=new TipoTerminosImpor();

			if(jComboBoxid_tipo_terminos_imporPedidoCompraImporGenerico==null) {
				tipoterminosimporAux=(TipoTerminosImpor)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor.getSelectedItem();
			} else {
				tipoterminosimporAux=(TipoTerminosImpor)jComboBoxid_tipo_terminos_imporPedidoCompraImporGenerico.getSelectedItem();
			}

			if(tipoterminosimporAux!=null && tipoterminosimporAux.getId()!=null) {
				pedidocompraimpor.setid_tipo_terminos_impor(tipoterminosimporAux.getId());
				pedidocompraimpor.settipoterminosimpor_descripcion(PedidoCompraImporConstantesFunciones.getTipoTerminosImporDescripcion(tipoterminosimporAux));
				pedidocompraimpor.setTipoTerminosImpor(tipoterminosimporAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoPedidoCompraForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_estado_pedido_compraPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			EstadoPedidoCompra  estadopedidocompraAux=new EstadoPedidoCompra();

			if(jComboBoxid_estado_pedido_compraPedidoCompraImporGenerico==null) {
				estadopedidocompraAux=(EstadoPedidoCompra)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor.getSelectedItem();
			} else {
				estadopedidocompraAux=(EstadoPedidoCompra)jComboBoxid_estado_pedido_compraPedidoCompraImporGenerico.getSelectedItem();
			}

			if(estadopedidocompraAux!=null && estadopedidocompraAux.getId()!=null) {
				pedidocompraimpor.setid_estado_pedido_compra(estadopedidocompraAux.getId());
				pedidocompraimpor.setestadopedidocompra_descripcion(PedidoCompraImporConstantesFunciones.getEstadoPedidoCompraDescripcion(estadopedidocompraAux));
				pedidocompraimpor.setEstadoPedidoCompra(estadopedidocompraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_formatoPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formatoPedidoCompraImporGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formatoPedidoCompraImporGenerico.getSelectedItem();
			}

			if(formatoAux!=null && formatoAux.getId()!=null) {
				pedidocompraimpor.setid_formato(formatoAux.getId());
				pedidocompraimpor.setformato_descripcion(PedidoCompraImporConstantesFunciones.getFormatoDescripcion(formatoAux));
				pedidocompraimpor.setFormato(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_anioPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioPedidoCompraImporGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioPedidoCompraImporGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				pedidocompraimpor.setid_anio(anioAux.getId());
				pedidocompraimpor.setanio_descripcion(PedidoCompraImporConstantesFunciones.getAnioDescripcion(anioAux));
				pedidocompraimpor.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(PedidoCompraImpor pedidocompraimpor,JComboBox jComboBoxid_mesPedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesPedidoCompraImporGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesPedidoCompraImporGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				pedidocompraimpor.setid_mes(mesAux.getId());
				pedidocompraimpor.setmes_descripcion(PedidoCompraImporConstantesFunciones.getMesDescripcion(mesAux));
				pedidocompraimpor.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor.removeAllItems();

							for(Modulo modulo:this.modulosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor.addItem(modulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePaissForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPais=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor.addItem(pais);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPais") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_paisFK_IdPaisPedidoCompraImpor.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jComboBoxid_paisFK_IdPaisPedidoCompraImpor.addItem(pais);
							}
						}

						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClientePedidoCompraImpor.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClientePedidoCompraImpor.addItem(cliente);
							}
						}

						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClienteProveedorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor.removeAllItems();

							for(Cliente clienteproveedor:this.clienteproveedorsForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor.addItem(clienteproveedor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdClienteProveedor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cliente_proveedorFK_IdClienteProveedorPedidoCompraImpor.removeAllItems();

							for(Cliente clienteproveedor:this.clienteproveedorsForeignKey) {
								this.jComboBoxid_cliente_proveedorFK_IdClienteProveedorPedidoCompraImpor.addItem(clienteproveedor);
							}
						}

						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoPedidoCompraImpor.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jComboBoxid_empleadoFK_IdEmpleadoPedidoCompraImpor.addItem(empleado);
							}
						}

						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUsuariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUsuario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor.addItem(usuario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCambiosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCambio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor.addItem(tipocambio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoProrrateoImporsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoProrrateoImpor=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.removeAllItems();

							for(TipoProrrateoImpor tipoprorrateoimpor:this.tipoprorrateoimporsForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.addItem(tipoprorrateoimpor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoProrrateoImpor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_prorrateo_imporFK_IdTipoProrrateoImporPedidoCompraImpor.removeAllItems();

							for(TipoProrrateoImpor tipoprorrateoimpor:this.tipoprorrateoimporsForeignKey) {
								this.jComboBoxid_tipo_prorrateo_imporFK_IdTipoProrrateoImporPedidoCompraImpor.addItem(tipoprorrateoimpor);
							}
						}

						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmbarcadorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmbarcador=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor.removeAllItems();

							for(Embarcador embarcador:this.embarcadorsForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor.addItem(embarcador);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmbarcador") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_embarcadorFK_IdEmbarcadorPedidoCompraImpor.removeAllItems();

							for(Embarcador embarcador:this.embarcadorsForeignKey) {
								this.jComboBoxid_embarcadorFK_IdEmbarcadorPedidoCompraImpor.addItem(embarcador);
							}
						}

						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoViaTransportesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoViaTransporte=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor.removeAllItems();

							for(TipoViaTransporte tipoviatransporte:this.tipoviatransportesForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor.addItem(tipoviatransporte);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoViaTransporte") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_via_transporteFK_IdTipoViaTransportePedidoCompraImpor.removeAllItems();

							for(TipoViaTransporte tipoviatransporte:this.tipoviatransportesForeignKey) {
								this.jComboBoxid_tipo_via_transporteFK_IdTipoViaTransportePedidoCompraImpor.addItem(tipoviatransporte);
							}
						}

						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePuertosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPuerto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor.removeAllItems();

							for(Puerto puerto:this.puertosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor.addItem(puerto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPuerto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_puertoFK_IdPuertoPedidoCompraImpor.removeAllItems();

							for(Puerto puerto:this.puertosForeignKey) {
								this.jComboBoxid_puertoFK_IdPuertoPedidoCompraImpor.addItem(puerto);
							}
						}

						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePuertoDestinosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPuerto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor.removeAllItems();

							for(Puerto puertodestino:this.puertodestinosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor.addItem(puertodestino);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPuertoDestino") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_puerto_destinoFK_IdPuertoDestinoPedidoCompraImpor.removeAllItems();

							for(Puerto puertodestino:this.puertodestinosForeignKey) {
								this.jComboBoxid_puerto_destinoFK_IdPuertoDestinoPedidoCompraImpor.addItem(puertodestino);
							}
						}

						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoTerminosImporsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoTerminosImpor=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor.removeAllItems();

							for(TipoTerminosImpor tipoterminosimpor:this.tipoterminosimporsForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor.addItem(tipoterminosimpor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoTerminosImpor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_terminos_imporFK_IdTipoTerminosImporPedidoCompraImpor.removeAllItems();

							for(TipoTerminosImpor tipoterminosimpor:this.tipoterminosimporsForeignKey) {
								this.jComboBoxid_tipo_terminos_imporFK_IdTipoTerminosImporPedidoCompraImpor.addItem(tipoterminosimpor);
							}
						}

						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoPedidoComprasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoPedidoCompra=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor.removeAllItems();

							for(EstadoPedidoCompra estadopedidocompra:this.estadopedidocomprasForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor.addItem(estadopedidocompra);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoCompraEstadoPedoCompra") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor.removeAllItems();

							for(EstadoPedidoCompra estadopedidocompra:this.estadopedidocomprasForeignKey) {
								this.jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor.addItem(estadopedidocompra);
							}
						}

						if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor.addItem(formato);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { 
					}

					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameModuloForeignKey(Modulo modulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor.setSelectedItem(modulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePaisForeignKey(Pais pais,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor.setSelectedItem(pais);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_paisFK_IdPaisPedidoCompraImpor.setSelectedItem(pais);
						} else {
							this.jComboBoxid_paisFK_IdPaisPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClientePedidoCompraImpor.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClientePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteProveedorForeignKey(Cliente clienteproveedor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor.setSelectedItem(clienteproveedor);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cliente_proveedorFK_IdClienteProveedorPedidoCompraImpor.setSelectedItem(clienteproveedor);
						} else {
							this.jComboBoxid_cliente_proveedorFK_IdClienteProveedorPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleadoFK_IdEmpleadoPedidoCompraImpor.setSelectedItem(empleado);
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUsuarioForeignKey(Usuario usuario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor.setSelectedItem(usuario);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCambioForeignKey(TipoCambio tipocambio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor.setSelectedItem(tipocambio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoProrrateoImporForeignKey(TipoProrrateoImpor tipoprorrateoimpor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.setSelectedItem(tipoprorrateoimpor);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_prorrateo_imporFK_IdTipoProrrateoImporPedidoCompraImpor.setSelectedItem(tipoprorrateoimpor);
						} else {
							this.jComboBoxid_tipo_prorrateo_imporFK_IdTipoProrrateoImporPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmbarcadorForeignKey(Embarcador embarcador,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor.setSelectedItem(embarcador);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_embarcadorFK_IdEmbarcadorPedidoCompraImpor.setSelectedItem(embarcador);
						} else {
							this.jComboBoxid_embarcadorFK_IdEmbarcadorPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoViaTransporteForeignKey(TipoViaTransporte tipoviatransporte,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor.setSelectedItem(tipoviatransporte);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_via_transporteFK_IdTipoViaTransportePedidoCompraImpor.setSelectedItem(tipoviatransporte);
						} else {
							this.jComboBoxid_tipo_via_transporteFK_IdTipoViaTransportePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePuertoForeignKey(Puerto puerto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor.setSelectedItem(puerto);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_puertoFK_IdPuertoPedidoCompraImpor.setSelectedItem(puerto);
						} else {
							this.jComboBoxid_puertoFK_IdPuertoPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePuertoDestinoForeignKey(Puerto puertodestino,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor.setSelectedItem(puertodestino);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_puerto_destinoFK_IdPuertoDestinoPedidoCompraImpor.setSelectedItem(puertodestino);
						} else {
							this.jComboBoxid_puerto_destinoFK_IdPuertoDestinoPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoTerminosImporForeignKey(TipoTerminosImpor tipoterminosimpor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor.setSelectedItem(tipoterminosimpor);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_terminos_imporFK_IdTipoTerminosImporPedidoCompraImpor.setSelectedItem(tipoterminosimpor);
						} else {
							this.jComboBoxid_tipo_terminos_imporFK_IdTipoTerminosImporPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoPedidoCompraForeignKey(EstadoPedidoCompra estadopedidocompra,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor.setSelectedItem(estadopedidocompra);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor.setSelectedItem(estadopedidocompra);
						} else {
							this.jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoForeignKey(Formato formato,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor.setSelectedItem(formato);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesPedidoCompraImpor() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			PedidoCompraImporConstantesFunciones.refrescarForeignKeysDescripcionesPedidoCompraImpor(this.pedidocompraimporLogic.getPedidoCompraImpors());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			PedidoCompraImporConstantesFunciones.refrescarForeignKeysDescripcionesPedidoCompraImpor(this.pedidocompraimpors);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Modulo.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Pais.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(Usuario.class));
		classes.add(new Classe(TipoCambio.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(TipoProrrateoImpor.class));
		classes.add(new Classe(Embarcador.class));
		classes.add(new Classe(TipoViaTransporte.class));
		classes.add(new Classe(Puerto.class));
		classes.add(new Classe(TipoTerminosImpor.class));
		classes.add(new Classe(EstadoPedidoCompra.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//pedidocompraimporLogic.setPedidoCompraImpors(this.pedidocompraimpors);
			pedidocompraimporLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public PedidoCompraImporParameterReturnGeneral getPedidoCompraImporParameterGeneral() {
		return this.pedidocompraimporParameterGeneral;
	}
	
	public void setPedidoCompraImporParameterGeneral(PedidoCompraImporParameterReturnGeneral pedidocompraimporParameterGeneral) {
		this.pedidocompraimporParameterGeneral = pedidocompraimporParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoPedidoCompraImpor() {
		return isPermisoTodoPedidoCompraImpor;
	}

	public void setIsPermisoTodoPedidoCompraImpor(Boolean isPermisoTodoPedidoCompraImpor) {
		this.isPermisoTodoPedidoCompraImpor = isPermisoTodoPedidoCompraImpor;
	}

	public Boolean getIsPermisoNuevoPedidoCompraImpor() {
		return isPermisoNuevoPedidoCompraImpor;
	}

	public void setIsPermisoNuevoPedidoCompraImpor(Boolean isPermisoNuevoPedidoCompraImpor) {
		this.isPermisoNuevoPedidoCompraImpor = isPermisoNuevoPedidoCompraImpor;
	}

	public Boolean getIsPermisoActualizarPedidoCompraImpor() {
		return isPermisoActualizarPedidoCompraImpor;
	}

	public void setIsPermisoActualizarPedidoCompraImpor(Boolean isPermisoActualizarPedidoCompraImpor) {
		this.isPermisoActualizarPedidoCompraImpor = isPermisoActualizarPedidoCompraImpor;
	}

	public Boolean getIsPermisoEliminarPedidoCompraImpor() {
		return isPermisoEliminarPedidoCompraImpor;
	}

	public void setIsPermisoEliminarPedidoCompraImpor(Boolean isPermisoEliminarPedidoCompraImpor) {
		this.isPermisoEliminarPedidoCompraImpor = isPermisoEliminarPedidoCompraImpor;
	}

	public Boolean getIsPermisoGuardarCambiosPedidoCompraImpor() {
		return isPermisoGuardarCambiosPedidoCompraImpor;
	}

	public void setIsPermisoGuardarCambiosPedidoCompraImpor(Boolean isPermisoGuardarCambiosPedidoCompraImpor) {
		this.isPermisoGuardarCambiosPedidoCompraImpor = isPermisoGuardarCambiosPedidoCompraImpor;
	}
	
	public Boolean getIsPermisoConsultaPedidoCompraImpor() {
		return isPermisoConsultaPedidoCompraImpor;
	}

	public void setIsPermisoConsultaPedidoCompraImpor(Boolean isPermisoConsultaPedidoCompraImpor) {
		this.isPermisoConsultaPedidoCompraImpor = isPermisoConsultaPedidoCompraImpor;
	}

	public Boolean getIsPermisoBusquedaPedidoCompraImpor() {
		return isPermisoBusquedaPedidoCompraImpor;
	}

	public void setIsPermisoBusquedaPedidoCompraImpor(Boolean isPermisoBusquedaPedidoCompraImpor) {
		this.isPermisoBusquedaPedidoCompraImpor = isPermisoBusquedaPedidoCompraImpor;
	}

	public Boolean getIsPermisoReportePedidoCompraImpor() {
		return isPermisoReportePedidoCompraImpor;
	}

	public void setIsPermisoReportePedidoCompraImpor(Boolean isPermisoReportePedidoCompraImpor) {
		this.isPermisoReportePedidoCompraImpor = isPermisoReportePedidoCompraImpor;
	}
	
	public Boolean getIsPermisoPaginacionMedioPedidoCompraImpor() {
		return isPermisoPaginacionMedioPedidoCompraImpor;
	}

	public void setIsPermisoPaginacionMedioPedidoCompraImpor(Boolean isPermisoPaginacionMedioPedidoCompraImpor) {
		this.isPermisoPaginacionMedioPedidoCompraImpor = isPermisoPaginacionMedioPedidoCompraImpor;
	}
	
	public Boolean getIsPermisoPaginacionTodoPedidoCompraImpor() {
		return isPermisoPaginacionTodoPedidoCompraImpor;
	}

	public void setIsPermisoPaginacionTodoPedidoCompraImpor(Boolean isPermisoPaginacionTodoPedidoCompraImpor) {
		this.isPermisoPaginacionTodoPedidoCompraImpor = isPermisoPaginacionTodoPedidoCompraImpor;
	}
	
	public Boolean getIsPermisoPaginacionAltoPedidoCompraImpor() {
		return isPermisoPaginacionAltoPedidoCompraImpor;
	}

	public void setIsPermisoPaginacionAltoPedidoCompraImpor(Boolean isPermisoPaginacionAltoPedidoCompraImpor) {
		this.isPermisoPaginacionAltoPedidoCompraImpor = isPermisoPaginacionAltoPedidoCompraImpor;
	}
	
	public Boolean getIsPermisoCopiarPedidoCompraImpor() {
		return isPermisoCopiarPedidoCompraImpor;
	}

	public void setIsPermisoCopiarPedidoCompraImpor(Boolean isPermisoCopiarPedidoCompraImpor) {
		this.isPermisoCopiarPedidoCompraImpor = isPermisoCopiarPedidoCompraImpor;
	}
	
	public Boolean getIsPermisoVerFormPedidoCompraImpor() {
		return isPermisoVerFormPedidoCompraImpor;
	}

	public void setIsPermisoVerFormPedidoCompraImpor(Boolean isPermisoVerFormPedidoCompraImpor) {
		this.isPermisoVerFormPedidoCompraImpor = isPermisoVerFormPedidoCompraImpor;
	}
	
	public Boolean getIsPermisoDuplicarPedidoCompraImpor() {
		return isPermisoDuplicarPedidoCompraImpor;
	}

	public void setIsPermisoDuplicarPedidoCompraImpor(Boolean isPermisoDuplicarPedidoCompraImpor) {
		this.isPermisoDuplicarPedidoCompraImpor = isPermisoDuplicarPedidoCompraImpor;
	}
	
	public Boolean getIsPermisoOrdenPedidoCompraImpor() {
		return isPermisoOrdenPedidoCompraImpor;
	}

	public void setIsPermisoOrdenPedidoCompraImpor(Boolean isPermisoOrdenPedidoCompraImpor) {
		this.isPermisoOrdenPedidoCompraImpor = isPermisoOrdenPedidoCompraImpor;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoPedidoCompraImpor() {
		return isVisibilidadCeldaNuevoPedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaNuevoPedidoCompraImpor(Boolean isVisibilidadCeldaNuevoPedidoCompraImpor) {
		this.isVisibilidadCeldaNuevoPedidoCompraImpor = isVisibilidadCeldaNuevoPedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarPedidoCompraImpor() {
		return isVisibilidadCeldaDuplicarPedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaDuplicarPedidoCompraImpor(Boolean isVisibilidadCeldaDuplicarPedidoCompraImpor) {
		this.isVisibilidadCeldaDuplicarPedidoCompraImpor = isVisibilidadCeldaDuplicarPedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarPedidoCompraImpor() {
		return isVisibilidadCeldaCopiarPedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaCopiarPedidoCompraImpor(Boolean isVisibilidadCeldaCopiarPedidoCompraImpor) {
		this.isVisibilidadCeldaCopiarPedidoCompraImpor = isVisibilidadCeldaCopiarPedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormPedidoCompraImpor() {
		return isVisibilidadCeldaVerFormPedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaVerFormPedidoCompraImpor(Boolean isVisibilidadCeldaVerFormPedidoCompraImpor) {
		this.isVisibilidadCeldaVerFormPedidoCompraImpor = isVisibilidadCeldaVerFormPedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenPedidoCompraImpor() {
		return isVisibilidadCeldaOrdenPedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaOrdenPedidoCompraImpor(Boolean isVisibilidadCeldaOrdenPedidoCompraImpor) {
		this.isVisibilidadCeldaOrdenPedidoCompraImpor = isVisibilidadCeldaOrdenPedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesPedidoCompraImpor() {
		return isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesPedidoCompraImpor(Boolean isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor) {
		this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor = isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaModificarPedidoCompraImpor() {
		return isVisibilidadCeldaModificarPedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaModificarPedidoCompraImpor(Boolean isVisibilidadCeldaModificarPedidoCompraImpor) {
		this.isVisibilidadCeldaModificarPedidoCompraImpor = isVisibilidadCeldaModificarPedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarPedidoCompraImpor() {
		return isVisibilidadCeldaActualizarPedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaActualizarPedidoCompraImpor(Boolean isVisibilidadCeldaActualizarPedidoCompraImpor) {
		this.isVisibilidadCeldaActualizarPedidoCompraImpor = isVisibilidadCeldaActualizarPedidoCompraImpor;
	}

	public Boolean getIsVisibilidadCeldaEliminarPedidoCompraImpor() {
		return isVisibilidadCeldaEliminarPedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaEliminarPedidoCompraImpor(Boolean isVisibilidadCeldaEliminarPedidoCompraImpor) {
		this.isVisibilidadCeldaEliminarPedidoCompraImpor = isVisibilidadCeldaEliminarPedidoCompraImpor;
	}

	public Boolean getIsVisibilidadCeldaCancelarPedidoCompraImpor() {
		return isVisibilidadCeldaCancelarPedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaCancelarPedidoCompraImpor(Boolean isVisibilidadCeldaCancelarPedidoCompraImpor) {
		this.isVisibilidadCeldaCancelarPedidoCompraImpor = isVisibilidadCeldaCancelarPedidoCompraImpor;
	}

	public Boolean getIsVisibilidadCeldaGuardarPedidoCompraImpor() {
		return isVisibilidadCeldaGuardarPedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaGuardarPedidoCompraImpor(Boolean isVisibilidadCeldaGuardarPedidoCompraImpor) {
		this.isVisibilidadCeldaGuardarPedidoCompraImpor = isVisibilidadCeldaGuardarPedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosPedidoCompraImpor() {
		return isVisibilidadCeldaGuardarCambiosPedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaGuardarCambiosPedidoCompraImpor(Boolean isVisibilidadCeldaGuardarCambiosPedidoCompraImpor) {
		this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor = isVisibilidadCeldaGuardarCambiosPedidoCompraImpor;
	}
		
	public PedidoCompraImporSessionBean getpedidocompraimporSessionBean() {
		return this.pedidocompraimporSessionBean;
	}
	
	public void setpedidocompraimporSessionBean(PedidoCompraImporSessionBean pedidocompraimporSessionBean) {
		this.pedidocompraimporSessionBean=pedidocompraimporSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdClienteProveedor() {
		return this.isVisibilidadFK_IdClienteProveedor;
	}

	public void setisVisibilidadFK_IdClienteProveedor(Boolean isVisibilidadFK_IdClienteProveedor) {
		this.isVisibilidadFK_IdClienteProveedor=isVisibilidadFK_IdClienteProveedor;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmbarcador() {
		return this.isVisibilidadFK_IdEmbarcador;
	}

	public void setisVisibilidadFK_IdEmbarcador(Boolean isVisibilidadFK_IdEmbarcador) {
		this.isVisibilidadFK_IdEmbarcador=isVisibilidadFK_IdEmbarcador;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra() {
		return this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra;
	}

	public void setisVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra(Boolean isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {
		this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra;
	}

	public Boolean getisVisibilidadFK_IdFormato() {
		return this.isVisibilidadFK_IdFormato;
	}

	public void setisVisibilidadFK_IdFormato(Boolean isVisibilidadFK_IdFormato) {
		this.isVisibilidadFK_IdFormato=isVisibilidadFK_IdFormato;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdModulo() {
		return this.isVisibilidadFK_IdModulo;
	}

	public void setisVisibilidadFK_IdModulo(Boolean isVisibilidadFK_IdModulo) {
		this.isVisibilidadFK_IdModulo=isVisibilidadFK_IdModulo;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdPais() {
		return this.isVisibilidadFK_IdPais;
	}

	public void setisVisibilidadFK_IdPais(Boolean isVisibilidadFK_IdPais) {
		this.isVisibilidadFK_IdPais=isVisibilidadFK_IdPais;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdPuerto() {
		return this.isVisibilidadFK_IdPuerto;
	}

	public void setisVisibilidadFK_IdPuerto(Boolean isVisibilidadFK_IdPuerto) {
		this.isVisibilidadFK_IdPuerto=isVisibilidadFK_IdPuerto;
	}

	public Boolean getisVisibilidadFK_IdPuertoDestino() {
		return this.isVisibilidadFK_IdPuertoDestino;
	}

	public void setisVisibilidadFK_IdPuertoDestino(Boolean isVisibilidadFK_IdPuertoDestino) {
		this.isVisibilidadFK_IdPuertoDestino=isVisibilidadFK_IdPuertoDestino;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoCambio() {
		return this.isVisibilidadFK_IdTipoCambio;
	}

	public void setisVisibilidadFK_IdTipoCambio(Boolean isVisibilidadFK_IdTipoCambio) {
		this.isVisibilidadFK_IdTipoCambio=isVisibilidadFK_IdTipoCambio;
	}

	public Boolean getisVisibilidadFK_IdTipoProrrateoImpor() {
		return this.isVisibilidadFK_IdTipoProrrateoImpor;
	}

	public void setisVisibilidadFK_IdTipoProrrateoImpor(Boolean isVisibilidadFK_IdTipoProrrateoImpor) {
		this.isVisibilidadFK_IdTipoProrrateoImpor=isVisibilidadFK_IdTipoProrrateoImpor;
	}

	public Boolean getisVisibilidadFK_IdTipoTerminosImpor() {
		return this.isVisibilidadFK_IdTipoTerminosImpor;
	}

	public void setisVisibilidadFK_IdTipoTerminosImpor(Boolean isVisibilidadFK_IdTipoTerminosImpor) {
		this.isVisibilidadFK_IdTipoTerminosImpor=isVisibilidadFK_IdTipoTerminosImpor;
	}

	public Boolean getisVisibilidadFK_IdTipoViaTransporte() {
		return this.isVisibilidadFK_IdTipoViaTransporte;
	}

	public void setisVisibilidadFK_IdTipoViaTransporte(Boolean isVisibilidadFK_IdTipoViaTransporte) {
		this.isVisibilidadFK_IdTipoViaTransporte=isVisibilidadFK_IdTipoViaTransporte;
	}

	public Boolean getisVisibilidadFK_IdUsuario() {
		return this.isVisibilidadFK_IdUsuario;
	}

	public void setisVisibilidadFK_IdUsuario(Boolean isVisibilidadFK_IdUsuario) {
		this.isVisibilidadFK_IdUsuario=isVisibilidadFK_IdUsuario;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarSucursalForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarModuloForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarEjercicioForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarPeriodoForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarPaisForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarClienteForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarClienteProveedorForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarEmpleadoForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarUsuarioForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarTipoCambioForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarMonedaForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarTipoProrrateoImporForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarEmbarcadorForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarTipoViaTransporteForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarPuertoForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarPuertoDestinoForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarTipoTerminosImporForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarEstadoPedidoCompraForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarFormatoForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarAnioForeignKey(pedidocompraimpor,null);
				this.setActualParaGuardarMesForeignKey(pedidocompraimpor,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(PedidoCompraImpor pedidocompraimpor,PedidoCompraImpor pedidocompraimporAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalPedidoCompraImpor(pedidocompraimpor);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		pedidocompraimporAux.setId(pedidocompraimpor.getId());
		pedidocompraimporAux.setVersionRow(pedidocompraimpor.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessPedidoCompraImpor();
		
			int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = pedidocompraimporValidator.getInvalidValues(this.pedidocompraimpor);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			pedidocompraimporLogic.setDatosCliente(datosCliente);
			pedidocompraimporLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				pedidocompraimporAux=new  PedidoCompraImpor();
				
				pedidocompraimporAux.setIsNew(true);
				pedidocompraimporAux.setIsChanged(true);
				
				pedidocompraimporAux.setPedidoCompraImporOriginal(this.pedidocompraimpor);
				
				pedidocompraimporAux.setId(this.pedidocompraimpor.getId());	
				pedidocompraimporAux.setVersionRow(this.pedidocompraimpor.getVersionRow());	
				pedidocompraimporAux.setid_empresa(this.pedidocompraimpor.getid_empresa());	
				pedidocompraimporAux.setid_sucursal(this.pedidocompraimpor.getid_sucursal());	
				pedidocompraimporAux.setid_modulo(this.pedidocompraimpor.getid_modulo());	
				pedidocompraimporAux.setid_ejercicio(this.pedidocompraimpor.getid_ejercicio());	
				pedidocompraimporAux.setid_periodo(this.pedidocompraimpor.getid_periodo());	
				pedidocompraimporAux.setid_pais(this.pedidocompraimpor.getid_pais());	
				pedidocompraimporAux.setid_cliente(this.pedidocompraimpor.getid_cliente());	
				pedidocompraimporAux.setid_cliente_proveedor(this.pedidocompraimpor.getid_cliente_proveedor());	
				pedidocompraimporAux.setid_empleado(this.pedidocompraimpor.getid_empleado());	
				pedidocompraimporAux.setid_usuario(this.pedidocompraimpor.getid_usuario());	
				pedidocompraimporAux.setid_tipo_cambio(this.pedidocompraimpor.getid_tipo_cambio());	
				pedidocompraimporAux.setid_moneda(this.pedidocompraimpor.getid_moneda());	
				pedidocompraimporAux.setid_tipo_prorrateo_impor(this.pedidocompraimpor.getid_tipo_prorrateo_impor());	
				pedidocompraimporAux.setid_embarcador(this.pedidocompraimpor.getid_embarcador());	
				pedidocompraimporAux.setid_tipo_via_transporte(this.pedidocompraimpor.getid_tipo_via_transporte());	
				pedidocompraimporAux.setid_puerto(this.pedidocompraimpor.getid_puerto());	
				pedidocompraimporAux.setid_puerto_destino(this.pedidocompraimpor.getid_puerto_destino());	
				pedidocompraimporAux.setid_tipo_terminos_impor(this.pedidocompraimpor.getid_tipo_terminos_impor());	
				pedidocompraimporAux.setid_estado_pedido_compra(this.pedidocompraimpor.getid_estado_pedido_compra());	
				pedidocompraimporAux.setforma_pago(this.pedidocompraimpor.getforma_pago());	
				pedidocompraimporAux.setnumero_dui(this.pedidocompraimpor.getnumero_dui());	
				pedidocompraimporAux.setsecuencial(this.pedidocompraimpor.getsecuencial());	
				pedidocompraimporAux.setnumero_orden(this.pedidocompraimpor.getnumero_orden());	
				pedidocompraimporAux.setuso_en(this.pedidocompraimpor.getuso_en());	
				pedidocompraimporAux.setresponsable(this.pedidocompraimpor.getresponsable());	
				pedidocompraimporAux.setorden_compra(this.pedidocompraimpor.getorden_compra());	
				pedidocompraimporAux.setlugar_entrega(this.pedidocompraimpor.getlugar_entrega());	
				pedidocompraimporAux.setdescripcion(this.pedidocompraimpor.getdescripcion());	
				pedidocompraimporAux.setfecha(this.pedidocompraimpor.getfecha());	
				pedidocompraimporAux.setfecha_emision(this.pedidocompraimpor.getfecha_emision());	
				pedidocompraimporAux.setfecha_entrega(this.pedidocompraimpor.getfecha_entrega());	
				pedidocompraimporAux.setfecha_entrega_cliente(this.pedidocompraimpor.getfecha_entrega_cliente());	
				pedidocompraimporAux.setnombre_seguro(this.pedidocompraimpor.getnombre_seguro());	
				pedidocompraimporAux.setnombre_consignatario(this.pedidocompraimpor.getnombre_consignatario());	
				pedidocompraimporAux.setprecios(this.pedidocompraimpor.getprecios());	
				pedidocompraimporAux.setflete(this.pedidocompraimpor.getflete());	
				pedidocompraimporAux.setseguro(this.pedidocompraimpor.getseguro());	
				pedidocompraimporAux.setgastos(this.pedidocompraimpor.getgastos());	
				pedidocompraimporAux.setcfr(this.pedidocompraimpor.getcfr());	
				pedidocompraimporAux.setcif(this.pedidocompraimpor.getcif());	
				pedidocompraimporAux.settotal(this.pedidocompraimpor.gettotal());	
				pedidocompraimporAux.setid_formato(this.pedidocompraimpor.getid_formato());	
				pedidocompraimporAux.setid_anio(this.pedidocompraimpor.getid_anio());	
				pedidocompraimporAux.setid_mes(this.pedidocompraimpor.getid_mes());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.pedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.pedidocompraimporSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(pedidocompraimporAux,pedidocompraimporLogic.getPedidoCompraImpors());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidocompraimporAux,pedidocompraimpors);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.pedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pedidocompraimporSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.savePedidoCompraImpors();//WithConnection
						//pedidocompraimporLogic.getSetVersionRowPedidoCompraImpors();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.pedidocompraimpor,pedidocompraimporAux);
					
					this.refrescarForeignKeysDescripcionesPedidoCompraImpor();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pedidocompraimporSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporsEliminados);
							this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.getLiquidacionImpuestoImpors().addAll(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporsEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimpors.addAll(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporsEliminados);
							this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimpors.addAll(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporsEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pedidocompraimporLogic.savePedidoCompraImporRelaciones(pedidocompraimporAux,this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.getDetallePedidoCompraImpors(),this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.getLiquidacionImpuestoImpors());//WithConnection
								//pedidocompraimporLogic.getSetVersionRowPedidoCompraImpors();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.pedidocompraimpor,pedidocompraimporAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());
							this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.setLiquidacionImpuestoImpors(new ArrayList<LiquidacionImpuestoImpor>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimpors= new ArrayList<DetallePedidoCompraImpor>();
							this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimpors= new ArrayList<LiquidacionImpuestoImpor>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidocompraimporAux.setDetallePedidoCompraImpors(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.getDetallePedidoCompraImpors());

							if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidocompraimporAux.setLiquidacionImpuestoImpors(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.getLiquidacionImpuestoImpors());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.pedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
									|| this.pedidocompraimporSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(pedidocompraimporAux,pedidocompraimporLogic.getPedidoCompraImpors());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(pedidocompraimporAux,pedidocompraimpors);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.pedidocompraimpor,pedidocompraimporAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				pedidocompraimporAux=new  PedidoCompraImpor();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado() 
					|| (this.pedidocompraimporSessionBean.getEsGuardarRelacionado() && this.pedidocompraimpor.getId()>=0)) {
						
					pedidocompraimporAux.setIsNew(false);
				}
				
				pedidocompraimporAux.setIsDeleted(false);
			
				pedidocompraimporAux.setId(this.pedidocompraimpor.getId());	
				pedidocompraimporAux.setVersionRow(this.pedidocompraimpor.getVersionRow());	
				pedidocompraimporAux.setid_empresa(this.pedidocompraimpor.getid_empresa());	
				pedidocompraimporAux.setid_sucursal(this.pedidocompraimpor.getid_sucursal());	
				pedidocompraimporAux.setid_modulo(this.pedidocompraimpor.getid_modulo());	
				pedidocompraimporAux.setid_ejercicio(this.pedidocompraimpor.getid_ejercicio());	
				pedidocompraimporAux.setid_periodo(this.pedidocompraimpor.getid_periodo());	
				pedidocompraimporAux.setid_pais(this.pedidocompraimpor.getid_pais());	
				pedidocompraimporAux.setid_cliente(this.pedidocompraimpor.getid_cliente());	
				pedidocompraimporAux.setid_cliente_proveedor(this.pedidocompraimpor.getid_cliente_proveedor());	
				pedidocompraimporAux.setid_empleado(this.pedidocompraimpor.getid_empleado());	
				pedidocompraimporAux.setid_usuario(this.pedidocompraimpor.getid_usuario());	
				pedidocompraimporAux.setid_tipo_cambio(this.pedidocompraimpor.getid_tipo_cambio());	
				pedidocompraimporAux.setid_moneda(this.pedidocompraimpor.getid_moneda());	
				pedidocompraimporAux.setid_tipo_prorrateo_impor(this.pedidocompraimpor.getid_tipo_prorrateo_impor());	
				pedidocompraimporAux.setid_embarcador(this.pedidocompraimpor.getid_embarcador());	
				pedidocompraimporAux.setid_tipo_via_transporte(this.pedidocompraimpor.getid_tipo_via_transporte());	
				pedidocompraimporAux.setid_puerto(this.pedidocompraimpor.getid_puerto());	
				pedidocompraimporAux.setid_puerto_destino(this.pedidocompraimpor.getid_puerto_destino());	
				pedidocompraimporAux.setid_tipo_terminos_impor(this.pedidocompraimpor.getid_tipo_terminos_impor());	
				pedidocompraimporAux.setid_estado_pedido_compra(this.pedidocompraimpor.getid_estado_pedido_compra());	
				pedidocompraimporAux.setforma_pago(this.pedidocompraimpor.getforma_pago());	
				pedidocompraimporAux.setnumero_dui(this.pedidocompraimpor.getnumero_dui());	
				pedidocompraimporAux.setsecuencial(this.pedidocompraimpor.getsecuencial());	
				pedidocompraimporAux.setnumero_orden(this.pedidocompraimpor.getnumero_orden());	
				pedidocompraimporAux.setuso_en(this.pedidocompraimpor.getuso_en());	
				pedidocompraimporAux.setresponsable(this.pedidocompraimpor.getresponsable());	
				pedidocompraimporAux.setorden_compra(this.pedidocompraimpor.getorden_compra());	
				pedidocompraimporAux.setlugar_entrega(this.pedidocompraimpor.getlugar_entrega());	
				pedidocompraimporAux.setdescripcion(this.pedidocompraimpor.getdescripcion());	
				pedidocompraimporAux.setfecha(this.pedidocompraimpor.getfecha());	
				pedidocompraimporAux.setfecha_emision(this.pedidocompraimpor.getfecha_emision());	
				pedidocompraimporAux.setfecha_entrega(this.pedidocompraimpor.getfecha_entrega());	
				pedidocompraimporAux.setfecha_entrega_cliente(this.pedidocompraimpor.getfecha_entrega_cliente());	
				pedidocompraimporAux.setnombre_seguro(this.pedidocompraimpor.getnombre_seguro());	
				pedidocompraimporAux.setnombre_consignatario(this.pedidocompraimpor.getnombre_consignatario());	
				pedidocompraimporAux.setprecios(this.pedidocompraimpor.getprecios());	
				pedidocompraimporAux.setflete(this.pedidocompraimpor.getflete());	
				pedidocompraimporAux.setseguro(this.pedidocompraimpor.getseguro());	
				pedidocompraimporAux.setgastos(this.pedidocompraimpor.getgastos());	
				pedidocompraimporAux.setcfr(this.pedidocompraimpor.getcfr());	
				pedidocompraimporAux.setcif(this.pedidocompraimpor.getcif());	
				pedidocompraimporAux.settotal(this.pedidocompraimpor.gettotal());	
				pedidocompraimporAux.setid_formato(this.pedidocompraimpor.getid_formato());	
				pedidocompraimporAux.setid_anio(this.pedidocompraimpor.getid_anio());	
				pedidocompraimporAux.setid_mes(this.pedidocompraimpor.getid_mes());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(pedidocompraimporAux,pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidocompraimporAux,pedidocompraimpors);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.pedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pedidocompraimporSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.savePedidoCompraImpors();//WithConnection
						//pedidocompraimporLogic.getSetVersionRowPedidoCompraImpors();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.pedidocompraimpor,pedidocompraimporAux);
					
					this.refrescarForeignKeysDescripcionesPedidoCompraImpor();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pedidocompraimporSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporsEliminados);
							this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.getLiquidacionImpuestoImpors().addAll(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporsEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimpors.addAll(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporsEliminados);
							this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimpors.addAll(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporsEliminados);
						}
						//ARCHITECTURE
						
						if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pedidocompraimporLogic.savePedidoCompraImporRelaciones(pedidocompraimporAux,this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.getDetallePedidoCompraImpors(),this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.getLiquidacionImpuestoImpors());//WithConnection
								//pedidocompraimporLogic.getSetVersionRowPedidoCompraImpors();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.pedidocompraimpor,pedidocompraimporAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());
							this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.setLiquidacionImpuestoImpors(new ArrayList<LiquidacionImpuestoImpor>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimpors= new ArrayList<DetallePedidoCompraImpor>();
							this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimpors= new ArrayList<LiquidacionImpuestoImpor>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidocompraimporAux.setDetallePedidoCompraImpors(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.getDetallePedidoCompraImpors());

							if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidocompraimporAux.setLiquidacionImpuestoImpors(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.getLiquidacionImpuestoImpors());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.pedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
									|| this.pedidocompraimporSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(pedidocompraimporAux,pedidocompraimporLogic.getPedidoCompraImpors());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(pedidocompraimporAux,pedidocompraimpors);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.pedidocompraimpor,pedidocompraimporAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				pedidocompraimporAux=new  PedidoCompraImpor();
				
				pedidocompraimporAux.setIsNew(false);
				pedidocompraimporAux.setIsChanged(false);
				
				pedidocompraimporAux.setIsDeleted(true);
				
				pedidocompraimporAux.setId(this.pedidocompraimpor.getId());	
				pedidocompraimporAux.setVersionRow(this.pedidocompraimpor.getVersionRow());	
				pedidocompraimporAux.setid_empresa(this.pedidocompraimpor.getid_empresa());	
				pedidocompraimporAux.setid_sucursal(this.pedidocompraimpor.getid_sucursal());	
				pedidocompraimporAux.setid_modulo(this.pedidocompraimpor.getid_modulo());	
				pedidocompraimporAux.setid_ejercicio(this.pedidocompraimpor.getid_ejercicio());	
				pedidocompraimporAux.setid_periodo(this.pedidocompraimpor.getid_periodo());	
				pedidocompraimporAux.setid_pais(this.pedidocompraimpor.getid_pais());	
				pedidocompraimporAux.setid_cliente(this.pedidocompraimpor.getid_cliente());	
				pedidocompraimporAux.setid_cliente_proveedor(this.pedidocompraimpor.getid_cliente_proveedor());	
				pedidocompraimporAux.setid_empleado(this.pedidocompraimpor.getid_empleado());	
				pedidocompraimporAux.setid_usuario(this.pedidocompraimpor.getid_usuario());	
				pedidocompraimporAux.setid_tipo_cambio(this.pedidocompraimpor.getid_tipo_cambio());	
				pedidocompraimporAux.setid_moneda(this.pedidocompraimpor.getid_moneda());	
				pedidocompraimporAux.setid_tipo_prorrateo_impor(this.pedidocompraimpor.getid_tipo_prorrateo_impor());	
				pedidocompraimporAux.setid_embarcador(this.pedidocompraimpor.getid_embarcador());	
				pedidocompraimporAux.setid_tipo_via_transporte(this.pedidocompraimpor.getid_tipo_via_transporte());	
				pedidocompraimporAux.setid_puerto(this.pedidocompraimpor.getid_puerto());	
				pedidocompraimporAux.setid_puerto_destino(this.pedidocompraimpor.getid_puerto_destino());	
				pedidocompraimporAux.setid_tipo_terminos_impor(this.pedidocompraimpor.getid_tipo_terminos_impor());	
				pedidocompraimporAux.setid_estado_pedido_compra(this.pedidocompraimpor.getid_estado_pedido_compra());	
				pedidocompraimporAux.setforma_pago(this.pedidocompraimpor.getforma_pago());	
				pedidocompraimporAux.setnumero_dui(this.pedidocompraimpor.getnumero_dui());	
				pedidocompraimporAux.setsecuencial(this.pedidocompraimpor.getsecuencial());	
				pedidocompraimporAux.setnumero_orden(this.pedidocompraimpor.getnumero_orden());	
				pedidocompraimporAux.setuso_en(this.pedidocompraimpor.getuso_en());	
				pedidocompraimporAux.setresponsable(this.pedidocompraimpor.getresponsable());	
				pedidocompraimporAux.setorden_compra(this.pedidocompraimpor.getorden_compra());	
				pedidocompraimporAux.setlugar_entrega(this.pedidocompraimpor.getlugar_entrega());	
				pedidocompraimporAux.setdescripcion(this.pedidocompraimpor.getdescripcion());	
				pedidocompraimporAux.setfecha(this.pedidocompraimpor.getfecha());	
				pedidocompraimporAux.setfecha_emision(this.pedidocompraimpor.getfecha_emision());	
				pedidocompraimporAux.setfecha_entrega(this.pedidocompraimpor.getfecha_entrega());	
				pedidocompraimporAux.setfecha_entrega_cliente(this.pedidocompraimpor.getfecha_entrega_cliente());	
				pedidocompraimporAux.setnombre_seguro(this.pedidocompraimpor.getnombre_seguro());	
				pedidocompraimporAux.setnombre_consignatario(this.pedidocompraimpor.getnombre_consignatario());	
				pedidocompraimporAux.setprecios(this.pedidocompraimpor.getprecios());	
				pedidocompraimporAux.setflete(this.pedidocompraimpor.getflete());	
				pedidocompraimporAux.setseguro(this.pedidocompraimpor.getseguro());	
				pedidocompraimporAux.setgastos(this.pedidocompraimpor.getgastos());	
				pedidocompraimporAux.setcfr(this.pedidocompraimpor.getcfr());	
				pedidocompraimporAux.setcif(this.pedidocompraimpor.getcif());	
				pedidocompraimporAux.settotal(this.pedidocompraimpor.gettotal());	
				pedidocompraimporAux.setid_formato(this.pedidocompraimpor.getid_formato());	
				pedidocompraimporAux.setid_anio(this.pedidocompraimpor.getid_anio());	
				pedidocompraimporAux.setid_mes(this.pedidocompraimpor.getid_mes());	
				
				if(this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.pedidocompraimporAux.getId()>=0) {	
						this.pedidocompraimporsEliminados.add(pedidocompraimporAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(pedidocompraimporAux,pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidocompraimporAux,pedidocompraimpors);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.pedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pedidocompraimporSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.savePedidoCompraImpors();//WithConnection
						//pedidocompraimporLogic.getSetVersionRowPedidoCompraImpors();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pedidocompraimporSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporsEliminados);
							this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.getLiquidacionImpuestoImpors().addAll(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporsEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimpors.addAll(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporsEliminados);
							this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimpors.addAll(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporsEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jInternalFrameDetalleFormLiquidacionImpuestoImpor.detalleliquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pedidocompraimporLogic.savePedidoCompraImporRelaciones(pedidocompraimporAux,this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.getDetallePedidoCompraImpors(),this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.getLiquidacionImpuestoImpors());//WithConnection
								//pedidocompraimporLogic.getSetVersionRowPedidoCompraImpors();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());
							this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.setLiquidacionImpuestoImpors(new ArrayList<LiquidacionImpuestoImpor>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimpors= new ArrayList<DetallePedidoCompraImpor>();
							this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimpors= new ArrayList<LiquidacionImpuestoImpor>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidocompraimporAux.setDetallePedidoCompraImpors(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.getDetallePedidoCompraImpors());

							if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidocompraimporAux.setLiquidacionImpuestoImpors(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.getLiquidacionImpuestoImpors());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.pedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
								|| this.pedidocompraimporSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(pedidocompraimporAux,pedidocompraimporLogic.getPedidoCompraImpors());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(pedidocompraimporAux,pedidocompraimpors);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getPedidoCompraImpors().addAll(this.pedidocompraimporsEliminados);
					
					pedidocompraimporLogic.savePedidoCompraImpors();//WithConnection
					//pedidocompraimporLogic.getSetVersionRowPedidoCompraImpors();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesPedidoCompraImpor();
				
				this.pedidocompraimporsEliminados= new ArrayList<PedidoCompraImpor>();		
			}
			
			if(this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Pedido Compra GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.pedidocompraimpor=pedidocompraimporAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessPedidoCompraImpor();
      	}
		
	}	
	
	public void actualizarRelaciones(PedidoCompraImpor pedidocompraimporLocal) throws Exception {
		
		if(this.pedidocompraimporSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				pedidocompraimporLocal.setDetallePedidoCompraImpors(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				pedidocompraimporLocal.setLiquidacionImpuestoImpors(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.getLiquidacionImpuestoImpors());
			
			} else {
			
				pedidocompraimporLocal.setDetallePedidoCompraImpors(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimpors);
				pedidocompraimporLocal.setLiquidacionImpuestoImpors(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimpors);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(PedidoCompraImpor pedidocompraimporLocal) throws Exception {	
		if(this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				pedidocompraimporLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				pedidocompraimporLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ModuloDetalleFormJInternalFrame.class)) {
				ModuloBeanSwingJInternalFrame moduloBeanSwingJInternalFrameLocal=(ModuloBeanSwingJInternalFrame) ((ModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				moduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoModulo(moduloBeanSwingJInternalFrameLocal.getmodulo(),true);
				moduloBeanSwingJInternalFrameLocal.actualizarLista(moduloBeanSwingJInternalFrameLocal.modulo,this.modulosForeignKey);

				moduloBeanSwingJInternalFrameLocal.actualizarRelaciones(moduloBeanSwingJInternalFrameLocal.modulo);

				pedidocompraimporLocal.setModulo(moduloBeanSwingJInternalFrameLocal.modulo);

				this.addItemDefectoCombosForeignKeyModulo();
				this.cargarCombosFrameModulosForeignKey("Formulario");
				this.setActualModuloForeignKey(moduloBeanSwingJInternalFrameLocal.modulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				pedidocompraimporLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				pedidocompraimporLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PaisDetalleFormJInternalFrame.class)) {
				PaisBeanSwingJInternalFrame paisBeanSwingJInternalFrameLocal=(PaisBeanSwingJInternalFrame) ((PaisDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				paisBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPais(paisBeanSwingJInternalFrameLocal.getpais(),true);
				paisBeanSwingJInternalFrameLocal.actualizarLista(paisBeanSwingJInternalFrameLocal.pais,this.paissForeignKey);

				paisBeanSwingJInternalFrameLocal.actualizarRelaciones(paisBeanSwingJInternalFrameLocal.pais);

				pedidocompraimporLocal.setPais(paisBeanSwingJInternalFrameLocal.pais);

				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey("Formulario");
				this.setActualPaisForeignKey(paisBeanSwingJInternalFrameLocal.pais.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				pedidocompraimporLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteproveedorBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteproveedorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteproveedorBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteproveedorBeanSwingJInternalFrameLocal.actualizarLista(clienteproveedorBeanSwingJInternalFrameLocal.cliente,this.clienteproveedorsForeignKey);

				clienteproveedorBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteproveedorBeanSwingJInternalFrameLocal.cliente);

				pedidocompraimporLocal.setClienteProveedor(clienteproveedorBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyClienteProveedor();
				this.cargarCombosFrameClienteProveedorsForeignKey("Formulario");
				this.setActualClienteProveedorForeignKey(clienteproveedorBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				pedidocompraimporLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UsuarioDetalleFormJInternalFrame.class)) {
				UsuarioBeanSwingJInternalFrame usuarioBeanSwingJInternalFrameLocal=(UsuarioBeanSwingJInternalFrame) ((UsuarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				usuarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUsuario(usuarioBeanSwingJInternalFrameLocal.getusuario(),true);
				usuarioBeanSwingJInternalFrameLocal.actualizarLista(usuarioBeanSwingJInternalFrameLocal.usuario,this.usuariosForeignKey);

				usuarioBeanSwingJInternalFrameLocal.actualizarRelaciones(usuarioBeanSwingJInternalFrameLocal.usuario);

				pedidocompraimporLocal.setUsuario(usuarioBeanSwingJInternalFrameLocal.usuario);

				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey("Formulario");
				this.setActualUsuarioForeignKey(usuarioBeanSwingJInternalFrameLocal.usuario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCambioDetalleFormJInternalFrame.class)) {
				TipoCambioBeanSwingJInternalFrame tipocambioBeanSwingJInternalFrameLocal=(TipoCambioBeanSwingJInternalFrame) ((TipoCambioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocambioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCambio(tipocambioBeanSwingJInternalFrameLocal.gettipocambio(),true);
				tipocambioBeanSwingJInternalFrameLocal.actualizarLista(tipocambioBeanSwingJInternalFrameLocal.tipocambio,this.tipocambiosForeignKey);

				tipocambioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				pedidocompraimporLocal.setTipoCambio(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey("Formulario");
				this.setActualTipoCambioForeignKey(tipocambioBeanSwingJInternalFrameLocal.tipocambio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				pedidocompraimporLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoProrrateoImporDetalleFormJInternalFrame.class)) {
				TipoProrrateoImporBeanSwingJInternalFrame tipoprorrateoimporBeanSwingJInternalFrameLocal=(TipoProrrateoImporBeanSwingJInternalFrame) ((TipoProrrateoImporDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoprorrateoimporBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoProrrateoImpor(tipoprorrateoimporBeanSwingJInternalFrameLocal.gettipoprorrateoimpor(),true);
				tipoprorrateoimporBeanSwingJInternalFrameLocal.actualizarLista(tipoprorrateoimporBeanSwingJInternalFrameLocal.tipoprorrateoimpor,this.tipoprorrateoimporsForeignKey);

				tipoprorrateoimporBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoprorrateoimporBeanSwingJInternalFrameLocal.tipoprorrateoimpor);

				pedidocompraimporLocal.setTipoProrrateoImpor(tipoprorrateoimporBeanSwingJInternalFrameLocal.tipoprorrateoimpor);

				this.addItemDefectoCombosForeignKeyTipoProrrateoImpor();
				this.cargarCombosFrameTipoProrrateoImporsForeignKey("Formulario");
				this.setActualTipoProrrateoImporForeignKey(tipoprorrateoimporBeanSwingJInternalFrameLocal.tipoprorrateoimpor.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmbarcadorDetalleFormJInternalFrame.class)) {
				EmbarcadorBeanSwingJInternalFrame embarcadorBeanSwingJInternalFrameLocal=(EmbarcadorBeanSwingJInternalFrame) ((EmbarcadorDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				embarcadorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmbarcador(embarcadorBeanSwingJInternalFrameLocal.getembarcador(),true);
				embarcadorBeanSwingJInternalFrameLocal.actualizarLista(embarcadorBeanSwingJInternalFrameLocal.embarcador,this.embarcadorsForeignKey);

				embarcadorBeanSwingJInternalFrameLocal.actualizarRelaciones(embarcadorBeanSwingJInternalFrameLocal.embarcador);

				pedidocompraimporLocal.setEmbarcador(embarcadorBeanSwingJInternalFrameLocal.embarcador);

				this.addItemDefectoCombosForeignKeyEmbarcador();
				this.cargarCombosFrameEmbarcadorsForeignKey("Formulario");
				this.setActualEmbarcadorForeignKey(embarcadorBeanSwingJInternalFrameLocal.embarcador.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoViaTransporteDetalleFormJInternalFrame.class)) {
				TipoViaTransporteBeanSwingJInternalFrame tipoviatransporteBeanSwingJInternalFrameLocal=(TipoViaTransporteBeanSwingJInternalFrame) ((TipoViaTransporteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoviatransporteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoViaTransporte(tipoviatransporteBeanSwingJInternalFrameLocal.gettipoviatransporte(),true);
				tipoviatransporteBeanSwingJInternalFrameLocal.actualizarLista(tipoviatransporteBeanSwingJInternalFrameLocal.tipoviatransporte,this.tipoviatransportesForeignKey);

				tipoviatransporteBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoviatransporteBeanSwingJInternalFrameLocal.tipoviatransporte);

				pedidocompraimporLocal.setTipoViaTransporte(tipoviatransporteBeanSwingJInternalFrameLocal.tipoviatransporte);

				this.addItemDefectoCombosForeignKeyTipoViaTransporte();
				this.cargarCombosFrameTipoViaTransportesForeignKey("Formulario");
				this.setActualTipoViaTransporteForeignKey(tipoviatransporteBeanSwingJInternalFrameLocal.tipoviatransporte.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PuertoDetalleFormJInternalFrame.class)) {
				PuertoBeanSwingJInternalFrame puertoBeanSwingJInternalFrameLocal=(PuertoBeanSwingJInternalFrame) ((PuertoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				puertoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPuerto(puertoBeanSwingJInternalFrameLocal.getpuerto(),true);
				puertoBeanSwingJInternalFrameLocal.actualizarLista(puertoBeanSwingJInternalFrameLocal.puerto,this.puertosForeignKey);

				puertoBeanSwingJInternalFrameLocal.actualizarRelaciones(puertoBeanSwingJInternalFrameLocal.puerto);

				pedidocompraimporLocal.setPuerto(puertoBeanSwingJInternalFrameLocal.puerto);

				this.addItemDefectoCombosForeignKeyPuerto();
				this.cargarCombosFramePuertosForeignKey("Formulario");
				this.setActualPuertoForeignKey(puertoBeanSwingJInternalFrameLocal.puerto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PuertoDetalleFormJInternalFrame.class)) {
				PuertoBeanSwingJInternalFrame puertodestinoBeanSwingJInternalFrameLocal=(PuertoBeanSwingJInternalFrame) ((PuertoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				puertodestinoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPuerto(puertodestinoBeanSwingJInternalFrameLocal.getpuerto(),true);
				puertodestinoBeanSwingJInternalFrameLocal.actualizarLista(puertodestinoBeanSwingJInternalFrameLocal.puerto,this.puertodestinosForeignKey);

				puertodestinoBeanSwingJInternalFrameLocal.actualizarRelaciones(puertodestinoBeanSwingJInternalFrameLocal.puerto);

				pedidocompraimporLocal.setPuertoDestino(puertodestinoBeanSwingJInternalFrameLocal.puerto);

				this.addItemDefectoCombosForeignKeyPuertoDestino();
				this.cargarCombosFramePuertoDestinosForeignKey("Formulario");
				this.setActualPuertoDestinoForeignKey(puertodestinoBeanSwingJInternalFrameLocal.puerto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoTerminosImporDetalleFormJInternalFrame.class)) {
				TipoTerminosImporBeanSwingJInternalFrame tipoterminosimporBeanSwingJInternalFrameLocal=(TipoTerminosImporBeanSwingJInternalFrame) ((TipoTerminosImporDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoterminosimporBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoTerminosImpor(tipoterminosimporBeanSwingJInternalFrameLocal.gettipoterminosimpor(),true);
				tipoterminosimporBeanSwingJInternalFrameLocal.actualizarLista(tipoterminosimporBeanSwingJInternalFrameLocal.tipoterminosimpor,this.tipoterminosimporsForeignKey);

				tipoterminosimporBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoterminosimporBeanSwingJInternalFrameLocal.tipoterminosimpor);

				pedidocompraimporLocal.setTipoTerminosImpor(tipoterminosimporBeanSwingJInternalFrameLocal.tipoterminosimpor);

				this.addItemDefectoCombosForeignKeyTipoTerminosImpor();
				this.cargarCombosFrameTipoTerminosImporsForeignKey("Formulario");
				this.setActualTipoTerminosImporForeignKey(tipoterminosimporBeanSwingJInternalFrameLocal.tipoterminosimpor.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoPedidoCompraDetalleFormJInternalFrame.class)) {
				EstadoPedidoCompraBeanSwingJInternalFrame estadopedidocompraBeanSwingJInternalFrameLocal=(EstadoPedidoCompraBeanSwingJInternalFrame) ((EstadoPedidoCompraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadopedidocompraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoPedidoCompra(estadopedidocompraBeanSwingJInternalFrameLocal.getestadopedidocompra(),true);
				estadopedidocompraBeanSwingJInternalFrameLocal.actualizarLista(estadopedidocompraBeanSwingJInternalFrameLocal.estadopedidocompra,this.estadopedidocomprasForeignKey);

				estadopedidocompraBeanSwingJInternalFrameLocal.actualizarRelaciones(estadopedidocompraBeanSwingJInternalFrameLocal.estadopedidocompra);

				pedidocompraimporLocal.setEstadoPedidoCompra(estadopedidocompraBeanSwingJInternalFrameLocal.estadopedidocompra);

				this.addItemDefectoCombosForeignKeyEstadoPedidoCompra();
				this.cargarCombosFrameEstadoPedidoComprasForeignKey("Formulario");
				this.setActualEstadoPedidoCompraForeignKey(estadopedidocompraBeanSwingJInternalFrameLocal.estadopedidocompra.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoBeanSwingJInternalFrameLocal.getformato(),true);
				formatoBeanSwingJInternalFrameLocal.actualizarLista(formatoBeanSwingJInternalFrameLocal.formato,this.formatosForeignKey);

				formatoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoBeanSwingJInternalFrameLocal.formato);

				pedidocompraimporLocal.setFormato(formatoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey("Formulario");
				this.setActualFormatoForeignKey(formatoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				pedidocompraimporLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				pedidocompraimporLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarPedidoCompraImporActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = pedidocompraimporValidator.getInvalidValues(this.pedidocompraimpor);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(PedidoCompraImpor pedidocompraimpor,List<PedidoCompraImpor> pedidocompraimpors) throws Exception {
		try	{		
			PedidoCompraImporConstantesFunciones.actualizarLista(pedidocompraimpor,pedidocompraimpors,this.pedidocompraimporSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(PedidoCompraImpor pedidocompraimpor,List<PedidoCompraImpor> pedidocompraimpors) throws Exception {
		try	{			
			PedidoCompraImporConstantesFunciones.actualizarSelectedLista(pedidocompraimpor,pedidocompraimpors);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<PedidoCompraImpor> pedidocompraimporsLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				pedidocompraimporsLocal=this.pedidocompraimporLogic.getPedidoCompraImpors();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				pedidocompraimporsLocal=this.pedidocompraimpors;
			}
			//ARCHITECTURE
		
			for(PedidoCompraImpor pedidocompraimporLocal:pedidocompraimporsLocal) {
				if(this.permiteMantenimiento(pedidocompraimporLocal) && pedidocompraimporLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+PedidoCompraImporConstantesFunciones.getPedidoCompraImporLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_empresaPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_sucursalPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_moduloPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_ejercicioPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_periodoPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDPAIS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_paisPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_clientePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDCLIENTEPROVEEDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_cliente_proveedorPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_empleadoPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_usuarioPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDTIPOCAMBIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_tipo_cambioPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_monedaPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDTIPOPRORRATEOIMPOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_tipo_prorrateo_imporPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDEMBARCADOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_embarcadorPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDTIPOVIATRANSPORTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_tipo_via_transportePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDPUERTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_puertoPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDPUERTODESTINO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_puerto_destinoPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDTIPOTERMINOSIMPOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_tipo_terminos_imporPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDESTADOPEDIDOCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_estado_pedido_compraPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.FORMAPAGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelforma_pagoPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.NUMERODUI)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelnumero_duiPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.SECUENCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelsecuencialPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.NUMEROORDEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelnumero_ordenPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.USOEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabeluso_enPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.RESPONSABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelresponsablePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.ORDENCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelorden_compraPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.LUGARENTREGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabellugar_entregaPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabeldescripcionPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfechaPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfecha_emisionPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.FECHAENTREGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfecha_entregaPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.FECHAENTREGACLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfecha_entrega_clientePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.NOMBRESEGURO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelnombre_seguroPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.NOMBRECONSIGNATARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelnombre_consignatarioPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.PRECIOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelpreciosPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.FLETE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfletePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.SEGURO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelseguroPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.GASTOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelgastosPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.CFR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelcfrPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.CIF)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelcifPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabeltotalPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDFORMATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_formatoPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_anioPedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraImporConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_mesPedidoCompraImpor,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_empresaPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_sucursalPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_moduloPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_ejercicioPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_periodoPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_paisPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_clientePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_cliente_proveedorPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_empleadoPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_usuarioPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_tipo_cambioPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_monedaPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_tipo_prorrateo_imporPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_embarcadorPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_tipo_via_transportePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_puertoPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_puerto_destinoPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_tipo_terminos_imporPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_estado_pedido_compraPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelforma_pagoPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelnumero_duiPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelsecuencialPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelnumero_ordenPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabeluso_enPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelresponsablePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelorden_compraPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabellugar_entregaPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabeldescripcionPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfechaPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfecha_emisionPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfecha_entregaPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfecha_entrega_clientePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelnombre_seguroPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelnombre_consignatarioPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelpreciosPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfletePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelseguroPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelgastosPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelcfrPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelcifPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabeltotalPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_formatoPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_anioPedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelid_mesPedidoCompraImpor,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("DetallePedidoCompraImpor")) {
			if(this.pedidocompraimpor==null) {
				this.pedidocompraimpor= new PedidoCompraImpor();
			}

			if(this.pedidocompraimporSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoPedidoCompraImpor
				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.getdetallepedidocompraimpor().setPedidoCompraImpor(this.pedidocompraimpor);
			}

			return;
		}
		 else  if(sTipo.equals("LiquidacionImpuestoImpor")) {
			if(this.pedidocompraimpor==null) {
				this.pedidocompraimpor= new PedidoCompraImpor();
			}

			if(this.pedidocompraimporSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoPedidoCompraImpor
				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.getliquidacionimpuestoimpor().setPedidoCompraImpor(this.pedidocompraimpor);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoPedidoCompraImpor--;	
		
		
		this.pedidocompraimporAux=new PedidoCompraImpor();
		
		this.pedidocompraimporAux.setId(this.iIdNuevoPedidoCompraImpor);
		this.pedidocompraimporAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.pedidocompraimporLogic.getPedidoCompraImpors().add(this.pedidocompraimporAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.pedidocompraimpors.add(this.pedidocompraimporAux);
		}
		//ARCHITECTURE
		
		this.pedidocompraimpor=this.pedidocompraimporAux;
		
		if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioPedidoCompraImpor(this.pedidocompraimpor);
			this.setVariablesObjetoActualToFormularioForeignKeyPedidoCompraImpor(this.pedidocompraimpor);
		}
				
		//this.setDefaultControlesPedidoCompraImpor();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyPedidoCompraImpor();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyPedidoCompraImpor();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyPedidoCompraImpor();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualPedidoCompraImpor(this.pedidocompraimporBean,this.pedidocompraimpor,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(PedidoCompraImporConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.pedidocompraimporSessionBean.getConGuardarRelaciones()) {
			classes=PedidoCompraImporConstantesFunciones.getClassesRelationshipsOfPedidoCompraImpor(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.pedidocompraimporReturnGeneral=pedidocompraimporLogic.procesarEventosPedidoCompraImporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pedidocompraimporLogic.getPedidoCompraImpors(),this.pedidocompraimpor,this.pedidocompraimporParameterGeneral,this.isEsNuevoPedidoCompraImpor,classes);//this.pedidocompraimporLogic.getPedidoCompraImpor()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanPedidoCompraImpor(this.pedidocompraimporReturnGeneral,this.pedidocompraimporBean,false);
		
		if(this.pedidocompraimporReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyPedidoCompraImpor(this.pedidocompraimporReturnGeneral.getPedidoCompraImpor());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioPedidoCompraImpor(this.pedidocompraimporReturnGeneral.getPedidoCompraImpor());
		}
		
		if(this.pedidocompraimporReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioPedidoCompraImpor(this.pedidocompraimporReturnGeneral.getPedidoCompraImpor(),classes);//this.pedidocompraimporBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyPedidoCompraImpor();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyPedidoCompraImpor();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.RecargarFormPedidoCompraImpor(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingPedidoCompraImpor(false);
						
			if(pedidocompraimporSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporSessionBean.getEsGuardarRelacionado() && DetallePedidoCompraImporJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetallePedidoCompraImporActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporSessionBean.getEsGuardarRelacionado() && LiquidacionImpuestoImporJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonLiquidacionImpuestoImporActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPedidoCompraImpor();
			}
			
			this.actualizarVisualTableDatosPedidoCompraImpor();
			
			this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(this.getIndiceNuevoPedidoCompraImpor(), this.getIndiceNuevoPedidoCompraImpor());
			
			this.seleccionarFilaTablaPedidoCompraImporActual();
						
			this.actualizarEstadoCeldasBotonesPedidoCompraImpor("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesPedidoCompraImpor(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldforma_pagoPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarforma_pagoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_duiPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarnumero_duiPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldsecuencialPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarsecuencialPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_ordenPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarnumero_ordenPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFielduso_enPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activaruso_enPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextArearesponsablePedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarresponsablePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldorden_compraPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarorden_compraPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldlugar_entregaPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarlugar_entregaPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextAreadescripcionPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activardescripcionPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfechaPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarfechaPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_emisionPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarfecha_emisionPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entregaPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarfecha_entregaPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entrega_clientePedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarfecha_entrega_clientePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_seguroPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarnombre_seguroPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_consignatarioPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarnombre_consignatarioPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldpreciosPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarpreciosPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldfletePedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarfletePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldseguroPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarseguroPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldgastosPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activargastosPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcfrPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarcfrPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcifPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarcifPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldtotalPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activartotalPedidoCompraImpor);	
		//
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_empresaPedidoCompraImpor);//
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_sucursalPedidoCompraImpor);//
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_moduloPedidoCompraImpor);//
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_ejercicioPedidoCompraImpor);//
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_periodoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_paisPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_clientePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_cliente_proveedorPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_empleadoPedidoCompraImpor);//
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_usuarioPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_tipo_cambioPedidoCompraImpor);//
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_monedaPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_tipo_prorrateo_imporPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_embarcadorPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_tipo_via_transportePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_puertoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_puerto_destinoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_tipo_terminos_imporPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_estado_pedido_compraPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_formatoPedidoCompraImpor);//
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_anioPedidoCompraImpor);//
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor.setEnabled(isHabilitar && this.pedidocompraimporConstantesFunciones.activarid_mesPedidoCompraImpor);
	};
	
	public void setDefaultControlesPedidoCompraImpor() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoPedidoCompraImpor(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.pedidocompraimporSessionBean.setConGuardarRelaciones(true);			
			this.pedidocompraimporSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTabbedPaneRelacionesPedidoCompraImpor.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.pedidocompraimporSessionBean.setConGuardarRelaciones(false);			
			this.pedidocompraimporSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTabbedPaneRelacionesPedidoCompraImpor.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoPedidoCompraImpor() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoCompraImpor pedidocompraimporAux:this.pedidocompraimporLogic.getPedidoCompraImpors()) {
				if(pedidocompraimporAux.getId().equals(this.iIdNuevoPedidoCompraImpor)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoCompraImpor pedidocompraimporAux:this.pedidocompraimpors) {
				if(pedidocompraimporAux.getId().equals(this.iIdNuevoPedidoCompraImpor)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoCompraImpor pedidocompraimporAux:this.pedidocompraimporLogic.getPedidoCompraImpors()) {
				if(pedidocompraimporAux.getId().equals(pedidocompraimpor.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoCompraImpor pedidocompraimporAux:this.pedidocompraimpors) {
				if(pedidocompraimporAux.getId().equals(pedidocompraimpor.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalPedidoCompraImpor(PedidoCompraImpor pedidocompraimporOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoCompraImpor pedidocompraimporAux:this.pedidocompraimporLogic.getPedidoCompraImpors()) {
				if(pedidocompraimporAux.getPedidoCompraImporOriginal().getId().equals(pedidocompraimporOriginal.getId())) {
					existe=true;
					pedidocompraimporOriginal.setId(pedidocompraimporAux.getId());
					pedidocompraimporOriginal.setVersionRow(pedidocompraimporAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoCompraImpor pedidocompraimporAux:this.pedidocompraimpors) {
				if(pedidocompraimporAux.getPedidoCompraImporOriginal().getId().equals(pedidocompraimporOriginal.getId())) {
					existe=true;
					pedidocompraimporOriginal.setId(pedidocompraimporAux.getId());
					pedidocompraimporOriginal.setVersionRow(pedidocompraimporAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosPedidoCompraImpor(Boolean esParaCancelar) throws Exception {
		pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
		pedidocompraimporAux=new PedidoCompraImpor();
		
		if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(PedidoCompraImpor pedidocompraimporAux:this.pedidocompraimporLogic.getPedidoCompraImpors()) {
					if(pedidocompraimporAux.getId()<0) {
						pedidocompraimporsAux.add(pedidocompraimporAux);
					}		
				}
				this.iIdNuevoPedidoCompraImpor=0L;
				this.pedidocompraimporLogic.getPedidoCompraImpors().removeAll(pedidocompraimporsAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PedidoCompraImpor pedidocompraimporAux:this.pedidocompraimpors) {
					if(pedidocompraimporAux.getId()<0) {
						pedidocompraimporsAux.add(pedidocompraimporAux);
					}		
				}
				this.iIdNuevoPedidoCompraImpor=0L;
				this.pedidocompraimpors.removeAll(pedidocompraimporsAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoPedidoCompraImpor 
					&& this.pedidocompraimporLogic.getPedidoCompraImpors().size()>0
					) {
					pedidocompraimporAux=this.pedidocompraimporLogic.getPedidoCompraImpors().get(this.pedidocompraimporLogic.getPedidoCompraImpors().size() - 1);
				
					if(pedidocompraimporAux.getId()<0) {
						this.pedidocompraimporLogic.getPedidoCompraImpors().remove(pedidocompraimporAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoPedidoCompraImpor && this.pedidocompraimpors.size()>0) {
					pedidocompraimporAux=this.pedidocompraimpors.get(this.pedidocompraimpors.size() - 1);
				
					if(pedidocompraimporAux.getId()<0) {
						this.pedidocompraimpors.remove(pedidocompraimporAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoPedidoCompraImpor(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(pedidocompraimpor.getId()<0) {
				this.pedidocompraimporLogic.getPedidoCompraImpors().remove(this.pedidocompraimpor);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(pedidocompraimpor.getId()<0) {
				this.pedidocompraimpors.remove(this.pedidocompraimpor);
			}
		}			
	}
	
	public void setEstadosInicialesPedidoCompraImpor(List<PedidoCompraImpor> pedidocompraimporsAux) throws Exception {
		PedidoCompraImporConstantesFunciones.setEstadosInicialesPedidoCompraImpor(pedidocompraimporsAux);
	}
	
	public void setEstadosInicialesPedidoCompraImpor(PedidoCompraImpor pedidocompraimporAux) throws Exception {
		PedidoCompraImporConstantesFunciones.setEstadosInicialesPedidoCompraImpor(pedidocompraimporAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarPedidoCompraImporActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesPedidoCompraImpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarPedidoCompraImporActual()) {
				if(!this.isEsNuevoPedidoCompraImpor) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesPedidoCompraImpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoPedidoCompraImpor=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarPedidoCompraImporActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Pedido Compra ?", "MANTENIMIENTO DE Pedido Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesPedidoCompraImpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(PedidoCompraImpor pedidocompraimpor) throws Exception {
		PedidoCompraImporConstantesFunciones.seleccionarAsignar(this.pedidocompraimpor,pedidocompraimpor);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarPedidoCompraImpor=this.isPermisoActualizarOriginalPedidoCompraImpor;
			
			
			this.seleccionarAsignar(pedidocompraimpor);
			
			

			idClienteActual=pedidocompraimpor.getid_cliente();
			this.seleccionarClienteActual();

			idClienteProveedorActual=pedidocompraimpor.getid_cliente_proveedor();
			this.seleccionarClienteProveedorActual();

			idEmpleadoActual=pedidocompraimpor.getid_empleado();
			this.seleccionarEmpleadoActual();

			idTipoCambioActual=pedidocompraimpor.getid_tipo_cambio();
			this.seleccionarTipoCambioActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			PedidoCompraImporConstantesFunciones.quitarEspaciosPedidoCompraImpor(this.pedidocompraimpor,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesPedidoCompraImpor("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.pedidocompraimporSessionBean.setsFuncionBusquedaRapida(this.pedidocompraimporSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarClienteProveedorActual() throws Exception {
		try	{
			Cliente clienteproveedorAux=new Cliente();

			if(this.idClienteProveedorActual != null && this.idClienteProveedorActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteproveedorLogic.getEntityWithConnection(this.idClienteProveedorActual);
					clienteproveedorAux= clienteproveedorLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clienteproveedorsForeignKey=new ArrayList<Cliente>();
				clienteproveedorsForeignKey.add(clienteproveedorAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarEmpleadoActual() throws Exception {
		try	{
			Empleado empleadoAux=new Empleado();

			if(this.idEmpleadoActual != null && this.idEmpleadoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(this.idEmpleadoActual);
					empleadoAux= empleadoLogic.getEmpleado();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				empleadosForeignKey=new ArrayList<Empleado>();
				empleadosForeignKey.add(empleadoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarTipoCambioActual() throws Exception {
		try	{
			TipoCambio tipocambioAux=new TipoCambio();

			if(this.idTipoCambioActual != null && this.idTipoCambioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(this.idTipoCambioActual);
					tipocambioAux= tipocambioLogic.getTipoCambio();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				tipocambiosForeignKey=new ArrayList<TipoCambio>();
				tipocambiosForeignKey.add(tipocambioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoPedidoCompraImpor) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosPedidoCompraImpor(esParaCancelar);				
				this.cancelarNuevoPedidoCompraImpor(esParaCancelar);								
			}
			
			this.pedidocompraimpor=new PedidoCompraImpor();
			
			this.inicializarPedidoCompraImpor();
			
			this.actualizarEstadoCeldasBotonesPedidoCompraImpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarPedidoCompraImpor() throws Exception {
		try {
			PedidoCompraImporConstantesFunciones.inicializarPedidoCompraImpor(this.pedidocompraimpor);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.pedidocompraimporLogic.getPedidoCompraImpors().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReportePedidoCompraImpors(String sAccionBusqueda,List<PedidoCompraImpor> pedidocompraimporsParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="PedidoCompraImpor"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="PedidoCompraImporMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("PedidoCompraImporMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="PedidoCompraImpor"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Pedido Compras");		
		parameters.put("busquedapor", PedidoCompraImporConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(DetallePedidoCompraImpor.class));
			classes.add(new Classe(LiquidacionImpuestoImpor.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					PedidoCompraImporLogic pedidocompraimporLogicAuxiliar=new PedidoCompraImporLogic();
					pedidocompraimporLogicAuxiliar.setDatosCliente(pedidocompraimporLogic.getDatosCliente());				
					pedidocompraimporLogicAuxiliar.setPedidoCompraImpors(pedidocompraimporsParaReportes);
					
					pedidocompraimporLogicAuxiliar.cargarRelacionesLoteForeignKeyPedidoCompraImporWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					pedidocompraimporsParaReportes=pedidocompraimporLogicAuxiliar.getPedidoCompraImpors();
					
					//pedidocompraimporLogic.getNewConnexionToDeep();
					
					//for (PedidoCompraImpor pedidocompraimpor:pedidocompraimporsParaReportes) {
					//	pedidocompraimporLogic.deepLoad(pedidocompraimpor, false, DeepLoadType.INCLUDE, classes);
					//}						
					//pedidocompraimporLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//pedidocompraimporLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileDetallePedidoCompraImpor = AuxiliarReportes.class.getResourceAsStream("DetallePedidoCompraImporDetalleRelacionesDesign.jasper");
			parameters.put("subreport_detallepedidocompraimpor", reportFileDetallePedidoCompraImpor);

			InputStream reportFileLiquidacionImpuestoImpor = AuxiliarReportes.class.getResourceAsStream("LiquidacionImpuestoImporDetalleRelacionesDesign.jasper");
			parameters.put("subreport_liquidacionimpuestoimpor", reportFileLiquidacionImpuestoImpor);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourcePedidoCompraImpor=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			PedidoCompraImporConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			PedidoCompraImporConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourcePedidoCompraImpor=new JRBeanArrayDataSource(PedidoCompraImporJInternalFrame.TraerPedidoCompraImporBeans(pedidocompraimporsParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourcePedidoCompraImpor);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+PedidoCompraImporConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+PedidoCompraImporConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(PedidoCompraImporBean.TraerPedidoCompraImporBeans(pedidocompraimporsParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReportePedidoCompraImpors(sAccionBusqueda,sTipoArchivoReporte,pedidocompraimporsParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalPedidoCompraImpors(sAccionBusqueda,sTipoArchivoReporte,pedidocompraimporsParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoPedidoCompraImporActionPerformed(null);
					//this.generarExcelReportePedidoCompraImpors(sAccionBusqueda,sTipoArchivoReporte,pedidocompraimporsParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalPedidoCompraImpors(sAccionBusqueda,sTipoArchivoReporte,pedidocompraimporsParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesPedidoCompraImpors(sAccionBusqueda,sTipoArchivoReporte,pedidocompraimporsParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesPedidoCompraImpors(sAccionBusqueda,sTipoArchivoReporte,pedidocompraimporsParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReportePedidoCompraImpors(String sAccionBusqueda,String sTipoArchivoReporte,List<PedidoCompraImpor> pedidocompraimporsParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidocompraimpor";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PedidoCompraImpors");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderPedidoCompraImpor("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(PedidoCompraImpor pedidocompraimpor : pedidocompraimporsParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			PedidoCompraImporConstantesFunciones.generarExcelReporteDataPedidoCompraImpor("NORMAL",row,workbook,pedidocompraimpor,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderPedidoCompraImpor(String sTipo,Row row,Workbook workbook) {
		
		PedidoCompraImporConstantesFunciones.generarExcelReporteHeaderPedidoCompraImpor(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalPedidoCompraImpors(String sAccionBusqueda,String sTipoArchivoReporte,List<PedidoCompraImpor> pedidocompraimporsParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidocompraimpor_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PedidoCompraImpors");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(PedidoCompraImpor pedidocompraimpor : pedidocompraimporsParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(PedidoCompraImporConstantesFunciones.getPedidoCompraImporDescripcion(pedidocompraimpor));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDPAIS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDPAIS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getpais_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTEPROVEEDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTEPROVEEDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getclienteproveedor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getusuario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOCAMBIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOCAMBIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.gettipocambio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOPRORRATEOIMPOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOPRORRATEOIMPOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.gettipoprorrateoimpor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDEMBARCADOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDEMBARCADOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getembarcador_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.gettipoviatransporte_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDPUERTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDPUERTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getpuerto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDPUERTODESTINO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDPUERTODESTINO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getpuertodestino_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOTERMINOSIMPOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOTERMINOSIMPOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.gettipoterminosimpor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getestadopedidocompra_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getforma_pago());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getnumero_dui());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getsecuencial());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getnumero_orden());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_USOEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_USOEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getuso_en());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getresponsable());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getorden_compra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getlugar_entrega());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getfecha_entrega());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getfecha_entrega_cliente());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getnombre_seguro());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getnombre_consignatario());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_PRECIOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_PRECIOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getprecios());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_FLETE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FLETE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getflete());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_SEGURO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_SEGURO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getseguro());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_GASTOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_GASTOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getgastos());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_CFR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_CFR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getcfr());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_CIF))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_CIF);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getcif());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDFORMATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDFORMATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getformato_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraImporConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompraimpor.getmes_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesPedidoCompraImpors(String sAccionBusqueda,String sTipoArchivoReporte,List<PedidoCompraImpor> pedidocompraimporsParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<PedidoCompraImpor> pedidocompraimporsRespaldo=null;
		
		classes=PedidoCompraImporConstantesFunciones.getClassesRelationshipsOfPedidoCompraImpor(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.pedidocompraimporLogic.setDatosCliente(this.datosCliente);
		this.pedidocompraimporLogic.setDatosDeep(this.datosDeep);
		this.pedidocompraimporLogic.setIsConDeep(true);
		
		pedidocompraimporsRespaldo=this.pedidocompraimporLogic.getPedidoCompraImpors();
		
		this.pedidocompraimporLogic.setPedidoCompraImpors(pedidocompraimporsParaReportes);	
		this.pedidocompraimporLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		pedidocompraimporsParaReportes=this.pedidocompraimporLogic.getPedidoCompraImpors();
		this.pedidocompraimporLogic.setPedidoCompraImpors(pedidocompraimporsRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidocompraimpor_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PedidoCompraImpors");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderPedidoCompraImpor("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(PedidoCompraImpor pedidocompraimpor : pedidocompraimporsParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderPedidoCompraImpor("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			PedidoCompraImporConstantesFunciones.generarExcelReporteDataPedidoCompraImpor("NORMAL",row,workbook,pedidocompraimpor,cellStyleDataAux);
		
			
			


				//DetallePedidoCompraImpor
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DetallePedidoCompraImporConstantesFunciones.SCLASSWEBTITULO))) {

				if(pedidocompraimpor.getDetallePedidoCompraImpors()!=null && pedidocompraimpor.getDetallePedidoCompraImpors().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DetallePedidoCompraImporConstantesFunciones.generarExcelReporteHeaderDetallePedidoCompraImpor("RELACIONADO",row,workbook);
				}

				if(pedidocompraimpor.getDetallePedidoCompraImpors()!=null) {
					i2=0;
					for(DetallePedidoCompraImpor detallepedidocompraimpor : pedidocompraimpor.getDetallePedidoCompraImpors()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DetallePedidoCompraImporConstantesFunciones.generarExcelReporteDataDetallePedidoCompraImpor("RELACIONADO",row,workbook,detallepedidocompraimpor,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//LiquidacionImpuestoImpor
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(LiquidacionImpuestoImporConstantesFunciones.SCLASSWEBTITULO))) {

				if(pedidocompraimpor.getLiquidacionImpuestoImpors()!=null && pedidocompraimpor.getLiquidacionImpuestoImpors().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(LiquidacionImpuestoImporConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					LiquidacionImpuestoImporConstantesFunciones.generarExcelReporteHeaderLiquidacionImpuestoImpor("RELACIONADO",row,workbook);
				}

				if(pedidocompraimpor.getLiquidacionImpuestoImpors()!=null) {
					i2=0;
					for(LiquidacionImpuestoImpor liquidacionimpuestoimpor : pedidocompraimpor.getLiquidacionImpuestoImpors()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						LiquidacionImpuestoImporConstantesFunciones.generarExcelReporteDataLiquidacionImpuestoImpor("RELACIONADO",row,workbook,liquidacionimpuestoimpor,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(PedidoCompraImporConstantesFunciones.getPedidoCompraImporDescripcion(pedidocompraimpor));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessPedidoCompraImpor() throws Exception {		
		this.startProcessPedidoCompraImpor(true);
	}
	
	public void startProcessPedidoCompraImpor(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasPedidoCompraImpor ,this.jPanelParametrosReportesPedidoCompraImpor, this.jScrollPanelDatosPedidoCompraImpor,this.jPanelPaginacionPedidoCompraImpor, this.jScrollPanelDatosEdicionPedidoCompraImpor, this.jPanelAccionesPedidoCompraImpor,this.jPanelAccionesFormularioPedidoCompraImpor,this.jmenuBarPedidoCompraImpor,this.jmenuBarDetallePedidoCompraImpor,this.jTtoolBarPedidoCompraImpor,this.jTtoolBarDetallePedidoCompraImpor);		
		
		final JTabbedPane jTabbedPaneBusquedasPedidoCompraImpor=this.jTabbedPaneBusquedasPedidoCompraImpor; 
		
		final JPanel jPanelParametrosReportesPedidoCompraImpor=this.jPanelParametrosReportesPedidoCompraImpor;
		//final JScrollPane jScrollPanelDatosPedidoCompraImpor=this.jScrollPanelDatosPedidoCompraImpor;
		final JTable jTableDatosPedidoCompraImpor=this.jTableDatosPedidoCompraImpor;		
		final JPanel jPanelPaginacionPedidoCompraImpor=this.jPanelPaginacionPedidoCompraImpor;
		//final JScrollPane jScrollPanelDatosEdicionPedidoCompraImpor=this.jScrollPanelDatosEdicionPedidoCompraImpor;
		final JPanel jPanelAccionesPedidoCompraImpor=this.jPanelAccionesPedidoCompraImpor;
		
		JPanel jPanelCamposAuxiliarPedidoCompraImpor=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarPedidoCompraImpor=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
			jPanelCamposAuxiliarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelCamposPedidoCompraImpor;
			jPanelAccionesFormularioAuxiliarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelAccionesFormularioPedidoCompraImpor;
		}
		
		final JPanel jPanelCamposPedidoCompraImpor=jPanelCamposAuxiliarPedidoCompraImpor;
		final JPanel jPanelAccionesFormularioPedidoCompraImpor=jPanelAccionesFormularioAuxiliarPedidoCompraImpor;
		
		
		final JMenuBar jmenuBarPedidoCompraImpor=this.jmenuBarPedidoCompraImpor;
		final JToolBar jTtoolBarPedidoCompraImpor=this.jTtoolBarPedidoCompraImpor;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarPedidoCompraImpor=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarPedidoCompraImpor=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
			jmenuBarDetalleAuxiliarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jmenuBarDetallePedidoCompraImpor;
			jTtoolBarDetalleAuxiliarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jTtoolBarDetallePedidoCompraImpor;
		}
		
		final JMenuBar jmenuBarDetallePedidoCompraImpor=jmenuBarDetalleAuxiliarPedidoCompraImpor;
		final JToolBar jTtoolBarDetallePedidoCompraImpor=jTtoolBarDetalleAuxiliarPedidoCompraImpor;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasPedidoCompraImpor;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesPedidoCompraImpor;
			processRunnable.jTableDatos=jTableDatosPedidoCompraImpor;
			processRunnable.jPanelCampos=jPanelCamposPedidoCompraImpor;
			processRunnable.jPanelPaginacion=jPanelPaginacionPedidoCompraImpor;
			processRunnable.jPanelAcciones=jPanelAccionesPedidoCompraImpor;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioPedidoCompraImpor;
			
			
			processRunnable.jmenuBar=jmenuBarPedidoCompraImpor;
			processRunnable.jmenuBarDetalle=jmenuBarDetallePedidoCompraImpor;
			processRunnable.jTtoolBar=jTtoolBarPedidoCompraImpor;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetallePedidoCompraImpor;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasPedidoCompraImpor ,jPanelParametrosReportesPedidoCompraImpor,jTableDatosPedidoCompraImpor, /*jScrollPanelDatosPedidoCompraImpor,*/jPanelCamposPedidoCompraImpor,jPanelPaginacionPedidoCompraImpor, /*jScrollPanelDatosEdicionPedidoCompraImpor,*/ jPanelAccionesPedidoCompraImpor,jPanelAccionesFormularioPedidoCompraImpor,jmenuBarPedidoCompraImpor,jmenuBarDetallePedidoCompraImpor,jTtoolBarPedidoCompraImpor,jTtoolBarDetallePedidoCompraImpor);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasPedidoCompraImpor ,jPanelParametrosReportesPedidoCompraImpor, jScrollPanelDatosPedidoCompraImpor,jPanelPaginacionPedidoCompraImpor, jScrollPanelDatosEdicionPedidoCompraImpor, jPanelAccionesPedidoCompraImpor,jPanelAccionesFormularioPedidoCompraImpor,jmenuBarPedidoCompraImpor,jmenuBarDetallePedidoCompraImpor,jTtoolBarPedidoCompraImpor,jTtoolBarDetallePedidoCompraImpor);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessPedidoCompraImpor() {// throws Exception 
		this.finishProcessPedidoCompraImpor(true);
	}
	
	public void finishProcessPedidoCompraImpor(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasPedidoCompraImpor ,this.jPanelParametrosReportesPedidoCompraImpor, this.jScrollPanelDatosPedidoCompraImpor,this.jPanelPaginacionPedidoCompraImpor, this.jScrollPanelDatosEdicionPedidoCompraImpor, this.jPanelAccionesPedidoCompraImpor,this.jPanelAccionesFormularioPedidoCompraImpor,this.jmenuBarPedidoCompraImpor,this.jmenuBarDetallePedidoCompraImpor,this.jTtoolBarPedidoCompraImpor,this.jTtoolBarDetallePedidoCompraImpor);		
		
		final JTabbedPane jTabbedPaneBusquedasPedidoCompraImpor=this.jTabbedPaneBusquedasPedidoCompraImpor; 
		
		final JPanel jPanelParametrosReportesPedidoCompraImpor=this.jPanelParametrosReportesPedidoCompraImpor;
		//final JScrollPane jScrollPanelDatosPedidoCompraImpor=this.jScrollPanelDatosPedidoCompraImpor;
		final JTable jTableDatosPedidoCompraImpor=this.jTableDatosPedidoCompraImpor;		
		final JPanel jPanelPaginacionPedidoCompraImpor=this.jPanelPaginacionPedidoCompraImpor;
		//final JScrollPane jScrollPanelDatosEdicionPedidoCompraImpor=this.jScrollPanelDatosEdicionPedidoCompraImpor;
		final JPanel jPanelAccionesPedidoCompraImpor=this.jPanelAccionesPedidoCompraImpor;
		
		JPanel jPanelCamposAuxiliarPedidoCompraImpor=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarPedidoCompraImpor=new JPanel();
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
			jPanelCamposAuxiliarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelCamposPedidoCompraImpor;
			jPanelAccionesFormularioAuxiliarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelAccionesFormularioPedidoCompraImpor;
		}
		
		final JPanel jPanelCamposPedidoCompraImpor=jPanelCamposAuxiliarPedidoCompraImpor;
		final JPanel jPanelAccionesFormularioPedidoCompraImpor=jPanelAccionesFormularioAuxiliarPedidoCompraImpor;
		
		
		final JMenuBar jmenuBarPedidoCompraImpor=this.jmenuBarPedidoCompraImpor;		
		final JToolBar jTtoolBarPedidoCompraImpor=this.jTtoolBarPedidoCompraImpor;
				
		JMenuBar jmenuBarDetalleAuxiliarPedidoCompraImpor=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarPedidoCompraImpor=new JToolBar();
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
			jmenuBarDetalleAuxiliarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jmenuBarDetallePedidoCompraImpor;
			jTtoolBarDetalleAuxiliarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jTtoolBarDetallePedidoCompraImpor;		
		}
		
		final JMenuBar jmenuBarDetallePedidoCompraImpor=jmenuBarDetalleAuxiliarPedidoCompraImpor;
		final JToolBar jTtoolBarDetallePedidoCompraImpor=jTtoolBarDetalleAuxiliarPedidoCompraImpor;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasPedidoCompraImpor;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesPedidoCompraImpor;
			processRunnable.jTableDatos=jTableDatosPedidoCompraImpor;
			processRunnable.jPanelCampos=jPanelCamposPedidoCompraImpor;
			processRunnable.jPanelPaginacion=jPanelPaginacionPedidoCompraImpor;
			processRunnable.jPanelAcciones=jPanelAccionesPedidoCompraImpor;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioPedidoCompraImpor;
			
			
			processRunnable.jmenuBar=jmenuBarPedidoCompraImpor;
			processRunnable.jmenuBarDetalle=jmenuBarDetallePedidoCompraImpor;
			processRunnable.jTtoolBar=jTtoolBarPedidoCompraImpor;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetallePedidoCompraImpor;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasPedidoCompraImpor ,jPanelParametrosReportesPedidoCompraImpor, jTableDatosPedidoCompraImpor,/*jScrollPanelDatosPedidoCompraImpor,*/jPanelCamposPedidoCompraImpor,jPanelPaginacionPedidoCompraImpor, /*jScrollPanelDatosEdicionPedidoCompraImpor,*/ jPanelAccionesPedidoCompraImpor,jPanelAccionesFormularioPedidoCompraImpor,jmenuBarPedidoCompraImpor,jmenuBarDetallePedidoCompraImpor,jTtoolBarPedidoCompraImpor,jTtoolBarDetallePedidoCompraImpor));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesPedidoCompraImpor(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarPedidoCompraImpor(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuPedidoCompraImpor(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarPedidoCompraImpor(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarPedidoCompraImpor,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetallePedidoCompraImpor,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuPedidoCompraImpor(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarPedidoCompraImpor,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetallePedidoCompraImpor,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.pedidocompraimporConstantesFunciones.getsFinalQueryPedidoCompraImpor();
		String  finalQueryPaginacionTodos=this.pedidocompraimporConstantesFunciones.getsFinalQueryPedidoCompraImpor();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=PedidoCompraImporConstantesFunciones.getArrayColumnasGlobalesNoPedidoCompraImpor(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=PedidoCompraImporConstantesFunciones.getArrayColumnasGlobalesPedidoCompraImpor(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,PedidoCompraImporConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.pedidocompraimporsEliminados= new ArrayList<PedidoCompraImpor>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessPedidoCompraImpor();
		
				///*PedidoCompraImporSessionBean*/this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			
			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=PedidoCompraImporConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=PedidoCompraImporConstantesFunciones.getClassesForeignKeysOfPedidoCompraImpor(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/pedidocompraimpor."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			pedidocompraimporsAux= new ArrayList<PedidoCompraImpor>();
			
				
			pedidocompraimporLogic.setDatosCliente(this.datosCliente);
			pedidocompraimporLogic.setDatosDeep(this.datosDeep);
			pedidocompraimporLogic.setIsConDeep(true);
			
			
			pedidocompraimporLogic.getPedidoCompraImporDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					pedidocompraimporLogic.getTodosPedidoCompraImpors(finalQueryGlobal,pagination);
					
					//pedidocompraimporLogic.getTodosPedidoCompraImporsWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(pedidocompraimporLogic.getPedidoCompraImpors()==null|| pedidocompraimporLogic.getPedidoCompraImpors().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pedidocompraimporsAux= new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux= new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pedidocompraimporLogic.getTodosPedidoCompraImpors(finalQueryGlobal+"",this.pagination);												
							
							//pedidocompraimporLogic.getTodosPedidoCompraImporsWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReportePedidoCompraImpors("Todos",pedidocompraimporLogic.getPedidoCompraImpors() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());					
							pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idPedidoCompraImpor=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idPedidoCompraImpor=this.idActual;
				
				} else if(this.idPedidoCompraImporActual!=null && this.idPedidoCompraImporActual!=0L) {
					idPedidoCompraImpor=idPedidoCompraImporActual;
				}
				
					
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndicePorId(idPedidoCompraImpor);
				
				this.pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					pedidocompraimporLogic.getEntity(idPedidoCompraImpor);
					
					//pedidocompraimporLogic.getEntityWithConnection(idPedidoCompraImpor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
					pedidocompraimporLogic.getPedidoCompraImpors().add(pedidocompraimporLogic.getPedidoCompraImpor());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
					this.pedidocompraimpors.add(pedidocompraimpor);
				}
				
				if(pedidocompraimporLogic.getPedidoCompraImpor()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdCliente",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdCliente",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdClienteProveedor")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdClienteProveedor(id_cliente_proveedorFK_IdClienteProveedor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdClienteProveedor(finalQueryGlobal,pagination,id_cliente_proveedorFK_IdClienteProveedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdClienteProveedor(id_cliente_proveedorFK_IdClienteProveedor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdClienteProveedor(id_cliente_proveedorFK_IdClienteProveedor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdClienteProveedor(finalQueryGlobal,pagination,id_cliente_proveedorFK_IdClienteProveedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdClienteProveedor(id_cliente_proveedorFK_IdClienteProveedor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdClienteProveedor(id_cliente_proveedorFK_IdClienteProveedor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdClienteProveedor",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdClienteProveedor",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdEjercicio",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdEjercicio",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmbarcador")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmbarcador(id_embarcadorFK_IdEmbarcador);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdEmbarcador(finalQueryGlobal,pagination,id_embarcadorFK_IdEmbarcador);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmbarcador(id_embarcadorFK_IdEmbarcador);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmbarcador(id_embarcadorFK_IdEmbarcador);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdEmbarcador(finalQueryGlobal,pagination,id_embarcadorFK_IdEmbarcador);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmbarcador(id_embarcadorFK_IdEmbarcador);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmbarcador(id_embarcadorFK_IdEmbarcador);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdEmbarcador",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdEmbarcador",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleado")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdEmpleado",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdEmpleado",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdEmpresa",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdEmpresa",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoPedidoCompraEstadoPedoCompra")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCompraEstadoPedoCompra(id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdEstadoPedidoCompraEstadoPedoCompra(finalQueryGlobal,pagination,id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCompraEstadoPedoCompra(id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCompraEstadoPedoCompra(id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdEstadoPedidoCompraEstadoPedoCompra(finalQueryGlobal,pagination,id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCompraEstadoPedoCompra(id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCompraEstadoPedoCompra(id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdEstadoPedidoCompraEstadoPedoCompra",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdEstadoPedidoCompraEstadoPedoCompra",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdModulo")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdModulo",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdModulo",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPais")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdPais(finalQueryGlobal,pagination,id_paisFK_IdPais);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdPais(finalQueryGlobal,pagination,id_paisFK_IdPais);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdPais",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdPais",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdPeriodo",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdPeriodo",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPuerto")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPuerto(id_puertoFK_IdPuerto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdPuerto(finalQueryGlobal,pagination,id_puertoFK_IdPuerto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPuerto(id_puertoFK_IdPuerto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPuerto(id_puertoFK_IdPuerto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdPuerto(finalQueryGlobal,pagination,id_puertoFK_IdPuerto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPuerto(id_puertoFK_IdPuerto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPuerto(id_puertoFK_IdPuerto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdPuerto",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdPuerto",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPuertoDestino")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPuertoDestino(id_puerto_destinoFK_IdPuertoDestino);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdPuertoDestino(finalQueryGlobal,pagination,id_puerto_destinoFK_IdPuertoDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPuertoDestino(id_puerto_destinoFK_IdPuertoDestino);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPuertoDestino(id_puerto_destinoFK_IdPuertoDestino);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdPuertoDestino(finalQueryGlobal,pagination,id_puerto_destinoFK_IdPuertoDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPuertoDestino(id_puerto_destinoFK_IdPuertoDestino);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPuertoDestino(id_puerto_destinoFK_IdPuertoDestino);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdPuertoDestino",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdPuertoDestino",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdSucursal",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdSucursal",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoProrrateoImpor")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoProrrateoImpor(id_tipo_prorrateo_imporFK_IdTipoProrrateoImpor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdTipoProrrateoImpor(finalQueryGlobal,pagination,id_tipo_prorrateo_imporFK_IdTipoProrrateoImpor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoProrrateoImpor(id_tipo_prorrateo_imporFK_IdTipoProrrateoImpor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoProrrateoImpor(id_tipo_prorrateo_imporFK_IdTipoProrrateoImpor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdTipoProrrateoImpor(finalQueryGlobal,pagination,id_tipo_prorrateo_imporFK_IdTipoProrrateoImpor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoProrrateoImpor(id_tipo_prorrateo_imporFK_IdTipoProrrateoImpor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoProrrateoImpor(id_tipo_prorrateo_imporFK_IdTipoProrrateoImpor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdTipoProrrateoImpor",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdTipoProrrateoImpor",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoTerminosImpor")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoTerminosImpor(id_tipo_terminos_imporFK_IdTipoTerminosImpor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdTipoTerminosImpor(finalQueryGlobal,pagination,id_tipo_terminos_imporFK_IdTipoTerminosImpor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoTerminosImpor(id_tipo_terminos_imporFK_IdTipoTerminosImpor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoTerminosImpor(id_tipo_terminos_imporFK_IdTipoTerminosImpor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdTipoTerminosImpor(finalQueryGlobal,pagination,id_tipo_terminos_imporFK_IdTipoTerminosImpor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoTerminosImpor(id_tipo_terminos_imporFK_IdTipoTerminosImpor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoTerminosImpor(id_tipo_terminos_imporFK_IdTipoTerminosImpor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdTipoTerminosImpor",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdTipoTerminosImpor",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoViaTransporte")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoViaTransporte(id_tipo_via_transporteFK_IdTipoViaTransporte);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdTipoViaTransporte(finalQueryGlobal,pagination,id_tipo_via_transporteFK_IdTipoViaTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoViaTransporte(id_tipo_via_transporteFK_IdTipoViaTransporte);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoViaTransporte(id_tipo_via_transporteFK_IdTipoViaTransporte);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdTipoViaTransporte(finalQueryGlobal,pagination,id_tipo_via_transporteFK_IdTipoViaTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoViaTransporte(id_tipo_via_transporteFK_IdTipoViaTransporte);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdTipoViaTransporte(id_tipo_via_transporteFK_IdTipoViaTransporte);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdTipoViaTransporte",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdTipoViaTransporte",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUsuario")) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraimporLogic.getPedidoCompraImporsFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors()==null||pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompraimpors==null|| pedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
						pedidocompraimporsAux.addAll(pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporsAux=new ArrayList<PedidoCompraImpor>();
							pedidocompraimporsAux.addAll(pedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraimporLogic.getPedidoCompraImporsFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompraImpors("FK_IdUsuario",pedidocompraimporLogic.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompraImpors("FK_IdUsuario",pedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporLogic.setPedidoCompraImpors(new ArrayList<PedidoCompraImpor>());
						pedidocompraimporLogic.getPedidoCompraImpors().addAll(pedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
							pedidocompraimpors.addAll(pedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesPedidoCompraImpor();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessPedidoCompraImpor();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=pedidocompraimporLogic.getPedidoCompraImpors().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=pedidocompraimpors.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=pedidocompraimporLogic.getPedidoCompraImpors().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=pedidocompraimpors.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(PedidoCompraImpor pedidocompraimpor) {
		Boolean permite=true;
		
		if(this.pedidocompraimpor.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=PedidoCompraImporConstantesFunciones.getOrderByListaPedidoCompraImpor();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=PedidoCompraImporConstantesFunciones.getOrderByListaPedidoCompraImpor();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporLogic.getPedidoCompraImpors()) {
				if(pedidocompraimpor.getsType().equals(Constantes2.S_TOTALES)) {
					pedidocompraimporTotales=pedidocompraimpor;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoCompraImpor pedidocompraimpor:this.pedidocompraimpors) {
				if(pedidocompraimpor.getsType().equals(Constantes2.S_TOTALES)) {
					pedidocompraimporTotales=pedidocompraimpor;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.pedidocompraimporAux=new PedidoCompraImpor();
			this.pedidocompraimporAux.setsType(Constantes2.S_TOTALES);
			this.pedidocompraimporAux.setIsNew(false);
			this.pedidocompraimporAux.setIsChanged(false);
			this.pedidocompraimporAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				PedidoCompraImporConstantesFunciones.TotalizarValoresFilaPedidoCompraImpor(this.pedidocompraimporLogic.getPedidoCompraImpors(),this.pedidocompraimporAux);
				
				this.pedidocompraimporLogic.getPedidoCompraImpors().add(this.pedidocompraimporAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				PedidoCompraImporConstantesFunciones.TotalizarValoresFilaPedidoCompraImpor(this.pedidocompraimpors,this.pedidocompraimporAux);
				
				this.pedidocompraimpors.add(this.pedidocompraimporAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		pedidocompraimporTotales=new PedidoCompraImpor();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.pedidocompraimporLogic.getPedidoCompraImpors().remove(pedidocompraimporTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.pedidocompraimpors.remove(pedidocompraimporTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		pedidocompraimporTotales=new PedidoCompraImpor();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporLogic.getPedidoCompraImpors()) {
				if(pedidocompraimpor.getsType().equals(Constantes2.S_TOTALES)) {
					pedidocompraimporTotales=pedidocompraimpor;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				PedidoCompraImporConstantesFunciones.TotalizarValoresFilaPedidoCompraImpor(this.pedidocompraimporLogic.getPedidoCompraImpors(),pedidocompraimporTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoCompraImpor pedidocompraimpor:this.pedidocompraimpors) {
				if(pedidocompraimpor.getsType().equals(Constantes2.S_TOTALES)) {
					pedidocompraimporTotales=pedidocompraimpor;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				PedidoCompraImporConstantesFunciones.TotalizarValoresFilaPedidoCompraImpor(this.pedidocompraimpors,pedidocompraimporTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getPedidoCompraImporsFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdClienteProveedor()throws Exception {
		try {
			sAccionBusqueda="FK_IdClienteProveedor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdEmbarcador()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmbarcador";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdEstadoPedidoCompraEstadoPedoCompra()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoPedidoCompraEstadoPedoCompra";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdFormato()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormato";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdPais()throws Exception {
		try {
			sAccionBusqueda="FK_IdPais";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdPuerto()throws Exception {
		try {
			sAccionBusqueda="FK_IdPuerto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdPuertoDestino()throws Exception {
		try {
			sAccionBusqueda="FK_IdPuertoDestino";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdTipoCambio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCambio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdTipoProrrateoImpor()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoProrrateoImpor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdTipoTerminosImpor()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoTerminosImpor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdTipoViaTransporte()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoViaTransporte";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoCompraImporsFK_IdUsuario()throws Exception {
		try {
			sAccionBusqueda="FK_IdUsuario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getPedidoCompraImporsFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdClienteProveedor(String sFinalQuery,Long id_cliente_proveedor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdClienteProveedor(sFinalQuery,this.pagination,id_cliente_proveedor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdEmbarcador(String sFinalQuery,Long id_embarcador)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdEmbarcador(sFinalQuery,this.pagination,id_embarcador);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdEstadoPedidoCompraEstadoPedoCompra(String sFinalQuery,Long id_estado_pedido_compra)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdEstadoPedidoCompraEstadoPedoCompra(sFinalQuery,this.pagination,id_estado_pedido_compra);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdFormato(String sFinalQuery,Long id_formato)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdFormato(sFinalQuery,this.pagination,id_formato);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdModulo(String sFinalQuery,Long id_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdModulo(sFinalQuery,this.pagination,id_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdPais(String sFinalQuery,Long id_pais)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdPais(sFinalQuery,this.pagination,id_pais);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdPuerto(String sFinalQuery,Long id_puerto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdPuerto(sFinalQuery,this.pagination,id_puerto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdPuertoDestino(String sFinalQuery,Long id_puerto_destino)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdPuertoDestino(sFinalQuery,this.pagination,id_puerto_destino);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdTipoCambio(String sFinalQuery,Long id_tipo_cambio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdTipoCambio(sFinalQuery,this.pagination,id_tipo_cambio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdTipoProrrateoImpor(String sFinalQuery,Long id_tipo_prorrateo_impor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdTipoProrrateoImpor(sFinalQuery,this.pagination,id_tipo_prorrateo_impor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdTipoTerminosImpor(String sFinalQuery,Long id_tipo_terminos_impor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdTipoTerminosImpor(sFinalQuery,this.pagination,id_tipo_terminos_impor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdTipoViaTransporte(String sFinalQuery,Long id_tipo_via_transporte)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdTipoViaTransporte(sFinalQuery,this.pagination,id_tipo_via_transporte);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoCompraImporsFK_IdUsuario(String sFinalQuery,Long id_usuario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporsFK_IdUsuario(sFinalQuery,this.pagination,id_usuario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosPedidoCompraImpor() {
		this.isPermisoTodoPedidoCompraImpor=false;
		this.isPermisoNuevoPedidoCompraImpor=false;
		this.isPermisoActualizarPedidoCompraImpor=false;
		this.isPermisoActualizarOriginalPedidoCompraImpor=false;
		this.isPermisoEliminarPedidoCompraImpor=false;
		this.isPermisoGuardarCambiosPedidoCompraImpor=false;
		this.isPermisoConsultaPedidoCompraImpor=false;
		this.isPermisoBusquedaPedidoCompraImpor=false;
		this.isPermisoReportePedidoCompraImpor=false;		
		this.isPermisoOrdenPedidoCompraImpor=false;		
		this.isPermisoPaginacionMedioPedidoCompraImpor=false;		
		this.isPermisoPaginacionAltoPedidoCompraImpor=false;
		this.isPermisoPaginacionTodoPedidoCompraImpor=false;
		this.isPermisoCopiarPedidoCompraImpor=false;		
		this.isPermisoVerFormPedidoCompraImpor=false;		
		this.isPermisoDuplicarPedidoCompraImpor=false;		
		this.isPermisoOrdenPedidoCompraImpor=false;		
	}
	
	public void setPermisosUsuarioPedidoCompraImpor(Boolean isPermiso) {
		this.isPermisoTodoPedidoCompraImpor=isPermiso;
		this.isPermisoNuevoPedidoCompraImpor=isPermiso;
		this.isPermisoActualizarPedidoCompraImpor=isPermiso;
		this.isPermisoActualizarOriginalPedidoCompraImpor=isPermiso;
		this.isPermisoEliminarPedidoCompraImpor=isPermiso;
		this.isPermisoGuardarCambiosPedidoCompraImpor=isPermiso;
		this.isPermisoConsultaPedidoCompraImpor=isPermiso;
		this.isPermisoBusquedaPedidoCompraImpor=isPermiso;
		this.isPermisoReportePedidoCompraImpor=isPermiso;
		this.isPermisoOrdenPedidoCompraImpor=isPermiso;		
		this.isPermisoPaginacionMedioPedidoCompraImpor=isPermiso;		
		this.isPermisoPaginacionAltoPedidoCompraImpor=isPermiso;		
		this.isPermisoPaginacionTodoPedidoCompraImpor=isPermiso;		
		this.isPermisoCopiarPedidoCompraImpor=isPermiso;		
		this.isPermisoVerFormPedidoCompraImpor=isPermiso;		
		this.isPermisoDuplicarPedidoCompraImpor=isPermiso;
		this.isPermisoOrdenPedidoCompraImpor=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioPedidoCompraImpor(Boolean isPermiso) {
		//this.isPermisoTodoPedidoCompraImpor=isPermiso;
		this.isPermisoNuevoPedidoCompraImpor=isPermiso;
		this.isPermisoActualizarPedidoCompraImpor=isPermiso;
		this.isPermisoActualizarOriginalPedidoCompraImpor=isPermiso;
		this.isPermisoEliminarPedidoCompraImpor=isPermiso;
		this.isPermisoGuardarCambiosPedidoCompraImpor=isPermiso;
		//this.isPermisoConsultaPedidoCompraImpor=isPermiso;
		//this.isPermisoBusquedaPedidoCompraImpor=isPermiso;
		//this.isPermisoReportePedidoCompraImpor=isPermiso;
		//this.isPermisoOrdenPedidoCompraImpor=isPermiso;		
		//this.isPermisoPaginacionMedioPedidoCompraImpor=isPermiso;		
		//this.isPermisoPaginacionAltoPedidoCompraImpor=isPermiso;		
		//this.isPermisoPaginacionTodoPedidoCompraImpor=isPermiso;		
		//this.isPermisoCopiarPedidoCompraImpor=isPermiso;		
		//this.isPermisoDuplicarPedidoCompraImpor=isPermiso;
		//this.isPermisoOrdenPedidoCompraImpor=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioPedidoCompraImporClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(DetallePedidoCompraImporConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(LiquidacionImpuestoImporConstantesFunciones.SNOMBREOPCION);
		
		if(PedidoCompraImporJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosDetallePedidoCompraImpor=false;
		this.isTienePermisosDetallePedidoCompraImpor=this.verificarGetPermisosUsuarioOpcionPedidoCompraImporClaseRelacionada(this.opcionsRelacionadas,DetallePedidoCompraImporConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosLiquidacionImpuestoImpor=false;
		this.isTienePermisosLiquidacionImpuestoImpor=this.verificarGetPermisosUsuarioOpcionPedidoCompraImporClaseRelacionada(this.opcionsRelacionadas,LiquidacionImpuestoImporConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioPedidoCompraImporClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosDetallePedidoCompraImpor=conPermiso;
		this.isTienePermisosLiquidacionImpuestoImpor=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioPedidoCompraImporClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionPedidoCompraImporClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioPedidoCompraImporClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosDetallePedidoCompraImpor && this.jInternalFrameDetalleFormPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTabbedPaneRelacionesPedidoCompraImpor.remove(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosLiquidacionImpuestoImpor && this.jInternalFrameDetalleFormPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTabbedPaneRelacionesPedidoCompraImpor.remove(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioPedidoCompraImpor() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(PedidoCompraImporJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, PedidoCompraImporConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoPedidoCompraImpor=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarPedidoCompraImpor=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalPedidoCompraImpor=this.isPermisoActualizarPedidoCompraImpor;
			this.isPermisoEliminarPedidoCompraImpor=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosPedidoCompraImpor=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaPedidoCompraImpor=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaPedidoCompraImpor=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoPedidoCompraImpor=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReportePedidoCompraImpor=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenPedidoCompraImpor=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioPedidoCompraImpor=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoPedidoCompraImpor=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoPedidoCompraImpor=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarPedidoCompraImpor=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormPedidoCompraImpor=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarPedidoCompraImpor=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenPedidoCompraImpor=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosPedidoCompraImpor.setToolTipText(this.jTableDatosPedidoCompraImpor.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioPedidoCompraImpor(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioPedidoCompraImpor(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(PedidoCompraImporJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(PedidoCompraImporJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioPedidoCompraImpor() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosDetallePedidoCompraImpor && this.pedidocompraimporConstantesFunciones.mostrarDetallePedidoCompraImporPedidoCompraImpor && !PedidoCompraImporConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Detalle Pedido Compra");
			reporte.setsDescripcion("Detalle Pedido Compra");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosLiquidacionImpuestoImpor && this.pedidocompraimporConstantesFunciones.mostrarLiquidacionImpuestoImporPedidoCompraImpor && !PedidoCompraImporConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Liquidacion Impuesto Impor");
			reporte.setsDescripcion("Liquidacion Impuesto Impor");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyPedidoCompraImporListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.modulosForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.paissForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.clienteproveedorsForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.usuariosForeignKey=new ArrayList();
				this.tipocambiosForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.tipoprorrateoimporsForeignKey=new ArrayList();
				this.embarcadorsForeignKey=new ArrayList();
				this.tipoviatransportesForeignKey=new ArrayList();
				this.puertosForeignKey=new ArrayList();
				this.puertodestinosForeignKey=new ArrayList();
				this.tipoterminosimporsForeignKey=new ArrayList();
				this.estadopedidocomprasForeignKey=new ArrayList();
				this.formatosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyPedidoCompraImporListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(PedidoCompraImporJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyPedidoCompraImporListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteProveedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoProrrateoImporListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmbarcadorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoViaTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPuertoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPuertoDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoTerminosImporListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoPedidoCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.paissForeignKey==null||this.paissForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PaisConstantesFunciones.SFINALQUERY;

				this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteProveedorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clienteproveedorsForeignKey==null||this.clienteproveedorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClienteProveedorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUsuarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UsuarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCambioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoProrrateoImporListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoprorrateoimporsForeignKey==null||this.tipoprorrateoimporsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoProrrateoImporConstantesFunciones.getArrayColumnasGlobalesTipoProrrateoImpor(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoProrrateoImporConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoProrrateoImporConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoProrrateoImporsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmbarcadorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.embarcadorsForeignKey==null||this.embarcadorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmbarcadorConstantesFunciones.getArrayColumnasGlobalesEmbarcador(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmbarcadorConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmbarcadorConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmbarcadorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoViaTransporteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoviatransportesForeignKey==null||this.tipoviatransportesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoViaTransporteConstantesFunciones.getArrayColumnasGlobalesTipoViaTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoViaTransporteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoViaTransporteConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoViaTransportesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPuertoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.puertosForeignKey==null||this.puertosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PuertoConstantesFunciones.getArrayColumnasGlobalesPuerto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PuertoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PuertoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPuertosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPuertoDestinoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.puertodestinosForeignKey==null||this.puertodestinosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PuertoConstantesFunciones.getArrayColumnasGlobalesPuerto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PuertoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PuertoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPuertoDestinosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTerminosImporListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoterminosimporsForeignKey==null||this.tipoterminosimporsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoTerminosImporConstantesFunciones.getArrayColumnasGlobalesTipoTerminosImpor(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoTerminosImporConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoTerminosImporConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoTerminosImporsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoCompraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadopedidocomprasForeignKey==null||this.estadopedidocomprasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoPedidoCompraConstantesFunciones.getArrayColumnasGlobalesEstadoPedidoCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoCompraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoPedidoCompraConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoPedidoComprasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyPedidoCompraImporListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			PedidoCompraImporParameterReturnGeneral pedidocompraimporReturnGeneral=new PedidoCompraImporParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_empresaPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_empresaPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_sucursalPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_sucursalPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalModulo="";

				if(((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_moduloPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_moduloPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalModulo, "");
						finalQueryGlobalModulo+=ModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalModulo=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidModuloActual();
					}
				} else {
					finalQueryGlobalModulo="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_ejercicioPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_ejercicioPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_periodoPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_periodoPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalPais="";

				if(((this.paissForeignKey==null||this.paissForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_paisPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_paisPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPais=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

						finalQueryGlobalPais=Funciones.GetFinalQueryAppend(finalQueryGlobalPais, "");
						finalQueryGlobalPais+=PaisConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPais=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidPaisActual();
					}
				} else {
					finalQueryGlobalPais="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_clientePedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_clientePedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalClienteProveedor="";

				if(((this.clienteproveedorsForeignKey==null||this.clienteproveedorsForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_cliente_proveedorPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_cliente_proveedorPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionClienteProveedor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalClienteProveedor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalClienteProveedor=Funciones.GetFinalQueryAppend(finalQueryGlobalClienteProveedor, "");
						finalQueryGlobalClienteProveedor+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClienteProveedorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalClienteProveedor=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidClienteProveedorActual();
					}
				} else {
					finalQueryGlobalClienteProveedor="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_empleadoPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_empleadoPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalUsuario="";

				if(((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_usuarioPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_usuarioPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUsuario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

						finalQueryGlobalUsuario=Funciones.GetFinalQueryAppend(finalQueryGlobalUsuario, "");
						finalQueryGlobalUsuario+=UsuarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUsuario=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidUsuarioActual();
					}
				} else {
					finalQueryGlobalUsuario="NONE";
				}


				String finalQueryGlobalTipoCambio="";

				if(((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_tipo_cambioPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_tipo_cambioPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCambio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCambio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCambio, "");
						finalQueryGlobalTipoCambio+=TipoCambioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCambio=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidTipoCambioActual();
					}
				} else {
					finalQueryGlobalTipoCambio="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_monedaPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_monedaPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalTipoProrrateoImpor="";

				if(((this.tipoprorrateoimporsForeignKey==null||this.tipoprorrateoimporsForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_tipo_prorrateo_imporPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_tipo_prorrateo_imporPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionTipoProrrateoImpor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoProrrateoImporConstantesFunciones.getArrayColumnasGlobalesTipoProrrateoImpor(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoProrrateoImpor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoProrrateoImporConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoProrrateoImpor=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoProrrateoImpor, "");
						finalQueryGlobalTipoProrrateoImpor+=TipoProrrateoImporConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoProrrateoImporsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoProrrateoImpor=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidTipoProrrateoImporActual();
					}
				} else {
					finalQueryGlobalTipoProrrateoImpor="NONE";
				}


				String finalQueryGlobalEmbarcador="";

				if(((this.embarcadorsForeignKey==null||this.embarcadorsForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_embarcadorPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_embarcadorPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEmbarcador()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmbarcadorConstantesFunciones.getArrayColumnasGlobalesEmbarcador(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmbarcador=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmbarcadorConstantesFunciones.TABLENAME);

						finalQueryGlobalEmbarcador=Funciones.GetFinalQueryAppend(finalQueryGlobalEmbarcador, "");
						finalQueryGlobalEmbarcador+=EmbarcadorConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmbarcadorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmbarcador=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidEmbarcadorActual();
					}
				} else {
					finalQueryGlobalEmbarcador="NONE";
				}


				String finalQueryGlobalTipoViaTransporte="";

				if(((this.tipoviatransportesForeignKey==null||this.tipoviatransportesForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_tipo_via_transportePedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_tipo_via_transportePedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionTipoViaTransporte()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoViaTransporteConstantesFunciones.getArrayColumnasGlobalesTipoViaTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoViaTransporte=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoViaTransporteConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoViaTransporte=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoViaTransporte, "");
						finalQueryGlobalTipoViaTransporte+=TipoViaTransporteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoViaTransportesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoViaTransporte=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidTipoViaTransporteActual();
					}
				} else {
					finalQueryGlobalTipoViaTransporte="NONE";
				}


				String finalQueryGlobalPuerto="";

				if(((this.puertosForeignKey==null||this.puertosForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_puertoPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_puertoPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPuerto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PuertoConstantesFunciones.getArrayColumnasGlobalesPuerto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPuerto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PuertoConstantesFunciones.TABLENAME);

						finalQueryGlobalPuerto=Funciones.GetFinalQueryAppend(finalQueryGlobalPuerto, "");
						finalQueryGlobalPuerto+=PuertoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPuertosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPuerto=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidPuertoActual();
					}
				} else {
					finalQueryGlobalPuerto="NONE";
				}


				String finalQueryGlobalPuertoDestino="";

				if(((this.puertodestinosForeignKey==null||this.puertodestinosForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_puerto_destinoPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_puerto_destinoPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPuertoDestino()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PuertoConstantesFunciones.getArrayColumnasGlobalesPuerto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPuertoDestino=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PuertoConstantesFunciones.TABLENAME);

						finalQueryGlobalPuertoDestino=Funciones.GetFinalQueryAppend(finalQueryGlobalPuertoDestino, "");
						finalQueryGlobalPuertoDestino+=PuertoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPuertoDestinosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPuertoDestino=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidPuertoDestinoActual();
					}
				} else {
					finalQueryGlobalPuertoDestino="NONE";
				}


				String finalQueryGlobalTipoTerminosImpor="";

				if(((this.tipoterminosimporsForeignKey==null||this.tipoterminosimporsForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_tipo_terminos_imporPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_tipo_terminos_imporPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionTipoTerminosImpor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoTerminosImporConstantesFunciones.getArrayColumnasGlobalesTipoTerminosImpor(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoTerminosImpor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoTerminosImporConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoTerminosImpor=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoTerminosImpor, "");
						finalQueryGlobalTipoTerminosImpor+=TipoTerminosImporConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoTerminosImporsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoTerminosImpor=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidTipoTerminosImporActual();
					}
				} else {
					finalQueryGlobalTipoTerminosImpor="NONE";
				}


				String finalQueryGlobalEstadoPedidoCompra="";

				if(((this.estadopedidocomprasForeignKey==null||this.estadopedidocomprasForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_estado_pedido_compraPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_estado_pedido_compraPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoCompra()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoPedidoCompraConstantesFunciones.getArrayColumnasGlobalesEstadoPedidoCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoPedidoCompra=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoCompraConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoPedidoCompra=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoPedidoCompra, "");
						finalQueryGlobalEstadoPedidoCompra+=EstadoPedidoCompraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoPedidoComprasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoPedidoCompra=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidEstadoPedidoCompraActual();
					}
				} else {
					finalQueryGlobalEstadoPedidoCompra="NONE";
				}


				String finalQueryGlobalFormato="";

				if(((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_formatoPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_formatoPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormato=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormato=Funciones.GetFinalQueryAppend(finalQueryGlobalFormato, "");
						finalQueryGlobalFormato+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormato=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidFormatoActual();
					}
				} else {
					finalQueryGlobalFormato="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_anioPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_anioPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.pedidocompraimporConstantesFunciones.cargarid_mesPedidoCompraImpor)
					 || (this.esRecargarFks && this.pedidocompraimporConstantesFunciones.cargarid_mesPedidoCompraImpor)) {

					if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+pedidocompraimporSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				pedidocompraimporReturnGeneral=pedidocompraimporLogic.cargarCombosLoteForeignKeyPedidoCompraImpor(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalModulo,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalPais,finalQueryGlobalCliente,finalQueryGlobalClienteProveedor,finalQueryGlobalEmpleado,finalQueryGlobalUsuario,finalQueryGlobalTipoCambio,finalQueryGlobalMoneda,finalQueryGlobalTipoProrrateoImpor,finalQueryGlobalEmbarcador,finalQueryGlobalTipoViaTransporte,finalQueryGlobalPuerto,finalQueryGlobalPuertoDestino,finalQueryGlobalTipoTerminosImpor,finalQueryGlobalEstadoPedidoCompra,finalQueryGlobalFormato,finalQueryGlobalAnio,finalQueryGlobalMes);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=pedidocompraimporReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=pedidocompraimporReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalModulo.equals("NONE")) {
				this.modulosForeignKey=pedidocompraimporReturnGeneral.getmodulosForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=pedidocompraimporReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=pedidocompraimporReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalPais.equals("NONE")) {
				this.paissForeignKey=pedidocompraimporReturnGeneral.getpaissForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=pedidocompraimporReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalClienteProveedor.equals("NONE")) {
				this.clienteproveedorsForeignKey=pedidocompraimporReturnGeneral.getclienteproveedorsForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=pedidocompraimporReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalUsuario.equals("NONE")) {
				this.usuariosForeignKey=pedidocompraimporReturnGeneral.getusuariosForeignKey();
			}

			if(!finalQueryGlobalTipoCambio.equals("NONE")) {
				this.tipocambiosForeignKey=pedidocompraimporReturnGeneral.gettipocambiosForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=pedidocompraimporReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalTipoProrrateoImpor.equals("NONE")) {
				this.tipoprorrateoimporsForeignKey=pedidocompraimporReturnGeneral.gettipoprorrateoimporsForeignKey();
			}

			if(!finalQueryGlobalEmbarcador.equals("NONE")) {
				this.embarcadorsForeignKey=pedidocompraimporReturnGeneral.getembarcadorsForeignKey();
			}

			if(!finalQueryGlobalTipoViaTransporte.equals("NONE")) {
				this.tipoviatransportesForeignKey=pedidocompraimporReturnGeneral.gettipoviatransportesForeignKey();
			}

			if(!finalQueryGlobalPuerto.equals("NONE")) {
				this.puertosForeignKey=pedidocompraimporReturnGeneral.getpuertosForeignKey();
			}

			if(!finalQueryGlobalPuertoDestino.equals("NONE")) {
				this.puertodestinosForeignKey=pedidocompraimporReturnGeneral.getpuertodestinosForeignKey();
			}

			if(!finalQueryGlobalTipoTerminosImpor.equals("NONE")) {
				this.tipoterminosimporsForeignKey=pedidocompraimporReturnGeneral.gettipoterminosimporsForeignKey();
			}

			if(!finalQueryGlobalEstadoPedidoCompra.equals("NONE")) {
				this.estadopedidocomprasForeignKey=pedidocompraimporReturnGeneral.getestadopedidocomprasForeignKey();
			}

			if(!finalQueryGlobalFormato.equals("NONE")) {
				this.formatosForeignKey=pedidocompraimporReturnGeneral.getformatosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=pedidocompraimporReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=pedidocompraimporReturnGeneral.getmessForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyPedidoCompraImpor()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyModulo();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyPais();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyClienteProveedor();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyUsuario();
			this.addItemDefectoCombosForeignKeyTipoCambio();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyTipoProrrateoImpor();
			this.addItemDefectoCombosForeignKeyEmbarcador();
			this.addItemDefectoCombosForeignKeyTipoViaTransporte();
			this.addItemDefectoCombosForeignKeyPuerto();
			this.addItemDefectoCombosForeignKeyPuertoDestino();
			this.addItemDefectoCombosForeignKeyTipoTerminosImpor();
			this.addItemDefectoCombosForeignKeyEstadoPedidoCompra();
			this.addItemDefectoCombosForeignKeyFormato();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyModulo()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				Modulo modulo=new Modulo();
				ModuloConstantesFunciones.setModuloDescripcion(modulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				modulo.setId(null);

				if(!ModuloConstantesFunciones.ExisteEnLista(this.modulosForeignKey,modulo,true)) {

					this.modulosForeignKey.add(0,modulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPais()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				Pais pais=new Pais();
				PaisConstantesFunciones.setPaisDescripcion(pais,Constantes.SMENSAJE_ESCOJA_OPCION);
				pais.setId(null);

				if(!PaisConstantesFunciones.ExisteEnLista(this.paissForeignKey,pais,true)) {

					this.paissForeignKey.add(0,pais);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyClienteProveedor()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionClienteProveedor()) {
				Cliente clienteproveedor=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(clienteproveedor,Constantes.SMENSAJE_ESCOJA_OPCION);
				clienteproveedor.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clienteproveedorsForeignKey,clienteproveedor,true)) {

					this.clienteproveedorsForeignKey.add(0,clienteproveedor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUsuario()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				Usuario usuario=new Usuario();
				UsuarioConstantesFunciones.setUsuarioDescripcion(usuario,Constantes.SMENSAJE_ESCOJA_OPCION);
				usuario.setId(null);

				if(!UsuarioConstantesFunciones.ExisteEnLista(this.usuariosForeignKey,usuario,true)) {

					this.usuariosForeignKey.add(0,usuario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCambio()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				TipoCambio tipocambio=new TipoCambio();
				TipoCambioConstantesFunciones.setTipoCambioDescripcion(tipocambio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocambio.setId(null);

				if(!TipoCambioConstantesFunciones.ExisteEnLista(this.tipocambiosForeignKey,tipocambio,true)) {

					this.tipocambiosForeignKey.add(0,tipocambio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoProrrateoImpor()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionTipoProrrateoImpor()) {
				TipoProrrateoImpor tipoprorrateoimpor=new TipoProrrateoImpor();
				TipoProrrateoImporConstantesFunciones.setTipoProrrateoImporDescripcion(tipoprorrateoimpor,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoprorrateoimpor.setId(null);

				if(!TipoProrrateoImporConstantesFunciones.ExisteEnLista(this.tipoprorrateoimporsForeignKey,tipoprorrateoimpor,true)) {

					this.tipoprorrateoimporsForeignKey.add(0,tipoprorrateoimpor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmbarcador()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEmbarcador()) {
				Embarcador embarcador=new Embarcador();
				EmbarcadorConstantesFunciones.setEmbarcadorDescripcion(embarcador,Constantes.SMENSAJE_ESCOJA_OPCION);
				embarcador.setId(null);

				if(!EmbarcadorConstantesFunciones.ExisteEnLista(this.embarcadorsForeignKey,embarcador,true)) {

					this.embarcadorsForeignKey.add(0,embarcador);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoViaTransporte()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionTipoViaTransporte()) {
				TipoViaTransporte tipoviatransporte=new TipoViaTransporte();
				TipoViaTransporteConstantesFunciones.setTipoViaTransporteDescripcion(tipoviatransporte,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoviatransporte.setId(null);

				if(!TipoViaTransporteConstantesFunciones.ExisteEnLista(this.tipoviatransportesForeignKey,tipoviatransporte,true)) {

					this.tipoviatransportesForeignKey.add(0,tipoviatransporte);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPuerto()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPuerto()) {
				Puerto puerto=new Puerto();
				PuertoConstantesFunciones.setPuertoDescripcion(puerto,Constantes.SMENSAJE_ESCOJA_OPCION);
				puerto.setId(null);

				if(!PuertoConstantesFunciones.ExisteEnLista(this.puertosForeignKey,puerto,true)) {

					this.puertosForeignKey.add(0,puerto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPuertoDestino()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPuertoDestino()) {
				Puerto puertodestino=new Puerto();
				PuertoConstantesFunciones.setPuertoDescripcion(puertodestino,Constantes.SMENSAJE_ESCOJA_OPCION);
				puertodestino.setId(null);

				if(!PuertoConstantesFunciones.ExisteEnLista(this.puertodestinosForeignKey,puertodestino,true)) {

					this.puertodestinosForeignKey.add(0,puertodestino);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoTerminosImpor()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionTipoTerminosImpor()) {
				TipoTerminosImpor tipoterminosimpor=new TipoTerminosImpor();
				TipoTerminosImporConstantesFunciones.setTipoTerminosImporDescripcion(tipoterminosimpor,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoterminosimpor.setId(null);

				if(!TipoTerminosImporConstantesFunciones.ExisteEnLista(this.tipoterminosimporsForeignKey,tipoterminosimpor,true)) {

					this.tipoterminosimporsForeignKey.add(0,tipoterminosimpor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoPedidoCompra()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoCompra()) {
				EstadoPedidoCompra estadopedidocompra=new EstadoPedidoCompra();
				EstadoPedidoCompraConstantesFunciones.setEstadoPedidoCompraDescripcion(estadopedidocompra,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadopedidocompra.setId(null);

				if(!EstadoPedidoCompraConstantesFunciones.ExisteEnLista(this.estadopedidocomprasForeignKey,estadopedidocompra,true)) {

					this.estadopedidocomprasForeignKey.add(0,estadopedidocompra);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormato()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				Formato formato=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formato,Constantes.SMENSAJE_ESCOJA_OPCION);
				formato.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatosForeignKey,formato,true)) {

					this.formatosForeignKey.add(0,formato);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.pedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyPedidoCompraImpor()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyPedidoCompraImpor(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyPedidoCompraImpor()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualModuloForeignKey(this.moduloActual.getId(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
				this.setActualUsuarioForeignKey(this.parametroGeneralUsuario.getid_usuario(),false,"Formulario");
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
			
			
				this.pedidocompraimpor.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
				this.pedidocompraimpor.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
				this.pedidocompraimpor.setfecha_entrega(this.parametroGeneralUsuario.getfecha_sistema());
				this.pedidocompraimpor.setfecha_entrega_cliente(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyPedidoCompraImpor();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor)throws Exception {	
		try {
			
			this.setActualPaisForeignKey(pedidocompraimpor.getid_pais(),false,"Formulario");
			this.setActualClienteForeignKey(pedidocompraimpor.getid_cliente(),false,"Formulario");
			this.setActualClienteProveedorForeignKey(pedidocompraimpor.getid_cliente_proveedor(),false,"Formulario");
			this.setActualEmpleadoForeignKey(pedidocompraimpor.getid_empleado(),false,"Formulario");
			this.setActualTipoCambioForeignKey(pedidocompraimpor.getid_tipo_cambio(),false,"Formulario");
			this.setActualTipoProrrateoImporForeignKey(pedidocompraimpor.getid_tipo_prorrateo_impor(),false,"Formulario");
			this.setActualEmbarcadorForeignKey(pedidocompraimpor.getid_embarcador(),false,"Formulario");
			this.setActualTipoViaTransporteForeignKey(pedidocompraimpor.getid_tipo_via_transporte(),false,"Formulario");
			this.setActualPuertoForeignKey(pedidocompraimpor.getid_puerto(),false,"Formulario");
			this.setActualPuertoDestinoForeignKey(pedidocompraimpor.getid_puerto_destino(),false,"Formulario");
			this.setActualTipoTerminosImporForeignKey(pedidocompraimpor.getid_tipo_terminos_impor(),false,"Formulario");
			this.setActualEstadoPedidoCompraForeignKey(pedidocompraimpor.getid_estado_pedido_compra(),false,"Formulario");
			this.setActualFormatoForeignKey(pedidocompraimpor.getid_formato(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor,String sTipoEvento)throws Exception {	
		try {
			
			

				if(pedidocompraimpor.getCliente()!=null && !sTipoEvento.equals("id_clientePedidoCompraImpor")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(pedidocompraimpor.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(pedidocompraimpor.getClienteProveedor()!=null && !sTipoEvento.equals("id_cliente_proveedorPedidoCompraImpor")) { //sTipoEvento Evita Bucle Infinito

					this.clienteproveedorsForeignKey=new ArrayList<Cliente>();
					this.clienteproveedorsForeignKey.add(pedidocompraimpor.getClienteProveedor());

					this.addItemDefectoCombosForeignKeyClienteProveedor();
					this.cargarCombosFrameClienteProveedorsForeignKey("Todos");
				}

				if(pedidocompraimpor.getEmpleado()!=null && !sTipoEvento.equals("id_empleadoPedidoCompraImpor")) { //sTipoEvento Evita Bucle Infinito

					this.empleadosForeignKey=new ArrayList<Empleado>();
					this.empleadosForeignKey.add(pedidocompraimpor.getEmpleado());

					this.addItemDefectoCombosForeignKeyEmpleado();
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				if(pedidocompraimpor.getTipoCambio()!=null && !sTipoEvento.equals("id_tipo_cambioPedidoCompraImpor")) { //sTipoEvento Evita Bucle Infinito

					this.tipocambiosForeignKey=new ArrayList<TipoCambio>();
					this.tipocambiosForeignKey.add(pedidocompraimpor.getTipoCambio());

					this.addItemDefectoCombosForeignKeyTipoCambio();
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyPedidoCompraImpor()throws Exception {	
		try {
			
			this.setActualPaisForeignKey(this.pedidocompraimporConstantesFunciones.getid_pais(),false,"Formulario");
			this.setActualClienteForeignKey(this.pedidocompraimporConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualClienteProveedorForeignKey(this.pedidocompraimporConstantesFunciones.getid_cliente_proveedor(),false,"Formulario");
			this.setActualEmpleadoForeignKey(this.pedidocompraimporConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualTipoCambioForeignKey(this.pedidocompraimporConstantesFunciones.getid_tipo_cambio(),false,"Formulario");
			this.setActualTipoProrrateoImporForeignKey(this.pedidocompraimporConstantesFunciones.getid_tipo_prorrateo_impor(),false,"Formulario");
			this.setActualEmbarcadorForeignKey(this.pedidocompraimporConstantesFunciones.getid_embarcador(),false,"Formulario");
			this.setActualTipoViaTransporteForeignKey(this.pedidocompraimporConstantesFunciones.getid_tipo_via_transporte(),false,"Formulario");
			this.setActualPuertoForeignKey(this.pedidocompraimporConstantesFunciones.getid_puerto(),false,"Formulario");
			this.setActualPuertoDestinoForeignKey(this.pedidocompraimporConstantesFunciones.getid_puerto_destino(),false,"Formulario");
			this.setActualTipoTerminosImporForeignKey(this.pedidocompraimporConstantesFunciones.getid_tipo_terminos_impor(),false,"Formulario");
			this.setActualEstadoPedidoCompraForeignKey(this.pedidocompraimporConstantesFunciones.getid_estado_pedido_compra(),false,"Formulario");
			this.setActualFormatoForeignKey(this.pedidocompraimporConstantesFunciones.getid_formato(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyPedidoCompraImpor()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}

				this.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,"Formulario");
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyPedidoCompraImpor()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyPedidoCompraImpor()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroPedidoCompraImpor()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyPedidoCompraImpor()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameModulosForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFramePaissForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameClienteProveedorsForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameUsuariosForeignKey("Todos");
			this.cargarCombosFrameTipoCambiosForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameTipoProrrateoImporsForeignKey("Todos");
			this.cargarCombosFrameEmbarcadorsForeignKey("Todos");
			this.cargarCombosFrameTipoViaTransportesForeignKey("Todos");
			this.cargarCombosFramePuertosForeignKey("Todos");
			this.cargarCombosFramePuertoDestinosForeignKey("Todos");
			this.cargarCombosFrameTipoTerminosImporsForeignKey("Todos");
			this.cargarCombosFrameEstadoPedidoComprasForeignKey("Todos");
			this.cargarCombosFrameFormatosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyPedidoCompraImpor(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClienteProveedorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoProrrateoImporsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmbarcadorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoViaTransportesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePuertosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePuertoDestinosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoTerminosImporsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoPedidoComprasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyPedidoCompraImpor()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	












































	
	

	public PedidoCompraImporBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public PedidoCompraImporBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public PedidoCompraImporBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean(); 
		this.pedidocompraimporConstantesFunciones=new PedidoCompraImporConstantesFunciones(); 
		this.pedidocompraimporBean=new PedidoCompraImpor();//(this.pedidocompraimporConstantesFunciones); 		
		this.pedidocompraimporReturnGeneral=new PedidoCompraImporParameterReturnGeneral(); 
		
		this.pedidocompraimporSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.pedidocompraimporSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public PedidoCompraImporBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public PedidoCompraImporBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public PedidoCompraImporBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessPedidoCompraImpor(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			//OBLIGA VALIDA CON GUARDAR RELACIONES, TAMBIEN EN SWING
			conGuardarRelaciones=true;
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.pedidocompraimporConstantesFunciones=new PedidoCompraImporConstantesFunciones(); 
			this.pedidocompraimporBean=new PedidoCompraImpor();//this.pedidocompraimporConstantesFunciones); 			
			this.pedidocompraimporReturnGeneral=new PedidoCompraImporParameterReturnGeneral(); 
		
			PedidoCompraImporBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Pedido Compra Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.pedidocompraimpor=new PedidoCompraImpor();
			this.pedidocompraimpors = new ArrayList<PedidoCompraImpor>();
			this.pedidocompraimporsAux = new ArrayList<PedidoCompraImpor>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic=new PedidoCompraImporLogic();
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			//this.pedidocompraimporSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.pedidocompraimporSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormPedidoCompraImpor);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoPedidoCompraImpor!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoPedidoCompraImpor);	
					}
					
					if(this.jInternalFrameImportacionPedidoCompraImpor!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionPedidoCompraImpor);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByPedidoCompraImpor!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByPedidoCompraImpor);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormPedidoCompraImpor);
				this.jInternalFrameDetalleFormPedidoCompraImpor.setVisible(false);
				this.jInternalFrameDetalleFormPedidoCompraImpor.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoPedidoCompraImpor!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoPedidoCompraImpor);
					this.jInternalFrameReporteDinamicoPedidoCompraImpor.setVisible(false);
					this.jInternalFrameReporteDinamicoPedidoCompraImpor.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionPedidoCompraImpor!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionPedidoCompraImpor);
					this.jInternalFrameImportacionPedidoCompraImpor.setVisible(false);
					this.jInternalFrameImportacionPedidoCompraImpor.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByPedidoCompraImpor!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByPedidoCompraImpor);
					this.jInternalFrameOrderByPedidoCompraImpor.setVisible(false);
					this.jInternalFrameOrderByPedidoCompraImpor.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idPedidoCompraImporActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=PedidoCompraImporConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.pedidocompraimporReturnGeneral=new PedidoCompraImporParameterReturnGeneral();
			
			this.pedidocompraimporParameterGeneral=new PedidoCompraImporParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.pedidocompraimporLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(PedidoCompraImporJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(DetallePedidoCompraImporConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(LiquidacionImpuestoImporConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,PedidoCompraImporConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.pedidocompraimporSessionBean.getEsGuardarRelacionado(),this.pedidocompraimporSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,PedidoCompraImporConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.pedidocompraimporSessionBean.getEsGuardarRelacionado(),this.pedidocompraimporSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoPedidoCompraImpor=false;
			this.isVisibilidadCeldaDuplicarPedidoCompraImpor=true;
			this.isVisibilidadCeldaCopiarPedidoCompraImpor=true;
			this.isVisibilidadCeldaVerFormPedidoCompraImpor=true;
			this.isVisibilidadCeldaOrdenPedidoCompraImpor=true;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=false;
			this.isVisibilidadCeldaModificarPedidoCompraImpor=false;
			this.isVisibilidadCeldaActualizarPedidoCompraImpor=false;
			this.isVisibilidadCeldaEliminarPedidoCompraImpor=false;
			this.isVisibilidadCeldaCancelarPedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarPedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdClienteProveedor=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmbarcador=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=true;
			this.isVisibilidadFK_IdFormato=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdModulo=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdPais=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdPuerto=true;
			this.isVisibilidadFK_IdPuertoDestino=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoCambio=true;
			this.isVisibilidadFK_IdTipoProrrateoImpor=true;
			this.isVisibilidadFK_IdTipoTerminosImpor=true;
			this.isVisibilidadFK_IdTipoViaTransporte=true;
			this.isVisibilidadFK_IdUsuario=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesPedidoCompraImpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosPedidoCompraImpor();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioPedidoCompraImpor(false);
			
			this.setPermisosUsuarioPedidoCompraImpor();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado() 
				|| (this.pedidocompraimporSessionBean.getEsGuardarRelacionado() && this.pedidocompraimporSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioPedidoCompraImporClasesRelacionadas();
			}
			
			if(this.pedidocompraimporSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioPedidoCompraImporClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosPedidoCompraImpor();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualPedidoCompraImpor();
			}
			
			if(!this.isPermisoBusquedaPedidoCompraImpor) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasPedidoCompraImpor.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioPedidoCompraImpor,this.isPermisoPaginacionMedioPedidoCompraImpor,this.isPermisoPaginacionTodoPedidoCompraImpor);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(PedidoCompraImporConstantesFunciones.getTiposSeleccionarPedidoCompraImpor());
				
				this.tiposColumnasSelect=PedidoCompraImporConstantesFunciones.getTiposSeleccionarPedidoCompraImpor(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectPedidoCompraImpor();				
				//this.tiposRelacionesSelect=PedidoCompraImporConstantesFunciones.getTiposRelacionesPedidoCompraImpor(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioPedidoCompraImpor();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioPedidoCompraImpor(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioPedidoCompraImpor(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesPedidoCompraImpor() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.detallepedidocompraimporLogic=new DetallePedidoCompraImporLogic();
			this.liquidacionimpuestoimporLogic=new LiquidacionImpuestoImporLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.moduloLogic=new ModuloLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.paisLogic=new PaisLogic();
			this.clienteLogic=new ClienteLogic();
			this.clienteproveedorLogic=new ClienteLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.usuarioLogic=new UsuarioLogic();
			this.tipocambioLogic=new TipoCambioLogic();
			this.monedaLogic=new MonedaLogic();
			this.tipoprorrateoimporLogic=new TipoProrrateoImporLogic();
			this.embarcadorLogic=new EmbarcadorLogic();
			this.tipoviatransporteLogic=new TipoViaTransporteLogic();
			this.puertoLogic=new PuertoLogic();
			this.puertodestinoLogic=new PuertoLogic();
			this.tipoterminosimporLogic=new TipoTerminosImporLogic();
			this.estadopedidocompraLogic=new EstadoPedidoCompraLogic();
			this.formatoLogic=new FormatoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				pedidocompraimporImplementable= (PedidoCompraImporImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+PedidoCompraImporConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				pedidocompraimporImplementableHome= (PedidoCompraImporImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+PedidoCompraImporConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.pedidocompraimpors= new ArrayList<PedidoCompraImpor>();
			this.pedidocompraimporsEliminados= new ArrayList<PedidoCompraImpor>();
						
			this.isEsNuevoPedidoCompraImpor=false;
			this.esParaAccionDesdeFormularioPedidoCompraImpor=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idClienteActual=0L;
			this.idClienteProveedorActual=0L;
			this.idEmpleadoActual=0L;
			this.idTipoCambioActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.modulosForeignKey=new ArrayList<Modulo>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.paissForeignKey=new ArrayList<Pais>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.clienteproveedorsForeignKey=new ArrayList<Cliente>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.usuariosForeignKey=new ArrayList<Usuario>() ;
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.tipoprorrateoimporsForeignKey=new ArrayList<TipoProrrateoImpor>() ;
			this.embarcadorsForeignKey=new ArrayList<Embarcador>() ;
			this.tipoviatransportesForeignKey=new ArrayList<TipoViaTransporte>() ;
			this.puertosForeignKey=new ArrayList<Puerto>() ;
			this.puertodestinosForeignKey=new ArrayList<Puerto>() ;
			this.tipoterminosimporsForeignKey=new ArrayList<TipoTerminosImpor>() ;
			this.estadopedidocomprasForeignKey=new ArrayList<EstadoPedidoCompra>() ;
			this.formatosForeignKey=new ArrayList<Formato>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyPedidoCompraImpor(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroPedidoCompraImpor();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			PedidoCompraImporBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=PedidoCompraImporConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesPedidoCompraImpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingPedidoCompraImpor(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioPedidoCompraImpor();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioPedidoCompraImpor();
			}
			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasPedidoCompraImpor.getTabCount(); i++) {
					this.jTabbedPaneBusquedasPedidoCompraImpor.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasPedidoCompraImpor.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessPedidoCompraImpor(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga PedidoCompraImpor: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectPedidoCompraImpor() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(DetallePedidoCompraImporConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DetallePedidoCompraImporConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(LiquidacionImpuestoImporConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(LiquidacionImpuestoImporConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesPedidoCompraImpor")) {
				iIndex=this.jInternalFrameDetalleFormPedidoCompraImpor.jTabbedPaneRelacionesPedidoCompraImpor.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormPedidoCompraImpor.jTabbedPaneRelacionesPedidoCompraImpor.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();	
				
				

				if(sTitle.equals("Detalle Pedido Compras")) {
					if(!DetallePedidoCompraImporJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessPedidoCompraImpor();

						this.cargarParteTabPanelRelacionadaDetallePedidoCompraImpor(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Liquidacion Impuesto Impores")) {
					if(!LiquidacionImpuestoImporJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessPedidoCompraImpor();

						this.cargarParteTabPanelRelacionadaLiquidacionImpuestoImpor(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessPedidoCompraImpor();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaDetallePedidoCompraImpor(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormPedidoCompraImpor.cargarSessionConBeanSwingJInternalFrameDetallePedidoCompraImpor(false,true,iIndex);
		this.jButtonDetallePedidoCompraImporActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDetallePedidoCompraImpor();

		//this.jTabbedPaneRelacionesPedidoCompraImpor.updateUI();
		//this.jTabbedPaneRelacionesPedidoCompraImpor.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesPedidoCompraImpor.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaLiquidacionImpuestoImpor(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormPedidoCompraImpor.cargarSessionConBeanSwingJInternalFrameLiquidacionImpuestoImpor(false,true,iIndex);
		this.jButtonLiquidacionImpuestoImporActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaLiquidacionImpuestoImpor();

		//this.jTabbedPaneRelacionesPedidoCompraImpor.updateUI();
		//this.jTabbedPaneRelacionesPedidoCompraImpor.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesPedidoCompraImpor.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("DetallePedidoCompraImpor")) {
				int row=this.jTableDatosPedidoCompraImpor.getSelectedRow();
				jButtonDetallePedidoCompraImporActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("LiquidacionImpuestoImpor")) {
				int row=this.jTableDatosPedidoCompraImpor.getSelectedRow();
				jButtonLiquidacionImpuestoImporActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Detalle Pedido Compra")) {

					if(this.isTienePermisosDetallePedidoCompraImpor && this.pedidocompraimporConstantesFunciones.mostrarDetallePedidoCompraImporPedidoCompraImpor && !PedidoCompraImporConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Detalle Pedido Compras"+"("+DetallePedidoCompraImporConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Detalle Pedido Compras");

						if(pedidocompraimporConstantesFunciones.resaltarDetallePedidoCompraImporPedidoCompraImpor!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(pedidocompraimporConstantesFunciones.resaltarDetallePedidoCompraImporPedidoCompraImpor);
						}

						jmenuItem.setEnabled(this.pedidocompraimporConstantesFunciones.activarDetallePedidoCompraImporPedidoCompraImpor);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DetallePedidoCompraImpor"));

						

						this.jInternalFrameDetalleFormPedidoCompraImpor.jmenuDetallePedidoCompraImpor.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Liquidacion Impuesto Impor")) {

					if(this.isTienePermisosLiquidacionImpuestoImpor && this.pedidocompraimporConstantesFunciones.mostrarLiquidacionImpuestoImporPedidoCompraImpor && !PedidoCompraImporConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Liquidacion Impuesto Impores"+"("+LiquidacionImpuestoImporConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Liquidacion Impuesto Impores");

						if(pedidocompraimporConstantesFunciones.resaltarLiquidacionImpuestoImporPedidoCompraImpor!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(pedidocompraimporConstantesFunciones.resaltarLiquidacionImpuestoImporPedidoCompraImpor);
						}

						jmenuItem.setEnabled(this.pedidocompraimporConstantesFunciones.activarLiquidacionImpuestoImporPedidoCompraImpor);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"LiquidacionImpuestoImpor"));

						

						this.jInternalFrameDetalleFormPedidoCompraImpor.jmenuDetallePedidoCompraImpor.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyPedidoCompraImpor(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyPedidoCompraImpor(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyPedidoCompraImpor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyPedidoCompraImporListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyPedidoCompraImpor();
		
		this.cargarCombosFrameForeignKeyPedidoCompraImpor();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyPedidoCompraImpor();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyPedidoCompraImpor();
		}
	}
	
	

	public void cargarCombosForeignKeyPais(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaPais(this.paissForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteProveedor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteProveedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyClienteProveedor();
				this.cargarCombosFrameClienteProveedorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaClienteProveedor(this.clienteproveedorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoProrrateoImpor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoProrrateoImporListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoProrrateoImpor();
				this.cargarCombosFrameTipoProrrateoImporsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoProrrateoImpor(this.tipoprorrateoimporsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmbarcador(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmbarcadorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmbarcador();
				this.cargarCombosFrameEmbarcadorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmbarcador(this.embarcadorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoViaTransporte(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoViaTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoViaTransporte();
				this.cargarCombosFrameTipoViaTransportesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoViaTransporte(this.tipoviatransportesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPuerto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPuertoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPuerto();
				this.cargarCombosFramePuertosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaPuerto(this.puertosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPuertoDestino(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPuertoDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPuertoDestino();
				this.cargarCombosFramePuertoDestinosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaPuertoDestino(this.puertodestinosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTerminosImpor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoTerminosImporListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoTerminosImpor();
				this.cargarCombosFrameTipoTerminosImporsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoTerminosImpor(this.tipoterminosimporsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoPedidoCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoPedidoCompra();
				this.cargarCombosFrameEstadoPedidoComprasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoPedidoCompra(this.estadopedidocomprasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormato(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormato(this.formatosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoPedidoCompraImporActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.pedidocompraimporSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			
			
			if(jTableDatosPedidoCompraImpor.getRowCount()>=1) {
				jTableDatosPedidoCompraImpor.removeRowSelectionInterval(0, jTableDatosPedidoCompraImpor.getRowCount()-1);						
			}
			
			this.isEsNuevoPedidoCompraImpor=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoPedidoCompraImpor(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesPedidoCompraImpor(true);			
			//this.pedidocompraimpor=new PedidoCompraImpor();
			//this.pedidocompraimpor.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPedidoCompraImpor(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedidoCompraImpor() ;
			
			if(PedidoCompraImporJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePedidoCompraImpor(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.pedidocompraimpor);	
			this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);				
			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			
			if(this.pedidocompraimporSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar PedidoCompraImpor: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarPedidoCompraImporActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados=new ArrayList<PedidoCompraImpor>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosPedidoCompraImpor.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosPedidoCompraImpor.getSelectedRows().length;			
			}
			
			pedidocompraimporsSeleccionados=this.getPedidoCompraImporsSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoPedidoCompraImpor--;			
				//PedidoCompraImpor pedidocompraimporAux= new PedidoCompraImpor();			
				//pedidocompraimporAux.setId(this.iIdNuevoPedidoCompraImpor);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//PedidoCompraImpor pedidocompraimporOrigen=new PedidoCompraImpor();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(PedidoCompraImpor pedidocompraimporOrigen : pedidocompraimporsSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							pedidocompraimporOrigen =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraimporOrigen =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaPedidoCompraImpor();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.pedidocompraimpor.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosPedidoCompraImpor(pedidocompraimporOrigen,this.pedidocompraimpor,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.pedidocompraimporLogic.getPedidoCompraImpors().add(this.pedidocompraimporAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpors.add(this.pedidocompraimporAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaPedidoCompraImpor(false);
				
				this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(this.getIndiceNuevoPedidoCompraImpor(), this.getIndiceNuevoPedidoCompraImpor());
				
				int iLastRow =  this.jTableDatosPedidoCompraImpor.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosPedidoCompraImpor.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosPedidoCompraImpor.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaPedidoCompraImpor(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados=new ArrayList<PedidoCompraImpor>();									
		
			PedidoCompraImpor pedidocompraimporOrigen=new PedidoCompraImpor();
			PedidoCompraImpor pedidocompraimporDestino=new PedidoCompraImpor();
				
			pedidocompraimporsSeleccionados=this.getPedidoCompraImporsSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosPedidoCompraImpor.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || pedidocompraimporsSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosPedidoCompraImpor.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporOrigen =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						pedidocompraimporOrigen =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraimporDestino =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						pedidocompraimporDestino =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				pedidocompraimporOrigen =pedidocompraimporsSeleccionados.get(0);
				pedidocompraimporDestino =pedidocompraimporsSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosPedidoCompraImpor(pedidocompraimporOrigen,pedidocompraimporDestino,true,false);
				
				pedidocompraimporDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(pedidocompraimporDestino,pedidocompraimporLogic.getPedidoCompraImpors());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidocompraimporDestino,pedidocompraimpors);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaPedidoCompraImpor(false);
				
				//this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(this.getIndiceNuevoPedidoCompraImpor(), this.getIndiceNuevoPedidoCompraImpor());
				
				int iLastRow =  this.jTableDatosPedidoCompraImpor.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosPedidoCompraImpor.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosPedidoCompraImpor.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaPedidoCompraImpor(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormPedidoCompraImpor.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesPedidoCompraImpor.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasPedidoCompraImpor.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesPedidoCompraImpor.setVisible(!isVisible);
			this.jPanelPaginacionPedidoCompraImpor.setVisible(!isVisible);
			this.jPanelAccionesPedidoCompraImpor.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFramePedidoCompraImpor();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoPedidoCompraImpor();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionPedidoCompraImpor();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByPedidoCompraImpor();
			
			this.abrirFrameOrderByPedidoCompraImpor();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByPedidoCompraImpor();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetallePedidoCompraImpor(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormPedidoCompraImpor);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormPedidoCompraImpor.isMaximum()) {
					this.jInternalFrameDetalleFormPedidoCompraImpor.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormPedidoCompraImpor.setSize(this.jInternalFrameDetalleFormPedidoCompraImpor.iWidthFormulario,this.jInternalFrameDetalleFormPedidoCompraImpor.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormPedidoCompraImpor.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormPedidoCompraImpor.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormPedidoCompraImpor.isMaximum()) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormPedidoCompraImpor.jContentPaneDetallePedidoCompraImpor.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormPedidoCompraImpor.jTabbedPaneRelacionesPedidoCompraImpor.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormPedidoCompraImpor.jContentPaneDetallePedidoCompraImpor.getWidth(),PedidoCompraImporConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormPedidoCompraImpor.jTabbedPaneRelacionesPedidoCompraImpor.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormPedidoCompraImpor.jContentPaneDetallePedidoCompraImpor.getWidth(),PedidoCompraImporConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormPedidoCompraImpor.jTabbedPaneRelacionesPedidoCompraImpor.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormPedidoCompraImpor.jContentPaneDetallePedidoCompraImpor.getWidth(),PedidoCompraImporConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(DetallePedidoCompraImporJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDetallePedidoCompraImpor();
					}

					if(LiquidacionImpuestoImporJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaLiquidacionImpuestoImpor();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormPedidoCompraImpor.setVisible(true);
	        this.jInternalFrameDetalleFormPedidoCompraImpor.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByPedidoCompraImpor() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByPedidoCompraImpor==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByPedidoCompraImpor=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByPedidoCompraImpor,false,this);
				} else {
					this.jInternalFrameOrderByPedidoCompraImpor=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByPedidoCompraImpor,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByPedidoCompraImpor);
				this.jInternalFrameOrderByPedidoCompraImpor.setVisible(false);
				this.jInternalFrameOrderByPedidoCompraImpor.setSelected(false);
				
				this.jInternalFrameOrderByPedidoCompraImpor.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByPedidoCompraImpor"));
				
				this.inicializarActualizarBindingTablaOrderByPedidoCompraImpor();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionPedidoCompraImpor() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionPedidoCompraImpor==null) {
				
				this.jInternalFrameImportacionPedidoCompraImpor=new ImportacionJInternalFrame(PedidoCompraImporConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionPedidoCompraImpor);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionPedidoCompraImpor);
				this.jInternalFrameImportacionPedidoCompraImpor.setVisible(false);
				this.jInternalFrameImportacionPedidoCompraImpor.setSelected(false);


				this.jInternalFrameImportacionPedidoCompraImpor.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionPedidoCompraImpor"));
				this.jInternalFrameImportacionPedidoCompraImpor.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionPedidoCompraImpor"));
				this.jInternalFrameImportacionPedidoCompraImpor.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionPedidoCompraImpor"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoPedidoCompraImpor() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoPedidoCompraImpor==null) {
				this.jInternalFrameReporteDinamicoPedidoCompraImpor=new ReporteDinamicoJInternalFrame(PedidoCompraImporConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoPedidoCompraImpor);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoPedidoCompraImpor);
				this.jInternalFrameReporteDinamicoPedidoCompraImpor.setVisible(false);
				this.jInternalFrameReporteDinamicoPedidoCompraImpor.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPedidoCompraImpor"));
				this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPedidoCompraImpor"));
				this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPedidoCompraImpor"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPedidoCompraImpor();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaDetallePedidoCompraImpor() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoCompraImpor.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormPedidoCompraImpor.jContentPaneDetallePedidoCompraImpor.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoCompraImpor.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoCompraImpor.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoCompraImpor.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaLiquidacionImpuestoImpor() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jScrollPanelDatosLiquidacionImpuestoImpor.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormPedidoCompraImpor.jContentPaneDetallePedidoCompraImpor.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jScrollPanelDatosLiquidacionImpuestoImpor.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jScrollPanelDatosLiquidacionImpuestoImpor.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.jScrollPanelDatosLiquidacionImpuestoImpor.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetallePedidoCompraImpor() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormPedidoCompraImpor);
			
	       	this.jInternalFrameDetalleFormPedidoCompraImpor.setVisible(false);
	        this.jInternalFrameDetalleFormPedidoCompraImpor.setSelected(false);
			
			//this.jInternalFrameDetalleFormPedidoCompraImpor.dispose();
			//this.jInternalFrameDetalleFormPedidoCompraImpor=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoPedidoCompraImpor() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoPedidoCompraImpor.setVisible(true);
	        this.jInternalFrameReporteDinamicoPedidoCompraImpor.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionPedidoCompraImpor() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionPedidoCompraImpor.setVisible(true);
	        this.jInternalFrameImportacionPedidoCompraImpor.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByPedidoCompraImpor() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByPedidoCompraImpor.setVisible(true);
	        this.jInternalFrameOrderByPedidoCompraImpor.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByPedidoCompraImpor() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByPedidoCompraImpor.setVisible(false);
	        this.jInternalFrameOrderByPedidoCompraImpor.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoPedidoCompraImpor() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoPedidoCompraImpor.setVisible(false);
	        this.jInternalFrameReporteDinamicoPedidoCompraImpor.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionPedidoCompraImpor() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionPedidoCompraImpor.setVisible(false);
	        this.jInternalFrameImportacionPedidoCompraImpor.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarPedidoCompraImpor(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarPedidoCompraImpor(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesPedidoCompraImpor(true);
			//this.isEsNuevoPedidoCompraImpor=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesPedidoCompraImpor("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPedidoCompraImpor(false) ;
			
			if(pedidocompraimporSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporSessionBean.getEsGuardarRelacionado() && DetallePedidoCompraImporJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetallePedidoCompraImporActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporSessionBean.getEsGuardarRelacionado() && LiquidacionImpuestoImporJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonLiquidacionImpuestoImporActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(PedidoCompraImporJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePedidoCompraImpor(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedidoCompraImpor(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaPedidoCompraImporActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarPedidoCompraImpor(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesPedidoCompraImpor(true);
			//this.isEsNuevoPedidoCompraImpor=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.pedidocompraimpor.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesPedidoCompraImpor("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesPedidoCompraImpor(false) ;
			
			if(PedidoCompraImporJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePedidoCompraImpor(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedidoCompraImpor(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Cliente")) {
				if(!this.pedidocompraimporConstantesFunciones.cargarid_clientePedidoCompraImpor) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("ClienteProveedor")) {
				if(!this.pedidocompraimporConstantesFunciones.cargarid_cliente_proveedorPedidoCompraImpor) {
					this.cargarCombosClienteProveedorsForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
					this.cargarCombosFrameClienteProveedorsForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente_proveedor (id);

				this.recargarComboTablaClienteProveedor(this.clienteproveedorsForeignKey);

			}
			
			if(sType.equals("Empleado")) {
				if(!this.pedidocompraimporConstantesFunciones.cargarid_empleadoPedidoCompraImpor) {
					this.cargarCombosEmpleadosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_empleado (id);

				this.recargarComboTablaEmpleado(this.empleadosForeignKey);

			}
			
			if(sType.equals("TipoCambio")) {
				if(!this.pedidocompraimporConstantesFunciones.cargarid_tipo_cambioPedidoCompraImpor) {
					this.cargarCombosTipoCambiosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_tipo_cambio (id);

				this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
						
	
	public void recargarComboTablaPais(List<Pais> paissForeignKey)throws Exception{
		TableColumn tableColumnPais=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDPAIS));
		TableCellEditor tableCellEditorPais =tableColumnPais.getCellEditor();

		PaisTableCell paisTableCellFk=(PaisTableCell)tableCellEditorPais;

		if(paisTableCellFk!=null) {
			paisTableCellFk.setpaissForeignKey(paissForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//paisTableCellFk.setRowActual(intSelectedRow);
			//paisTableCellFk.setpaissForeignKeyActual(paissForeignKey);
		//}


		if(paisTableCellFk!=null) {
			paisTableCellFk.RecargarPaissForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaClienteProveedor(List<Cliente> clienteproveedorsForeignKey)throws Exception{
		TableColumn tableColumnClienteProveedor=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTEPROVEEDOR));
		TableCellEditor tableCellEditorClienteProveedor =tableColumnClienteProveedor.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorClienteProveedor;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clienteproveedorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clienteproveedorsForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
		
	
	public void recargarComboTablaTipoCambio(List<TipoCambio> tipocambiosForeignKey)throws Exception{
		TableColumn tableColumnTipoCambio=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDTIPOCAMBIO));
		TableCellEditor tableCellEditorTipoCambio =tableColumnTipoCambio.getCellEditor();

		TipoCambioTableCell tipocambioTableCellFk=(TipoCambioTableCell)tableCellEditorTipoCambio;

		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.settipocambiosForeignKey(tipocambiosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocambioTableCellFk.setRowActual(intSelectedRow);
			//tipocambioTableCellFk.settipocambiosForeignKeyActual(tipocambiosForeignKey);
		//}


		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.RecargarTipoCambiosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
		
	
	public void recargarComboTablaTipoProrrateoImpor(List<TipoProrrateoImpor> tipoprorrateoimporsForeignKey)throws Exception{
		TableColumn tableColumnTipoProrrateoImpor=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDTIPOPRORRATEOIMPOR));
		TableCellEditor tableCellEditorTipoProrrateoImpor =tableColumnTipoProrrateoImpor.getCellEditor();

		TipoProrrateoImporTableCell tipoprorrateoimporTableCellFk=(TipoProrrateoImporTableCell)tableCellEditorTipoProrrateoImpor;

		if(tipoprorrateoimporTableCellFk!=null) {
			tipoprorrateoimporTableCellFk.settipoprorrateoimporsForeignKey(tipoprorrateoimporsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoprorrateoimporTableCellFk.setRowActual(intSelectedRow);
			//tipoprorrateoimporTableCellFk.settipoprorrateoimporsForeignKeyActual(tipoprorrateoimporsForeignKey);
		//}


		if(tipoprorrateoimporTableCellFk!=null) {
			tipoprorrateoimporTableCellFk.RecargarTipoProrrateoImporsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmbarcador(List<Embarcador> embarcadorsForeignKey)throws Exception{
		TableColumn tableColumnEmbarcador=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDEMBARCADOR));
		TableCellEditor tableCellEditorEmbarcador =tableColumnEmbarcador.getCellEditor();

		EmbarcadorTableCell embarcadorTableCellFk=(EmbarcadorTableCell)tableCellEditorEmbarcador;

		if(embarcadorTableCellFk!=null) {
			embarcadorTableCellFk.setembarcadorsForeignKey(embarcadorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//embarcadorTableCellFk.setRowActual(intSelectedRow);
			//embarcadorTableCellFk.setembarcadorsForeignKeyActual(embarcadorsForeignKey);
		//}


		if(embarcadorTableCellFk!=null) {
			embarcadorTableCellFk.RecargarEmbarcadorsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoViaTransporte(List<TipoViaTransporte> tipoviatransportesForeignKey)throws Exception{
		TableColumn tableColumnTipoViaTransporte=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE));
		TableCellEditor tableCellEditorTipoViaTransporte =tableColumnTipoViaTransporte.getCellEditor();

		TipoViaTransporteTableCell tipoviatransporteTableCellFk=(TipoViaTransporteTableCell)tableCellEditorTipoViaTransporte;

		if(tipoviatransporteTableCellFk!=null) {
			tipoviatransporteTableCellFk.settipoviatransportesForeignKey(tipoviatransportesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoviatransporteTableCellFk.setRowActual(intSelectedRow);
			//tipoviatransporteTableCellFk.settipoviatransportesForeignKeyActual(tipoviatransportesForeignKey);
		//}


		if(tipoviatransporteTableCellFk!=null) {
			tipoviatransporteTableCellFk.RecargarTipoViaTransportesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPuerto(List<Puerto> puertosForeignKey)throws Exception{
		TableColumn tableColumnPuerto=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDPUERTO));
		TableCellEditor tableCellEditorPuerto =tableColumnPuerto.getCellEditor();

		PuertoTableCell puertoTableCellFk=(PuertoTableCell)tableCellEditorPuerto;

		if(puertoTableCellFk!=null) {
			puertoTableCellFk.setpuertosForeignKey(puertosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//puertoTableCellFk.setRowActual(intSelectedRow);
			//puertoTableCellFk.setpuertosForeignKeyActual(puertosForeignKey);
		//}


		if(puertoTableCellFk!=null) {
			puertoTableCellFk.RecargarPuertosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPuertoDestino(List<Puerto> puertodestinosForeignKey)throws Exception{
		TableColumn tableColumnPuertoDestino=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDPUERTODESTINO));
		TableCellEditor tableCellEditorPuertoDestino =tableColumnPuertoDestino.getCellEditor();

		PuertoTableCell puertoTableCellFk=(PuertoTableCell)tableCellEditorPuertoDestino;

		if(puertoTableCellFk!=null) {
			puertoTableCellFk.setpuertosForeignKey(puertodestinosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//puertoTableCellFk.setRowActual(intSelectedRow);
			//puertoTableCellFk.setpuertosForeignKeyActual(puertodestinosForeignKey);
		//}


		if(puertoTableCellFk!=null) {
			puertoTableCellFk.RecargarPuertosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoTerminosImpor(List<TipoTerminosImpor> tipoterminosimporsForeignKey)throws Exception{
		TableColumn tableColumnTipoTerminosImpor=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDTIPOTERMINOSIMPOR));
		TableCellEditor tableCellEditorTipoTerminosImpor =tableColumnTipoTerminosImpor.getCellEditor();

		TipoTerminosImporTableCell tipoterminosimporTableCellFk=(TipoTerminosImporTableCell)tableCellEditorTipoTerminosImpor;

		if(tipoterminosimporTableCellFk!=null) {
			tipoterminosimporTableCellFk.settipoterminosimporsForeignKey(tipoterminosimporsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoterminosimporTableCellFk.setRowActual(intSelectedRow);
			//tipoterminosimporTableCellFk.settipoterminosimporsForeignKeyActual(tipoterminosimporsForeignKey);
		//}


		if(tipoterminosimporTableCellFk!=null) {
			tipoterminosimporTableCellFk.RecargarTipoTerminosImporsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoPedidoCompra(List<EstadoPedidoCompra> estadopedidocomprasForeignKey)throws Exception{
		TableColumn tableColumnEstadoPedidoCompra=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA));
		TableCellEditor tableCellEditorEstadoPedidoCompra =tableColumnEstadoPedidoCompra.getCellEditor();

		EstadoPedidoCompraTableCell estadopedidocompraTableCellFk=(EstadoPedidoCompraTableCell)tableCellEditorEstadoPedidoCompra;

		if(estadopedidocompraTableCellFk!=null) {
			estadopedidocompraTableCellFk.setestadopedidocomprasForeignKey(estadopedidocomprasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadopedidocompraTableCellFk.setRowActual(intSelectedRow);
			//estadopedidocompraTableCellFk.setestadopedidocomprasForeignKeyActual(estadopedidocomprasForeignKey);
		//}


		if(estadopedidocompraTableCellFk!=null) {
			estadopedidocompraTableCellFk.RecargarEstadoPedidoComprasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormato(List<Formato> formatosForeignKey)throws Exception{
		TableColumn tableColumnFormato=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDFORMATO));
		TableCellEditor tableCellEditorFormato =tableColumnFormato.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormato;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cliente_proveedor (Long id) throws Exception {
		this.setActualClienteProveedorForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_empleado (Long id) throws Exception {
		this.setActualEmpleadoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_tipo_cambio (Long id) throws Exception {
		this.setActualTipoCambioForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesPedidoCompraImpor(false);
			
			//if(!this.isEsNuevoPedidoCompraImpor) {								
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				
			}
			
			if(this.permiteMantenimiento(this.pedidocompraimpor)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoPedidoCompraImpor=true;
					this.inicializarActualizarBindingTablaPedidoCompraImpor(false);
					this.isEsNuevoPedidoCompraImpor=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoPedidoCompraImpor=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoPedidoCompraImpor=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesPedidoCompraImpor(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPedidoCompraImpor(false);
				
				this.habilitarDeshabilitarControlesPedidoCompraImpor(false);
			
												
				
				if(PedidoCompraImporJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetallePedidoCompraImpor();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoPedidoCompraImporActionPerformed(evt,pedidocompraimporSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualPedidoCompraImpor(this.pedidocompraimpor,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,pedidocompraimporSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.pedidocompraimpor.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(PedidoCompraImpor.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompraImpor.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				this.pedidocompraimpor.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				this.pedidocompraimpor.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.pedidocompraimpor)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((PedidoCompraImporModel) this.jTableDatosPedidoCompraImpor.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoPedidoCompraImpor=true;
				this.inicializarActualizarBindingTablaPedidoCompraImpor(false);
				this.isEsNuevoPedidoCompraImpor=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesPedidoCompraImpor(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPedidoCompraImpor(false);
				
				this.habilitarDeshabilitarControlesPedidoCompraImpor(false);
				
				
				
				if(PedidoCompraImporJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetallePedidoCompraImpor();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosPedidoCompraImpor.getRowCount()>=1) {
				jTableDatosPedidoCompraImpor.removeRowSelectionInterval(0, jTableDatosPedidoCompraImpor.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesPedidoCompraImpor(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaPedidoCompraImpor(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPedidoCompraImpor(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedidoCompraImpor(false) ;
			
			this.isEsNuevoPedidoCompraImpor=false;
			
			if(PedidoCompraImporJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetallePedidoCompraImpor();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingPedidoCompraImpor(false);
				
				//SI ES MANUAL
				if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualPedidoCompraImpor();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoPedidoCompraImpor--;			
			//PedidoCompraImpor pedidocompraimporAux= new PedidoCompraImpor();			
			//pedidocompraimporAux.setId(this.iIdNuevoPedidoCompraImpor);
			
			if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaPedidoCompraImpor();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
			
			this.pedidocompraimpor.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.pedidocompraimporLogic.getPedidoCompraImpors().add(this.pedidocompraimporAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.pedidocompraimpors.add(this.pedidocompraimporAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaPedidoCompraImpor(false);
			
			this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(this.getIndiceNuevoPedidoCompraImpor(), this.getIndiceNuevoPedidoCompraImpor());
			
			int iLastRow =  this.jTableDatosPedidoCompraImpor.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosPedidoCompraImpor.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosPedidoCompraImpor.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaPedidoCompraImpor(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedidoCompraImpor(false);
			
			//SI ES MANUAL
			if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPedidoCompraImpor();
			}
			
			//this.abrirFrameTreePedidoCompraImpor();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Pedido CompraS ?", "MANTENIMIENTO DE Pedido Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionPedidoCompraImpor.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralPedidoCompraImpor();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.pedidocompraimporReturnGeneral=pedidocompraimporLogic.procesarImportacionPedidoCompraImporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.pedidocompraimporParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarPedidoCompraImporReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionPedidoCompraImpor.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionPedidoCompraImpor.setFileImportacion(this.jInternalFrameImportacionPedidoCompraImpor.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionPedidoCompraImpor.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionPedidoCompraImpor.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionPedidoCompraImpor.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionPedidoCompraImpor.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados=new ArrayList<PedidoCompraImpor>();		

		pedidocompraimporsSeleccionados=this.getPedidoCompraImporsSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("PedidoCompraImporBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"PedidoCompraImporBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReportePedidoCompraImpors("Todos",pedidocompraimporsSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case PedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Modulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Modulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Modulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Modulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPAIS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Pais_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Pais_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Pais_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Pais_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTEPROVEEDOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ClienteProveedor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ClienteProveedor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ClienteProveedor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ClienteProveedor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDUSUARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Usuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Usuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Usuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Usuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCambio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCambio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCambio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCambio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOPRORRATEOIMPOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoProrrateoImpor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoProrrateoImpor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoProrrateoImpor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoProrrateoImpor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEMBARCADOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Embarcador_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Embarcador_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Embarcador_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Embarcador_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoViaTransporte_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoViaTransporte_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoViaTransporte_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoViaTransporte_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPUERTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Puerto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Puerto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Puerto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Puerto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPUERTODESTINO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_PuertoDestino_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_PuertoDestino_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_PuertoDestino_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_PuertoDestino_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOTERMINOSIMPOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoTerminosImpor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoTerminosImpor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoTerminosImpor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoTerminosImpor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoPedidoCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoPedidoCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoPedidoCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoPedidoCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rmaPago_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rmaPago_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rmaPago_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rmaPago_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroDui_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroDui_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroDui_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroDui_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cuencial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cuencial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cuencial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cuencial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroOrden_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroOrden_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroOrden_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroOrden_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_USOEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_oEn_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_oEn_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_oEn_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_oEn_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_sponsable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_sponsable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_sponsable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_sponsable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_denCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_denCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_denCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_denCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_garEntrega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_garEntrega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_garEntrega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_garEntrega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEntrega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEntrega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEntrega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEntrega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEntregaCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEntregaCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEntregaCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEntregaCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreSeguro_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreSeguro_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreSeguro_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreSeguro_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreConsignatario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreConsignatario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreConsignatario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreConsignatario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_PRECIOS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecios_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecios_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecios_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecios_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FLETE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ete_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ete_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ete_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ete_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_SEGURO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_guro_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_guro_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_guro_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_guro_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_GASTOS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_stos_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_stos_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_stos_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_stos_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_CFR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_r_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_r_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_r_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_r_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_CIF:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_f_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_f_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_f_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_f_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDFORMATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Formato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Formato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Formato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Formato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case PedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoria="id_modulo";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoria="id_pais";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTEPROVEEDOR:
					sNombreCampoCategoria="id_cliente_proveedor";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoria="id_usuario";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoria="id_tipo_cambio";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOPRORRATEOIMPOR:
					sNombreCampoCategoria="id_tipo_prorrateo_impor";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEMBARCADOR:
					sNombreCampoCategoria="id_embarcador";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE:
					sNombreCampoCategoria="id_tipo_via_transporte";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPUERTO:
					sNombreCampoCategoria="id_puerto";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPUERTODESTINO:
					sNombreCampoCategoria="id_puerto_destino";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOTERMINOSIMPOR:
					sNombreCampoCategoria="id_tipo_terminos_impor";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA:
					sNombreCampoCategoria="id_estado_pedido_compra";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO:
					sNombreCampoCategoria="forma_pago";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI:
					sNombreCampoCategoria="numero_dui";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL:
					sNombreCampoCategoria="secuencial";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN:
					sNombreCampoCategoria="numero_orden";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_USOEN:
					sNombreCampoCategoria="uso_en";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE:
					sNombreCampoCategoria="responsable";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA:
					sNombreCampoCategoria="orden_compra";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA:
					sNombreCampoCategoria="lugar_entrega";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA:
					sNombreCampoCategoria="fecha_entrega";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE:
					sNombreCampoCategoria="fecha_entrega_cliente";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO:
					sNombreCampoCategoria="nombre_seguro";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO:
					sNombreCampoCategoria="nombre_consignatario";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_PRECIOS:
					sNombreCampoCategoria="precios";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoria="flete";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_SEGURO:
					sNombreCampoCategoria="seguro";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_GASTOS:
					sNombreCampoCategoria="gastos";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_CFR:
					sNombreCampoCategoria="cfr";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_CIF:
					sNombreCampoCategoria="cif";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoria="id_formato";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case PedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoriaValor="id_modulo";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoriaValor="id_pais";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTEPROVEEDOR:
					sNombreCampoCategoriaValor="id_cliente_proveedor";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoriaValor="id_usuario";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoriaValor="id_tipo_cambio";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOPRORRATEOIMPOR:
					sNombreCampoCategoriaValor="id_tipo_prorrateo_impor";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEMBARCADOR:
					sNombreCampoCategoriaValor="id_embarcador";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE:
					sNombreCampoCategoriaValor="id_tipo_via_transporte";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPUERTO:
					sNombreCampoCategoriaValor="id_puerto";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPUERTODESTINO:
					sNombreCampoCategoriaValor="id_puerto_destino";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOTERMINOSIMPOR:
					sNombreCampoCategoriaValor="id_tipo_terminos_impor";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA:
					sNombreCampoCategoriaValor="id_estado_pedido_compra";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO:
					sNombreCampoCategoriaValor="forma_pago";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI:
					sNombreCampoCategoriaValor="numero_dui";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL:
					sNombreCampoCategoriaValor="secuencial";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN:
					sNombreCampoCategoriaValor="numero_orden";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_USOEN:
					sNombreCampoCategoriaValor="uso_en";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE:
					sNombreCampoCategoriaValor="responsable";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA:
					sNombreCampoCategoriaValor="orden_compra";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA:
					sNombreCampoCategoriaValor="lugar_entrega";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA:
					sNombreCampoCategoriaValor="fecha_entrega";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE:
					sNombreCampoCategoriaValor="fecha_entrega_cliente";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO:
					sNombreCampoCategoriaValor="nombre_seguro";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO:
					sNombreCampoCategoriaValor="nombre_consignatario";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_PRECIOS:
					sNombreCampoCategoriaValor="precios";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoriaValor="flete";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_SEGURO:
					sNombreCampoCategoriaValor="seguro";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_GASTOS:
					sNombreCampoCategoriaValor="gastos";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_CFR:
					sNombreCampoCategoriaValor="cfr";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_CIF:
					sNombreCampoCategoriaValor="cif";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoriaValor="id_formato";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case PedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_modulo");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPAIS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pais",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_pais");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTEPROVEEDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente Proveedor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente_proveedor");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_usuario");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOCAMBIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Cambio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_cambio");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOPRORRATEOIMPOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Prorrateo Impor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_prorrateo_impor");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEMBARCADOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Embarcador",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_embarcador");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Via Transporte",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_via_transporte");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPUERTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Puerto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_puerto");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPUERTODESTINO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Puerto Destino",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_puerto_destino");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOTERMINOSIMPOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Terminos Impor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_terminos_impor");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Pedo Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_pedido_compra");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Forma Pago",sNombreCampoCategoria,sNombreCampoCategoriaValor,"forma_pago");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Dui",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_dui");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Secuencial",sNombreCampoCategoria,sNombreCampoCategoriaValor,"secuencial");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Orden",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_orden");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_USOEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Uso En",sNombreCampoCategoria,sNombreCampoCategoriaValor,"uso_en");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Responsable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"responsable");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Orden Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"orden_compra");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Lugar Entrega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"lugar_entrega");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Entrega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_entrega");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Entrega Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_entrega_cliente");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Seguro",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_seguro");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Consignatario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_consignatario");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_PRECIOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precios",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precios");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FLETE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Flete",sNombreCampoCategoria,sNombreCampoCategoriaValor,"flete");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_SEGURO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Seguro",sNombreCampoCategoria,sNombreCampoCategoriaValor,"seguro");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_GASTOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Gastos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"gastos");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_CFR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cfr",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cfr");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_CIF:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cif",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cif");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDFORMATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados=new ArrayList<PedidoCompraImpor>();		
		
		pedidocompraimporsSeleccionados=this.getPedidoCompraImporsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidocompraimpor";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("PedidoCompraImpors");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case PedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDMODULO);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPAIS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDPAIS);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getpais_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTEPROVEEDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTEPROVEEDOR);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getclienteproveedor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDUSUARIO);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getusuario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOCAMBIO);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.gettipocambio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOPRORRATEOIMPOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOPRORRATEOIMPOR);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.gettipoprorrateoimpor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDEMBARCADOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDEMBARCADOR);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getembarcador_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.gettipoviatransporte_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPUERTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDPUERTO);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getpuerto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDPUERTODESTINO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDPUERTODESTINO);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getpuertodestino_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDTIPOTERMINOSIMPOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOTERMINOSIMPOR);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.gettipoterminosimpor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getestadopedidocompra_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getforma_pago());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getnumero_dui());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getsecuencial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getnumero_orden());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_USOEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_USOEN);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getuso_en());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getresponsable());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getorden_compra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getlugar_entrega());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getfecha_entrega());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getfecha_entrega_cliente());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getnombre_seguro());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getnombre_consignatario());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_PRECIOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_PRECIOS);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getprecios());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_FLETE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FLETE);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getflete());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_SEGURO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_SEGURO);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getseguro());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_GASTOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_GASTOS);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getgastos());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_CFR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_CFR);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getcfr());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_CIF:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_CIF);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getcif());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDFORMATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDFORMATO);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getformato_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraImporConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(PedidoCompraImpor pedidocompraimpor:pedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompraimpor.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelPedidoCompraImpor(row);				
			//	iRow++;
			//}				
			
			//for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimporsSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelPedidoCompraImpor(pedidocompraimporAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedidoCompraImpor(false);
			
			//SI ES MANUAL
			if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPedidoCompraImpor();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedidoCompraImpor(false);
			
			//SI ES MANUAL
			if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualPedidoCompraImpor();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedidoCompraImpor(false);
			
			//SI ES MANUAL
			if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualPedidoCompraImpor();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaPedidoCompraImpor() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosPedidoCompraImpor.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosPedidoCompraImpor.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosPedidoCompraImpor.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosPedidoCompraImpor.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosPedidoCompraImpor.setMinimumSize(dimensionMinimum);
		this.jTableDatosPedidoCompraImpor.setMaximumSize(dimensionMaximum);
		this.jTableDatosPedidoCompraImpor.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingPedidoCompraImpor(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingPedidoCompraImpor(esInicializar,true);
	}
	
	public void inicializarActualizarBindingPedidoCompraImpor(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaPedidoCompraImpor(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesPedidoCompraImpor(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasPedidoCompraImpor(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesPedidoCompraImpor(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesPedidoCompraImpor(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !PedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualPedidoCompraImpor() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaPedidoCompraImpor();
		
		this.inicializarActualizarBindingBotonesManualPedidoCompraImpor(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualPedidoCompraImpor();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesPedidoCompraImpor() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualPedidoCompraImpor(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualPedidoCompraImpor(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosPedidoCompraImpor.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosPedidoCompraImpor.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReportePedidoCompraImpor.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormPedidoCompraImpor.jCheckBoxPostAccionNuevoPedidoCompraImpor.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormPedidoCompraImpor.jCheckBoxPostAccionSinCerrarPedidoCompraImpor.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormPedidoCompraImpor.jCheckBoxPostAccionSinMensajePedidoCompraImpor.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosPedidoCompraImpor.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosPedidoCompraImpor.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReportePedidoCompraImpor.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jCheckBoxPostAccionNuevoPedidoCompraImpor.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormPedidoCompraImpor.jCheckBoxPostAccionSinCerrarPedidoCompraImpor.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormPedidoCompraImpor.jCheckBoxPostAccionSinMensajePedidoCompraImpor.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionPedidoCompraImpor.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionPedidoCompraImpor.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesPedidoCompraImpor.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoPedidoCompraImpor!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesPedidoCompraImpor.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesPedidoCompraImpor.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarPedidoCompraImpor.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesPedidoCompraImpor.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoPedidoCompraImpor!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesPedidoCompraImpor.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralPedidoCompraImpor.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPedidoCompraImpor(Boolean esInicializar) throws Exception {
		try	{	
			if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualPedidoCompraImpor(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesPedidoCompraImpor() throws Exception {
		try	{
			if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualPedidoCompraImpor();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetallePedidoCompraImpor() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualPedidoCompraImpor() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesPedidoCompraImpor.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesPedidoCompraImpor.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesPedidoCompraImpor.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesPedidoCompraImpor.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesPedidoCompraImpor.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesPedidoCompraImpor.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionPedidoCompraImpor.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionPedidoCompraImpor.addItem(reporte);
			}
			
			
			if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionPedidoCompraImpor.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionPedidoCompraImpor.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesPedidoCompraImpor.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesPedidoCompraImpor.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesPedidoCompraImpor.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesPedidoCompraImpor.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarPedidoCompraImpor.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarPedidoCompraImpor.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarPedidoCompraImpor.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPedidoCompraImpor();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPedidoCompraImpor() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoPedidoCompraImpor!=null) {
				this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoPedidoCompraImpor!=null) {
				this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoPedidoCompraImpor!=null) {
				
				if(this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=PedidoCompraImporConstantesFunciones.getTiposSeleccionarPedidoCompraImpor(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=PedidoCompraImporConstantesFunciones.getTiposSeleccionarPedidoCompraImpor(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=PedidoCompraImporConstantesFunciones.getTiposSeleccionarPedidoCompraImpor(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualPedidoCompraImpor()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_clienteFK_IdClientePedidoCompraImpor.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClientePedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_cliente_proveedorFK_IdClienteProveedorPedidoCompraImpor.getSelectedItem()!=null){this.id_cliente_proveedorFK_IdClienteProveedor=((Cliente)this.jComboBoxid_cliente_proveedorFK_IdClienteProveedorPedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_embarcadorFK_IdEmbarcadorPedidoCompraImpor.getSelectedItem()!=null){this.id_embarcadorFK_IdEmbarcador=((Embarcador)this.jComboBoxid_embarcadorFK_IdEmbarcadorPedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleadoFK_IdEmpleadoPedidoCompraImpor.getSelectedItem()!=null){this.id_empleadoFK_IdEmpleado=((Empleado)this.jComboBoxid_empleadoFK_IdEmpleadoPedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor.getSelectedItem()!=null){this.id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra=((EstadoPedidoCompra)this.jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_paisFK_IdPaisPedidoCompraImpor.getSelectedItem()!=null){this.id_paisFK_IdPais=((Pais)this.jComboBoxid_paisFK_IdPaisPedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_puertoFK_IdPuertoPedidoCompraImpor.getSelectedItem()!=null){this.id_puertoFK_IdPuerto=((Puerto)this.jComboBoxid_puertoFK_IdPuertoPedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_puerto_destinoFK_IdPuertoDestinoPedidoCompraImpor.getSelectedItem()!=null){this.id_puerto_destinoFK_IdPuertoDestino=((Puerto)this.jComboBoxid_puerto_destinoFK_IdPuertoDestinoPedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_prorrateo_imporFK_IdTipoProrrateoImporPedidoCompraImpor.getSelectedItem()!=null){this.id_tipo_prorrateo_imporFK_IdTipoProrrateoImpor=((TipoProrrateoImpor)this.jComboBoxid_tipo_prorrateo_imporFK_IdTipoProrrateoImporPedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_terminos_imporFK_IdTipoTerminosImporPedidoCompraImpor.getSelectedItem()!=null){this.id_tipo_terminos_imporFK_IdTipoTerminosImpor=((TipoTerminosImpor)this.jComboBoxid_tipo_terminos_imporFK_IdTipoTerminosImporPedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_via_transporteFK_IdTipoViaTransportePedidoCompraImpor.getSelectedItem()!=null){this.id_tipo_via_transporteFK_IdTipoViaTransporte=((TipoViaTransporte)this.jComboBoxid_tipo_via_transporteFK_IdTipoViaTransportePedidoCompraImpor.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasPedidoCompraImpor(Boolean esInicializar) throws Exception {				
		if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualPedidoCompraImpor();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaPedidoCompraImpor() throws Exception {
		this.inicializarActualizarBindingTablaPedidoCompraImpor(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByPedidoCompraImpor() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByPedidoCompraImpor.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByPedidoCompraImpor.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPedidoCompraImpor.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByPedidoCompraImpor.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPedidoCompraImpor.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosPedidoCompraImporOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImporOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByPedidoCompraImpor.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPedidoCompraImpor.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByPedidoCompraImpor.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaPedidoCompraImpor(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=pedidocompraimporLogic.getPedidoCompraImpors().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=pedidocompraimpors.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosPedidoCompraImpor.setModel(new PedidoCompraImporModel(this.pedidocompraimporLogic.getPedidoCompraImpors(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosPedidoCompraImpor.setModel(new PedidoCompraImporModel(this.pedidocompraimpors,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByPedidoCompraImpor!=null && this.jInternalFrameOrderByPedidoCompraImpor.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByPedidoCompraImpor();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+PedidoCompraImporConstantesFunciones.SCLASSWEBTITULO,pedidocompraimporConstantesFunciones.resaltarSeleccionarPedidoCompraImpor,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+PedidoCompraImporConstantesFunciones.SCLASSWEBTITULO,pedidocompraimporConstantesFunciones.resaltarSeleccionarPedidoCompraImpor,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_ID));

		if(this.pedidocompraimporConstantesFunciones.mostraridPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidocompraimporConstantesFunciones.resaltaridPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activaridPedidoCompraImpor,iSizeTabla,this,true,"idPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltaridPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activaridPedidoCompraImpor,this,true,"idPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_empresaPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_empresaPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_empresaPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_empresaPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_empresaPedidoCompraImpor,false,"id_empresaPedidoCompraImpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_sucursalPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_sucursalPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_sucursalPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_sucursalPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_sucursalPedidoCompraImpor,false,"id_sucursalPedidoCompraImpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDMODULO));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_moduloPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDMODULO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ModuloTableCell(this.modulosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_moduloPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_moduloPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new ModuloTableCell(this.modulosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_moduloPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_moduloPedidoCompraImpor,false,"id_moduloPedidoCompraImpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_ejercicioPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_ejercicioPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_ejercicioPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_ejercicioPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_ejercicioPedidoCompraImpor,false,"id_ejercicioPedidoCompraImpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDPERIODO));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_periodoPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_periodoPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_periodoPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_periodoPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_periodoPedidoCompraImpor,false,"id_periodoPedidoCompraImpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDPAIS));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_paisPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDPAIS,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PaisTableCell(this.paissForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_paisPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_paisPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new PaisTableCell(this.paissForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_paisPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_paisPedidoCompraImpor,true,"id_paisPedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTE));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_clientePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_clientePedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_clientePedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_clientePedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_clientePedidoCompraImpor,true,"id_clientePedidoCompraImpor","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTEPROVEEDOR));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_cliente_proveedorPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTEPROVEEDOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clienteproveedorsForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_cliente_proveedorPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_cliente_proveedorPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clienteproveedorsForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_cliente_proveedorPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_cliente_proveedorPedidoCompraImpor,true,"id_cliente_proveedorPedidoCompraImpor","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_empleadoPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_empleadoPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_empleadoPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_empleadoPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_empleadoPedidoCompraImpor,true,"id_empleadoPedidoCompraImpor","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDUSUARIO));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_usuarioPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDUSUARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new UsuarioTableCell(this.usuariosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_usuarioPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_usuarioPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new UsuarioTableCell(this.usuariosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_usuarioPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_usuarioPedidoCompraImpor,false,"id_usuarioPedidoCompraImpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDTIPOCAMBIO));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_tipo_cambioPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDTIPOCAMBIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoCambioTableCell(this.tipocambiosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_tipo_cambioPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_tipo_cambioPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new TipoCambioTableCell(this.tipocambiosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_tipo_cambioPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_tipo_cambioPedidoCompraImpor,true,"id_tipo_cambioPedidoCompraImpor","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDMONEDA));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_monedaPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDMONEDA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedasForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_monedaPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_monedaPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedasForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_monedaPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_monedaPedidoCompraImpor,false,"id_monedaPedidoCompraImpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDTIPOPRORRATEOIMPOR));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_tipo_prorrateo_imporPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDTIPOPRORRATEOIMPOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoProrrateoImporTableCell(this.tipoprorrateoimporsForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_tipo_prorrateo_imporPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_tipo_prorrateo_imporPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new TipoProrrateoImporTableCell(this.tipoprorrateoimporsForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_tipo_prorrateo_imporPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_tipo_prorrateo_imporPedidoCompraImpor,true,"id_tipo_prorrateo_imporPedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDEMBARCADOR));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_embarcadorPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDEMBARCADOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmbarcadorTableCell(this.embarcadorsForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_embarcadorPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_embarcadorPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new EmbarcadorTableCell(this.embarcadorsForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_embarcadorPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_embarcadorPedidoCompraImpor,true,"id_embarcadorPedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_tipo_via_transportePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoViaTransporteTableCell(this.tipoviatransportesForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_tipo_via_transportePedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_tipo_via_transportePedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new TipoViaTransporteTableCell(this.tipoviatransportesForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_tipo_via_transportePedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_tipo_via_transportePedidoCompraImpor,true,"id_tipo_via_transportePedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDPUERTO));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_puertoPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDPUERTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PuertoTableCell(this.puertosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_puertoPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_puertoPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new PuertoTableCell(this.puertosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_puertoPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_puertoPedidoCompraImpor,true,"id_puertoPedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDPUERTODESTINO));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_puerto_destinoPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDPUERTODESTINO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PuertoTableCell(this.puertodestinosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_puerto_destinoPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_puerto_destinoPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new PuertoTableCell(this.puertodestinosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_puerto_destinoPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_puerto_destinoPedidoCompraImpor,true,"id_puerto_destinoPedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDTIPOTERMINOSIMPOR));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_tipo_terminos_imporPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDTIPOTERMINOSIMPOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoTerminosImporTableCell(this.tipoterminosimporsForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_tipo_terminos_imporPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_tipo_terminos_imporPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new TipoTerminosImporTableCell(this.tipoterminosimporsForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_tipo_terminos_imporPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_tipo_terminos_imporPedidoCompraImpor,true,"id_tipo_terminos_imporPedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_estado_pedido_compraPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoPedidoCompraTableCell(this.estadopedidocomprasForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_estado_pedido_compraPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_estado_pedido_compraPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new EstadoPedidoCompraTableCell(this.estadopedidocomprasForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_estado_pedido_compraPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_estado_pedido_compraPedidoCompraImpor,true,"id_estado_pedido_compraPedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO));

		if(this.pedidocompraimporConstantesFunciones.mostrarforma_pagoPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraimporConstantesFunciones.resaltarforma_pagoPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarforma_pagoPedidoCompraImpor,iSizeTabla,this,true,"forma_pagoPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarforma_pagoPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarforma_pagoPedidoCompraImpor,this,true,"forma_pagoPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI));

		if(this.pedidocompraimporConstantesFunciones.mostrarnumero_duiPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraimporConstantesFunciones.resaltarnumero_duiPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarnumero_duiPedidoCompraImpor,iSizeTabla,this,true,"numero_duiPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarnumero_duiPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarnumero_duiPedidoCompraImpor,this,true,"numero_duiPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL));

		if(this.pedidocompraimporConstantesFunciones.mostrarsecuencialPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraimporConstantesFunciones.resaltarsecuencialPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarsecuencialPedidoCompraImpor,iSizeTabla,this,true,"secuencialPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarsecuencialPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarsecuencialPedidoCompraImpor,this,true,"secuencialPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN));

		if(this.pedidocompraimporConstantesFunciones.mostrarnumero_ordenPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidocompraimporConstantesFunciones.resaltarnumero_ordenPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarnumero_ordenPedidoCompraImpor,iSizeTabla,this,true,"numero_ordenPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarnumero_ordenPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarnumero_ordenPedidoCompraImpor,this,true,"numero_ordenPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_USOEN));

		if(this.pedidocompraimporConstantesFunciones.mostraruso_enPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_USOEN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraimporConstantesFunciones.resaltaruso_enPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activaruso_enPedidoCompraImpor,iSizeTabla,this,true,"uso_enPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltaruso_enPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activaruso_enPedidoCompraImpor,this,true,"uso_enPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE));

		if(this.pedidocompraimporConstantesFunciones.mostrarresponsablePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraimporConstantesFunciones.resaltarresponsablePedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarresponsablePedidoCompraImpor,iSizeTabla,this,true,"responsablePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarresponsablePedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarresponsablePedidoCompraImpor,this,true,"responsablePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA));

		if(this.pedidocompraimporConstantesFunciones.mostrarorden_compraPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraimporConstantesFunciones.resaltarorden_compraPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarorden_compraPedidoCompraImpor,iSizeTabla,this,true,"orden_compraPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarorden_compraPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarorden_compraPedidoCompraImpor,this,true,"orden_compraPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA));

		if(this.pedidocompraimporConstantesFunciones.mostrarlugar_entregaPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraimporConstantesFunciones.resaltarlugar_entregaPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarlugar_entregaPedidoCompraImpor,iSizeTabla,this,true,"lugar_entregaPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarlugar_entregaPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarlugar_entregaPedidoCompraImpor,this,true,"lugar_entregaPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION));

		if(this.pedidocompraimporConstantesFunciones.mostrardescripcionPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraimporConstantesFunciones.resaltardescripcionPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activardescripcionPedidoCompraImpor,iSizeTabla,this,true,"descripcionPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltardescripcionPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activardescripcionPedidoCompraImpor,this,true,"descripcionPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_FECHA));

		if(this.pedidocompraimporConstantesFunciones.mostrarfechaPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_FECHA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.pedidocompraimporConstantesFunciones.resaltarfechaPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarfechaPedidoCompraImpor,iSizeTabla,this,true,"fechaPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarfechaPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarfechaPedidoCompraImpor,this,true,"fechaPedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION));

		if(this.pedidocompraimporConstantesFunciones.mostrarfecha_emisionPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.pedidocompraimporConstantesFunciones.resaltarfecha_emisionPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarfecha_emisionPedidoCompraImpor,iSizeTabla,this,true,"fecha_emisionPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarfecha_emisionPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarfecha_emisionPedidoCompraImpor,this,true,"fecha_emisionPedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA));

		if(this.pedidocompraimporConstantesFunciones.mostrarfecha_entregaPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.pedidocompraimporConstantesFunciones.resaltarfecha_entregaPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarfecha_entregaPedidoCompraImpor,iSizeTabla,this,true,"fecha_entregaPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarfecha_entregaPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarfecha_entregaPedidoCompraImpor,this,true,"fecha_entregaPedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE));

		if(this.pedidocompraimporConstantesFunciones.mostrarfecha_entrega_clientePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.pedidocompraimporConstantesFunciones.resaltarfecha_entrega_clientePedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarfecha_entrega_clientePedidoCompraImpor,iSizeTabla,this,true,"fecha_entrega_clientePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarfecha_entrega_clientePedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarfecha_entrega_clientePedidoCompraImpor,this,true,"fecha_entrega_clientePedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO));

		if(this.pedidocompraimporConstantesFunciones.mostrarnombre_seguroPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraimporConstantesFunciones.resaltarnombre_seguroPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarnombre_seguroPedidoCompraImpor,iSizeTabla,this,true,"nombre_seguroPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarnombre_seguroPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarnombre_seguroPedidoCompraImpor,this,true,"nombre_seguroPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO));

		if(this.pedidocompraimporConstantesFunciones.mostrarnombre_consignatarioPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraimporConstantesFunciones.resaltarnombre_consignatarioPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarnombre_consignatarioPedidoCompraImpor,iSizeTabla,this,true,"nombre_consignatarioPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarnombre_consignatarioPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarnombre_consignatarioPedidoCompraImpor,this,true,"nombre_consignatarioPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_PRECIOS));

		if(this.pedidocompraimporConstantesFunciones.mostrarpreciosPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_PRECIOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraimporConstantesFunciones.resaltarpreciosPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarpreciosPedidoCompraImpor,iSizeTabla,this,true,"preciosPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarpreciosPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarpreciosPedidoCompraImpor,this,true,"preciosPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_FLETE));

		if(this.pedidocompraimporConstantesFunciones.mostrarfletePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_FLETE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidocompraimporConstantesFunciones.resaltarfletePedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarfletePedidoCompraImpor,iSizeTabla,this,true,"fletePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarfletePedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarfletePedidoCompraImpor,this,true,"fletePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_SEGURO));

		if(this.pedidocompraimporConstantesFunciones.mostrarseguroPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_SEGURO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidocompraimporConstantesFunciones.resaltarseguroPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarseguroPedidoCompraImpor,iSizeTabla,this,true,"seguroPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarseguroPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarseguroPedidoCompraImpor,this,true,"seguroPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_GASTOS));

		if(this.pedidocompraimporConstantesFunciones.mostrargastosPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_GASTOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidocompraimporConstantesFunciones.resaltargastosPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activargastosPedidoCompraImpor,iSizeTabla,this,true,"gastosPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltargastosPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activargastosPedidoCompraImpor,this,true,"gastosPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_CFR));

		if(this.pedidocompraimporConstantesFunciones.mostrarcfrPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_CFR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidocompraimporConstantesFunciones.resaltarcfrPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarcfrPedidoCompraImpor,iSizeTabla,this,true,"cfrPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarcfrPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarcfrPedidoCompraImpor,this,true,"cfrPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_CIF));

		if(this.pedidocompraimporConstantesFunciones.mostrarcifPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_CIF,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidocompraimporConstantesFunciones.resaltarcifPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarcifPedidoCompraImpor,iSizeTabla,this,true,"cifPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltarcifPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activarcifPedidoCompraImpor,this,true,"cifPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_TOTAL));

		if(this.pedidocompraimporConstantesFunciones.mostrartotalPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_TOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidocompraimporConstantesFunciones.resaltartotalPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activartotalPedidoCompraImpor,iSizeTabla,this,true,"totalPedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraimporConstantesFunciones.resaltartotalPedidoCompraImpor,this.pedidocompraimporConstantesFunciones.activartotalPedidoCompraImpor,this,true,"totalPedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDFORMATO));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_formatoPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDFORMATO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_formatoPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_formatoPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_formatoPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_formatoPedidoCompraImpor,true,"id_formatoPedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDANIO));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_anioPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_anioPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_anioPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_anioPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_anioPedidoCompraImpor,true,"id_anioPedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,PedidoCompraImporConstantesFunciones.LABEL_IDMES));

		if(this.pedidocompraimporConstantesFunciones.mostrarid_mesPedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraImporConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_mesPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_mesPedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.pedidocompraimporConstantesFunciones.resaltarid_mesPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarid_mesPedidoCompraImpor,true,"id_mesPedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosDetallePedidoCompraImpor && this.pedidocompraimporConstantesFunciones.mostrarDetallePedidoCompraImporPedidoCompraImpor && !PedidoCompraImporConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Detalle Pedido Compras");
				tableColumn.setHeaderValue("Detalle Pedido Compras");
				tableColumn.setCellRenderer(new DetallePedidoCompraImporTableCell(pedidocompraimporConstantesFunciones.resaltarDetallePedidoCompraImporPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarDetallePedidoCompraImporPedidoCompraImpor));
				tableColumn.setCellEditor(new DetallePedidoCompraImporTableCell(pedidocompraimporConstantesFunciones.resaltarDetallePedidoCompraImporPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarDetallePedidoCompraImporPedidoCompraImpor));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosPedidoCompraImpor.addColumn(tableColumn);
			}

			if(this.isTienePermisosLiquidacionImpuestoImpor && this.pedidocompraimporConstantesFunciones.mostrarLiquidacionImpuestoImporPedidoCompraImpor && !PedidoCompraImporConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Liquidacion Impuesto Impores");
				tableColumn.setHeaderValue("Liquidacion Impuesto Impores");
				tableColumn.setCellRenderer(new LiquidacionImpuestoImporTableCell(pedidocompraimporConstantesFunciones.resaltarLiquidacionImpuestoImporPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarLiquidacionImpuestoImporPedidoCompraImpor));
				tableColumn.setCellEditor(new LiquidacionImpuestoImporTableCell(pedidocompraimporConstantesFunciones.resaltarLiquidacionImpuestoImporPedidoCompraImpor,this,this.pedidocompraimporConstantesFunciones.activarLiquidacionImpuestoImporPedidoCompraImpor));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosPedidoCompraImpor.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.pedidocompraimporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.pedidocompraimporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosPedidoCompraImpor.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				//tableColumn= new TableColumn();
				//tableColumn.setIdentifier(sLabelColumnAccion);
				//tableColumn.setHeaderValue(sLabelColumnAccion);
				//tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.pedidocompraimporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				//tableColumn.setCellEditor(new IdTableCell(this,false,false,this.pedidocompraimporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				//tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				//tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				//this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				//this.jTableDatosPedidoCompraImpor.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarPedidoCompraImpor && this.isPermisoGuardarCambiosPedidoCompraImpor) {
					//tableColumn= new TableColumn();
					//tableColumn.setIdentifier(Constantes2.S_ELI);
					//tableColumn.setHeaderValue(sLabelColumnAccionEli);
					//tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.pedidocompraimporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					//tableColumn.setCellEditor(new IdTableCell(this,false,true,this.pedidocompraimporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					//tableColumn.setPreferredWidth(65); 	 
					//tableColumn.setWidth(65); 	 
					//tableColumn.setMinWidth(65); 
					//tableColumn.setMaxWidth(65);
					
					//this.iWidthTableDefinicion+=65;
						
					//this.jTableDatosPedidoCompraImpor.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.pedidocompraimporSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosPedidoCompraImpor.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosPedidoCompraImpor.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarPedidoCompraImpor && this.isPermisoGuardarCambiosPedidoCompraImpor) {
				//iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		//iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.pedidocompraimporSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarPedidoCompraImpor && this.isPermisoGuardarCambiosPedidoCompraImpor) {
				////REUBICA ELIMINAR SIMPLE
				//jTableDatosPedidoCompraImpor.moveColumn(this.jTableDatosPedidoCompraImpor.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				//iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		//jTableDatosPedidoCompraImpor.moveColumn(this.jTableDatosPedidoCompraImpor.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.pedidocompraimporSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosPedidoCompraImpor.moveColumn(this.jTableDatosPedidoCompraImpor.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosPedidoCompraImpor.moveColumn(this.jTableDatosPedidoCompraImpor.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosPedidoCompraImpor.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosPedidoCompraImpor.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosPedidoCompraImpor,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosPedidoCompraImpor.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!PedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosPedidoCompraImpor.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosPedidoCompraImpor.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosPedidoCompraImpor.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=pedidocompraimporLogic.getPedidoCompraImpors().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=pedidocompraimpors.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosPedidoCompraImpor.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosPedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosPedidoCompraImpor();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoPedidoCompraImpor=false;
					
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			
				if(this.pedidocompraimporSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosPedidoCompraImpor.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.pedidocompraimpor.getsType().equals("DUPLICADO")
				   || this.pedidocompraimpor.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoPedidoCompraImpor=true;
				
				} else {
					this.isEsNuevoPedidoCompraImpor=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
					if(this.pedidocompraimpor.getId()>=0 && !this.pedidocompraimpor.getIsNew()) {						
						this.isEsNuevoPedidoCompraImpor=false;
						
					} else {
						this.isEsNuevoPedidoCompraImpor=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoPedidoCompraImpor(esRelaciones);						
				
				this.seleccionarPedidoCompraImpor(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.pedidocompraimpor.getId()<0) {
					this.isEsNuevoPedidoCompraImpor=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarPedidoCompraImpor(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarPedidoCompraImpor(evt,rowIndex);
				}	
				
				if(this.pedidocompraimporSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion PedidoCompraImpor: " + this.dDif); 
					}
				}								
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarPedidoCompraImpor(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.pedidocompraimpor)) {
					if(this.pedidocompraimpor.getId()>0) {
						this.pedidocompraimpor.setIsDeleted(true);
						
						this.pedidocompraimporsEliminados.add(this.pedidocompraimpor);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.pedidocompraimporLogic.getPedidoCompraImpors().remove(this.pedidocompraimpor);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpors.remove(this.pedidocompraimpor);				
					}
					
					
					((PedidoCompraImporModel) this.jTableDatosPedidoCompraImpor.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaPedidoCompraImpor(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarPedidoCompraImpor(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoPedidoCompraImpor) {
			
			if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosPedidoCompraImpor.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosPedidoCompraImpor.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioPedidoCompraImpor(this.pedidocompraimpor);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.pedidocompraimporConstantesFunciones.cargarid_empresaPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_empresaPedidoCompraImpor) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.pedidocompraimpor.getid_empresa());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(pedidocompraimpor.getEmpresa()!=null) {
							this.empresasForeignKey.add(pedidocompraimpor.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.pedidocompraimpor.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.pedidocompraimporConstantesFunciones.cargarid_sucursalPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_sucursalPedidoCompraImpor) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.pedidocompraimpor.getid_sucursal());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(pedidocompraimpor.getSucursal()!=null) {
							this.sucursalsForeignKey.add(pedidocompraimpor.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.pedidocompraimpor.getid_sucursal(),false,"Formulario");

					//Modulo
					if(!this.pedidocompraimporConstantesFunciones.cargarid_moduloPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_moduloPedidoCompraImpor) {
						//this.cargarCombosModulosForeignKeyLista(" where id="+this.pedidocompraimpor.getid_modulo());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.modulosForeignKey=new ArrayList<Modulo>();

						if(pedidocompraimpor.getModulo()!=null) {
							this.modulosForeignKey.add(pedidocompraimpor.getModulo());
						}

						this.addItemDefectoCombosForeignKeyModulo();
						this.cargarCombosFrameModulosForeignKey("Todos");
					}
					this.setActualModuloForeignKey(this.pedidocompraimpor.getid_modulo(),false,"Formulario");

					//Ejercicio
					if(!this.pedidocompraimporConstantesFunciones.cargarid_ejercicioPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_ejercicioPedidoCompraImpor) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.pedidocompraimpor.getid_ejercicio());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(pedidocompraimpor.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(pedidocompraimpor.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.pedidocompraimpor.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.pedidocompraimporConstantesFunciones.cargarid_periodoPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_periodoPedidoCompraImpor) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.pedidocompraimpor.getid_periodo());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(pedidocompraimpor.getPeriodo()!=null) {
							this.periodosForeignKey.add(pedidocompraimpor.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.pedidocompraimpor.getid_periodo(),false,"Formulario");

					//Pais
					if(!this.pedidocompraimporConstantesFunciones.cargarid_paisPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_paisPedidoCompraImpor) {
						//this.cargarCombosPaissForeignKeyLista(" where id="+this.pedidocompraimpor.getid_pais());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.paissForeignKey=new ArrayList<Pais>();

						if(pedidocompraimpor.getPais()!=null) {
							this.paissForeignKey.add(pedidocompraimpor.getPais());
						}

						this.addItemDefectoCombosForeignKeyPais();
						this.cargarCombosFramePaissForeignKey("Todos");
					}
					this.setActualPaisForeignKey(this.pedidocompraimpor.getid_pais(),false,"Formulario");

					//Cliente
					if(!this.pedidocompraimporConstantesFunciones.cargarid_clientePedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_clientePedidoCompraImpor) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.pedidocompraimpor.getid_cliente());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(pedidocompraimpor.getCliente()!=null) {
							this.clientesForeignKey.add(pedidocompraimpor.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.pedidocompraimpor.getid_cliente(),false,"Formulario");

					//ClienteProveedor
					if(!this.pedidocompraimporConstantesFunciones.cargarid_cliente_proveedorPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_cliente_proveedorPedidoCompraImpor) {
						//this.cargarCombosClienteProveedorsForeignKeyLista(" where id="+this.pedidocompraimpor.getid_cliente_proveedor());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.clienteproveedorsForeignKey=new ArrayList<Cliente>();

						if(pedidocompraimpor.getClienteProveedor()!=null) {
							this.clienteproveedorsForeignKey.add(pedidocompraimpor.getClienteProveedor());
						}

						this.addItemDefectoCombosForeignKeyClienteProveedor();
						this.cargarCombosFrameClienteProveedorsForeignKey("Todos");
					}
					this.setActualClienteProveedorForeignKey(this.pedidocompraimpor.getid_cliente_proveedor(),false,"Formulario");

					//Empleado
					if(!this.pedidocompraimporConstantesFunciones.cargarid_empleadoPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_empleadoPedidoCompraImpor) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.pedidocompraimpor.getid_empleado());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(pedidocompraimpor.getEmpleado()!=null) {
							this.empleadosForeignKey.add(pedidocompraimpor.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.pedidocompraimpor.getid_empleado(),false,"Formulario");

					//Usuario
					if(!this.pedidocompraimporConstantesFunciones.cargarid_usuarioPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_usuarioPedidoCompraImpor) {
						//this.cargarCombosUsuariosForeignKeyLista(" where id="+this.pedidocompraimpor.getid_usuario());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.usuariosForeignKey=new ArrayList<Usuario>();

						if(pedidocompraimpor.getUsuario()!=null) {
							this.usuariosForeignKey.add(pedidocompraimpor.getUsuario());
						}

						this.addItemDefectoCombosForeignKeyUsuario();
						this.cargarCombosFrameUsuariosForeignKey("Todos");
					}
					this.setActualUsuarioForeignKey(this.pedidocompraimpor.getid_usuario(),false,"Formulario");

					//TipoCambio
					if(!this.pedidocompraimporConstantesFunciones.cargarid_tipo_cambioPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_tipo_cambioPedidoCompraImpor) {
						//this.cargarCombosTipoCambiosForeignKeyLista(" where id="+this.pedidocompraimpor.getid_tipo_cambio());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

						if(pedidocompraimpor.getTipoCambio()!=null) {
							this.tipocambiosForeignKey.add(pedidocompraimpor.getTipoCambio());
						}

						this.addItemDefectoCombosForeignKeyTipoCambio();
						this.cargarCombosFrameTipoCambiosForeignKey("Todos");
					}
					this.setActualTipoCambioForeignKey(this.pedidocompraimpor.getid_tipo_cambio(),false,"Formulario");

					//Moneda
					if(!this.pedidocompraimporConstantesFunciones.cargarid_monedaPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_monedaPedidoCompraImpor) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.pedidocompraimpor.getid_moneda());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(pedidocompraimpor.getMoneda()!=null) {
							this.monedasForeignKey.add(pedidocompraimpor.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.pedidocompraimpor.getid_moneda(),false,"Formulario");

					//TipoProrrateoImpor
					if(!this.pedidocompraimporConstantesFunciones.cargarid_tipo_prorrateo_imporPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_tipo_prorrateo_imporPedidoCompraImpor) {
						//this.cargarCombosTipoProrrateoImporsForeignKeyLista(" where id="+this.pedidocompraimpor.getid_tipo_prorrateo_impor());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.tipoprorrateoimporsForeignKey=new ArrayList<TipoProrrateoImpor>();

						if(pedidocompraimpor.getTipoProrrateoImpor()!=null) {
							this.tipoprorrateoimporsForeignKey.add(pedidocompraimpor.getTipoProrrateoImpor());
						}

						this.addItemDefectoCombosForeignKeyTipoProrrateoImpor();
						this.cargarCombosFrameTipoProrrateoImporsForeignKey("Todos");
					}
					this.setActualTipoProrrateoImporForeignKey(this.pedidocompraimpor.getid_tipo_prorrateo_impor(),false,"Formulario");

					//Embarcador
					if(!this.pedidocompraimporConstantesFunciones.cargarid_embarcadorPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_embarcadorPedidoCompraImpor) {
						//this.cargarCombosEmbarcadorsForeignKeyLista(" where id="+this.pedidocompraimpor.getid_embarcador());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.embarcadorsForeignKey=new ArrayList<Embarcador>();

						if(pedidocompraimpor.getEmbarcador()!=null) {
							this.embarcadorsForeignKey.add(pedidocompraimpor.getEmbarcador());
						}

						this.addItemDefectoCombosForeignKeyEmbarcador();
						this.cargarCombosFrameEmbarcadorsForeignKey("Todos");
					}
					this.setActualEmbarcadorForeignKey(this.pedidocompraimpor.getid_embarcador(),false,"Formulario");

					//TipoViaTransporte
					if(!this.pedidocompraimporConstantesFunciones.cargarid_tipo_via_transportePedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_tipo_via_transportePedidoCompraImpor) {
						//this.cargarCombosTipoViaTransportesForeignKeyLista(" where id="+this.pedidocompraimpor.getid_tipo_via_transporte());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.tipoviatransportesForeignKey=new ArrayList<TipoViaTransporte>();

						if(pedidocompraimpor.getTipoViaTransporte()!=null) {
							this.tipoviatransportesForeignKey.add(pedidocompraimpor.getTipoViaTransporte());
						}

						this.addItemDefectoCombosForeignKeyTipoViaTransporte();
						this.cargarCombosFrameTipoViaTransportesForeignKey("Todos");
					}
					this.setActualTipoViaTransporteForeignKey(this.pedidocompraimpor.getid_tipo_via_transporte(),false,"Formulario");

					//Puerto
					if(!this.pedidocompraimporConstantesFunciones.cargarid_puertoPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_puertoPedidoCompraImpor) {
						//this.cargarCombosPuertosForeignKeyLista(" where id="+this.pedidocompraimpor.getid_puerto());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.puertosForeignKey=new ArrayList<Puerto>();

						if(pedidocompraimpor.getPuerto()!=null) {
							this.puertosForeignKey.add(pedidocompraimpor.getPuerto());
						}

						this.addItemDefectoCombosForeignKeyPuerto();
						this.cargarCombosFramePuertosForeignKey("Todos");
					}
					this.setActualPuertoForeignKey(this.pedidocompraimpor.getid_puerto(),false,"Formulario");

					//PuertoDestino
					if(!this.pedidocompraimporConstantesFunciones.cargarid_puerto_destinoPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_puerto_destinoPedidoCompraImpor) {
						//this.cargarCombosPuertoDestinosForeignKeyLista(" where id="+this.pedidocompraimpor.getid_puerto_destino());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.puertodestinosForeignKey=new ArrayList<Puerto>();

						if(pedidocompraimpor.getPuertoDestino()!=null) {
							this.puertodestinosForeignKey.add(pedidocompraimpor.getPuertoDestino());
						}

						this.addItemDefectoCombosForeignKeyPuertoDestino();
						this.cargarCombosFramePuertoDestinosForeignKey("Todos");
					}
					this.setActualPuertoDestinoForeignKey(this.pedidocompraimpor.getid_puerto_destino(),false,"Formulario");

					//TipoTerminosImpor
					if(!this.pedidocompraimporConstantesFunciones.cargarid_tipo_terminos_imporPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_tipo_terminos_imporPedidoCompraImpor) {
						//this.cargarCombosTipoTerminosImporsForeignKeyLista(" where id="+this.pedidocompraimpor.getid_tipo_terminos_impor());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.tipoterminosimporsForeignKey=new ArrayList<TipoTerminosImpor>();

						if(pedidocompraimpor.getTipoTerminosImpor()!=null) {
							this.tipoterminosimporsForeignKey.add(pedidocompraimpor.getTipoTerminosImpor());
						}

						this.addItemDefectoCombosForeignKeyTipoTerminosImpor();
						this.cargarCombosFrameTipoTerminosImporsForeignKey("Todos");
					}
					this.setActualTipoTerminosImporForeignKey(this.pedidocompraimpor.getid_tipo_terminos_impor(),false,"Formulario");

					//EstadoPedidoCompra
					if(!this.pedidocompraimporConstantesFunciones.cargarid_estado_pedido_compraPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_estado_pedido_compraPedidoCompraImpor) {
						//this.cargarCombosEstadoPedidoComprasForeignKeyLista(" where id="+this.pedidocompraimpor.getid_estado_pedido_compra());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.estadopedidocomprasForeignKey=new ArrayList<EstadoPedidoCompra>();

						if(pedidocompraimpor.getEstadoPedidoCompra()!=null) {
							this.estadopedidocomprasForeignKey.add(pedidocompraimpor.getEstadoPedidoCompra());
						}

						this.addItemDefectoCombosForeignKeyEstadoPedidoCompra();
						this.cargarCombosFrameEstadoPedidoComprasForeignKey("Todos");
					}
					this.setActualEstadoPedidoCompraForeignKey(this.pedidocompraimpor.getid_estado_pedido_compra(),false,"Formulario");

					//Formato
					if(!this.pedidocompraimporConstantesFunciones.cargarid_formatoPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_formatoPedidoCompraImpor) {
						//this.cargarCombosFormatosForeignKeyLista(" where id="+this.pedidocompraimpor.getid_formato());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.formatosForeignKey=new ArrayList<Formato>();

						if(pedidocompraimpor.getFormato()!=null) {
							this.formatosForeignKey.add(pedidocompraimpor.getFormato());
						}

						this.addItemDefectoCombosForeignKeyFormato();
						this.cargarCombosFrameFormatosForeignKey("Todos");
					}
					this.setActualFormatoForeignKey(this.pedidocompraimpor.getid_formato(),false,"Formulario");

					//Anio
					if(!this.pedidocompraimporConstantesFunciones.cargarid_anioPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_anioPedidoCompraImpor) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.pedidocompraimpor.getid_anio());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(pedidocompraimpor.getAnio()!=null) {
							this.aniosForeignKey.add(pedidocompraimpor.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.pedidocompraimpor.getid_anio(),false,"Formulario");

					//Mes
					if(!this.pedidocompraimporConstantesFunciones.cargarid_mesPedidoCompraImpor || this.pedidocompraimporConstantesFunciones.event_dependid_mesPedidoCompraImpor) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.pedidocompraimpor.getid_mes());
									//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(pedidocompraimpor.getMes()!=null) {
							this.messForeignKey.add(pedidocompraimpor.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.pedidocompraimpor.getid_mes(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesPedidoCompraImpor("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesPedidoCompraImpor(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPedidoCompraImpor() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoPedidoCompraImpor(pedidocompraimpor,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioPedidoCompraImpor(pedidocompraimpor);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyPedidoCompraImpor(pedidocompraimpor,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyPedidoCompraImpor(pedidocompraimpor);
	}
	
	public void setVariablesObjetoActualToFormularioPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelidPedidoCompraImpor.setText(pedidocompraimpor.getId().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldforma_pagoPedidoCompraImpor.setText(pedidocompraimpor.getforma_pago());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_duiPedidoCompraImpor.setText(pedidocompraimpor.getnumero_dui());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldsecuencialPedidoCompraImpor.setText(pedidocompraimpor.getsecuencial());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_ordenPedidoCompraImpor.setText(pedidocompraimpor.getnumero_orden().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFielduso_enPedidoCompraImpor.setText(pedidocompraimpor.getuso_en());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextArearesponsablePedidoCompraImpor.setText(pedidocompraimpor.getresponsable());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldorden_compraPedidoCompraImpor.setText(pedidocompraimpor.getorden_compra());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldlugar_entregaPedidoCompraImpor.setText(pedidocompraimpor.getlugar_entrega());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextAreadescripcionPedidoCompraImpor.setText(pedidocompraimpor.getdescripcion());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfechaPedidoCompraImpor.setDate(pedidocompraimpor.getfecha());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_emisionPedidoCompraImpor.setDate(pedidocompraimpor.getfecha_emision());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entregaPedidoCompraImpor.setDate(pedidocompraimpor.getfecha_entrega());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entrega_clientePedidoCompraImpor.setDate(pedidocompraimpor.getfecha_entrega_cliente());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_seguroPedidoCompraImpor.setText(pedidocompraimpor.getnombre_seguro());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_consignatarioPedidoCompraImpor.setText(pedidocompraimpor.getnombre_consignatario());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldpreciosPedidoCompraImpor.setText(pedidocompraimpor.getprecios());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldfletePedidoCompraImpor.setText(pedidocompraimpor.getflete().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldseguroPedidoCompraImpor.setText(pedidocompraimpor.getseguro().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldgastosPedidoCompraImpor.setText(pedidocompraimpor.getgastos().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcfrPedidoCompraImpor.setText(pedidocompraimpor.getcfr().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcifPedidoCompraImpor.setText(pedidocompraimpor.getcif().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldtotalPedidoCompraImpor.setText(pedidocompraimpor.gettotal().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,PedidoCompraImpor pedidocompraimporLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,pedidocompraimporLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,PedidoCompraImpor pedidocompraimporLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				pedidocompraimporLocal=this.pedidocompraimpor;
			} else {
				pedidocompraimporLocal=this.pedidocompraimporAnterior;
			}
		}
		
		if(this.permiteMantenimiento(pedidocompraimporLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoPedidoCompraImpor(pedidocompraimporLocal,true);
					
					if(pedidocompraimporSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(pedidocompraimporLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(pedidocompraimporLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualPedidoCompraImpor(pedidocompraimpor,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(pedidocompraimpor);
	}
	
	public void setVariablesFormularioToObjetoActualPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualPedidoCompraImpor(pedidocompraimpor,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelidPedidoCompraImpor.getText()==null || this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelidPedidoCompraImpor.getText()=="" || this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelidPedidoCompraImpor.getText()=="Id") {
				this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelidPedidoCompraImpor.setText("0");
			}

			if(conColumnasBase) {pedidocompraimpor.setId(Long.parseLong(this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelidPedidoCompraImpor.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelIdPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setforma_pago(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldforma_pagoPedidoCompraImpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelforma_pagoPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setnumero_dui(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_duiPedidoCompraImpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelnumero_duiPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setsecuencial(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldsecuencialPedidoCompraImpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelsecuencialPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setnumero_orden(Integer.parseInt(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_ordenPedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelnumero_ordenPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setuso_en(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFielduso_enPedidoCompraImpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_USOEN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabeluso_enPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setresponsable(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextArearesponsablePedidoCompraImpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelresponsablePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setorden_compra(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldorden_compraPedidoCompraImpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelorden_compraPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setlugar_entrega(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldlugar_entregaPedidoCompraImpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabellugar_entregaPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setdescripcion(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextAreadescripcionPedidoCompraImpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabeldescripcionPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setfecha(this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfechaPedidoCompraImpor.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_FECHA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfechaPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setfecha_emision(this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_emisionPedidoCompraImpor.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfecha_emisionPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setfecha_entrega(this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entregaPedidoCompraImpor.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfecha_entregaPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setfecha_entrega_cliente(this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entrega_clientePedidoCompraImpor.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfecha_entrega_clientePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setnombre_seguro(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_seguroPedidoCompraImpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelnombre_seguroPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setnombre_consignatario(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_consignatarioPedidoCompraImpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelnombre_consignatarioPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setprecios(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldpreciosPedidoCompraImpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_PRECIOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelpreciosPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setflete(Double.parseDouble(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldfletePedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_FLETE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelfletePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setseguro(Double.parseDouble(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldseguroPedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_SEGURO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelseguroPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setgastos(Double.parseDouble(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldgastosPedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_GASTOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelgastosPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setcfr(Double.parseDouble(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcfrPedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_CFR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelcfrPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.setcif(Double.parseDouble(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcifPedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_CIF+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelcifPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompraimpor.settotal(Double.parseDouble(this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldtotalPedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraImporConstantesFunciones.LABEL_TOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompraImpor.jLabeltotalPedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualPedidoCompraImpor(PedidoCompraImpor pedidocompraimporBean,PedidoCompraImpor pedidocompraimpor,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosPedidoCompraImpor(PedidoCompraImpor pedidocompraimporOrigen,PedidoCompraImpor pedidocompraimpor,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && pedidocompraimporOrigen.getId()!=null && !pedidocompraimporOrigen.getId().equals(0L))) {pedidocompraimpor.setId(pedidocompraimporOrigen.getId());}}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getforma_pago()!=null && !pedidocompraimporOrigen.getforma_pago().equals(""))) {pedidocompraimpor.setforma_pago(pedidocompraimporOrigen.getforma_pago());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getnumero_dui()!=null && !pedidocompraimporOrigen.getnumero_dui().equals(""))) {pedidocompraimpor.setnumero_dui(pedidocompraimporOrigen.getnumero_dui());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getsecuencial()!=null && !pedidocompraimporOrigen.getsecuencial().equals(""))) {pedidocompraimpor.setsecuencial(pedidocompraimporOrigen.getsecuencial());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getnumero_orden()!=null && !pedidocompraimporOrigen.getnumero_orden().equals(0))) {pedidocompraimpor.setnumero_orden(pedidocompraimporOrigen.getnumero_orden());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getuso_en()!=null && !pedidocompraimporOrigen.getuso_en().equals(""))) {pedidocompraimpor.setuso_en(pedidocompraimporOrigen.getuso_en());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getresponsable()!=null && !pedidocompraimporOrigen.getresponsable().equals(""))) {pedidocompraimpor.setresponsable(pedidocompraimporOrigen.getresponsable());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getorden_compra()!=null && !pedidocompraimporOrigen.getorden_compra().equals(""))) {pedidocompraimpor.setorden_compra(pedidocompraimporOrigen.getorden_compra());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getlugar_entrega()!=null && !pedidocompraimporOrigen.getlugar_entrega().equals(""))) {pedidocompraimpor.setlugar_entrega(pedidocompraimporOrigen.getlugar_entrega());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getdescripcion()!=null && !pedidocompraimporOrigen.getdescripcion().equals(""))) {pedidocompraimpor.setdescripcion(pedidocompraimporOrigen.getdescripcion());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getfecha()!=null && !pedidocompraimporOrigen.getfecha().equals(new Date()))) {pedidocompraimpor.setfecha(pedidocompraimporOrigen.getfecha());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getfecha_emision()!=null && !pedidocompraimporOrigen.getfecha_emision().equals(new Date()))) {pedidocompraimpor.setfecha_emision(pedidocompraimporOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getfecha_entrega()!=null && !pedidocompraimporOrigen.getfecha_entrega().equals(new Date()))) {pedidocompraimpor.setfecha_entrega(pedidocompraimporOrigen.getfecha_entrega());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getfecha_entrega_cliente()!=null && !pedidocompraimporOrigen.getfecha_entrega_cliente().equals(new Date()))) {pedidocompraimpor.setfecha_entrega_cliente(pedidocompraimporOrigen.getfecha_entrega_cliente());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getnombre_seguro()!=null && !pedidocompraimporOrigen.getnombre_seguro().equals(""))) {pedidocompraimpor.setnombre_seguro(pedidocompraimporOrigen.getnombre_seguro());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getnombre_consignatario()!=null && !pedidocompraimporOrigen.getnombre_consignatario().equals(""))) {pedidocompraimpor.setnombre_consignatario(pedidocompraimporOrigen.getnombre_consignatario());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getprecios()!=null && !pedidocompraimporOrigen.getprecios().equals(""))) {pedidocompraimpor.setprecios(pedidocompraimporOrigen.getprecios());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getflete()!=null && !pedidocompraimporOrigen.getflete().equals(0.0))) {pedidocompraimpor.setflete(pedidocompraimporOrigen.getflete());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getseguro()!=null && !pedidocompraimporOrigen.getseguro().equals(0.0))) {pedidocompraimpor.setseguro(pedidocompraimporOrigen.getseguro());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getgastos()!=null && !pedidocompraimporOrigen.getgastos().equals(0.0))) {pedidocompraimpor.setgastos(pedidocompraimporOrigen.getgastos());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getcfr()!=null && !pedidocompraimporOrigen.getcfr().equals(0.0))) {pedidocompraimpor.setcfr(pedidocompraimporOrigen.getcfr());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.getcif()!=null && !pedidocompraimporOrigen.getcif().equals(0.0))) {pedidocompraimpor.setcif(pedidocompraimporOrigen.getcif());}
			if(conDefault || (!conDefault && pedidocompraimporOrigen.gettotal()!=null && !pedidocompraimporOrigen.gettotal().equals(0.0))) {pedidocompraimpor.settotal(pedidocompraimporOrigen.gettotal());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelidPedidoCompraImpor.setText(pedidocompraimpor.getId().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldforma_pagoPedidoCompraImpor.setText(pedidocompraimpor.getforma_pago());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_duiPedidoCompraImpor.setText(pedidocompraimpor.getnumero_dui());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldsecuencialPedidoCompraImpor.setText(pedidocompraimpor.getsecuencial());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_ordenPedidoCompraImpor.setText(pedidocompraimpor.getnumero_orden().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFielduso_enPedidoCompraImpor.setText(pedidocompraimpor.getuso_en());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextArearesponsablePedidoCompraImpor.setText(pedidocompraimpor.getresponsable());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldorden_compraPedidoCompraImpor.setText(pedidocompraimpor.getorden_compra());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldlugar_entregaPedidoCompraImpor.setText(pedidocompraimpor.getlugar_entrega());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextAreadescripcionPedidoCompraImpor.setText(pedidocompraimpor.getdescripcion());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfechaPedidoCompraImpor.setDate(pedidocompraimpor.getfecha());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_emisionPedidoCompraImpor.setDate(pedidocompraimpor.getfecha_emision());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entregaPedidoCompraImpor.setDate(pedidocompraimpor.getfecha_entrega());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entrega_clientePedidoCompraImpor.setDate(pedidocompraimpor.getfecha_entrega_cliente());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_seguroPedidoCompraImpor.setText(pedidocompraimpor.getnombre_seguro());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_consignatarioPedidoCompraImpor.setText(pedidocompraimpor.getnombre_consignatario());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldpreciosPedidoCompraImpor.setText(pedidocompraimpor.getprecios());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldfletePedidoCompraImpor.setText(pedidocompraimpor.getflete().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldseguroPedidoCompraImpor.setText(pedidocompraimpor.getseguro().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldgastosPedidoCompraImpor.setText(pedidocompraimpor.getgastos().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcfrPedidoCompraImpor.setText(pedidocompraimpor.getcfr().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcifPedidoCompraImpor.setText(pedidocompraimpor.getcif().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldtotalPedidoCompraImpor.setText(pedidocompraimpor.gettotal().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioPedidoCompraImpor(PedidoCompraImporBean pedidocompraimporBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelidPedidoCompraImpor.setText(pedidocompraimporBean.getId().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldforma_pagoPedidoCompraImpor.setText(pedidocompraimporBean.getforma_pago());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_duiPedidoCompraImpor.setText(pedidocompraimporBean.getnumero_dui());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldsecuencialPedidoCompraImpor.setText(pedidocompraimporBean.getsecuencial());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_ordenPedidoCompraImpor.setText(pedidocompraimporBean.getnumero_orden().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFielduso_enPedidoCompraImpor.setText(pedidocompraimporBean.getuso_en());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextArearesponsablePedidoCompraImpor.setText(pedidocompraimporBean.getresponsable());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldorden_compraPedidoCompraImpor.setText(pedidocompraimporBean.getorden_compra());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldlugar_entregaPedidoCompraImpor.setText(pedidocompraimporBean.getlugar_entrega());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextAreadescripcionPedidoCompraImpor.setText(pedidocompraimporBean.getdescripcion());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfechaPedidoCompraImpor.setDate(pedidocompraimporBean.getfecha());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_emisionPedidoCompraImpor.setDate(pedidocompraimporBean.getfecha_emision());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entregaPedidoCompraImpor.setDate(pedidocompraimporBean.getfecha_entrega());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entrega_clientePedidoCompraImpor.setDate(pedidocompraimporBean.getfecha_entrega_cliente());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_seguroPedidoCompraImpor.setText(pedidocompraimporBean.getnombre_seguro());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_consignatarioPedidoCompraImpor.setText(pedidocompraimporBean.getnombre_consignatario());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldpreciosPedidoCompraImpor.setText(pedidocompraimporBean.getprecios());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldfletePedidoCompraImpor.setText(pedidocompraimporBean.getflete().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldseguroPedidoCompraImpor.setText(pedidocompraimporBean.getseguro().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldgastosPedidoCompraImpor.setText(pedidocompraimporBean.getgastos().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcfrPedidoCompraImpor.setText(pedidocompraimporBean.getcfr().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcifPedidoCompraImpor.setText(pedidocompraimporBean.getcif().toString());
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldtotalPedidoCompraImpor.setText(pedidocompraimporBean.gettotal().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanPedidoCompraImpor(PedidoCompraImporParameterReturnGeneral pedidocompraimporReturnGeneral,PedidoCompraImporBean pedidocompraimporBean,Boolean conDefault) throws Exception { 
		try {
			PedidoCompraImpor pedidocompraimporLocal=new PedidoCompraImpor();
			
			pedidocompraimporLocal=pedidocompraimporReturnGeneral.getPedidoCompraImpor();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && pedidocompraimporLocal.getId()!=null && !pedidocompraimporLocal.getId().equals(0L))) {pedidocompraimporBean.setId(pedidocompraimporLocal.getId());}}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getforma_pago()!=null && !pedidocompraimporLocal.getforma_pago().equals(""))) {pedidocompraimporBean.setforma_pago(pedidocompraimporLocal.getforma_pago());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getnumero_dui()!=null && !pedidocompraimporLocal.getnumero_dui().equals(""))) {pedidocompraimporBean.setnumero_dui(pedidocompraimporLocal.getnumero_dui());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getsecuencial()!=null && !pedidocompraimporLocal.getsecuencial().equals(""))) {pedidocompraimporBean.setsecuencial(pedidocompraimporLocal.getsecuencial());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getnumero_orden()!=null && !pedidocompraimporLocal.getnumero_orden().equals(0))) {pedidocompraimporBean.setnumero_orden(pedidocompraimporLocal.getnumero_orden());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getuso_en()!=null && !pedidocompraimporLocal.getuso_en().equals(""))) {pedidocompraimporBean.setuso_en(pedidocompraimporLocal.getuso_en());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getresponsable()!=null && !pedidocompraimporLocal.getresponsable().equals(""))) {pedidocompraimporBean.setresponsable(pedidocompraimporLocal.getresponsable());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getorden_compra()!=null && !pedidocompraimporLocal.getorden_compra().equals(""))) {pedidocompraimporBean.setorden_compra(pedidocompraimporLocal.getorden_compra());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getlugar_entrega()!=null && !pedidocompraimporLocal.getlugar_entrega().equals(""))) {pedidocompraimporBean.setlugar_entrega(pedidocompraimporLocal.getlugar_entrega());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getdescripcion()!=null && !pedidocompraimporLocal.getdescripcion().equals(""))) {pedidocompraimporBean.setdescripcion(pedidocompraimporLocal.getdescripcion());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getfecha()!=null && !pedidocompraimporLocal.getfecha().equals(new Date()))) {pedidocompraimporBean.setfecha(pedidocompraimporLocal.getfecha());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getfecha_emision()!=null && !pedidocompraimporLocal.getfecha_emision().equals(new Date()))) {pedidocompraimporBean.setfecha_emision(pedidocompraimporLocal.getfecha_emision());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getfecha_entrega()!=null && !pedidocompraimporLocal.getfecha_entrega().equals(new Date()))) {pedidocompraimporBean.setfecha_entrega(pedidocompraimporLocal.getfecha_entrega());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getfecha_entrega_cliente()!=null && !pedidocompraimporLocal.getfecha_entrega_cliente().equals(new Date()))) {pedidocompraimporBean.setfecha_entrega_cliente(pedidocompraimporLocal.getfecha_entrega_cliente());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getnombre_seguro()!=null && !pedidocompraimporLocal.getnombre_seguro().equals(""))) {pedidocompraimporBean.setnombre_seguro(pedidocompraimporLocal.getnombre_seguro());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getnombre_consignatario()!=null && !pedidocompraimporLocal.getnombre_consignatario().equals(""))) {pedidocompraimporBean.setnombre_consignatario(pedidocompraimporLocal.getnombre_consignatario());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getprecios()!=null && !pedidocompraimporLocal.getprecios().equals(""))) {pedidocompraimporBean.setprecios(pedidocompraimporLocal.getprecios());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getflete()!=null && !pedidocompraimporLocal.getflete().equals(0.0))) {pedidocompraimporBean.setflete(pedidocompraimporLocal.getflete());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getseguro()!=null && !pedidocompraimporLocal.getseguro().equals(0.0))) {pedidocompraimporBean.setseguro(pedidocompraimporLocal.getseguro());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getgastos()!=null && !pedidocompraimporLocal.getgastos().equals(0.0))) {pedidocompraimporBean.setgastos(pedidocompraimporLocal.getgastos());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getcfr()!=null && !pedidocompraimporLocal.getcfr().equals(0.0))) {pedidocompraimporBean.setcfr(pedidocompraimporLocal.getcfr());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.getcif()!=null && !pedidocompraimporLocal.getcif().equals(0.0))) {pedidocompraimporBean.setcif(pedidocompraimporLocal.getcif());}
			if(conDefault || (!conDefault && pedidocompraimporLocal.gettotal()!=null && !pedidocompraimporLocal.gettotal().equals(0.0))) {pedidocompraimporBean.settotal(pedidocompraimporLocal.gettotal());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxPedidoCompraImporGenerico(Long idPedidoCompraImporSeleccionado,JComboBox jComboBoxPedidoCompraImpor,List<PedidoCompraImpor> pedidocompraimporsLocal)throws Exception {
		try {
			PedidoCompraImpor  pedidocompraimporTemp=null;

			for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimporsLocal) {
				if(pedidocompraimporAux.getId()!=null && pedidocompraimporAux.getId().equals(idPedidoCompraImporSeleccionado)) {
					pedidocompraimporTemp=pedidocompraimporAux;
					break;
				}
			}

			jComboBoxPedidoCompraImpor.setSelectedItem(pedidocompraimporTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxPedidoCompraImporGenerico(JComboBox jComboBoxPedidoCompraImpor,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxPedidoCompraImpor.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxPedidoCompraImpor.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxPedidoCompraImpor.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxPedidoCompraImpor.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxPedidoCompraImpor.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxPedidoCompraImpor.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxPedidoCompraImpor.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxPedidoCompraImpor.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxPedidoCompraImpor.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxPedidoCompraImpor.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("DetallePedidoCompraImpor")) {
			jButtonDetallePedidoCompraImporActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("LiquidacionImpuestoImpor")) {
			jButtonLiquidacionImpuestoImporActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pedidocompraimpor=(PedidoCompraImpor) pedidocompraimporLogic.getPedidoCompraImpors().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			pedidocompraimpor =(PedidoCompraImpor) pedidocompraimpors.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Modulo")) {
			//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getmodulo_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Pais")) {
			//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getpais_descripcion();
			} else {
				//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getpais_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getcliente_descripcion();
			}
		}

		if(sTipo.equals("ClienteProveedor")) {
			//sDescripcion=this.getActualClienteProveedorForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getclienteproveedor_descripcion();
			} else {
				//sDescripcion=this.getActualClienteProveedorForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getclienteproveedor_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getempleado_descripcion();
			}
		}

		if(sTipo.equals("Usuario")) {
			//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getusuario_descripcion();
			} else {
				//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getusuario_descripcion();
			}
		}

		if(sTipo.equals("TipoCambio")) {
			//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.gettipocambio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.gettipocambio_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("TipoProrrateoImpor")) {
			//sDescripcion=this.getActualTipoProrrateoImporForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.gettipoprorrateoimpor_descripcion();
			} else {
				//sDescripcion=this.getActualTipoProrrateoImporForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.gettipoprorrateoimpor_descripcion();
			}
		}

		if(sTipo.equals("Embarcador")) {
			//sDescripcion=this.getActualEmbarcadorForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getembarcador_descripcion();
			} else {
				//sDescripcion=this.getActualEmbarcadorForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getembarcador_descripcion();
			}
		}

		if(sTipo.equals("TipoViaTransporte")) {
			//sDescripcion=this.getActualTipoViaTransporteForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.gettipoviatransporte_descripcion();
			} else {
				//sDescripcion=this.getActualTipoViaTransporteForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.gettipoviatransporte_descripcion();
			}
		}

		if(sTipo.equals("Puerto")) {
			//sDescripcion=this.getActualPuertoForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getpuerto_descripcion();
			} else {
				//sDescripcion=this.getActualPuertoForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getpuerto_descripcion();
			}
		}

		if(sTipo.equals("PuertoDestino")) {
			//sDescripcion=this.getActualPuertoDestinoForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getpuertodestino_descripcion();
			} else {
				//sDescripcion=this.getActualPuertoDestinoForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getpuertodestino_descripcion();
			}
		}

		if(sTipo.equals("TipoTerminosImpor")) {
			//sDescripcion=this.getActualTipoTerminosImporForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.gettipoterminosimpor_descripcion();
			} else {
				//sDescripcion=this.getActualTipoTerminosImporForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.gettipoterminosimpor_descripcion();
			}
		}

		if(sTipo.equals("EstadoPedidoCompra")) {
			//sDescripcion=this.getActualEstadoPedidoCompraForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getestadopedidocompra_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoPedidoCompraForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getestadopedidocompra_descripcion();
			}
		}

		if(sTipo.equals("Formato")) {
			//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getformato_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getformato_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!pedidocompraimpor.getIsNew() && !pedidocompraimpor.getIsChanged() && !pedidocompraimpor.getIsDeleted()) {
				sDescripcion=pedidocompraimpor.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompraimpor.getmes_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		PedidoCompraImpor pedidocompraimporRow=new PedidoCompraImpor();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pedidocompraimporRow=(PedidoCompraImpor) pedidocompraimporLogic.getPedidoCompraImpors().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			pedidocompraimporRow=(PedidoCompraImpor) pedidocompraimpors.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonDetallePedidoCompraImporActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,PedidoCompraImpor pedidocompraimpor) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor = (PedidoCompraImpor)this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.pedidocompraimpor = (PedidoCompraImpor)this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(pedidocompraimpor!=null) {
						this.pedidocompraimpor = pedidocompraimpor;
					} else {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}
				}

				if(this.isTienePermisosDetallePedidoCompraImpor && this.permiteMantenimiento(this.pedidocompraimpor)) {
					DetallePedidoCompraImporBeanSwingJInternalFrame detallepedidocompraimporBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFramePopup=new DetallePedidoCompraImporBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						detallepedidocompraimporBeanSwingJInternalFrame=this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFramePopup;
					} else {
						detallepedidocompraimporBeanSwingJInternalFrame=this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame;
					}

					List<PedidoCompraImpor> pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
					pedidocompraimpors.add(this.pedidocompraimpor);
					if(!esRelacionado) {
						//detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporSessionBean.setConGuardarRelaciones(false);
						//detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					detallepedidocompraimporBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormPedidoCompraImpor.cargarDetallePedidoCompraImporBeanSwingJInternalFrame(pedidocompraimpors,this.pedidocompraimpor,detallepedidocompraimporBeanSwingJInternalFrame,/*conInicializar,*/detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporSessionBean.getConGuardarRelaciones(),detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporSessionBean.getEsGuardarRelacionado());
					detallepedidocompraimporBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						detallepedidocompraimporBeanSwingJInternalFrame.actualizarEstadoPanelsDetallePedidoCompraImpor("no_relacionado");

						detallepedidocompraimporBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DetallePedidoCompraImporConstantesFunciones.ITAMANIOFILATABLA + (DetallePedidoCompraImporConstantesFunciones.ITAMANIOFILATABLA/2));

						detallepedidocompraimporBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
						TitledBorder titledBorderDetallePedidoCompraImpor=(TitledBorder)detallepedidocompraimporBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();

						titledBorderDetallePedidoCompraImpor.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Detalle Pedido Compra");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,detallepedidocompraimporBeanSwingJInternalFrame);
						}

						detallepedidocompraimporBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(detallepedidocompraimporBeanSwingJInternalFrame);

						detallepedidocompraimporBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.pedidocompraimporSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Detalle Pedido Compra",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonLiquidacionImpuestoImporActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,PedidoCompraImpor pedidocompraimpor) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor = (PedidoCompraImpor)this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.pedidocompraimpor = (PedidoCompraImpor)this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(pedidocompraimpor!=null) {
						this.pedidocompraimpor = pedidocompraimpor;
					} else {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}
				}

				if(this.isTienePermisosLiquidacionImpuestoImpor && this.permiteMantenimiento(this.pedidocompraimpor)) {
					LiquidacionImpuestoImporBeanSwingJInternalFrame liquidacionimpuestoimporBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFramePopup=new LiquidacionImpuestoImporBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						liquidacionimpuestoimporBeanSwingJInternalFrame=this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFramePopup;
					} else {
						liquidacionimpuestoimporBeanSwingJInternalFrame=this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame;
					}

					List<PedidoCompraImpor> pedidocompraimpors=new ArrayList<PedidoCompraImpor>();
					pedidocompraimpors.add(this.pedidocompraimpor);
					if(!esRelacionado) {
						//liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporSessionBean.setConGuardarRelaciones(false);
						//liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					liquidacionimpuestoimporBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormPedidoCompraImpor.cargarLiquidacionImpuestoImporBeanSwingJInternalFrame(pedidocompraimpors,this.pedidocompraimpor,liquidacionimpuestoimporBeanSwingJInternalFrame,/*conInicializar,*/liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporSessionBean.getConGuardarRelaciones(),liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporSessionBean.getEsGuardarRelacionado());
					liquidacionimpuestoimporBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						liquidacionimpuestoimporBeanSwingJInternalFrame.actualizarEstadoPanelsLiquidacionImpuestoImpor("no_relacionado");

						liquidacionimpuestoimporBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(LiquidacionImpuestoImporConstantesFunciones.ITAMANIOFILATABLA + (LiquidacionImpuestoImporConstantesFunciones.ITAMANIOFILATABLA/2));

						liquidacionimpuestoimporBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
						TitledBorder titledBorderLiquidacionImpuestoImpor=(TitledBorder)liquidacionimpuestoimporBeanSwingJInternalFrame.jScrollPanelDatosLiquidacionImpuestoImpor.getBorder();

						titledBorderLiquidacionImpuestoImpor.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Liquidacion Impuesto Impor");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,liquidacionimpuestoimporBeanSwingJInternalFrame);
						}

						liquidacionimpuestoimporBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(liquidacionimpuestoimporBeanSwingJInternalFrame);

						liquidacionimpuestoimporBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.pedidocompraimporSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Liquidacion Impuesto Impor",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualPedidoCompraImpor(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoPedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoPedidoCompraImpor && this.isPermisoNuevoPedidoCompraImpor));			
			this.jButtonDuplicarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaDuplicarPedidoCompraImpor && this.isPermisoDuplicarPedidoCompraImpor));			
			this.jButtonCopiarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaCopiarPedidoCompraImpor && this.isPermisoCopiarPedidoCompraImpor));
			this.jButtonVerFormPedidoCompraImpor.setVisible((this.isVisibilidadCeldaVerFormPedidoCompraImpor && this.isPermisoVerFormPedidoCompraImpor));
			
			this.jButtonAbrirOrderByPedidoCompraImpor.setVisible((this.isVisibilidadCeldaOrdenPedidoCompraImpor && this.isPermisoOrdenPedidoCompraImpor));			
			
			this.jButtonNuevoRelacionesPedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor && this.isPermisoNuevoPedidoCompraImpor));			
			this.jButtonNuevoGuardarCambiosPedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoPedidoCompraImpor && this.isPermisoNuevoPedidoCompraImpor && this.isPermisoGuardarCambiosPedidoCompraImpor));
			
			if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonModificarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaModificarPedidoCompraImpor && this.isPermisoActualizarPedidoCompraImpor));	
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonActualizarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaActualizarPedidoCompraImpor && this.isPermisoActualizarPedidoCompraImpor));	
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonEliminarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaEliminarPedidoCompraImpor && this.isPermisoEliminarPedidoCompraImpor));
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonCancelarPedidoCompraImpor.setVisible(this.isVisibilidadCeldaCancelarPedidoCompraImpor);							
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonGuardarCambiosPedidoCompraImpor.setVisible((this.isVisibilidadCeldaGuardarPedidoCompraImpor && this.isPermisoGuardarCambiosPedidoCompraImpor));			
			
			}
						
			this.jButtonGuardarCambiosTablaPedidoCompraImpor.setVisible((this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor && this.isPermisoGuardarCambiosPedidoCompraImpor));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoPedidoCompraImpor && this.isPermisoNuevoPedidoCompraImpor));						
			this.jButtonDuplicarToolBarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaDuplicarPedidoCompraImpor && this.isPermisoDuplicarPedidoCompraImpor));						
			this.jButtonCopiarToolBarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaCopiarPedidoCompraImpor && this.isPermisoCopiarPedidoCompraImpor));			
			this.jButtonVerFormToolBarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaVerFormPedidoCompraImpor && this.isPermisoVerFormPedidoCompraImpor));			
			this.jButtonAbrirOrderByToolBarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaOrdenPedidoCompraImpor && this.isPermisoOrdenPedidoCompraImpor));
			this.jButtonNuevoRelacionesToolBarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor && this.isPermisoNuevoPedidoCompraImpor));			
			this.jButtonNuevoGuardarCambiosToolBarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoPedidoCompraImpor && this.isPermisoNuevoPedidoCompraImpor && this.isPermisoGuardarCambiosPedidoCompraImpor));			
			
			if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonModificarToolBarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaModificarPedidoCompraImpor && this.isPermisoActualizarPedidoCompraImpor));	
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonActualizarToolBarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaActualizarPedidoCompraImpor  && this.isPermisoActualizarPedidoCompraImpor));	
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonEliminarToolBarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaEliminarPedidoCompraImpor && this.isPermisoEliminarPedidoCompraImpor));
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonCancelarToolBarPedidoCompraImpor.setVisible(this.isVisibilidadCeldaCancelarPedidoCompraImpor);				
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonGuardarCambiosToolBarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaGuardarPedidoCompraImpor && this.isPermisoGuardarCambiosPedidoCompraImpor));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor && this.isPermisoGuardarCambiosPedidoCompraImpor));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoPedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoPedidoCompraImpor && this.isPermisoNuevoPedidoCompraImpor));			
			this.jMenuItemDuplicarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaDuplicarPedidoCompraImpor && this.isPermisoDuplicarPedidoCompraImpor));			
			this.jMenuItemCopiarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaCopiarPedidoCompraImpor && this.isPermisoCopiarPedidoCompraImpor));			
			this.jMenuItemVerFormPedidoCompraImpor.setVisible((this.isVisibilidadCeldaVerFormPedidoCompraImpor && this.isPermisoVerFormPedidoCompraImpor));			
			this.jMenuItemAbrirOrderByPedidoCompraImpor.setVisible((this.isVisibilidadCeldaOrdenPedidoCompraImpor && this.isPermisoOrdenPedidoCompraImpor));			
			//this.jMenuItemMostrarOcultarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaOrdenPedidoCompraImpor && this.isPermisoOrdenPedidoCompraImpor));
			this.jMenuItemDetalleAbrirOrderByPedidoCompraImpor.setVisible((this.isVisibilidadCeldaOrdenPedidoCompraImpor && this.isPermisoOrdenPedidoCompraImpor));			
			//this.jMenuItemDetalleMostrarOcultarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaOrdenPedidoCompraImpor && this.isPermisoOrdenPedidoCompraImpor));			
			this.jMenuItemNuevoRelacionesPedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor && this.isPermisoNuevoPedidoCompraImpor));			
			this.jMenuItemNuevoGuardarCambiosPedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoPedidoCompraImpor && this.isPermisoNuevoPedidoCompraImpor && this.isPermisoGuardarCambiosPedidoCompraImpor));									
			
			if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemModificarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaModificarPedidoCompraImpor && this.isPermisoActualizarPedidoCompraImpor));	
			this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemActualizarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaActualizarPedidoCompraImpor && this.isPermisoActualizarPedidoCompraImpor));	
			this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemEliminarPedidoCompraImpor.setVisible((this.isVisibilidadCeldaEliminarPedidoCompraImpor && this.isPermisoEliminarPedidoCompraImpor));
			this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemCancelarPedidoCompraImpor.setVisible(this.isVisibilidadCeldaCancelarPedidoCompraImpor);				
			}
			
			this.jMenuItemGuardarCambiosPedidoCompraImpor.setVisible((this.isVisibilidadCeldaGuardarPedidoCompraImpor && this.isPermisoGuardarCambiosPedidoCompraImpor));						
			this.jMenuItemGuardarCambiosTablaPedidoCompraImpor.setVisible((this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor && this.isPermisoGuardarCambiosPedidoCompraImpor));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoPedidoCompraImpor=this.jButtonNuevoPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaDuplicarPedidoCompraImpor=this.jButtonDuplicarPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaCopiarPedidoCompraImpor=this.jButtonCopiarPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaVerFormPedidoCompraImpor=this.jButtonVerFormPedidoCompraImpor.isVisible();
			
			this.isVisibilidadCeldaOrdenPedidoCompraImpor=this.jButtonAbrirOrderByPedidoCompraImpor.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=this.jButtonNuevoRelacionesPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaModificarPedidoCompraImpor=this.jButtonModificarPedidoCompraImpor.isVisible();
			
			if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
			this.isVisibilidadCeldaActualizarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonActualizarPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaEliminarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonEliminarPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaCancelarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonCancelarPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaGuardarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonGuardarCambiosPedidoCompraImpor.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=this.jButtonGuardarCambiosTablaPedidoCompraImpor.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoPedidoCompraImpor=this.jButtonNuevoToolBarPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=this.jButtonNuevoRelacionesToolBarPedidoCompraImpor.isVisible();
			
			if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
			this.isVisibilidadCeldaModificarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonModificarToolBarPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaActualizarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonActualizarToolBarPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaEliminarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonEliminarToolBarPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaCancelarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonCancelarToolBarPedidoCompraImpor.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarPedidoCompraImpor=this.jButtonGuardarCambiosToolBarPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=this.jButtonGuardarCambiosTablaToolBarPedidoCompraImpor.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoPedidoCompraImpor=this.jMenuItemNuevoPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=this.jMenuItemNuevoRelacionesPedidoCompraImpor.isVisible();
			
			if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
			this.isVisibilidadCeldaModificarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemModificarPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaActualizarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemActualizarPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaEliminarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemEliminarPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaCancelarPedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemCancelarPedidoCompraImpor.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarPedidoCompraImpor=this.jMenuItemGuardarCambiosPedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=this.jMenuItemGuardarCambiosTablaPedidoCompraImpor.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesPedidoCompraImpor(Boolean esInicializar) {
		if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {			
			if(this.pedidocompraimporSessionBean.getConGuardarRelaciones()) {
				//if(this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesPedidoCompraImpor();
			}
			
			this.inicializarActualizarBindingBotonesManualPedidoCompraImpor(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualPedidoCompraImpor() {
		this.jButtonNuevoPedidoCompraImpor.setVisible(this.isPermisoNuevoPedidoCompraImpor);			
		this.jButtonDuplicarPedidoCompraImpor.setVisible(this.isPermisoDuplicarPedidoCompraImpor);			
		this.jButtonCopiarPedidoCompraImpor.setVisible(this.isPermisoCopiarPedidoCompraImpor);			
		this.jButtonVerFormPedidoCompraImpor.setVisible(this.isPermisoVerFormPedidoCompraImpor);			
		
		this.jButtonAbrirOrderByPedidoCompraImpor.setVisible(this.isPermisoOrdenPedidoCompraImpor);					
		
		this.jButtonNuevoRelacionesPedidoCompraImpor.setVisible(this.isPermisoNuevoPedidoCompraImpor);			
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonModificarPedidoCompraImpor.setVisible(this.isPermisoActualizarPedidoCompraImpor);	
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonActualizarPedidoCompraImpor.setVisible(this.isPermisoActualizarPedidoCompraImpor);	
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonEliminarPedidoCompraImpor.setVisible(this.isPermisoEliminarPedidoCompraImpor);
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonCancelarPedidoCompraImpor.setVisible(this.isVisibilidadCeldaCancelarPedidoCompraImpor);						
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonGuardarCambiosPedidoCompraImpor.setVisible(this.isPermisoGuardarCambiosPedidoCompraImpor);							
		}
		
		this.jButtonGuardarCambiosTablaPedidoCompraImpor.setVisible(this.isPermisoActualizarPedidoCompraImpor);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetallePedidoCompraImpor() {
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonModificarPedidoCompraImpor.setVisible(this.isPermisoActualizarPedidoCompraImpor);	
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonActualizarPedidoCompraImpor.setVisible(this.isPermisoActualizarPedidoCompraImpor);	
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonEliminarPedidoCompraImpor.setVisible(this.isPermisoEliminarPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonCancelarPedidoCompraImpor.setVisible(this.isVisibilidadCeldaCancelarPedidoCompraImpor);							
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonGuardarCambiosPedidoCompraImpor.setVisible((this.isVisibilidadCeldaGuardarPedidoCompraImpor && this.isPermisoGuardarCambiosPedidoCompraImpor));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosPedidoCompraImpor() {
		if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualPedidoCompraImpor();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesPedidoCompraImpor() {
	}
	
	public void jTableDatosPedidoCompraImporListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarPedidoCompraImpor(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.pedidocompraimpor.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.pedidocompraimpor.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.pedidocompraimpor.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_moduloPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomodulo=true;

			idTienePermisomodulo=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(ModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.moduloBeanSwingJInternalFrame=new ModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.moduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.moduloBeanSwingJInternalFrame.getModuloLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_modulo()!=null) {
					this.moduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.moduloBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_modulo());
					this.moduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaModulo();
				}

				JInternalFrameBase jinternalFrame =this.moduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBordermodulo=(TitledBorder)this.moduloBeanSwingJInternalFrame.jScrollPanelDatosModulo.getBorder();

				titledBordermodulo.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_moduloPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_modulo = "+this.pedidocompraimpor.getid_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.pedidocompraimpor.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.pedidocompraimpor.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_paisPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopais=true;

			idTienePermisopais=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(PaisConstantesFunciones.CLASSNAME);

			if(idTienePermisopais) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.paisBeanSwingJInternalFrame=new PaisBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.paisBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.paisBeanSwingJInternalFrame.getPaisLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_pais()!=null) {
					this.paisBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.paisBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_pais());
					this.paisBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.inicializarActualizarBindingTablaPais();
				}

				JInternalFrameBase jinternalFrame =this.paisBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBorderpais=(TitledBorder)this.paisBeanSwingJInternalFrame.jScrollPanelDatosPais.getBorder();

				titledBorderpais.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Pais");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_paisPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_pais()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_pais = "+this.pedidocompraimpor.getid_pais().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clientePedidoCompraImporActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedidoCompraImpor=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosPedidoCompraImpor.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clientePedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clientePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.pedidocompraimpor.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cliente_proveedorPedidoCompraImporActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteproveedorBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteproveedorBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteproveedorBeanSwingJInternalFrame.sTipoBusqueda="ClienteProveedor";

			if(!this.sFinalQueryGeneral_clienteproveedor.equals("")) {
				this.clienteproveedorBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_clienteproveedor);
				this.clienteproveedorBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteproveedorBeanSwingJInternalFrame.procesarBusqueda(this.clienteproveedorBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteproveedorBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboClienteProveedor.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteproveedorBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedidoCompraImpor=null;
			TitledBorder titledBorderclienteproveedor=null;

			if(!this.jScrollPanelDatosPedidoCompraImpor.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				titledBorderclienteproveedor=(TitledBorder)this.clienteproveedorBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBorderclienteproveedor.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cliente_proveedorPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoclienteproveedor=true;

			idTienePermisoclienteproveedor=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisoclienteproveedor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.clienteproveedorBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteproveedorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteproveedorBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_cliente_proveedor()!=null) {
					this.clienteproveedorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteproveedorBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_cliente_proveedor());
					this.clienteproveedorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteproveedorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteproveedorBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteproveedorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBorderclienteproveedor=(TitledBorder)this.clienteproveedorBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBorderclienteproveedor.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cliente_proveedorPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_cliente_proveedor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente_proveedor = "+this.pedidocompraimpor.getid_cliente_proveedor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoPedidoCompraImporActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="Empleado";

			if(!this.sFinalQueryGeneral_empleado.equals("")) {
				this.empleadoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_empleado);
				this.empleadoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.empleadoBeanSwingJInternalFrame.procesarBusqueda(this.empleadoBeanSwingJInternalFrame.sAccionBusqueda);
				this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingEmpleado(false);
			}

			if(!this.sFinalQueryComboEmpleado.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedidoCompraImpor=null;
			TitledBorder titledBorderempleado=null;

			if(!this.jScrollPanelDatosPedidoCompraImpor.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Empleado");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_empleadoPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.pedidocompraimpor.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_usuarioPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisousuario=true;

			idTienePermisousuario=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(UsuarioConstantesFunciones.CLASSNAME);

			if(idTienePermisousuario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.usuarioBeanSwingJInternalFrame=new UsuarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.usuarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.usuarioBeanSwingJInternalFrame.getUsuarioLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_usuario()!=null) {
					this.usuarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.usuarioBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_usuario());
					this.usuarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUsuario();
				}

				JInternalFrameBase jinternalFrame =this.usuarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBorderusuario=(TitledBorder)this.usuarioBeanSwingJInternalFrame.jScrollPanelDatosUsuario.getBorder();

				titledBorderusuario.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Usuario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_usuarioPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_usuario = "+this.pedidocompraimpor.getid_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_cambioPedidoCompraImporActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="TipoCambio";

			if(!this.sFinalQueryGeneral_tipocambio.equals("")) {
				this.tipocambioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_tipocambio);
				this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.tipocambioBeanSwingJInternalFrame.procesarBusqueda(this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda);
				this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTipoCambio(false);
			}

			if(!this.sFinalQueryComboTipoCambio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedidoCompraImpor=null;
			TitledBorder titledBordertipocambio=null;

			if(!this.jScrollPanelDatosPedidoCompraImpor.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Tipo Cambio");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_tipo_cambioPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocambio=true;

			idTienePermisotipocambio=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(TipoCambioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocambio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocambioBeanSwingJInternalFrame.getTipoCambioLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_tipo_cambio()!=null) {
					this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocambioBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_tipo_cambio());
					this.tipocambioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCambio();
				}

				JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Tipo Cambio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_cambioPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_tipo_cambio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_cambio = "+this.pedidocompraimpor.getid_tipo_cambio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.pedidocompraimpor.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_prorrateo_imporPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoprorrateoimpor=true;

			idTienePermisotipoprorrateoimpor=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(TipoProrrateoImporConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoprorrateoimpor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.tipoprorrateoimporBeanSwingJInternalFrame=new TipoProrrateoImporBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoprorrateoimporBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoprorrateoimporBeanSwingJInternalFrame.getTipoProrrateoImporLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_tipo_prorrateo_impor()!=null) {
					this.tipoprorrateoimporBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoprorrateoimporBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_tipo_prorrateo_impor());
					this.tipoprorrateoimporBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoprorrateoimporBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoprorrateoimporBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoProrrateoImpor();
				}

				JInternalFrameBase jinternalFrame =this.tipoprorrateoimporBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBordertipoprorrateoimpor=(TitledBorder)this.tipoprorrateoimporBeanSwingJInternalFrame.jScrollPanelDatosTipoProrrateoImpor.getBorder();

				titledBordertipoprorrateoimpor.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Tipo Prorrateo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_prorrateo_imporPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_tipo_prorrateo_impor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_prorrateo_impor = "+this.pedidocompraimpor.getid_tipo_prorrateo_impor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_embarcadorPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoembarcador=true;

			idTienePermisoembarcador=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(EmbarcadorConstantesFunciones.CLASSNAME);

			if(idTienePermisoembarcador) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.embarcadorBeanSwingJInternalFrame=new EmbarcadorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.embarcadorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.embarcadorBeanSwingJInternalFrame.getEmbarcadorLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_embarcador()!=null) {
					this.embarcadorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.embarcadorBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_embarcador());
					this.embarcadorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.embarcadorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.embarcadorBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmbarcador();
				}

				JInternalFrameBase jinternalFrame =this.embarcadorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBorderembarcador=(TitledBorder)this.embarcadorBeanSwingJInternalFrame.jScrollPanelDatosEmbarcador.getBorder();

				titledBorderembarcador.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Embarcador");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_embarcadorPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_embarcador()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_embarcador = "+this.pedidocompraimpor.getid_embarcador().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_via_transportePedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoviatransporte=true;

			idTienePermisotipoviatransporte=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(TipoViaTransporteConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoviatransporte) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.tipoviatransporteBeanSwingJInternalFrame=new TipoViaTransporteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoviatransporteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoviatransporteBeanSwingJInternalFrame.getTipoViaTransporteLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_tipo_via_transporte()!=null) {
					this.tipoviatransporteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoviatransporteBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_tipo_via_transporte());
					this.tipoviatransporteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoviatransporteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoviatransporteBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoViaTransporte();
				}

				JInternalFrameBase jinternalFrame =this.tipoviatransporteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBordertipoviatransporte=(TitledBorder)this.tipoviatransporteBeanSwingJInternalFrame.jScrollPanelDatosTipoViaTransporte.getBorder();

				titledBordertipoviatransporte.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Tipo Via Transporte");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_via_transportePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_tipo_via_transporte()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_via_transporte = "+this.pedidocompraimpor.getid_tipo_via_transporte().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_puertoPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopuerto=true;

			idTienePermisopuerto=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(PuertoConstantesFunciones.CLASSNAME);

			if(idTienePermisopuerto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.puertoBeanSwingJInternalFrame=new PuertoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.puertoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.puertoBeanSwingJInternalFrame.getPuertoLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_puerto()!=null) {
					this.puertoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.puertoBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_puerto());
					this.puertoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.puertoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.puertoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPuerto();
				}

				JInternalFrameBase jinternalFrame =this.puertoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBorderpuerto=(TitledBorder)this.puertoBeanSwingJInternalFrame.jScrollPanelDatosPuerto.getBorder();

				titledBorderpuerto.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Puerto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_puertoPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_puerto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_puerto = "+this.pedidocompraimpor.getid_puerto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_puerto_destinoPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopuertodestino=true;

			idTienePermisopuertodestino=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(PuertoConstantesFunciones.CLASSNAME);

			if(idTienePermisopuertodestino) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.puertodestinoBeanSwingJInternalFrame=new PuertoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.puertodestinoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.puertodestinoBeanSwingJInternalFrame.getPuertoLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_puerto_destino()!=null) {
					this.puertodestinoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.puertodestinoBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_puerto_destino());
					this.puertodestinoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.puertodestinoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.puertodestinoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPuerto();
				}

				JInternalFrameBase jinternalFrame =this.puertodestinoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBorderpuertodestino=(TitledBorder)this.puertodestinoBeanSwingJInternalFrame.jScrollPanelDatosPuerto.getBorder();

				titledBorderpuertodestino.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Puerto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_puerto_destinoPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_puerto_destino()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_puerto_destino = "+this.pedidocompraimpor.getid_puerto_destino().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_terminos_imporPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoterminosimpor=true;

			idTienePermisotipoterminosimpor=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(TipoTerminosImporConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoterminosimpor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.tipoterminosimporBeanSwingJInternalFrame=new TipoTerminosImporBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoterminosimporBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoterminosimporBeanSwingJInternalFrame.getTipoTerminosImporLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_tipo_terminos_impor()!=null) {
					this.tipoterminosimporBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoterminosimporBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_tipo_terminos_impor());
					this.tipoterminosimporBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoterminosimporBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoterminosimporBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoTerminosImpor();
				}

				JInternalFrameBase jinternalFrame =this.tipoterminosimporBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBordertipoterminosimpor=(TitledBorder)this.tipoterminosimporBeanSwingJInternalFrame.jScrollPanelDatosTipoTerminosImpor.getBorder();

				titledBordertipoterminosimpor.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Tipo Terminos");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_terminos_imporPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_tipo_terminos_impor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_terminos_impor = "+this.pedidocompraimpor.getid_tipo_terminos_impor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_pedido_compraPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadopedidocompra=true;

			idTienePermisoestadopedidocompra=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(EstadoPedidoCompraConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadopedidocompra) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.estadopedidocompraBeanSwingJInternalFrame=new EstadoPedidoCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadopedidocompraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadopedidocompraBeanSwingJInternalFrame.getEstadoPedidoCompraLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_estado_pedido_compra()!=null) {
					this.estadopedidocompraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadopedidocompraBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_estado_pedido_compra());
					this.estadopedidocompraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadopedidocompraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadopedidocompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoPedidoCompra();
				}

				JInternalFrameBase jinternalFrame =this.estadopedidocompraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBorderestadopedidocompra=(TitledBorder)this.estadopedidocompraBeanSwingJInternalFrame.jScrollPanelDatosEstadoPedidoCompra.getBorder();

				titledBorderestadopedidocompra.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Estado Pedido Compra");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_pedido_compraPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_estado_pedido_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_pedido_compra = "+this.pedidocompraimpor.getid_estado_pedido_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonforma_pagoPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getforma_pago()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where forma_pago like '%"+this.pedidocompraimpor.getforma_pago()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_duiPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getnumero_dui()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_dui like '%"+this.pedidocompraimpor.getnumero_dui()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsecuencialPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getsecuencial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where secuencial like '%"+this.pedidocompraimpor.getsecuencial()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_ordenPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getnumero_orden()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_orden = "+this.pedidocompraimpor.getnumero_orden().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonuso_enPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getuso_en()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where uso_en like '%"+this.pedidocompraimpor.getuso_en()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonresponsablePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getresponsable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where responsable like '%"+this.pedidocompraimpor.getresponsable()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonorden_compraPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getorden_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where orden_compra like '%"+this.pedidocompraimpor.getorden_compra()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonlugar_entregaPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getlugar_entrega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where lugar_entrega like '%"+this.pedidocompraimpor.getlugar_entrega()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.pedidocompraimpor.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.pedidocompraimpor.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.pedidocompraimpor.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_entregaPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getfecha_entrega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_entrega = '"+Funciones2.getStringPostgresDate(this.pedidocompraimpor.getfecha_entrega())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_entrega_clientePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getfecha_entrega_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_entrega_cliente = '"+Funciones2.getStringPostgresDate(this.pedidocompraimpor.getfecha_entrega_cliente())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_seguroPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getnombre_seguro()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_seguro like '%"+this.pedidocompraimpor.getnombre_seguro()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_consignatarioPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getnombre_consignatario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_consignatario like '%"+this.pedidocompraimpor.getnombre_consignatario()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpreciosPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getprecios()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precios like '%"+this.pedidocompraimpor.getprecios()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfletePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getflete()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where flete = "+this.pedidocompraimpor.getflete().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonseguroPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getseguro()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where seguro = "+this.pedidocompraimpor.getseguro().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtongastosPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getgastos()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where gastos = "+this.pedidocompraimpor.getgastos().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncfrPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getcfr()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cfr = "+this.pedidocompraimpor.getcfr().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncifPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getcif()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cif = "+this.pedidocompraimpor.getcif().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.pedidocompraimpor.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formatoPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformato=true;

			idTienePermisoformato=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformato) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.formatoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_formato()!=null) {
					this.formatoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_formato());
					this.formatoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBorderformato=(TitledBorder)this.formatoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformato.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formatoPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_formato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato = "+this.pedidocompraimpor.getid_formato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.pedidocompraimpor.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesPedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebPedidoCompraImpor(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.pedidocompraimporLogic.getConnexion());

				if(this.pedidocompraimpor.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.pedidocompraimpor.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosPedidoCompraImpor.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderPedidoCompraImpor.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesPedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.getpedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompraimpor==null) {
						this.pedidocompraimpor = new PedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);
				}

				if(this.pedidocompraimpor.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.pedidocompraimpor.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdAnio();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClientePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdCliente();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteProveedorPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdClienteProveedor();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdEjercicio();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmbarcadorPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdEmbarcador();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdEmpleado();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdEmpresa();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdEstadoPedidoCompraEstadoPedoCompra();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdFormato();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdMes();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdModuloPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdModulo();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdMoneda();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPaisPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdPais();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdPeriodo();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPuertoPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdPuerto();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPuertoDestinoPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdPuertoDestino();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdSucursal();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCambioPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdTipoCambio();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoProrrateoImporPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdTipoProrrateoImpor();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoTerminosImporPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdTipoTerminosImpor();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoViaTransportePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdTipoViaTransporte();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUsuarioPedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);

			this.getPedidoCompraImporsFK_IdUsuario();

			this.inicializarActualizarBindingPedidoCompraImpor(false);

			//if(PedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFramePedidoCompraImpor() {
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
		

		if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.setVisible(false);	    			
			this.jInternalFrameDetalleFormPedidoCompraImpor.dispose();
			this.jInternalFrameDetalleFormPedidoCompraImpor=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoPedidoCompraImpor!=null) {
			this.jInternalFrameReporteDinamicoPedidoCompraImpor.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoPedidoCompraImpor.dispose();
			this.jInternalFrameReporteDinamicoPedidoCompraImpor=null;
		}
		
		if(this.jInternalFrameImportacionPedidoCompraImpor!=null) {
			this.jInternalFrameImportacionPedidoCompraImpor.setVisible(false);	    			
			this.jInternalFrameImportacionPedidoCompraImpor.dispose();
			this.jInternalFrameImportacionPedidoCompraImpor=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessPedidoCompraImpor();
			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			
			
			if(sTipo.equals("NuevoPedidoCompraImpor")) {
				jButtonNuevoPedidoCompraImporActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarPedidoCompraImpor")) {
				jButtonDuplicarPedidoCompraImporActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarPedidoCompraImpor")) {
				jButtonCopiarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("VerFormPedidoCompraImpor")) {
				jButtonVerFormPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarPedidoCompraImpor")) {
				jButtonNuevoPedidoCompraImporActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarPedidoCompraImpor")) {
				jButtonDuplicarPedidoCompraImporActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoPedidoCompraImpor")) {
				jButtonNuevoPedidoCompraImporActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarPedidoCompraImpor")) {
				jButtonDuplicarPedidoCompraImporActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesPedidoCompraImpor")) {
				jButtonNuevoPedidoCompraImporActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarPedidoCompraImpor")) {
				jButtonNuevoPedidoCompraImporActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesPedidoCompraImpor")) {
				jButtonNuevoPedidoCompraImporActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarPedidoCompraImpor")) {
				jButtonModificarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarPedidoCompraImpor")) {
				jButtonModificarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarPedidoCompraImpor")) {
				jButtonModificarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("ActualizarPedidoCompraImpor")) {
				jButtonActualizarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarPedidoCompraImpor")) {
				jButtonActualizarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarPedidoCompraImpor")) {
				jButtonActualizarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("EliminarPedidoCompraImpor")) {
				jButtonEliminarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarPedidoCompraImpor")) {
				jButtonEliminarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarPedidoCompraImpor")) {
				jButtonEliminarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("CancelarPedidoCompraImpor")) {
				jButtonCancelarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarPedidoCompraImpor")) {
				jButtonCancelarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarPedidoCompraImpor")) {
				jButtonCancelarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("CerrarPedidoCompraImpor")) {
				jButtonCerrarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarPedidoCompraImpor")) {
				jButtonCerrarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarPedidoCompraImpor")) {
				jButtonCerrarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarPedidoCompraImpor")) {
				jButtonMostrarOcultarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarPedidoCompraImpor")) {
				jButtonCancelarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosPedidoCompraImpor")) {
				jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarPedidoCompraImpor")) {
				jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarPedidoCompraImpor")) {
				jButtonCopiarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarPedidoCompraImpor")) {
				jButtonVerFormPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosPedidoCompraImpor")) {
				jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarPedidoCompraImpor")) {
				jButtonCopiarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormPedidoCompraImpor")) {
				jButtonVerFormPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaPedidoCompraImpor")) {
				jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarPedidoCompraImpor")) {
				jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaPedidoCompraImpor")) {
				jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionPedidoCompraImpor")) {
				jButtonRecargarInformacionPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarPedidoCompraImpor")) {
				jButtonRecargarInformacionPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionPedidoCompraImpor")) {
				jButtonRecargarInformacionPedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresPedidoCompraImpor")) {
				jButtonAnterioresPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarPedidoCompraImpor")) {
				jButtonAnterioresPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnteriorePedidoCompraImpor")) {
				jButtonAnterioresPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("SiguientesPedidoCompraImpor")) {
				jButtonSiguientesPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarPedidoCompraImpor")) {
				jButtonSiguientesPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesPedidoCompraImpor")) {
				jButtonSiguientesPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByPedidoCompraImpor") || sTipo.equals("MenuItemDetalleAbrirOrderByPedidoCompraImpor")) {
				jButtonAbrirOrderByPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarPedidoCompraImpor") || sTipo.equals("MenuItemDetalleMostrarOcultarPedidoCompraImpor")) {
				jButtonMostrarOcultarPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosPedidoCompraImpor")) {
				jButtonNuevoGuardarCambiosPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarPedidoCompraImpor")) {
				jButtonNuevoGuardarCambiosPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosPedidoCompraImpor")) {
				jButtonNuevoGuardarCambiosPedidoCompraImporActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoPedidoCompraImpor")) {
				jButtonCerrarReporteDinamicoPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoPedidoCompraImpor")) {
				jButtonGenerarReporteDinamicoPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoPedidoCompraImpor")) {
				
				jButtonGenerarExcelReporteDinamicoPedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionPedidoCompraImpor")) {
				jButtonCerrarImportacionPedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionPedidoCompraImpor")) {
				
				jButtonGenerarImportacionPedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionPedidoCompraImpor")) {
				
				jButtonAbrirImportacionPedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesPedidoCompraImpor")) {
				jComboBoxTiposAccionesPedidoCompraImporActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesPedidoCompraImpor")) {
				jComboBoxTiposRelacionesPedidoCompraImporActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioPedidoCompraImpor")) {
				jComboBoxTiposAccionesPedidoCompraImporActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarPedidoCompraImpor")) {
				
				jComboBoxTiposSeleccionarPedidoCompraImporActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralPedidoCompraImpor")) {
				jTextFieldValorCampoGeneralPedidoCompraImporActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByPedidoCompraImpor")) {
				jButtonAbrirOrderByPedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarPedidoCompraImpor")) {
				jButtonAbrirOrderByPedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByPedidoCompraImpor")) {
				jButtonCerrarOrderByPedidoCompraImporActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idPedidoCompraImporBusqueda")) {
				this.jButtonidPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaPedidoCompraImporUpdate")) {
				this.jButtonid_empresaPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaPedidoCompraImporBusqueda")) {
				this.jButtonid_empresaPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalPedidoCompraImporUpdate")) {
				this.jButtonid_sucursalPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalPedidoCompraImporBusqueda")) {
				this.jButtonid_sucursalPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloPedidoCompraImporUpdate")) {
				this.jButtonid_moduloPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloPedidoCompraImporBusqueda")) {
				this.jButtonid_moduloPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioPedidoCompraImporUpdate")) {
				this.jButtonid_ejercicioPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioPedidoCompraImporBusqueda")) {
				this.jButtonid_ejercicioPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoPedidoCompraImporUpdate")) {
				this.jButtonid_periodoPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoPedidoCompraImporBusqueda")) {
				this.jButtonid_periodoPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisPedidoCompraImporUpdate")) {
				this.jButtonid_paisPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisPedidoCompraImporBusqueda")) {
				this.jButtonid_paisPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clientePedidoCompraImpor")) {
				this.jButtonid_clientePedidoCompraImporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clientePedidoCompraImporUpdate")) {
				this.jButtonid_clientePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clientePedidoCompraImporBusqueda")) {
				this.jButtonid_clientePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cliente_proveedorPedidoCompraImpor")) {
				this.jButtonid_cliente_proveedorPedidoCompraImporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cliente_proveedorPedidoCompraImporUpdate")) {
				this.jButtonid_cliente_proveedorPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cliente_proveedorPedidoCompraImporBusqueda")) {
				this.jButtonid_cliente_proveedorPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoPedidoCompraImpor")) {
				this.jButtonid_empleadoPedidoCompraImporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoPedidoCompraImporUpdate")) {
				this.jButtonid_empleadoPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoPedidoCompraImporBusqueda")) {
				this.jButtonid_empleadoPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioPedidoCompraImporUpdate")) {
				this.jButtonid_usuarioPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioPedidoCompraImporBusqueda")) {
				this.jButtonid_usuarioPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoCompraImpor")) {
				this.jButtonid_tipo_cambioPedidoCompraImporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoCompraImporUpdate")) {
				this.jButtonid_tipo_cambioPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoCompraImporBusqueda")) {
				this.jButtonid_tipo_cambioPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaPedidoCompraImporUpdate")) {
				this.jButtonid_monedaPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaPedidoCompraImporBusqueda")) {
				this.jButtonid_monedaPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_prorrateo_imporPedidoCompraImporUpdate")) {
				this.jButtonid_tipo_prorrateo_imporPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_prorrateo_imporPedidoCompraImporBusqueda")) {
				this.jButtonid_tipo_prorrateo_imporPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_embarcadorPedidoCompraImporUpdate")) {
				this.jButtonid_embarcadorPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_embarcadorPedidoCompraImporBusqueda")) {
				this.jButtonid_embarcadorPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_via_transportePedidoCompraImporUpdate")) {
				this.jButtonid_tipo_via_transportePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_via_transportePedidoCompraImporBusqueda")) {
				this.jButtonid_tipo_via_transportePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_puertoPedidoCompraImporUpdate")) {
				this.jButtonid_puertoPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_puertoPedidoCompraImporBusqueda")) {
				this.jButtonid_puertoPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_puerto_destinoPedidoCompraImporUpdate")) {
				this.jButtonid_puerto_destinoPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_puerto_destinoPedidoCompraImporBusqueda")) {
				this.jButtonid_puerto_destinoPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_terminos_imporPedidoCompraImporUpdate")) {
				this.jButtonid_tipo_terminos_imporPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_terminos_imporPedidoCompraImporBusqueda")) {
				this.jButtonid_tipo_terminos_imporPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_compraPedidoCompraImporUpdate")) {
				this.jButtonid_estado_pedido_compraPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_compraPedidoCompraImporBusqueda")) {
				this.jButtonid_estado_pedido_compraPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("forma_pagoPedidoCompraImporBusqueda")) {
				this.jButtonforma_pagoPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_duiPedidoCompraImporBusqueda")) {
				this.jButtonnumero_duiPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencialPedidoCompraImporBusqueda")) {
				this.jButtonsecuencialPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_ordenPedidoCompraImporBusqueda")) {
				this.jButtonnumero_ordenPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("uso_enPedidoCompraImporBusqueda")) {
				this.jButtonuso_enPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("responsablePedidoCompraImporBusqueda")) {
				this.jButtonresponsablePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("orden_compraPedidoCompraImporBusqueda")) {
				this.jButtonorden_compraPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("lugar_entregaPedidoCompraImporBusqueda")) {
				this.jButtonlugar_entregaPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionPedidoCompraImporBusqueda")) {
				this.jButtondescripcionPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaPedidoCompraImporBusqueda")) {
				this.jButtonfechaPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionPedidoCompraImporBusqueda")) {
				this.jButtonfecha_emisionPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_entregaPedidoCompraImporBusqueda")) {
				this.jButtonfecha_entregaPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_entrega_clientePedidoCompraImporBusqueda")) {
				this.jButtonfecha_entrega_clientePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_seguroPedidoCompraImporBusqueda")) {
				this.jButtonnombre_seguroPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_consignatarioPedidoCompraImporBusqueda")) {
				this.jButtonnombre_consignatarioPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("preciosPedidoCompraImporBusqueda")) {
				this.jButtonpreciosPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fletePedidoCompraImporBusqueda")) {
				this.jButtonfletePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("seguroPedidoCompraImporBusqueda")) {
				this.jButtonseguroPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("gastosPedidoCompraImporBusqueda")) {
				this.jButtongastosPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cfrPedidoCompraImporBusqueda")) {
				this.jButtoncfrPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cifPedidoCompraImporBusqueda")) {
				this.jButtoncifPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalPedidoCompraImporBusqueda")) {
				this.jButtontotalPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoPedidoCompraImporUpdate")) {
				this.jButtonid_formatoPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoPedidoCompraImporBusqueda")) {
				this.jButtonid_formatoPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioPedidoCompraImporUpdate")) {
				this.jButtonid_anioPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioPedidoCompraImporBusqueda")) {
				this.jButtonid_anioPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesPedidoCompraImporUpdate")) {
				this.jButtonid_mesPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesPedidoCompraImporBusqueda")) {
				this.jButtonid_mesPedidoCompraImporBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_clientePedidoCompraImpor")) {
				this.jButtonid_clientePedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("id_cliente_proveedorPedidoCompraImpor")) {
				this.jButtonid_cliente_proveedorPedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("id_empleadoPedidoCompraImpor")) {
				this.jButtonid_empleadoPedidoCompraImporActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdClientePedidoCompraImpor")) {
				this.jButtonFK_IdClientePedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteProveedorPedidoCompraImpor")) {
				this.jButtonFK_IdClienteProveedorPedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmbarcadorPedidoCompraImpor")) {
				this.jButtonFK_IdEmbarcadorPedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoPedidoCompraImpor")) {
				this.jButtonFK_IdEmpleadoPedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor")) {
				this.jButtonFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPaisPedidoCompraImpor")) {
				this.jButtonFK_IdPaisPedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPuertoPedidoCompraImpor")) {
				this.jButtonFK_IdPuertoPedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPuertoDestinoPedidoCompraImpor")) {
				this.jButtonFK_IdPuertoDestinoPedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoProrrateoImporPedidoCompraImpor")) {
				this.jButtonFK_IdTipoProrrateoImporPedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoTerminosImporPedidoCompraImpor")) {
				this.jButtonFK_IdTipoTerminosImporPedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoViaTransportePedidoCompraImpor")) {
				this.jButtonFK_IdTipoViaTransportePedidoCompraImporActionPerformed(evt);
			}
			
			;
			
			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessPedidoCompraImpor();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoCompraImporActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				


				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompraImpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			PedidoCompraImpor pedidocompraimporLocal=null;
			
			if(!this.getEsControlTabla()) {
				pedidocompraimporLocal=this.pedidocompraimpor;
			} else {
				pedidocompraimporLocal=this.pedidocompraimporAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
							
				
				


				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompraImpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraImporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporAnterior =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompraimporAnterior =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoCompraImporActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
								
						
				


				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompraImpor.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
								
				
				


				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompraImpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraImporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporAnterior =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompraimporAnterior =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraImporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporAnterior =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompraimporAnterior =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraImporActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
							
				
				


				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompraImpor.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoCompraImporActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimporAnterior =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.pedidocompraimporAnterior =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraImporActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
								
				
				


				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompraImpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraImporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporAnterior =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompraimporAnterior =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraImporActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoCompraImporActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosPedidoCompraImpor")) {
					jCheckBoxSeleccionarTodosPedidoCompraImporItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosPedidoCompraImpor")) {
					jCheckBoxSeleccionadosPedidoCompraImporItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarPedidoCompraImpor")) {
					
				}
				
				


				
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompraImpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
												
				
				


				
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompraImpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoCompraImporActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraimporAnterior =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.pedidocompraimporAnterior =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoCompraImporActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoCompraImporActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompraImpor.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompraImpor.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompraimpor);
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompraImpor.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompraImpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraImporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraimporAnterior =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompraimporAnterior =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarPedidoCompraImpor")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosPedidoCompraImporListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosPedidoCompraImpor.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.pedidocompraimpor =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.pedidocompraimpor);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarPedidoCompraImpor")) {
				
				}
				
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarPedidoCompraImpor")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosPedidoCompraImpor.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarPedidoCompraImpor")) {
			
			}
			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessPedidoCompraImpor();
			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			
			if(sTipo.equals("NuevoPedidoCompraImpor")) {
				jButtonNuevoPedidoCompraImporActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarPedidoCompraImpor")) {
				jButtonDuplicarPedidoCompraImporActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarPedidoCompraImpor")) {
				jButtonCopiarPedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormPedidoCompraImpor")) {
				jButtonVerFormPedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesPedidoCompraImpor")) {
				jButtonNuevoPedidoCompraImporActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarPedidoCompraImpor")) {
				jButtonModificarPedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarPedidoCompraImpor")) {
				jButtonActualizarPedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarPedidoCompraImpor")) {
				jButtonEliminarPedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaPedidoCompraImpor")) {
				jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarPedidoCompraImpor")) {
				jButtonCancelarPedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarPedidoCompraImpor")) {
				jButtonCerrarPedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosPedidoCompraImpor")) {
				jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosPedidoCompraImpor")) {
				jButtonNuevoGuardarCambiosPedidoCompraImporActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByPedidoCompraImpor")) {
				jButtonAbrirOrderByPedidoCompraImporActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionPedidoCompraImpor")) {
				jButtonRecargarInformacionPedidoCompraImporActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresPedidoCompraImpor")) {
				jButtonAnterioresPedidoCompraImporActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesPedidoCompraImpor")) {
				jButtonSiguientesPedidoCompraImporActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idPedidoCompraImporBusqueda")) {
				this.jButtonidPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaPedidoCompraImporUpdate")) {
				this.jButtonid_empresaPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaPedidoCompraImporBusqueda")) {
				this.jButtonid_empresaPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalPedidoCompraImporUpdate")) {
				this.jButtonid_sucursalPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalPedidoCompraImporBusqueda")) {
				this.jButtonid_sucursalPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloPedidoCompraImporUpdate")) {
				this.jButtonid_moduloPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloPedidoCompraImporBusqueda")) {
				this.jButtonid_moduloPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioPedidoCompraImporUpdate")) {
				this.jButtonid_ejercicioPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioPedidoCompraImporBusqueda")) {
				this.jButtonid_ejercicioPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoPedidoCompraImporUpdate")) {
				this.jButtonid_periodoPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoPedidoCompraImporBusqueda")) {
				this.jButtonid_periodoPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisPedidoCompraImporUpdate")) {
				this.jButtonid_paisPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisPedidoCompraImporBusqueda")) {
				this.jButtonid_paisPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clientePedidoCompraImpor")) {
				this.jButtonid_clientePedidoCompraImporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clientePedidoCompraImporUpdate")) {
				this.jButtonid_clientePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clientePedidoCompraImporBusqueda")) {
				this.jButtonid_clientePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cliente_proveedorPedidoCompraImpor")) {
				this.jButtonid_cliente_proveedorPedidoCompraImporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cliente_proveedorPedidoCompraImporUpdate")) {
				this.jButtonid_cliente_proveedorPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cliente_proveedorPedidoCompraImporBusqueda")) {
				this.jButtonid_cliente_proveedorPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoPedidoCompraImpor")) {
				this.jButtonid_empleadoPedidoCompraImporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoPedidoCompraImporUpdate")) {
				this.jButtonid_empleadoPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoPedidoCompraImporBusqueda")) {
				this.jButtonid_empleadoPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioPedidoCompraImporUpdate")) {
				this.jButtonid_usuarioPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioPedidoCompraImporBusqueda")) {
				this.jButtonid_usuarioPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoCompraImpor")) {
				this.jButtonid_tipo_cambioPedidoCompraImporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoCompraImporUpdate")) {
				this.jButtonid_tipo_cambioPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoCompraImporBusqueda")) {
				this.jButtonid_tipo_cambioPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaPedidoCompraImporUpdate")) {
				this.jButtonid_monedaPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaPedidoCompraImporBusqueda")) {
				this.jButtonid_monedaPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_prorrateo_imporPedidoCompraImporUpdate")) {
				this.jButtonid_tipo_prorrateo_imporPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_prorrateo_imporPedidoCompraImporBusqueda")) {
				this.jButtonid_tipo_prorrateo_imporPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_embarcadorPedidoCompraImporUpdate")) {
				this.jButtonid_embarcadorPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_embarcadorPedidoCompraImporBusqueda")) {
				this.jButtonid_embarcadorPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_via_transportePedidoCompraImporUpdate")) {
				this.jButtonid_tipo_via_transportePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_via_transportePedidoCompraImporBusqueda")) {
				this.jButtonid_tipo_via_transportePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_puertoPedidoCompraImporUpdate")) {
				this.jButtonid_puertoPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_puertoPedidoCompraImporBusqueda")) {
				this.jButtonid_puertoPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_puerto_destinoPedidoCompraImporUpdate")) {
				this.jButtonid_puerto_destinoPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_puerto_destinoPedidoCompraImporBusqueda")) {
				this.jButtonid_puerto_destinoPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_terminos_imporPedidoCompraImporUpdate")) {
				this.jButtonid_tipo_terminos_imporPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_terminos_imporPedidoCompraImporBusqueda")) {
				this.jButtonid_tipo_terminos_imporPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_compraPedidoCompraImporUpdate")) {
				this.jButtonid_estado_pedido_compraPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_compraPedidoCompraImporBusqueda")) {
				this.jButtonid_estado_pedido_compraPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("forma_pagoPedidoCompraImporBusqueda")) {
				this.jButtonforma_pagoPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_duiPedidoCompraImporBusqueda")) {
				this.jButtonnumero_duiPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencialPedidoCompraImporBusqueda")) {
				this.jButtonsecuencialPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_ordenPedidoCompraImporBusqueda")) {
				this.jButtonnumero_ordenPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("uso_enPedidoCompraImporBusqueda")) {
				this.jButtonuso_enPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("responsablePedidoCompraImporBusqueda")) {
				this.jButtonresponsablePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("orden_compraPedidoCompraImporBusqueda")) {
				this.jButtonorden_compraPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("lugar_entregaPedidoCompraImporBusqueda")) {
				this.jButtonlugar_entregaPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionPedidoCompraImporBusqueda")) {
				this.jButtondescripcionPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaPedidoCompraImporBusqueda")) {
				this.jButtonfechaPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionPedidoCompraImporBusqueda")) {
				this.jButtonfecha_emisionPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_entregaPedidoCompraImporBusqueda")) {
				this.jButtonfecha_entregaPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_entrega_clientePedidoCompraImporBusqueda")) {
				this.jButtonfecha_entrega_clientePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_seguroPedidoCompraImporBusqueda")) {
				this.jButtonnombre_seguroPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_consignatarioPedidoCompraImporBusqueda")) {
				this.jButtonnombre_consignatarioPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("preciosPedidoCompraImporBusqueda")) {
				this.jButtonpreciosPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fletePedidoCompraImporBusqueda")) {
				this.jButtonfletePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("seguroPedidoCompraImporBusqueda")) {
				this.jButtonseguroPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("gastosPedidoCompraImporBusqueda")) {
				this.jButtongastosPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cfrPedidoCompraImporBusqueda")) {
				this.jButtoncfrPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cifPedidoCompraImporBusqueda")) {
				this.jButtoncifPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalPedidoCompraImporBusqueda")) {
				this.jButtontotalPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoPedidoCompraImporUpdate")) {
				this.jButtonid_formatoPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoPedidoCompraImporBusqueda")) {
				this.jButtonid_formatoPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioPedidoCompraImporUpdate")) {
				this.jButtonid_anioPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioPedidoCompraImporBusqueda")) {
				this.jButtonid_anioPedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesPedidoCompraImporUpdate")) {
				this.jButtonid_mesPedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesPedidoCompraImporBusqueda")) {
				this.jButtonid_mesPedidoCompraImporBusquedaActionPerformed(evt);
			}
			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessPedidoCompraImpor();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
			
			if(sTipo.equals("CloseInternalFramePedidoCompraImpor")) {
				closingInternalFramePedidoCompraImpor();
				
			} else if(sTipo.equals("jButtonCancelarPedidoCompraImpor")) {
				JInternalFrameBase jInternalFrameDetalleFormPedidoCompraImpor = (JInternalFrameBase)evt.getSource();
	            	
	            PedidoCompraImporBeanSwingJInternalFrame jInternalFrameParent=(PedidoCompraImporBeanSwingJInternalFrame)jInternalFrameDetalleFormPedidoCompraImpor.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarPedidoCompraImporActionPerformed(null);
			}
			
			PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.pedidocompraimpor,new Object(),this.pedidocompraimporParameterGeneral,this.pedidocompraimporReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormPedidoCompraImpor(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormPedidoCompraImpor(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormPedidoCompraImpor(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.pedidocompraimpor)) {
			if(!esControlTabla) {
				if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);			
				}
				
				if(this.pedidocompraimporSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.pedidocompraimporReturnGeneral=pedidocompraimporLogic.procesarEventosPedidoCompraImporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedidocompraimporLogic.getPedidoCompraImpors(),this.pedidocompraimpor,this.pedidocompraimporParameterGeneral,this.isEsNuevoPedidoCompraImpor,classes);//this.pedidocompraimporLogic.getPedidoCompraImpor()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanPedidoCompraImpor(this.pedidocompraimporReturnGeneral,this.pedidocompraimporBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.pedidocompraimporSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanPedidoCompraImpor(classes,this.pedidocompraimporReturnGeneral,this.pedidocompraimporBean,false);
					}
						
					if(this.pedidocompraimporReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyPedidoCompraImpor(this.pedidocompraimporReturnGeneral.getPedidoCompraImpor());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioPedidoCompraImpor(this.pedidocompraimporReturnGeneral.getPedidoCompraImpor());	
					}
						
					if(this.pedidocompraimporReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioPedidoCompraImpor(this.pedidocompraimporReturnGeneral.getPedidoCompraImpor(),classes);//this.pedidocompraimporBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioPedidoCompraImpor(this.pedidocompraimpor,classes);//this.pedidocompraimporBean);									
				}
			
				if(PedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualPedidoCompraImpor(this.pedidocompraimpor,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompraImpor(this.pedidocompraimpor);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.pedidocompraimporAnterior!=null) {
						this.pedidocompraimpor=this.pedidocompraimporAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.pedidocompraimporReturnGeneral=pedidocompraimporLogic.procesarEventosPedidoCompraImporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedidocompraimporLogic.getPedidoCompraImpors(),this.pedidocompraimpor,this.pedidocompraimporParameterGeneral,this.isEsNuevoPedidoCompraImpor,classes);//this.pedidocompraimporLogic.getPedidoCompraImpor()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.pedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.pedidocompraimporSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.pedidocompraimporReturnGeneral.getPedidoCompraImpor(),pedidocompraimporLogic.getPedidoCompraImpors());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.pedidocompraimporReturnGeneral.getPedidoCompraImpor(),this.pedidocompraimpors);
				}
				//ARCHITECTURE
				
				//this.jTableDatosPedidoCompraImpor.repaint();
				
				//((AbstractTableModel) this.jTableDatosPedidoCompraImpor.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosPedidoCompraImpor();
			}
		}
	}
	
	public void actualizarVisualTableDatosPedidoCompraImpor() throws Exception {
		
		PedidoCompraImporModel pedidocompraimporModel=(PedidoCompraImporModel)this.jTableDatosPedidoCompraImpor.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pedidocompraimporModel.pedidocompraimpors=this.pedidocompraimporLogic.getPedidoCompraImpors();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			pedidocompraimporModel.pedidocompraimpors=this.pedidocompraimpors;
		}
		
		
		((PedidoCompraImporModel) this.jTableDatosPedidoCompraImpor.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaPedidoCompraImpor() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getpedidocompraimporAnterior(),this.pedidocompraimporLogic.getPedidoCompraImpors());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getpedidocompraimporAnterior(),this.pedidocompraimpors);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosPedidoCompraImpor();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetallePedidoCompraImpor.class)) {
					this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.setDetallePedidoCompraImpors(pedidocompraimpor.getDetallePedidoCompraImpors());
					this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(LiquidacionImpuestoImpor.class)) {
					this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.setLiquidacionImpuestoImpors(pedidocompraimpor.getLiquidacionImpuestoImpors());
					this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.inicializarActualizarBindingTablaLiquidacionImpuestoImpor(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedidocompraimpor,new Object(),generalEntityParameterGeneral,this.pedidocompraimporReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.pedidocompraimporSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=PedidoCompraImporConstantesFunciones.getClassesRelationshipsOfPedidoCompraImpor(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=PedidoCompraImporConstantesFunciones.getClassesRelationshipsFromStringsOfPedidoCompraImpor(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormPedidoCompraImpor(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				PedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedidocompraimpor,new Object(),generalEntityParameterGeneral,this.pedidocompraimporReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioPedidoCompraImpor(PedidoCompraImporBean pedidocompraimporBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetallePedidoCompraImpor.class)) {
					this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.setDetallePedidoCompraImpors(pedidocompraimpor.getDetallePedidoCompraImpors());
					this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(LiquidacionImpuestoImpor.class)) {
					this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.setLiquidacionImpuestoImpors(pedidocompraimpor.getLiquidacionImpuestoImpors());
					this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.inicializarActualizarBindingTablaLiquidacionImpuestoImpor(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanPedidoCompraImpor(ArrayList<Classe> classes,PedidoCompraImporReturnGeneral pedidocompraimporReturnGeneral,PedidoCompraImporBean pedidocompraimporBean,Boolean conDefault) throws Exception {
		
			this.pedidocompraimporBean.setDetallePedidoCompraImpors(pedidocompraimporReturnGeneral.getPedidoCompraImpor().getDetallePedidoCompraImpors());
			this.pedidocompraimporBean.setLiquidacionImpuestoImpors(pedidocompraimporReturnGeneral.getPedidoCompraImpor().getLiquidacionImpuestoImpors());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(DetallePedidoCompraImpor.class)) {
					pedidocompraimpor.setDetallePedidoCompraImpors(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporBeanSwingJInternalFrame.detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(LiquidacionImpuestoImpor.class)) {
					pedidocompraimpor.setLiquidacionImpuestoImpors(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporBeanSwingJInternalFrame.liquidacionimpuestoimporLogic.getLiquidacionImpuestoImpors());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.pedidocompraimpor)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormPedidoCompraImpor = new PedidoCompraImporDetalleFormJInternalFrame(jDesktopPane,this.pedidocompraimporSessionBean.getConGuardarRelaciones(),this.pedidocompraimporSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.setVisible(false);
		this.jInternalFrameDetalleFormPedidoCompraImpor.setSelected(false);						
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.pedidocompraimporLogic=this.pedidocompraimporLogic;
		
		this.cargarCombosFrameForeignKeyPedidoCompraImpor("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetallePedidoCompraImpor();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetallePedidoCompraImpor();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyPedidoCompraImpor("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyPedidoCompraImpor();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarPedidoCompraImpor"));
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonModificarPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"ModificarPedidoCompraImpor"));

		
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonModificarToolBarPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"ModificarToolBarPedidoCompraImpor"));
					
		this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemModificarPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"MenuItemModificarPedidoCompraImpor"));		
		
		
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonActualizarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"ActualizarPedidoCompraImpor"));
		
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonActualizarToolBarPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"ActualizarToolBarPedidoCompraImpor"));
						
		this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemActualizarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemActualizarPedidoCompraImpor"));		
		
		
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonEliminarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"EliminarPedidoCompraImpor"));
		
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonEliminarToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"EliminarToolBarPedidoCompraImpor"));
								
		this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemEliminarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemEliminarPedidoCompraImpor"));		
		
		
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonCancelarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CancelarPedidoCompraImpor"));
		
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonCancelarToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CancelarToolBarPedidoCompraImpor"));
					
		this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemCancelarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemCancelarPedidoCompraImpor"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemDetalleCerrarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarPedidoCompraImpor"));		
		
		
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonGuardarCambiosToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPedidoCompraImpor"));
		
		
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonGuardarCambiosToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPedidoCompraImpor"));
		
		
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioPedidoCompraImpor"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonidPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"idPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empresaPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empresaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_sucursalPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_sucursalPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_moduloPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_moduloPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_moduloPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_ejercicioPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_ejercicioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_periodoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_periodoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_paisPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_paisPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_paisPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_paisPedidoCompraImporBusqueda"));
		//jButtonid_clientePedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_clientePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_clientePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_clientePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraImporBusqueda"));
		//jButtonid_cliente_proveedorPedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_proveedorPedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_cliente_proveedorPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_cliente_proveedorPedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_cliente_proveedorPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_proveedorPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_cliente_proveedorPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_proveedorPedidoCompraImporBusqueda"));
		//jButtonid_empleadoPedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoPedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empleadoPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empleadoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empleadoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_usuarioPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_usuarioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoCompraImporBusqueda"));
		//jButtonid_tipo_cambioPedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioPedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_cambioPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_cambioPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_cambioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_monedaPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_monedaPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_monedaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_prorrateo_imporPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_prorrateo_imporPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_prorrateo_imporPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_prorrateo_imporPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_embarcadorPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_embarcadorPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_embarcadorPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_embarcadorPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_via_transportePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_via_transportePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_via_transportePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_via_transportePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_puertoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_puertoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_puertoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_puertoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_puerto_destinoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_puerto_destinoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_puerto_destinoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_puerto_destinoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_terminos_imporPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_terminos_imporPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_terminos_imporPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_terminos_imporPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_estado_pedido_compraPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_compraPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_estado_pedido_compraPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_compraPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonforma_pagoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"forma_pagoPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonnumero_duiPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"numero_duiPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonsecuencialPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"secuencialPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonnumero_ordenPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"numero_ordenPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonuso_enPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"uso_enPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonresponsablePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"responsablePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonorden_compraPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"orden_compraPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonlugar_entregaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"lugar_entregaPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtondescripcionPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfechaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fechaPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfecha_emisionPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfecha_entregaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfecha_entrega_clientePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entrega_clientePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonnombre_seguroPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"nombre_seguroPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonnombre_consignatarioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"nombre_consignatarioPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonpreciosPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"preciosPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfletePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fletePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonseguroPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"seguroPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtongastosPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"gastosPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtoncfrPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cfrPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtoncifPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cifPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtontotalPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"totalPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_formatoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_formatoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_formatoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_anioPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_anioPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_anioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_mesPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_mesPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_mesPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPedidoCompraImporBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTabbedPaneRelacionesPedidoCompraImpor.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesPedidoCompraImpor"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFramePedidoCompraImpor"));
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarPedidoCompraImpor"));
		}
		
		this.jTableDatosPedidoCompraImpor.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarPedidoCompraImpor"));
		
		this.jTableDatosPedidoCompraImpor.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarPedidoCompraImpor"));
		
		this.jButtonNuevoPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"NuevoPedidoCompraImpor"));
		
		this.jButtonDuplicarPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"DuplicarPedidoCompraImpor"));
		
		this.jButtonCopiarPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"CopiarPedidoCompraImpor"));
		
		this.jButtonVerFormPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"VerFormPedidoCompraImpor"));
		
		
		this.jButtonNuevoToolBarPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"NuevoToolBarPedidoCompraImpor"));
			
		this.jButtonDuplicarToolBarPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"DuplicarToolBarPedidoCompraImpor"));
			
		this.jMenuItemNuevoPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemNuevoPedidoCompraImpor"));
			
		this.jMenuItemDuplicarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarPedidoCompraImpor"));		
		
		
		this.jButtonNuevoRelacionesPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"NuevoRelacionesPedidoCompraImpor"));
		
		
		this.jButtonNuevoRelacionesToolBarPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarPedidoCompraImpor"));
			
		this.jMenuItemNuevoRelacionesPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesPedidoCompraImpor"));		
		
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonModificarPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"ModificarPedidoCompraImpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonModificarToolBarPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"ModificarToolBarPedidoCompraImpor"));
			
			this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemModificarPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"MenuItemModificarPedidoCompraImpor"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonActualizarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"ActualizarPedidoCompraImpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonActualizarToolBarPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"ActualizarToolBarPedidoCompraImpor"));
				
			this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemActualizarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemActualizarPedidoCompraImpor"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonEliminarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"EliminarPedidoCompraImpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonEliminarToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"EliminarToolBarPedidoCompraImpor"));
						
			this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemEliminarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemEliminarPedidoCompraImpor"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonCancelarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CancelarPedidoCompraImpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonCancelarToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CancelarToolBarPedidoCompraImpor"));
			
			this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemCancelarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemCancelarPedidoCompraImpor"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarPedidoCompraImpor"));		
		
		
		this.jButtonCerrarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CerrarPedidoCompraImpor"));
		
		
		this.jButtonCerrarToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CerrarToolBarPedidoCompraImpor"));
			
		this.jMenuItemCerrarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemCerrarPedidoCompraImpor"));
			
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jMenuItemDetalleCerrarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarPedidoCompraImpor"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonGuardarCambiosPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosPedidoCompraImpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonGuardarCambiosToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPedidoCompraImpor"));
		}
		
		this.jButtonCopiarToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CopiarToolBarPedidoCompraImpor"));
			
		this.jButtonVerFormToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"VerFormToolBarPedidoCompraImpor"));
		
		this.jMenuItemGuardarCambiosPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosPedidoCompraImpor"));
			
		this.jMenuItemCopiarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemCopiarPedidoCompraImpor"));		
		
		this.jMenuItemVerFormPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemVerFormPedidoCompraImpor"));		
		
		
		this.jButtonGuardarCambiosTablaPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaPedidoCompraImpor"));
		
		
		this.jButtonGuardarCambiosTablaToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarPedidoCompraImpor"));
			
		this.jMenuItemGuardarCambiosTablaPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaPedidoCompraImpor"));		
		
		
		
		this.jButtonRecargarInformacionPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"RecargarInformacionPedidoCompraImpor"));
					
		this.jButtonRecargarInformacionToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarPedidoCompraImpor"));
		
		this.jMenuItemRecargarInformacionPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionPedidoCompraImpor"));		
		
		
		
		this.jButtonAnterioresPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"AnterioresPedidoCompraImpor"));
		
		
		this.jButtonAnterioresToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"AnterioresToolBarPedidoCompraImpor"));
		
		this.jMenuItemAnterioresPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresPedidoCompraImpor"));		
		
		
		this.jButtonSiguientesPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"SiguientesPedidoCompraImpor"));
		
		
		this.jButtonSiguientesToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"SiguientesToolBarPedidoCompraImpor"));
			
		this.jMenuItemSiguientesPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesPedidoCompraImpor"));
			
		this.jMenuItemAbrirOrderByPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByPedidoCompraImpor"));
			
		this.jMenuItemMostrarOcultarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarPedidoCompraImpor"));
			
		this.jMenuItemDetalleAbrirOrderByPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByPedidoCompraImpor"));
			
		this.jMenuItemDetalleMostarOcultarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarPedidoCompraImpor"));		
		
		
		this.jButtonNuevoGuardarCambiosPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosPedidoCompraImpor"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarPedidoCompraImpor"));
			
		this.jMenuItemNuevoGuardarCambiosPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosPedidoCompraImpor"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosPedidoCompraImpor.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosPedidoCompraImpor"));

		this.jCheckBoxSeleccionadosPedidoCompraImpor.addItemListener(new CheckBoxItemListener(this,"SeleccionadosPedidoCompraImpor"));
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioPedidoCompraImpor"));
		}
		
		
		this.jComboBoxTiposRelacionesPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"TiposRelacionesPedidoCompraImpor"));
			
		this.jComboBoxTiposAccionesPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"TiposAccionesPedidoCompraImpor"));
					
		this.jComboBoxTiposSeleccionarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"TiposSeleccionarPedidoCompraImpor"));
			
		this.jTextFieldValorCampoGeneralPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralPedidoCompraImpor"));		
		
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonidPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"idPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empresaPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empresaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_sucursalPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_sucursalPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_moduloPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_moduloPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_moduloPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_ejercicioPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_ejercicioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_periodoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_periodoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_paisPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_paisPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_paisPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_paisPedidoCompraImporBusqueda"));
		//jButtonid_clientePedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_clientePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_clientePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_clientePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraImporBusqueda"));
		//jButtonid_cliente_proveedorPedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_proveedorPedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_cliente_proveedorPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_cliente_proveedorPedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_cliente_proveedorPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_proveedorPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_cliente_proveedorPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_proveedorPedidoCompraImporBusqueda"));
		//jButtonid_empleadoPedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoPedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empleadoPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empleadoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empleadoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_usuarioPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_usuarioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoCompraImporBusqueda"));
		//jButtonid_tipo_cambioPedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioPedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_cambioPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_cambioPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_cambioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_monedaPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_monedaPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_monedaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_prorrateo_imporPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_prorrateo_imporPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_prorrateo_imporPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_prorrateo_imporPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_embarcadorPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_embarcadorPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_embarcadorPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_embarcadorPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_via_transportePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_via_transportePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_via_transportePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_via_transportePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_puertoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_puertoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_puertoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_puertoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_puerto_destinoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_puerto_destinoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_puerto_destinoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_puerto_destinoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_terminos_imporPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_terminos_imporPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_terminos_imporPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_terminos_imporPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_estado_pedido_compraPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_compraPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_estado_pedido_compraPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_compraPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonforma_pagoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"forma_pagoPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonnumero_duiPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"numero_duiPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonsecuencialPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"secuencialPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonnumero_ordenPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"numero_ordenPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonuso_enPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"uso_enPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonresponsablePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"responsablePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonorden_compraPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"orden_compraPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonlugar_entregaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"lugar_entregaPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtondescripcionPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfechaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fechaPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfecha_emisionPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfecha_entregaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfecha_entrega_clientePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entrega_clientePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonnombre_seguroPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"nombre_seguroPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonnombre_consignatarioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"nombre_consignatarioPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonpreciosPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"preciosPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfletePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fletePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonseguroPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"seguroPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtongastosPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"gastosPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtoncfrPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cfrPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtoncifPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cifPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtontotalPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"totalPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_formatoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_formatoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_formatoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_anioPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_anioPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_anioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_mesPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_mesPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_mesPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPedidoCompraImporBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdClientePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdClientePedidoCompraImpor"));

			this.jButtonBuscarFK_IdClienteid_clientePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraImpor"));

			this.jButtonFK_IdClienteProveedorPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdClienteProveedorPedidoCompraImpor"));

			this.jButtonBuscarFK_IdClienteProveedorid_cliente_proveedorPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_cliente_proveedorPedidoCompraImpor"));

			this.jButtonFK_IdEmbarcadorPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdEmbarcadorPedidoCompraImpor"));

			this.jButtonFK_IdEmpleadoPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoPedidoCompraImpor"));

			this.jButtonBuscarFK_IdEmpleadoid_empleadoPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraImpor"));

			this.jButtonFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor"));

			this.jButtonFK_IdPaisPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdPaisPedidoCompraImpor"));

			this.jButtonFK_IdPuertoPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdPuertoPedidoCompraImpor"));

			this.jButtonFK_IdPuertoDestinoPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdPuertoDestinoPedidoCompraImpor"));

			this.jButtonFK_IdTipoProrrateoImporPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdTipoProrrateoImporPedidoCompraImpor"));

			this.jButtonFK_IdTipoTerminosImporPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdTipoTerminosImporPedidoCompraImpor"));

			this.jButtonFK_IdTipoViaTransportePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdTipoViaTransportePedidoCompraImpor"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoPedidoCompraImpor!=null) {
				this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPedidoCompraImpor"));
				this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPedidoCompraImpor"));
				this.jInternalFrameReporteDinamicoPedidoCompraImpor.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPedidoCompraImpor"));
			}
			
			//this.jButtonCerrarReporteDinamicoPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPedidoCompraImpor"));				
			//this.jButtonGenerarReporteDinamicoPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPedidoCompraImpor"));
			//this.jButtonGenerarExcelReporteDinamicoPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPedidoCompraImpor"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionPedidoCompraImpor!=null) {
				this.jInternalFrameImportacionPedidoCompraImpor.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionPedidoCompraImpor"));
				this.jInternalFrameImportacionPedidoCompraImpor.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionPedidoCompraImpor"));
				this.jInternalFrameImportacionPedidoCompraImpor.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionPedidoCompraImpor"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"AbrirOrderByPedidoCompraImpor"));
			
			this.jButtonAbrirOrderByToolBarPedidoCompraImpor.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarPedidoCompraImpor"));			
			
			if(this.jInternalFrameOrderByPedidoCompraImpor!=null) {
				this.jInternalFrameOrderByPedidoCompraImpor.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByPedidoCompraImpor"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompraImpor.jTabbedPaneRelacionesPedidoCompraImpor.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesPedidoCompraImpor"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFramePedidoCompraImpor();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormPedidoCompraImpor = (JInternalFrameBase)event.getSource();
	            	
	            PedidoCompraImporBeanSwingJInternalFrame jInternalFrameParent=(PedidoCompraImporBeanSwingJInternalFrame)jInternalFrameDetalleFormPedidoCompraImpor.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarPedidoCompraImporActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosPedidoCompraImpor.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosPedidoCompraImporListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosPedidoCompraImpor.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosPedidoCompraImpor.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoCompraImporActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoCompraImporActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoCompraImporActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoPedidoCompraImpor";
		inputMap = this.jButtonNuevoPedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoPedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoPedidoCompraImporActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoCompraImporActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoCompraImporActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoCompraImporActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesPedidoCompraImpor";
		inputMap = this.jButtonNuevoRelacionesPedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesPedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoPedidoCompraImporActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarPedidoCompraImpor";
		inputMap = this.jButtonModificarPedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarPedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarPedidoCompraImporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarPedidoCompraImpor";
		inputMap = this.jButtonActualizarPedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarPedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarPedidoCompraImporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarPedidoCompraImpor";
		inputMap = this.jButtonEliminarPedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarPedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarPedidoCompraImporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarPedidoCompraImpor";
		inputMap = this.jButtonCancelarPedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarPedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarPedidoCompraImporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarPedidoCompraImpor";
		inputMap = this.jButtonCerrarPedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarPedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarPedidoCompraImporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonGuardarCambiosPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosPedidoCompraImpor";
		inputMap = this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonGuardarCambiosPedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonGuardarCambiosPedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosPedidoCompraImporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosPedidoCompraImpor.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosPedidoCompraImporItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesPedidoCompraImpor.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesPedidoCompraImporActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarPedidoCompraImpor.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarPedidoCompraImporActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralPedidoCompraImpor.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralPedidoCompraImporActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonidPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"idPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empresaPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empresaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_sucursalPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_sucursalPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_moduloPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_moduloPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_moduloPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_ejercicioPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_ejercicioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_periodoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_periodoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_paisPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_paisPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_paisPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_paisPedidoCompraImporBusqueda"));
		//jButtonid_clientePedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_clientePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_clientePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_clientePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraImporBusqueda"));
		//jButtonid_cliente_proveedorPedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_proveedorPedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_cliente_proveedorPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_cliente_proveedorPedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_cliente_proveedorPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_proveedorPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_cliente_proveedorPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_proveedorPedidoCompraImporBusqueda"));
		//jButtonid_empleadoPedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoPedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empleadoPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empleadoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empleadoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_usuarioPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_usuarioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoCompraImporBusqueda"));
		//jButtonid_tipo_cambioPedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioPedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_cambioPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_cambioPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_cambioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_monedaPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_monedaPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_monedaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_prorrateo_imporPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_prorrateo_imporPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_prorrateo_imporPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_prorrateo_imporPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_embarcadorPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_embarcadorPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_embarcadorPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_embarcadorPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_via_transportePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_via_transportePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_via_transportePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_via_transportePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_puertoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_puertoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_puertoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_puertoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_puerto_destinoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_puerto_destinoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_puerto_destinoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_puerto_destinoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_terminos_imporPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_terminos_imporPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_terminos_imporPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_terminos_imporPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_estado_pedido_compraPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_compraPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_estado_pedido_compraPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_compraPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonforma_pagoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"forma_pagoPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonnumero_duiPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"numero_duiPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonsecuencialPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"secuencialPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonnumero_ordenPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"numero_ordenPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonuso_enPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"uso_enPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonresponsablePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"responsablePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonorden_compraPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"orden_compraPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonlugar_entregaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"lugar_entregaPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtondescripcionPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfechaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fechaPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfecha_emisionPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfecha_entregaPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfecha_entrega_clientePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entrega_clientePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonnombre_seguroPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"nombre_seguroPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonnombre_consignatarioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"nombre_consignatarioPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonpreciosPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"preciosPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonfletePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fletePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonseguroPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"seguroPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtongastosPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"gastosPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtoncfrPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cfrPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtoncifPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cifPedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtontotalPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"totalPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_formatoPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_formatoPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_formatoPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_anioPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_anioPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_anioPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_mesPedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_mesPedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_mesPedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPedidoCompraImporBusqueda"));
		
		
		this.jButtonFK_IdClientePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdClientePedidoCompraImpor"));

		this.jButtonBuscarFK_IdClienteid_clientePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraImpor"));

		this.jButtonFK_IdClienteProveedorPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdClienteProveedorPedidoCompraImpor"));

		this.jButtonBuscarFK_IdClienteProveedorid_cliente_proveedorPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_cliente_proveedorPedidoCompraImpor"));

		this.jButtonFK_IdEmbarcadorPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdEmbarcadorPedidoCompraImpor"));

		this.jButtonFK_IdEmpleadoPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoPedidoCompraImpor"));

		this.jButtonBuscarFK_IdEmpleadoid_empleadoPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraImpor"));

		this.jButtonFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor"));

		this.jButtonFK_IdPaisPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdPaisPedidoCompraImpor"));

		this.jButtonFK_IdPuertoPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdPuertoPedidoCompraImpor"));

		this.jButtonFK_IdPuertoDestinoPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdPuertoDestinoPedidoCompraImpor"));

		this.jButtonFK_IdTipoProrrateoImporPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdTipoProrrateoImporPedidoCompraImpor"));

		this.jButtonFK_IdTipoTerminosImporPedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdTipoTerminosImporPedidoCompraImpor"));

		this.jButtonFK_IdTipoViaTransportePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdTipoViaTransportePedidoCompraImpor"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionPedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionPedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarPedidoCompraImporActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarPedidoCompraImpor.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosPedidoCompraImpor(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(PedidoCompraImpor pedidocompraimporAux:this.pedidocompraimporLogic.getPedidoCompraImpors()) {
					pedidocompraimporAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimpors) {
					pedidocompraimporAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosPedidoCompraImporItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(PedidoCompraImpor pedidocompraimporAux:this.pedidocompraimporLogic.getPedidoCompraImpors()) {
						pedidocompraimporAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimpors) {
						pedidocompraimporAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(PedidoCompraImpor pedidocompraimporAux:this.pedidocompraimporLogic.getPedidoCompraImpors()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimpors) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaPedidoCompraImpor(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosPedidoCompraImpor.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosPedidoCompraImpor.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosPedidoCompraImporItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosPedidoCompraImpor.getSelectedRows();
			
			PedidoCompraImpor pedidocompraimporLocal=new PedidoCompraImpor();
			
			//this.seleccionarTodosPedidoCompraImpor(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLocal =(PedidoCompraImpor) this.pedidocompraimporLogic.getPedidoCompraImpors().toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					pedidocompraimporLocal =(PedidoCompraImpor) this.pedidocompraimpors.toArray()[this.jTableDatosPedidoCompraImpor.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				pedidocompraimporLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(PedidoCompraImpor pedidocompraimporAux:this.pedidocompraimporLogic.getPedidoCompraImpors()) {
						pedidocompraimporAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimpors) {
						pedidocompraimporAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaPedidoCompraImpor(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosPedidoCompraImpor.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosPedidoCompraImpor.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraImpor,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualPedidoCompraImporItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarPedidoCompraImporParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralPedidoCompraImporActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralPedidoCompraImpor.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(PedidoCompraImpor pedidocompraimporAux:this.pedidocompraimporLogic.getPedidoCompraImpors()) {
				
						if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO)) {
							existe=true;
							pedidocompraimporAux.setforma_pago(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI)) {
							existe=true;
							pedidocompraimporAux.setnumero_dui(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL)) {
							existe=true;
							pedidocompraimporAux.setsecuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN)) {
							existe=true;
							pedidocompraimporAux.setnumero_orden(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_USOEN)) {
							existe=true;
							pedidocompraimporAux.setuso_en(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE)) {
							existe=true;
							pedidocompraimporAux.setresponsable(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA)) {
							existe=true;
							pedidocompraimporAux.setorden_compra(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA)) {
							existe=true;
							pedidocompraimporAux.setlugar_entrega(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							pedidocompraimporAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							pedidocompraimporAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							pedidocompraimporAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA)) {
							existe=true;
							pedidocompraimporAux.setfecha_entrega(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE)) {
							existe=true;
							pedidocompraimporAux.setfecha_entrega_cliente(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO)) {
							existe=true;
							pedidocompraimporAux.setnombre_seguro(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO)) {
							existe=true;
							pedidocompraimporAux.setnombre_consignatario(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_PRECIOS)) {
							existe=true;
							pedidocompraimporAux.setprecios(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							pedidocompraimporAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_SEGURO)) {
							existe=true;
							pedidocompraimporAux.setseguro(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_GASTOS)) {
							existe=true;
							pedidocompraimporAux.setgastos(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_CFR)) {
							existe=true;
							pedidocompraimporAux.setcfr(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_CIF)) {
							existe=true;
							pedidocompraimporAux.setcif(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							pedidocompraimporAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimpors) {
					
						if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO)) {
							existe=true;
							pedidocompraimporAux.setforma_pago(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI)) {
							existe=true;
							pedidocompraimporAux.setnumero_dui(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL)) {
							existe=true;
							pedidocompraimporAux.setsecuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN)) {
							existe=true;
							pedidocompraimporAux.setnumero_orden(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_USOEN)) {
							existe=true;
							pedidocompraimporAux.setuso_en(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE)) {
							existe=true;
							pedidocompraimporAux.setresponsable(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA)) {
							existe=true;
							pedidocompraimporAux.setorden_compra(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA)) {
							existe=true;
							pedidocompraimporAux.setlugar_entrega(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							pedidocompraimporAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							pedidocompraimporAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							pedidocompraimporAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA)) {
							existe=true;
							pedidocompraimporAux.setfecha_entrega(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE)) {
							existe=true;
							pedidocompraimporAux.setfecha_entrega_cliente(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO)) {
							existe=true;
							pedidocompraimporAux.setnombre_seguro(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO)) {
							existe=true;
							pedidocompraimporAux.setnombre_consignatario(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_PRECIOS)) {
							existe=true;
							pedidocompraimporAux.setprecios(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							pedidocompraimporAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_SEGURO)) {
							existe=true;
							pedidocompraimporAux.setseguro(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_GASTOS)) {
							existe=true;
							pedidocompraimporAux.setgastos(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_CFR)) {
							existe=true;
							pedidocompraimporAux.setcfr(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_CIF)) {
							existe=true;
							pedidocompraimporAux.setcif(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							pedidocompraimporAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaPedidoCompraImpor(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesPedidoCompraImporActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioPedidoCompraImpor=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesPedidoCompraImpor.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReportePedidoCompraImpor) {				
					conSplash=true;//false;										
					
					//this.startProcessPedidoCompraImpor(conSplash);
				
					this.generarReportePedidoCompraImporsSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedidoCompraImpor.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoPedidoCompraImporsSeleccionados();
				//this.jComboBoxTiposAccionesPedidoCompraImpor.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoPedidoCompraImporsSeleccionados(false);
				//this.jComboBoxTiposAccionesPedidoCompraImpor.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoPedidoCompraImporsSeleccionados(true);
				//this.jComboBoxTiposAccionesPedidoCompraImpor.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessPedidoCompraImpor();
				
				this.exportarPedidoCompraImporsSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedidoCompraImpor.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionPedidoCompraImpors();
				//this.importarPedidoCompraImpors();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedidoCompraImpor.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessPedidoCompraImpor();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelPedidoCompraImporsSeleccionados();
				//this.jComboBoxTiposAccionesPedidoCompraImpor.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Pedido Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessPedidoCompraImpor();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoPedidoCompraImpor)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyPedidoCompraImpor(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedidoCompraImpor.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.setSelectedIndex(0);					
				}	
			} 			
			else if(PedidoCompraImporBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReportePedidoCompraImpor) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessPedidoCompraImpor(conSplash);
					
						//this.actualizarParametrosGeneralPedidoCompraImpor();
						
						this.generarReporteProcesoAccionPedidoCompraImporsSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesPedidoCompraImpor.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(PedidoCompraImporBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Pedido CompraS SELECCIONADOS?", "MANTENIMIENTO DE Pedido Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessPedidoCompraImpor();
				
						this.actualizarParametrosGeneralPedidoCompraImpor();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.pedidocompraimporReturnGeneral=pedidocompraimporLogic.procesarAccionPedidoCompraImporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.pedidocompraimporLogic.getPedidoCompraImpors(),this.pedidocompraimporParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarPedidoCompraImporReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesPedidoCompraImpor.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralPedidoCompraImpor();
					
					PedidoCompraImporBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarPedidoCompraImporReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesPedidoCompraImpor.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxTiposAccionesFormularioPedidoCompraImpor.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessPedidoCompraImpor(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesPedidoCompraImporActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessPedidoCompraImpor();
			
			if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados=new ArrayList<PedidoCompraImpor>();		
			PedidoCompraImpor pedidocompraimpor=new PedidoCompraImpor();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingPedidoCompraImpor(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesPedidoCompraImpor.getSelectedItem();
			
			
			
			
			pedidocompraimporsSeleccionados=this.getPedidoCompraImporsSeleccionados(true);
			//this.sTipoAccion;
			
			if(pedidocompraimporsSeleccionados.size()==1) {
				for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimporsSeleccionados) {
					pedidocompraimpor=pedidocompraimporAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Detalle Pedido Compra")) {
					jButtonDetallePedidoCompraImporActionPerformed(null,rowIndex,true,false,pedidocompraimpor);
				}
				else if(this.sTipoRelacion.equals("Liquidacion Impuesto Impor")) {
					jButtonLiquidacionImpuestoImporActionPerformed(null,rowIndex,true,false,pedidocompraimpor);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessPedidoCompraImpor();
			
      		//this.finishProcessPedidoCompraImpor(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarPedidoCompraImporReturnGeneral() throws Exception {
		if(this.pedidocompraimporReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.pedidocompraimporReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.pedidocompraimporReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.pedidocompraimporReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.pedidocompraimporReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.pedidocompraimporReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingPedidoCompraImpor(false);
		}
		
		if(this.pedidocompraimporReturnGeneral.getConRetornoLista() || this.pedidocompraimporReturnGeneral.getConRetornoObjeto()) {
			if(this.pedidocompraimporReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.pedidocompraimporLogic.setPedidoCompraImpors(this.pedidocompraimporReturnGeneral.getPedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.pedidocompraimporReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.pedidocompraimporLogic.setPedidoCompraImpor(this.pedidocompraimporReturnGeneral.getPedidoCompraImpor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingPedidoCompraImpor(false);
		}
	}
	
	public void actualizarParametrosGeneralPedidoCompraImpor() throws Exception {
		
		
	}
	
	public ArrayList<PedidoCompraImpor> getPedidoCompraImporsSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados=new ArrayList<PedidoCompraImpor>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioPedidoCompraImpor) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimporLogic.getPedidoCompraImpors()) {
					if(pedidocompraimporAux.getIsSelected()) {
						pedidocompraimporsSeleccionados.add(pedidocompraimporAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PedidoCompraImpor pedidocompraimporAux:this.pedidocompraimpors) {
					if(pedidocompraimporAux.getIsSelected()) {
						pedidocompraimporsSeleccionados.add(pedidocompraimporAux);				
					}
				}
			}
			
			if(pedidocompraimporsSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						pedidocompraimporsSeleccionados.addAll(this.pedidocompraimporLogic.getPedidoCompraImpors());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						pedidocompraimporsSeleccionados.addAll(this.pedidocompraimpors);				
					}
				}
			}
		} else {
			pedidocompraimporsSeleccionados.add(this.pedidocompraimpor);
		}
		
		return pedidocompraimporsSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReportePedidoCompraImporsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalPedidoCompraImporsSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoPedidoCompraImporsSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoPedidoCompraImporsSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoPedidoCompraImporsSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesPedidoCompraImporsSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Pedido Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesPedidoCompraImporsSeleccionados() throws Exception {
		ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados=new ArrayList<PedidoCompraImpor>();		
		
		pedidocompraimporsSeleccionados=this.getPedidoCompraImporsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReportePedidoCompraImpors("Todos",pedidocompraimporsSeleccionados);
		
	}	
	
	public void generarReporteNormalPedidoCompraImporsSeleccionados() throws Exception {
		ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados=new ArrayList<PedidoCompraImpor>();		
		
		pedidocompraimporsSeleccionados=this.getPedidoCompraImporsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReportePedidoCompraImpors("Todos",pedidocompraimporsSeleccionados);
	}		
	
	public void generarReporteProcesoAccionPedidoCompraImporsSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados=new ArrayList<PedidoCompraImpor>();
		
		pedidocompraimporsSeleccionados=this.getPedidoCompraImporsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReportePedidoCompraImpors("Todos",pedidocompraimporsSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoPedidoCompraImporsSeleccionados() throws Exception {
		ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados=new ArrayList<PedidoCompraImpor>();		
		
		
		this.abrirInicializarFrameReporteDinamicoPedidoCompraImpor();
		
		
		pedidocompraimporsSeleccionados=this.getPedidoCompraImporsSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoPedidoCompraImpor();
		
		
		//this.generarReportePedidoCompraImpors("Todos",pedidocompraimporsSeleccionados ,pedidocompraimporImplementable,pedidocompraimporImplementableHome);
	}
	
	public void mostrarImportacionPedidoCompraImpors() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionPedidoCompraImpor();
		
		this.abrirFrameImportacionPedidoCompraImpor();		
		
			
		//this.generarReportePedidoCompraImpors("Todos",pedidocompraimporsSeleccionados ,pedidocompraimporImplementable,pedidocompraimporImplementableHome);
	}
	
	public void importarPedidoCompraImpors() throws Exception {		
	
	}
	
	public void exportarPedidoCompraImporsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelPedidoCompraImporsSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoPedidoCompraImporsSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlPedidoCompraImporsSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Pedido Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoPedidoCompraImporsSeleccionados() throws Exception {
		ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados=new ArrayList<PedidoCompraImpor>();		
		
		pedidocompraimporsSeleccionados=this.getPedidoCompraImporsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidocompraimpor."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarPedidoCompraImpor(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimporsSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarPedidoCompraImpor(pedidocompraimporAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//pedidocompraimporAux.setsDetalleGeneralEntityReporte(pedidocompraimporAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarPedidoCompraImpor(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDPAIS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTEPROVEEDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDTIPOCAMBIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDTIPOPRORRATEOIMPOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDEMBARCADOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDPUERTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDPUERTODESTINO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDTIPOTERMINOSIMPOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_USOEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_PRECIOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_FLETE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_SEGURO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_GASTOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_CFR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_CIF;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDFORMATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraImporConstantesFunciones.LABEL_IDMES;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=pedidocompraimpor.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getpais_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getclienteproveedor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getusuario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.gettipocambio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.gettipoprorrateoimpor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getembarcador_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.gettipoviatransporte_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getpuerto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getpuertodestino_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.gettipoterminosimpor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getestadopedidocompra_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getforma_pago();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getnumero_dui();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getsecuencial();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getnumero_orden().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getuso_en();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getresponsable();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getorden_compra();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getlugar_entrega();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getfecha_entrega().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getfecha_entrega_cliente().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getnombre_seguro();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getnombre_consignatario();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getprecios();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getflete().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getseguro().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getgastos().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getcfr().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getcif().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getformato_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompraimpor.getmes_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelPedidoCompraImporsSeleccionados() throws Exception {
		ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados=new ArrayList<PedidoCompraImpor>();		
		
		pedidocompraimporsSeleccionados=this.getPedidoCompraImporsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidocompraimpor.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("PedidoCompraImpors");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelPedidoCompraImpor(row);				
				iRow++;
			}				
			
			for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimporsSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelPedidoCompraImpor(pedidocompraimporAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlPedidoCompraImporsSeleccionados() throws Exception {
		ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados=new ArrayList<PedidoCompraImpor>();		
		
		pedidocompraimporsSeleccionados=this.getPedidoCompraImporsSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidocompraimpor.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("pedidocompraimpors");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("pedidocompraimpor");
			//elementRoot.appendChild(element);
		
			for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimporsSeleccionados) {
				element = document.createElement("pedidocompraimpor");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlPedidoCompraImpor(pedidocompraimporAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelPedidoCompraImpor(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDPAIS);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTEPROVEEDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOCAMBIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOPRORRATEOIMPOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDEMBARCADOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDPUERTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDPUERTODESTINO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOTERMINOSIMPOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_USOEN);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_PRECIOS);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_FLETE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_SEGURO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_GASTOS);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_CFR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_CIF);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDFORMATO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraImporConstantesFunciones.LABEL_IDMES);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getpais_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getclienteproveedor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getusuario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.gettipocambio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.gettipoprorrateoimpor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getembarcador_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.gettipoviatransporte_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getpuerto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getpuertodestino_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.gettipoterminosimpor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getestadopedidocompra_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getforma_pago());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getnumero_dui());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getsecuencial());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getnumero_orden());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getuso_en());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getresponsable());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getorden_compra());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getlugar_entrega());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getfecha_entrega());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getfecha_entrega_cliente());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getnombre_seguro());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getnombre_consignatario());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getprecios());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getflete());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getseguro());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getgastos());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getcfr());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getcif());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getformato_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompraimpor.getmes_descripcion());				
	}
	
	public void setFilaDatosExportarXmlPedidoCompraImpor(PedidoCompraImpor pedidocompraimpor,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(PedidoCompraImporConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(pedidocompraimpor.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(PedidoCompraImporConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(pedidocompraimpor.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementmodulo_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDMODULO);
		elementmodulo_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getmodulo_descripcion()));
		element.appendChild(elementmodulo_descripcion);

		Element elementejercicio_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementpais_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDPAIS);
		elementpais_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getpais_descripcion()));
		element.appendChild(elementpais_descripcion);

		Element elementcliente_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementclienteproveedor_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDCLIENTEPROVEEDOR);
		elementclienteproveedor_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getclienteproveedor_descripcion()));
		element.appendChild(elementclienteproveedor_descripcion);

		Element elementempleado_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementusuario_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDUSUARIO);
		elementusuario_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getusuario_descripcion()));
		element.appendChild(elementusuario_descripcion);

		Element elementtipocambio_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDTIPOCAMBIO);
		elementtipocambio_descripcion.appendChild(document.createTextNode(pedidocompraimpor.gettipocambio_descripcion()));
		element.appendChild(elementtipocambio_descripcion);

		Element elementmoneda_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementtipoprorrateoimpor_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDTIPOPRORRATEOIMPOR);
		elementtipoprorrateoimpor_descripcion.appendChild(document.createTextNode(pedidocompraimpor.gettipoprorrateoimpor_descripcion()));
		element.appendChild(elementtipoprorrateoimpor_descripcion);

		Element elementembarcador_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDEMBARCADOR);
		elementembarcador_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getembarcador_descripcion()));
		element.appendChild(elementembarcador_descripcion);

		Element elementtipoviatransporte_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDTIPOVIATRANSPORTE);
		elementtipoviatransporte_descripcion.appendChild(document.createTextNode(pedidocompraimpor.gettipoviatransporte_descripcion()));
		element.appendChild(elementtipoviatransporte_descripcion);

		Element elementpuerto_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDPUERTO);
		elementpuerto_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getpuerto_descripcion()));
		element.appendChild(elementpuerto_descripcion);

		Element elementpuertodestino_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDPUERTODESTINO);
		elementpuertodestino_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getpuertodestino_descripcion()));
		element.appendChild(elementpuertodestino_descripcion);

		Element elementtipoterminosimpor_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDTIPOTERMINOSIMPOR);
		elementtipoterminosimpor_descripcion.appendChild(document.createTextNode(pedidocompraimpor.gettipoterminosimpor_descripcion()));
		element.appendChild(elementtipoterminosimpor_descripcion);

		Element elementestadopedidocompra_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDESTADOPEDIDOCOMPRA);
		elementestadopedidocompra_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getestadopedidocompra_descripcion()));
		element.appendChild(elementestadopedidocompra_descripcion);

		Element elementforma_pago = document.createElement(PedidoCompraImporConstantesFunciones.FORMAPAGO);
		elementforma_pago.appendChild(document.createTextNode(pedidocompraimpor.getforma_pago().trim()));
		element.appendChild(elementforma_pago);

		Element elementnumero_dui = document.createElement(PedidoCompraImporConstantesFunciones.NUMERODUI);
		elementnumero_dui.appendChild(document.createTextNode(pedidocompraimpor.getnumero_dui().trim()));
		element.appendChild(elementnumero_dui);

		Element elementsecuencial = document.createElement(PedidoCompraImporConstantesFunciones.SECUENCIAL);
		elementsecuencial.appendChild(document.createTextNode(pedidocompraimpor.getsecuencial().trim()));
		element.appendChild(elementsecuencial);

		Element elementnumero_orden = document.createElement(PedidoCompraImporConstantesFunciones.NUMEROORDEN);
		elementnumero_orden.appendChild(document.createTextNode(pedidocompraimpor.getnumero_orden().toString().trim()));
		element.appendChild(elementnumero_orden);

		Element elementuso_en = document.createElement(PedidoCompraImporConstantesFunciones.USOEN);
		elementuso_en.appendChild(document.createTextNode(pedidocompraimpor.getuso_en().trim()));
		element.appendChild(elementuso_en);

		Element elementresponsable = document.createElement(PedidoCompraImporConstantesFunciones.RESPONSABLE);
		elementresponsable.appendChild(document.createTextNode(pedidocompraimpor.getresponsable().trim()));
		element.appendChild(elementresponsable);

		Element elementorden_compra = document.createElement(PedidoCompraImporConstantesFunciones.ORDENCOMPRA);
		elementorden_compra.appendChild(document.createTextNode(pedidocompraimpor.getorden_compra().trim()));
		element.appendChild(elementorden_compra);

		Element elementlugar_entrega = document.createElement(PedidoCompraImporConstantesFunciones.LUGARENTREGA);
		elementlugar_entrega.appendChild(document.createTextNode(pedidocompraimpor.getlugar_entrega().trim()));
		element.appendChild(elementlugar_entrega);

		Element elementdescripcion = document.createElement(PedidoCompraImporConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(pedidocompraimpor.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementfecha = document.createElement(PedidoCompraImporConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(pedidocompraimpor.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementfecha_emision = document.createElement(PedidoCompraImporConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(pedidocompraimpor.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementfecha_entrega = document.createElement(PedidoCompraImporConstantesFunciones.FECHAENTREGA);
		elementfecha_entrega.appendChild(document.createTextNode(pedidocompraimpor.getfecha_entrega().toString().trim()));
		element.appendChild(elementfecha_entrega);

		Element elementfecha_entrega_cliente = document.createElement(PedidoCompraImporConstantesFunciones.FECHAENTREGACLIENTE);
		elementfecha_entrega_cliente.appendChild(document.createTextNode(pedidocompraimpor.getfecha_entrega_cliente().toString().trim()));
		element.appendChild(elementfecha_entrega_cliente);

		Element elementnombre_seguro = document.createElement(PedidoCompraImporConstantesFunciones.NOMBRESEGURO);
		elementnombre_seguro.appendChild(document.createTextNode(pedidocompraimpor.getnombre_seguro().trim()));
		element.appendChild(elementnombre_seguro);

		Element elementnombre_consignatario = document.createElement(PedidoCompraImporConstantesFunciones.NOMBRECONSIGNATARIO);
		elementnombre_consignatario.appendChild(document.createTextNode(pedidocompraimpor.getnombre_consignatario().trim()));
		element.appendChild(elementnombre_consignatario);

		Element elementprecios = document.createElement(PedidoCompraImporConstantesFunciones.PRECIOS);
		elementprecios.appendChild(document.createTextNode(pedidocompraimpor.getprecios().trim()));
		element.appendChild(elementprecios);

		Element elementflete = document.createElement(PedidoCompraImporConstantesFunciones.FLETE);
		elementflete.appendChild(document.createTextNode(pedidocompraimpor.getflete().toString().trim()));
		element.appendChild(elementflete);

		Element elementseguro = document.createElement(PedidoCompraImporConstantesFunciones.SEGURO);
		elementseguro.appendChild(document.createTextNode(pedidocompraimpor.getseguro().toString().trim()));
		element.appendChild(elementseguro);

		Element elementgastos = document.createElement(PedidoCompraImporConstantesFunciones.GASTOS);
		elementgastos.appendChild(document.createTextNode(pedidocompraimpor.getgastos().toString().trim()));
		element.appendChild(elementgastos);

		Element elementcfr = document.createElement(PedidoCompraImporConstantesFunciones.CFR);
		elementcfr.appendChild(document.createTextNode(pedidocompraimpor.getcfr().toString().trim()));
		element.appendChild(elementcfr);

		Element elementcif = document.createElement(PedidoCompraImporConstantesFunciones.CIF);
		elementcif.appendChild(document.createTextNode(pedidocompraimpor.getcif().toString().trim()));
		element.appendChild(elementcif);

		Element elementtotal = document.createElement(PedidoCompraImporConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(pedidocompraimpor.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementformato_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDFORMATO);
		elementformato_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getformato_descripcion()));
		element.appendChild(elementformato_descripcion);

		Element elementanio_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(PedidoCompraImporConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(pedidocompraimpor.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);
	}
	
	public void generarReporteGroupGenericoPedidoCompraImporsSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados=new ArrayList<PedidoCompraImpor>();
		
		pedidocompraimporsSeleccionados=this.getPedidoCompraImporsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoPedidoCompraImpor(pedidocompraimporsSeleccionados);
		
		this.generarReportePedidoCompraImpors("Todos",pedidocompraimporsSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoPedidoCompraImpor(ArrayList<PedidoCompraImpor> pedidocompraimporsSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimporsSeleccionados) {
				pedidocompraimporAux.setsDetalleGeneralEntityReporte(pedidocompraimporAux.toString());
			
				if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDMODULO)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDPAIS)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getpais_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDCLIENTEPROVEEDOR)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getclienteproveedor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDUSUARIO)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getusuario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOCAMBIO)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.gettipocambio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOPRORRATEOIMPOR)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.gettipoprorrateoimpor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDEMBARCADOR)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getembarcador_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.gettipoviatransporte_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDPUERTO)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getpuerto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDPUERTODESTINO)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getpuertodestino_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDTIPOTERMINOSIMPOR)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.gettipoterminosimpor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getestadopedidocompra_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FORMAPAGO)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getforma_pago());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_NUMERODUI)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getnumero_dui());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_SECUENCIAL)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getsecuencial());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_NUMEROORDEN)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getnumero_orden().toString());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_USOEN)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getuso_en());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_RESPONSABLE)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getresponsable());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_ORDENCOMPRA)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getorden_compra());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_LUGARENTREGA)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getlugar_entrega());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidocompraimporAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidocompraimporAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGA)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidocompraimporAux.getfecha_entrega()));
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_FECHAENTREGACLIENTE)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidocompraimporAux.getfecha_entrega_cliente()));
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_NOMBRESEGURO)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getnombre_seguro());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_NOMBRECONSIGNATARIO)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getnombre_consignatario());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_PRECIOS)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getprecios());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDFORMATO)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getformato_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraImporConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					pedidocompraimporAux.setsDescripcionGeneralEntityReporte1(pedidocompraimporAux.getmes_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesPedidoCompraImpor(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoPedidoCompraImpor=true;
				this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=true;
				this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=true;
			}
			
			this.isVisibilidadCeldaModificarPedidoCompraImpor=false;
			this.isVisibilidadCeldaActualizarPedidoCompraImpor=false;
			this.isVisibilidadCeldaEliminarPedidoCompraImpor=false;
			this.isVisibilidadCeldaCancelarPedidoCompraImpor=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoCompraImpor=true;
				} else {
					this.isVisibilidadCeldaGuardarPedidoCompraImpor=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoPedidoCompraImpor=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=false;
			this.isVisibilidadCeldaModificarPedidoCompraImpor=false;
			this.isVisibilidadCeldaActualizarPedidoCompraImpor=true;
			this.isVisibilidadCeldaEliminarPedidoCompraImpor=false;
			this.isVisibilidadCeldaCancelarPedidoCompraImpor=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoCompraImpor=true;
				} else {
					this.isVisibilidadCeldaGuardarPedidoCompraImpor=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoPedidoCompraImpor=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=false;
			this.isVisibilidadCeldaModificarPedidoCompraImpor=false;
			this.isVisibilidadCeldaActualizarPedidoCompraImpor=true;
			this.isVisibilidadCeldaEliminarPedidoCompraImpor=true;
			this.isVisibilidadCeldaCancelarPedidoCompraImpor=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoCompraImpor=true;
				} else {
					this.isVisibilidadCeldaGuardarPedidoCompraImpor=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoPedidoCompraImpor=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=false;
			this.isVisibilidadCeldaModificarPedidoCompraImpor=false;
			this.isVisibilidadCeldaActualizarPedidoCompraImpor=true;
			this.isVisibilidadCeldaEliminarPedidoCompraImpor=false;
			this.isVisibilidadCeldaCancelarPedidoCompraImpor=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoCompraImpor=false;
				} else {
					this.isVisibilidadCeldaGuardarPedidoCompraImpor=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoPedidoCompraImpor=true;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=true;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=true;
			this.isVisibilidadCeldaModificarPedidoCompraImpor=false;
			this.isVisibilidadCeldaActualizarPedidoCompraImpor=false;
			this.isVisibilidadCeldaEliminarPedidoCompraImpor=false;
			this.isVisibilidadCeldaCancelarPedidoCompraImpor=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoCompraImpor=true;
				} else {
					this.isVisibilidadCeldaGuardarPedidoCompraImpor=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoPedidoCompraImpor=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=false;
			this.isVisibilidadCeldaActualizarPedidoCompraImpor=false;
			this.isVisibilidadCeldaEliminarPedidoCompraImpor=false;
			this.isVisibilidadCeldaCancelarPedidoCompraImpor=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoCompraImpor=false;
				} else {
					this.isVisibilidadCeldaGuardarPedidoCompraImpor=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoPedidoCompraImpor=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=false;
			this.isVisibilidadCeldaModificarPedidoCompraImpor=true;
			this.isVisibilidadCeldaActualizarPedidoCompraImpor=false;
			this.isVisibilidadCeldaEliminarPedidoCompraImpor=false;
			this.isVisibilidadCeldaCancelarPedidoCompraImpor=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoCompraImpor=false;
				} else {
					this.isVisibilidadCeldaGuardarPedidoCompraImpor=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(PedidoCompraImporJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoPedidoCompraImpor=true;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=true;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=true;
		} else {
			this.actualizarEstadoPanelsPedidoCompraImpor(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarPedidoCompraImpor=false;
			//this.isVisibilidadCeldaVerFormPedidoCompraImpor=false;
			this.isVisibilidadCeldaDuplicarPedidoCompraImpor=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!pedidocompraimporSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=false;
		} else {
			this.isVisibilidadCeldaNuevoPedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
			if(!pedidocompraimporSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=false;												
			}
			
			this.jButtonCerrarPedidoCompraImpor.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompraImpor=false;
		}
		
		if(!this.permiteMantenimiento(this.pedidocompraimpor)) {
			this.isVisibilidadCeldaActualizarPedidoCompraImpor=false;
			this.isVisibilidadCeldaEliminarPedidoCompraImpor=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesPedidoCompraImpor() {
		this.isVisibilidadCeldaNuevoPedidoCompraImpor=false;
		this.isVisibilidadCeldaGuardarCambiosPedidoCompraImpor=false;
	}
	
	public void actualizarEstadoPanelsPedidoCompraImpor(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionPedidoCompraImpor!=null) {
				this.jScrollPanelDatosEdicionPedidoCompraImpor.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedidoCompraImpor!=null) {
				this.jScrollPanelDatosPedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedidoCompraImpor!=null) {
				this.jPanelPaginacionPedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedidoCompraImpor!=null) {
				this.jPanelParametrosReportesPedidoCompraImpor.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionPedidoCompraImpor!=null) {
				this.jScrollPanelDatosEdicionPedidoCompraImpor.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosPedidoCompraImpor!=null) {
				this.jScrollPanelDatosPedidoCompraImpor.setVisible(false);
			}
			
			if(this.jPanelPaginacionPedidoCompraImpor!=null) {
				this.jPanelPaginacionPedidoCompraImpor.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPedidoCompraImpor!=null) {
				this.jPanelParametrosReportesPedidoCompraImpor.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionPedidoCompraImpor!=null) {
				this.jScrollPanelDatosEdicionPedidoCompraImpor.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosPedidoCompraImpor!=null) {
				this.jScrollPanelDatosPedidoCompraImpor.setVisible(false);
			}
			
			if(this.jPanelPaginacionPedidoCompraImpor!=null) {
				this.jPanelPaginacionPedidoCompraImpor.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPedidoCompraImpor!=null) {
				this.jPanelParametrosReportesPedidoCompraImpor.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionPedidoCompraImpor!=null) {
				this.jScrollPanelDatosEdicionPedidoCompraImpor.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosPedidoCompraImpor!=null) {
				this.jScrollPanelDatosPedidoCompraImpor.setVisible(false);
			}
			
			if(this.jPanelPaginacionPedidoCompraImpor!=null) {
				this.jPanelPaginacionPedidoCompraImpor.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPedidoCompraImpor!=null) {
				this.jPanelParametrosReportesPedidoCompraImpor.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionPedidoCompraImpor!=null) {
				this.jScrollPanelDatosEdicionPedidoCompraImpor.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedidoCompraImpor!=null) {
				this.jScrollPanelDatosPedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedidoCompraImpor!=null) {
				this.jPanelPaginacionPedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedidoCompraImpor!=null) {
				this.jPanelParametrosReportesPedidoCompraImpor.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionPedidoCompraImpor!=null) {
				this.jScrollPanelDatosEdicionPedidoCompraImpor.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedidoCompraImpor!=null) {
				this.jScrollPanelDatosPedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedidoCompraImpor!=null) {
				this.jPanelPaginacionPedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedidoCompraImpor!=null) {
				this.jPanelParametrosReportesPedidoCompraImpor.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionPedidoCompraImpor!=null) {
				this.jScrollPanelDatosEdicionPedidoCompraImpor.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedidoCompraImpor!=null) {
				this.jScrollPanelDatosPedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedidoCompraImpor!=null) {
				this.jPanelPaginacionPedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedidoCompraImpor!=null) {
				this.jPanelParametrosReportesPedidoCompraImpor.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasPedidoCompraImpor!=null) {
					this.jTabbedPaneBusquedasPedidoCompraImpor.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesPedidoCompraImpor!=null) {
				this.jPanelParametrosReportesPedidoCompraImpor.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.pedidocompraimporSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesPedidoCompraImpor!=null) {
				this.jPanelParametrosReportesPedidoCompraImpor.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaModulo(Boolean isParaModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaModuloNegation=!isParaModulo;

			this.isVisibilidadFK_IdCliente=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaPais(Boolean isParaPais){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPaisNegation=!isParaPais;

			this.isVisibilidadFK_IdCliente=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaPais;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaClienteProveedor(Boolean isParaClienteProveedor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteProveedorNegation=!isParaClienteProveedor;

			this.isVisibilidadFK_IdCliente=isParaClienteProveedorNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaClienteProveedor;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaClienteProveedorNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaClienteProveedorNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaClienteProveedorNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaClienteProveedorNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaClienteProveedorNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaClienteProveedorNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaClienteProveedorNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaClienteProveedorNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaClienteProveedorNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadFK_IdCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleado;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaUsuario(Boolean isParaUsuario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUsuarioNegation=!isParaUsuario;

			this.isVisibilidadFK_IdCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCambio(Boolean isParaTipoCambio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCambioNegation=!isParaTipoCambio;

			this.isVisibilidadFK_IdCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoProrrateoImpor(Boolean isParaTipoProrrateoImpor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoProrrateoImporNegation=!isParaTipoProrrateoImpor;

			this.isVisibilidadFK_IdCliente=isParaTipoProrrateoImporNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaTipoProrrateoImporNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaTipoProrrateoImporNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoProrrateoImporNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaTipoProrrateoImporNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaTipoProrrateoImporNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaTipoProrrateoImporNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaTipoProrrateoImporNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaTipoProrrateoImpor;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaTipoProrrateoImporNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaTipoProrrateoImporNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmbarcador(Boolean isParaEmbarcador){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmbarcadorNegation=!isParaEmbarcador;

			this.isVisibilidadFK_IdCliente=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaEmbarcador;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoViaTransporte(Boolean isParaTipoViaTransporte){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoViaTransporteNegation=!isParaTipoViaTransporte;

			this.isVisibilidadFK_IdCliente=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaTipoViaTransporte;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaPuerto(Boolean isParaPuerto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPuertoNegation=!isParaPuerto;

			this.isVisibilidadFK_IdCliente=isParaPuertoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaPuertoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaPuertoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaPuertoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaPuertoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaPuertoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaPuerto;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaPuertoNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaPuertoNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaPuertoNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaPuertoNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaPuertoDestino(Boolean isParaPuertoDestino){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPuertoDestinoNegation=!isParaPuertoDestino;

			this.isVisibilidadFK_IdCliente=isParaPuertoDestinoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaPuertoDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaPuertoDestinoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaPuertoDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaPuertoDestinoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaPuertoDestinoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaPuertoDestinoNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaPuertoDestino;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaPuertoDestinoNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaPuertoDestinoNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaPuertoDestinoNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoTerminosImpor(Boolean isParaTipoTerminosImpor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoTerminosImporNegation=!isParaTipoTerminosImpor;

			this.isVisibilidadFK_IdCliente=isParaTipoTerminosImporNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaTipoTerminosImporNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaTipoTerminosImporNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoTerminosImporNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaTipoTerminosImporNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaTipoTerminosImporNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaTipoTerminosImporNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaTipoTerminosImporNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaTipoTerminosImporNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaTipoTerminosImpor;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaTipoTerminosImporNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoPedidoCompra(Boolean isParaEstadoPedidoCompra){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoPedidoCompraNegation=!isParaEstadoPedidoCompra;

			this.isVisibilidadFK_IdCliente=isParaEstadoPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaEstadoPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaEstadoPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaEstadoPedidoCompra;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaEstadoPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaEstadoPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaEstadoPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaEstadoPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaEstadoPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaEstadoPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormato(Boolean isParaFormato){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNegation=!isParaFormato;

			this.isVisibilidadFK_IdCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClientePedidoCompraImpor);}

			this.isVisibilidadFK_IdClienteProveedor=isParaMesNegation;
			if(!this.isVisibilidadFK_IdClienteProveedor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdClienteProveedorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmbarcador=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmbarcadorPedidoCompraImpor);}

			this.isVisibilidadFK_IdEmpleado=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEmpleadoPedidoCompraImpor);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);}

			this.isVisibilidadFK_IdPais=isParaMesNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPaisPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuerto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdPuerto) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoPedidoCompraImpor);}

			this.isVisibilidadFK_IdPuertoDestino=isParaMesNegation;
			if(!this.isVisibilidadFK_IdPuertoDestino) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdPuertoDestinoPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoProrrateoImpor=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoProrrateoImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoTerminosImpor=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoTerminosImpor) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoTerminosImporPedidoCompraImpor);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasPedidoCompraImpor.remove(jPanelFK_IdTipoViaTransportePedidoCompraImpor);}
		}
		
	}
	
	

	public String registrarSesionPedidoCompraImporParaDetallePedidoCompraImpors() throws Exception {
		Boolean isPaginaPopupDetallePedidoCompraImpor=false;

		try {

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporSessionBean==null) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporSessionBean.setsPathNavegacionActual(pedidocompraimporSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DetallePedidoCompraImporConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDetallePedidoCompraImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDetallePedidoCompraImpor(true);
			this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDetallePedidoCompraImpor(PedidoCompraImporConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporSessionBean.setisBusquedaDesdeForeignKeySesionPedidoCompraImpor(true);
			this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporSessionBean.setlidPedidoCompraImporActual(this.idPedidoCompraImporActual);
			this.jInternalFrameDetalleFormPedidoCompraImpor.detallepedidocompraimporSessionBean.setNoMantenimiento(true);

			pedidocompraimporSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoCompraImpor(true);
			pedidocompraimporSessionBean.setlIdPedidoCompraImporActualForeignKey(this.idPedidoCompraImporActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionPedidoCompraImporParaLiquidacionImpuestoImpores() throws Exception {
		Boolean isPaginaPopupLiquidacionImpuestoImpor=false;

		try {

			if(this.pedidocompraimporSessionBean==null) {
				this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporSessionBean==null) {
				this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporSessionBean=new LiquidacionImpuestoImporSessionBean();
			}

			this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporSessionBean.setsPathNavegacionActual(pedidocompraimporSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+LiquidacionImpuestoImporConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupLiquidacionImpuestoImpor=this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeLiquidacionImpuestoImpor(true);
			this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeLiquidacionImpuestoImpor(PedidoCompraImporConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporSessionBean.setisBusquedaDesdeForeignKeySesionPedidoCompraImpor(true);
			this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporSessionBean.setlidPedidoCompraImporActual(this.idPedidoCompraImporActual);
			this.jInternalFrameDetalleFormPedidoCompraImpor.liquidacionimpuestoimporSessionBean.setNoMantenimiento(true);

			pedidocompraimporSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoCompraImpor(true);
			pedidocompraimporSessionBean.setlIdPedidoCompraImporActualForeignKey(this.idPedidoCompraImporActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionPedidoCompraImporParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(pedidocompraimporSessionBean==null) {
				pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(pedidocompraimporSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.pedidocompraimporFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(PedidoCompraImporConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionPedidoCompraImpor(true);
			//clienteSessionBean.setlidPedidoCompraImporActual(this.idPedidoCompraImporActual);

			pedidocompraimporSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoCompraImpor(true);
			pedidocompraimporSessionBean.setlIdPedidoCompraImporActualForeignKey(this.idPedidoCompraImporActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPedidoCompraImporParaBusquedaClienteProveedors() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(pedidocompraimporSessionBean==null) {
				pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(clienteproveedorSessionBean==null) {
				clienteproveedorSessionBean=new ClienteSessionBean();
			}

			clienteproveedorSessionBean.setsPathNavegacionActual(pedidocompraimporSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteproveedorSessionBean.setisPermiteRecargarInformacion(false);
			clienteproveedorSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteproveedorSessionBean.getisPaginaPopup();
			clienteproveedorSessionBean.setisPaginaPopup(false);
			clienteproveedorSessionBean.setEstaModoBusqueda(true);
			clienteproveedorSessionBean.setsFuncionBusquedaRapida("window.opener.pedidocompraimporFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente_proveedor(TO_REPLACE);");
			clienteproveedorSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteproveedorSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(PedidoCompraImporConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionPedidoCompraImpor(true);
			//clienteSessionBean.setlidPedidoCompraImporActual(this.idPedidoCompraImporActual);

			pedidocompraimporSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoCompraImpor(true);
			pedidocompraimporSessionBean.setlIdPedidoCompraImporActualForeignKey(this.idPedidoCompraImporActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPedidoCompraImporParaBusquedaEmpleados() throws Exception {
		Boolean isPaginaPopupEmpleado=false;

		try {

			if(pedidocompraimporSessionBean==null) {
				pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(empleadoSessionBean==null) {
				empleadoSessionBean=new EmpleadoSessionBean();
			}

			empleadoSessionBean.setsPathNavegacionActual(pedidocompraimporSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoConstantesFunciones.SCLASSWEBTITULO);
			empleadoSessionBean.setisPermiteRecargarInformacion(false);
			empleadoSessionBean.setisPaginaPopup(true);
			isPaginaPopupEmpleado=empleadoSessionBean.getisPaginaPopup();
			empleadoSessionBean.setisPaginaPopup(false);
			empleadoSessionBean.setEstaModoBusqueda(true);
			empleadoSessionBean.setsFuncionBusquedaRapida("window.opener.pedidocompraimporFuncionGeneral.setCombosCodigoDesdeBusquedaid_empleado(TO_REPLACE);");
			empleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleado(true);
			empleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleado(PedidoCompraImporConstantesFunciones.SNOMBREOPCION);
			//empleadoSessionBean.setisBusquedaDesdeForeignKeySesionPedidoCompraImpor(true);
			//empleadoSessionBean.setlidPedidoCompraImporActual(this.idPedidoCompraImporActual);

			pedidocompraimporSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoCompraImpor(true);
			pedidocompraimporSessionBean.setlIdPedidoCompraImporActualForeignKey(this.idPedidoCompraImporActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPedidoCompraImporParaBusquedaTipoCambios() throws Exception {
		Boolean isPaginaPopupTipoCambio=false;

		try {

			if(pedidocompraimporSessionBean==null) {
				pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
			}

			if(tipocambioSessionBean==null) {
				tipocambioSessionBean=new TipoCambioSessionBean();
			}

			tipocambioSessionBean.setsPathNavegacionActual(pedidocompraimporSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TipoCambioConstantesFunciones.SCLASSWEBTITULO);
			tipocambioSessionBean.setisPermiteRecargarInformacion(false);
			tipocambioSessionBean.setisPaginaPopup(true);
			isPaginaPopupTipoCambio=tipocambioSessionBean.getisPaginaPopup();
			tipocambioSessionBean.setisPaginaPopup(false);
			tipocambioSessionBean.setEstaModoBusqueda(true);
			tipocambioSessionBean.setsFuncionBusquedaRapida("window.opener.pedidocompraimporFuncionGeneral.setCombosCodigoDesdeBusquedaid_tipo_cambio(TO_REPLACE);");
			tipocambioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTipoCambio(true);
			tipocambioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTipoCambio(PedidoCompraImporConstantesFunciones.SNOMBREOPCION);
			//tipocambioSessionBean.setisBusquedaDesdeForeignKeySesionPedidoCompraImpor(true);
			//tipocambioSessionBean.setlidPedidoCompraImporActual(this.idPedidoCompraImporActual);

			pedidocompraimporSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoCompraImpor(true);
			pedidocompraimporSessionBean.setlIdPedidoCompraImporActualForeignKey(this.idPedidoCompraImporActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//PedidoCompraImporSessionBean pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
		
		if(this.pedidocompraimporSessionBean==null) {
			this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
		}
		
		this.pedidocompraimporSessionBean.setsUltimaBusquedaPedidoCompraImpor(this.getsAccionBusqueda());
		this.pedidocompraimporSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.pedidocompraimporSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			pedidocompraimporSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdClienteProveedor")) {
			pedidocompraimporSessionBean.setid_cliente_proveedor(this.getid_cliente_proveedorFK_IdClienteProveedor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			pedidocompraimporSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmbarcador")) {
			pedidocompraimporSessionBean.setid_embarcador(this.getid_embarcadorFK_IdEmbarcador());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
			pedidocompraimporSessionBean.setid_empleado(this.getid_empleadoFK_IdEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			pedidocompraimporSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoCompraEstadoPedoCompra")) {
			pedidocompraimporSessionBean.setid_estado_pedido_compra(this.getid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
			pedidocompraimporSessionBean.setid_modulo(this.getid_moduloFK_IdModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPais")) {
			pedidocompraimporSessionBean.setid_pais(this.getid_paisFK_IdPais());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			pedidocompraimporSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPuerto")) {
			pedidocompraimporSessionBean.setid_puerto(this.getid_puertoFK_IdPuerto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPuertoDestino")) {
			pedidocompraimporSessionBean.setid_puerto_destino(this.getid_puerto_destinoFK_IdPuertoDestino());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			pedidocompraimporSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoProrrateoImpor")) {
			pedidocompraimporSessionBean.setid_tipo_prorrateo_impor(this.getid_tipo_prorrateo_imporFK_IdTipoProrrateoImpor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoTerminosImpor")) {
			pedidocompraimporSessionBean.setid_tipo_terminos_impor(this.getid_tipo_terminos_imporFK_IdTipoTerminosImpor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoViaTransporte")) {
			pedidocompraimporSessionBean.setid_tipo_via_transporte(this.getid_tipo_via_transporteFK_IdTipoViaTransporte());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
			pedidocompraimporSessionBean.setid_usuario(this.getid_usuarioFK_IdUsuario());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//PedidoCompraImporSessionBean pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
		
		if(this.pedidocompraimporSessionBean==null) {
			this.pedidocompraimporSessionBean=new PedidoCompraImporSessionBean();
		}
		
		if(this.pedidocompraimporSessionBean.getsUltimaBusquedaPedidoCompraImpor()!=null&&!this.pedidocompraimporSessionBean.getsUltimaBusquedaPedidoCompraImpor().equals("")) {
			this.setsAccionBusqueda(pedidocompraimporSessionBean.getsUltimaBusquedaPedidoCompraImpor());
			this.setiNumeroPaginacion(pedidocompraimporSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(pedidocompraimporSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(pedidocompraimporSessionBean.getid_cliente());
				pedidocompraimporSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdClienteProveedor")) {
				this.setid_cliente_proveedorFK_IdClienteProveedor(pedidocompraimporSessionBean.getid_cliente_proveedor());
				pedidocompraimporSessionBean.setid_cliente_proveedor(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(pedidocompraimporSessionBean.getid_ejercicio());
				pedidocompraimporSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmbarcador")) {
				this.setid_embarcadorFK_IdEmbarcador(pedidocompraimporSessionBean.getid_embarcador());
				pedidocompraimporSessionBean.setid_embarcador(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
				this.setid_empleadoFK_IdEmpleado(pedidocompraimporSessionBean.getid_empleado());
				pedidocompraimporSessionBean.setid_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(pedidocompraimporSessionBean.getid_empresa());
				pedidocompraimporSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoCompraEstadoPedoCompra")) {
				this.setid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra(pedidocompraimporSessionBean.getid_estado_pedido_compra());
				pedidocompraimporSessionBean.setid_estado_pedido_compra(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
				this.setid_moduloFK_IdModulo(pedidocompraimporSessionBean.getid_modulo());
				pedidocompraimporSessionBean.setid_modulo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPais")) {
				this.setid_paisFK_IdPais(pedidocompraimporSessionBean.getid_pais());
				pedidocompraimporSessionBean.setid_pais(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(pedidocompraimporSessionBean.getid_periodo());
				pedidocompraimporSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPuerto")) {
				this.setid_puertoFK_IdPuerto(pedidocompraimporSessionBean.getid_puerto());
				pedidocompraimporSessionBean.setid_puerto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPuertoDestino")) {
				this.setid_puerto_destinoFK_IdPuertoDestino(pedidocompraimporSessionBean.getid_puerto_destino());
				pedidocompraimporSessionBean.setid_puerto_destino(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(pedidocompraimporSessionBean.getid_sucursal());
				pedidocompraimporSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoProrrateoImpor")) {
				this.setid_tipo_prorrateo_imporFK_IdTipoProrrateoImpor(pedidocompraimporSessionBean.getid_tipo_prorrateo_impor());
				pedidocompraimporSessionBean.setid_tipo_prorrateo_impor(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoTerminosImpor")) {
				this.setid_tipo_terminos_imporFK_IdTipoTerminosImpor(pedidocompraimporSessionBean.getid_tipo_terminos_impor());
				pedidocompraimporSessionBean.setid_tipo_terminos_impor(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoViaTransporte")) {
				this.setid_tipo_via_transporteFK_IdTipoViaTransporte(pedidocompraimporSessionBean.getid_tipo_via_transporte());
				pedidocompraimporSessionBean.setid_tipo_via_transporte(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
				this.setid_usuarioFK_IdUsuario(pedidocompraimporSessionBean.getid_usuario());
				pedidocompraimporSessionBean.setid_usuario(-1L);
			}
		}
		
		this.pedidocompraimporSessionBean.setsUltimaBusquedaPedidoCompraImpor("");
		this.pedidocompraimporSessionBean.setiNumeroPaginacion(PedidoCompraImporConstantesFunciones.INUMEROPAGINACION);
		this.pedidocompraimporSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaPedidoCompraImpor(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioPedidoCompraImpor() {
		this.updateBorderResaltarBusquedasFormularioPedidoCompraImpor();
		this.updateVisibilidadBusquedasFormularioPedidoCompraImpor();
		this.updateHabilitarBusquedasFormularioPedidoCompraImpor();
	}
	
	public void updateBorderResaltarBusquedasFormularioPedidoCompraImpor() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasPedidoCompraImpor.getComponents().length>0) {
	

		if(this.pedidocompraimporConstantesFunciones.resaltarFK_IdClientePedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdClientePedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdClientePedidoCompraImpor);
			}
		}

		if(this.pedidocompraimporConstantesFunciones.resaltarFK_IdClienteProveedorPedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdClienteProveedorPedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdClienteProveedorPedidoCompraImpor);
			}
		}

		if(this.pedidocompraimporConstantesFunciones.resaltarFK_IdEmbarcadorPedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdEmbarcadorPedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdEmbarcadorPedidoCompraImpor);
			}
		}

		if(this.pedidocompraimporConstantesFunciones.resaltarFK_IdEmpleadoPedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdEmpleadoPedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdEmpleadoPedidoCompraImpor);
			}
		}

		if(this.pedidocompraimporConstantesFunciones.resaltarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);
			}
		}

		if(this.pedidocompraimporConstantesFunciones.resaltarFK_IdPaisPedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPaisPedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdPaisPedidoCompraImpor);
			}
		}

		if(this.pedidocompraimporConstantesFunciones.resaltarFK_IdPuertoPedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPuertoPedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdPuertoPedidoCompraImpor);
			}
		}

		if(this.pedidocompraimporConstantesFunciones.resaltarFK_IdPuertoDestinoPedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPuertoDestinoPedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdPuertoDestinoPedidoCompraImpor);
			}
		}

		if(this.pedidocompraimporConstantesFunciones.resaltarFK_IdTipoProrrateoImporPedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdTipoProrrateoImporPedidoCompraImpor);
			}
		}

		if(this.pedidocompraimporConstantesFunciones.resaltarFK_IdTipoTerminosImporPedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdTipoTerminosImporPedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdTipoTerminosImporPedidoCompraImpor);
			}
		}

		if(this.pedidocompraimporConstantesFunciones.resaltarFK_IdTipoViaTransportePedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdTipoViaTransportePedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdTipoViaTransportePedidoCompraImpor);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioPedidoCompraImpor() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasPedidoCompraImpor.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdClientePedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidocompraimporConstantesFunciones.mostrarFK_IdClientePedidoCompraImpor);
			if(!this.pedidocompraimporConstantesFunciones.mostrarFK_IdClientePedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdClienteProveedorPedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidocompraimporConstantesFunciones.mostrarFK_IdClienteProveedorPedidoCompraImpor);
			if(!this.pedidocompraimporConstantesFunciones.mostrarFK_IdClienteProveedorPedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdEmbarcadorPedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidocompraimporConstantesFunciones.mostrarFK_IdEmbarcadorPedidoCompraImpor);
			if(!this.pedidocompraimporConstantesFunciones.mostrarFK_IdEmbarcadorPedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdEmpleadoPedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidocompraimporConstantesFunciones.mostrarFK_IdEmpleadoPedidoCompraImpor);
			if(!this.pedidocompraimporConstantesFunciones.mostrarFK_IdEmpleadoPedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidocompraimporConstantesFunciones.mostrarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);
			if(!this.pedidocompraimporConstantesFunciones.mostrarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPaisPedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidocompraimporConstantesFunciones.mostrarFK_IdPaisPedidoCompraImpor);
			if(!this.pedidocompraimporConstantesFunciones.mostrarFK_IdPaisPedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPuertoPedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidocompraimporConstantesFunciones.mostrarFK_IdPuertoPedidoCompraImpor);
			if(!this.pedidocompraimporConstantesFunciones.mostrarFK_IdPuertoPedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPuertoDestinoPedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidocompraimporConstantesFunciones.mostrarFK_IdPuertoDestinoPedidoCompraImpor);
			if(!this.pedidocompraimporConstantesFunciones.mostrarFK_IdPuertoDestinoPedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidocompraimporConstantesFunciones.mostrarFK_IdTipoProrrateoImporPedidoCompraImpor);
			if(!this.pedidocompraimporConstantesFunciones.mostrarFK_IdTipoProrrateoImporPedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdTipoTerminosImporPedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidocompraimporConstantesFunciones.mostrarFK_IdTipoTerminosImporPedidoCompraImpor);
			if(!this.pedidocompraimporConstantesFunciones.mostrarFK_IdTipoTerminosImporPedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdTipoViaTransportePedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidocompraimporConstantesFunciones.mostrarFK_IdTipoViaTransportePedidoCompraImpor);
			if(!this.pedidocompraimporConstantesFunciones.mostrarFK_IdTipoViaTransportePedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoCompraImpor.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioPedidoCompraImpor() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasPedidoCompraImpor.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdClientePedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidocompraimporConstantesFunciones.activarFK_IdClientePedidoCompraImpor);
				this.jTabbedPaneBusquedasPedidoCompraImpor.setEnabledAt(index,this.pedidocompraimporConstantesFunciones.activarFK_IdClientePedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdClienteProveedorPedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidocompraimporConstantesFunciones.activarFK_IdClienteProveedorPedidoCompraImpor);
				this.jTabbedPaneBusquedasPedidoCompraImpor.setEnabledAt(index,this.pedidocompraimporConstantesFunciones.activarFK_IdClienteProveedorPedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdEmbarcadorPedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidocompraimporConstantesFunciones.activarFK_IdEmbarcadorPedidoCompraImpor);
				this.jTabbedPaneBusquedasPedidoCompraImpor.setEnabledAt(index,this.pedidocompraimporConstantesFunciones.activarFK_IdEmbarcadorPedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdEmpleadoPedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidocompraimporConstantesFunciones.activarFK_IdEmpleadoPedidoCompraImpor);
				this.jTabbedPaneBusquedasPedidoCompraImpor.setEnabledAt(index,this.pedidocompraimporConstantesFunciones.activarFK_IdEmpleadoPedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidocompraimporConstantesFunciones.activarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);
				this.jTabbedPaneBusquedasPedidoCompraImpor.setEnabledAt(index,this.pedidocompraimporConstantesFunciones.activarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPaisPedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidocompraimporConstantesFunciones.activarFK_IdPaisPedidoCompraImpor);
				this.jTabbedPaneBusquedasPedidoCompraImpor.setEnabledAt(index,this.pedidocompraimporConstantesFunciones.activarFK_IdPaisPedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPuertoPedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidocompraimporConstantesFunciones.activarFK_IdPuertoPedidoCompraImpor);
				this.jTabbedPaneBusquedasPedidoCompraImpor.setEnabledAt(index,this.pedidocompraimporConstantesFunciones.activarFK_IdPuertoPedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPuertoDestinoPedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidocompraimporConstantesFunciones.activarFK_IdPuertoDestinoPedidoCompraImpor);
				this.jTabbedPaneBusquedasPedidoCompraImpor.setEnabledAt(index,this.pedidocompraimporConstantesFunciones.activarFK_IdPuertoDestinoPedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidocompraimporConstantesFunciones.activarFK_IdTipoProrrateoImporPedidoCompraImpor);
				this.jTabbedPaneBusquedasPedidoCompraImpor.setEnabledAt(index,this.pedidocompraimporConstantesFunciones.activarFK_IdTipoProrrateoImporPedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdTipoTerminosImporPedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidocompraimporConstantesFunciones.activarFK_IdTipoTerminosImporPedidoCompraImpor);
				this.jTabbedPaneBusquedasPedidoCompraImpor.setEnabledAt(index,this.pedidocompraimporConstantesFunciones.activarFK_IdTipoTerminosImporPedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdTipoViaTransportePedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidocompraimporConstantesFunciones.activarFK_IdTipoViaTransportePedidoCompraImpor);
				this.jTabbedPaneBusquedasPedidoCompraImpor.setEnabledAt(index,this.pedidocompraimporConstantesFunciones.activarFK_IdTipoViaTransportePedidoCompraImpor);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaPedidoCompraImpor(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdClientePedidoCompraImpor);

			this.jTabbedPaneBusquedasPedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);

			this.pedidocompraimporConstantesFunciones.setResaltarFK_IdClientePedidoCompraImpor(resaltar);

			jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdClientePedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdClienteProveedor")) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdClienteProveedorPedidoCompraImpor);

			this.jTabbedPaneBusquedasPedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);

			this.pedidocompraimporConstantesFunciones.setResaltarFK_IdClienteProveedorPedidoCompraImpor(resaltar);

			jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdClienteProveedorPedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmbarcador")) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdEmbarcadorPedidoCompraImpor);

			this.jTabbedPaneBusquedasPedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);

			this.pedidocompraimporConstantesFunciones.setResaltarFK_IdEmbarcadorPedidoCompraImpor(resaltar);

			jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdEmbarcadorPedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleado")) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdEmpleadoPedidoCompraImpor);

			this.jTabbedPaneBusquedasPedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);

			this.pedidocompraimporConstantesFunciones.setResaltarFK_IdEmpleadoPedidoCompraImpor(resaltar);

			jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdEmpleadoPedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoPedidoCompraEstadoPedoCompra")) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);

			this.jTabbedPaneBusquedasPedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);

			this.pedidocompraimporConstantesFunciones.setResaltarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor(resaltar);

			jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPais")) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPaisPedidoCompraImpor);

			this.jTabbedPaneBusquedasPedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);

			this.pedidocompraimporConstantesFunciones.setResaltarFK_IdPaisPedidoCompraImpor(resaltar);

			jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdPaisPedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPuerto")) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPuertoPedidoCompraImpor);

			this.jTabbedPaneBusquedasPedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);

			this.pedidocompraimporConstantesFunciones.setResaltarFK_IdPuertoPedidoCompraImpor(resaltar);

			jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdPuertoPedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPuertoDestino")) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPuertoDestinoPedidoCompraImpor);

			this.jTabbedPaneBusquedasPedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);

			this.pedidocompraimporConstantesFunciones.setResaltarFK_IdPuertoDestinoPedidoCompraImpor(resaltar);

			jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdPuertoDestinoPedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoProrrateoImpor")) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdTipoProrrateoImporPedidoCompraImpor);

			this.jTabbedPaneBusquedasPedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);

			this.pedidocompraimporConstantesFunciones.setResaltarFK_IdTipoProrrateoImporPedidoCompraImpor(resaltar);

			jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdTipoProrrateoImporPedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoTerminosImpor")) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdTipoTerminosImporPedidoCompraImpor);

			this.jTabbedPaneBusquedasPedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);

			this.pedidocompraimporConstantesFunciones.setResaltarFK_IdTipoTerminosImporPedidoCompraImpor(resaltar);

			jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdTipoTerminosImporPedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoViaTransporte")) {
			index= this.jTabbedPaneBusquedasPedidoCompraImpor.indexOfComponent(this.jPanelFK_IdTipoViaTransportePedidoCompraImpor);

			this.jTabbedPaneBusquedasPedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompraImpor.getComponent(index);

			this.pedidocompraimporConstantesFunciones.setResaltarFK_IdTipoViaTransportePedidoCompraImpor(resaltar);

			jPanel.setBorder(this.pedidocompraimporConstantesFunciones.resaltarFK_IdTipoViaTransportePedidoCompraImpor);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarPedidoCompraImpor.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioPedidoCompraImpor() throws Exception {

		if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioPedidoCompraImpor();
		this.updateVisibilidadResaltarControlesFormularioPedidoCompraImpor();
		this.updateHabilitarResaltarControlesFormularioPedidoCompraImpor();
		
	}
	
	public void updateBorderResaltarControlesFormularioPedidoCompraImpor() throws Exception {
		if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.pedidocompraimporConstantesFunciones.resaltaridPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelidPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltaridPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_empresaPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_empresaPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_sucursalPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_sucursalPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_moduloPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_moduloPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_ejercicioPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_ejercicioPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_periodoPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_periodoPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_paisPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_paisPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_clientePedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_clientePedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_cliente_proveedorPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_cliente_proveedorPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_empleadoPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_empleadoPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_usuarioPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_usuarioPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_tipo_cambioPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_tipo_cambioPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_monedaPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_monedaPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_tipo_prorrateo_imporPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_tipo_prorrateo_imporPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_embarcadorPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_embarcadorPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_tipo_via_transportePedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_tipo_via_transportePedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_puertoPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_puertoPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_puerto_destinoPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_puerto_destinoPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_tipo_terminos_imporPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_tipo_terminos_imporPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_estado_pedido_compraPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_estado_pedido_compraPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarforma_pagoPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldforma_pagoPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarforma_pagoPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarnumero_duiPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_duiPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarnumero_duiPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarsecuencialPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldsecuencialPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarsecuencialPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarnumero_ordenPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_ordenPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarnumero_ordenPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltaruso_enPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFielduso_enPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltaruso_enPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarresponsablePedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextArearesponsablePedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarresponsablePedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarorden_compraPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldorden_compraPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarorden_compraPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarlugar_entregaPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldlugar_entregaPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarlugar_entregaPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltardescripcionPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextAreadescripcionPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltardescripcionPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarfechaPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfechaPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarfechaPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarfecha_emisionPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_emisionPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarfecha_emisionPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarfecha_entregaPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entregaPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarfecha_entregaPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarfecha_entrega_clientePedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entrega_clientePedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarfecha_entrega_clientePedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarnombre_seguroPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_seguroPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarnombre_seguroPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarnombre_consignatarioPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_consignatarioPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarnombre_consignatarioPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarpreciosPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldpreciosPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarpreciosPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarfletePedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldfletePedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarfletePedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarseguroPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldseguroPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarseguroPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltargastosPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldgastosPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltargastosPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarcfrPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcfrPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarcfrPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarcifPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcifPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarcifPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltartotalPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldtotalPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltartotalPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_formatoPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_formatoPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_anioPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_anioPedidoCompraImpor);}
		if(this.pedidocompraimporConstantesFunciones.resaltarid_mesPedidoCompraImpor!=null && this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor.setBorder(this.pedidocompraimporConstantesFunciones.resaltarid_mesPedidoCompraImpor);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioPedidoCompraImpor() throws Exception {		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
	
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelidPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostraridPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelidPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostraridPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_empresaPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_empresaPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_empresaPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_sucursalPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_sucursalPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_sucursalPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_moduloPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_moduloPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_moduloPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_ejercicioPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_ejercicioPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_ejercicioPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_periodoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_periodoPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_periodoPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_paisPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_paisPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_paisPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_clientePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_clientePedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_clientePedidoCompraImpor);
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_clientePedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_clientePedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_cliente_proveedorPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_cliente_proveedorPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_cliente_proveedorPedidoCompraImpor);
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_cliente_proveedorPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_cliente_proveedorPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_empleadoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_empleadoPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_empleadoPedidoCompraImpor);
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empleadoPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_empleadoPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_usuarioPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_usuarioPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_usuarioPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_tipo_cambioPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_tipo_cambioPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_tipo_cambioPedidoCompraImpor);
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_cambioPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_tipo_cambioPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_monedaPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_monedaPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_monedaPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_tipo_prorrateo_imporPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_tipo_prorrateo_imporPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_tipo_prorrateo_imporPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_embarcadorPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_embarcadorPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_embarcadorPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_tipo_via_transportePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_tipo_via_transportePedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_tipo_via_transportePedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_puertoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_puertoPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_puertoPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_puerto_destinoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_puerto_destinoPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_puerto_destinoPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_tipo_terminos_imporPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_tipo_terminos_imporPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_tipo_terminos_imporPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_estado_pedido_compraPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_estado_pedido_compraPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_estado_pedido_compraPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldforma_pagoPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarforma_pagoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelforma_pagoPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarforma_pagoPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_duiPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarnumero_duiPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelnumero_duiPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarnumero_duiPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldsecuencialPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarsecuencialPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelsecuencialPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarsecuencialPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_ordenPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarnumero_ordenPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelnumero_ordenPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarnumero_ordenPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFielduso_enPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostraruso_enPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPaneluso_enPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostraruso_enPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextArearesponsablePedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarresponsablePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelresponsablePedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarresponsablePedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldorden_compraPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarorden_compraPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelorden_compraPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarorden_compraPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldlugar_entregaPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarlugar_entregaPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanellugar_entregaPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarlugar_entregaPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextAreadescripcionPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrardescripcionPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPaneldescripcionPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrardescripcionPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfechaPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarfechaPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelfechaPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarfechaPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_emisionPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarfecha_emisionPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelfecha_emisionPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarfecha_emisionPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entregaPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarfecha_entregaPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelfecha_entregaPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarfecha_entregaPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entrega_clientePedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarfecha_entrega_clientePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelfecha_entrega_clientePedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarfecha_entrega_clientePedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_seguroPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarnombre_seguroPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelnombre_seguroPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarnombre_seguroPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_consignatarioPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarnombre_consignatarioPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelnombre_consignatarioPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarnombre_consignatarioPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldpreciosPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarpreciosPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelpreciosPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarpreciosPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldfletePedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarfletePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelfletePedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarfletePedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldseguroPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarseguroPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelseguroPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarseguroPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldgastosPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrargastosPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelgastosPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrargastosPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcfrPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarcfrPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelcfrPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarcfrPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcifPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarcifPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelcifPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarcifPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldtotalPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrartotalPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPaneltotalPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrartotalPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_formatoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_formatoPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_formatoPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_anioPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_anioPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_anioPedidoCompraImpor);
		//this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_mesPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jPanelid_mesPedidoCompraImpor.setVisible(this.pedidocompraimporConstantesFunciones.mostrarid_mesPedidoCompraImpor);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioPedidoCompraImpor() throws Exception {
		if(this.jInternalFrameDetalleFormPedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormPedidoCompraImpor!=null) {
	
		this.jInternalFrameDetalleFormPedidoCompraImpor.jLabelidPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activaridPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empresaPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_empresaPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_sucursalPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_sucursalPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_moduloPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_moduloPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_ejercicioPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_ejercicioPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_periodoPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_periodoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_paisPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_paisPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_clientePedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_clientePedidoCompraImpor);
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_clientePedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_clientePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_cliente_proveedorPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_cliente_proveedorPedidoCompraImpor);
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_cliente_proveedorPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_cliente_proveedorPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_empleadoPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_empleadoPedidoCompraImpor);
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_empleadoPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_empleadoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_usuarioPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_usuarioPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_cambioPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_tipo_cambioPedidoCompraImpor);
			this.jInternalFrameDetalleFormPedidoCompraImpor.jButtonid_tipo_cambioPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_tipo_cambioPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_monedaPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_monedaPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_prorrateo_imporPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_tipo_prorrateo_imporPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_embarcadorPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_embarcadorPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_via_transportePedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_tipo_via_transportePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puertoPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_puertoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_puerto_destinoPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_puerto_destinoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_tipo_terminos_imporPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_tipo_terminos_imporPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_estado_pedido_compraPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_estado_pedido_compraPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldforma_pagoPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarforma_pagoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_duiPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarnumero_duiPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldsecuencialPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarsecuencialPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnumero_ordenPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarnumero_ordenPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFielduso_enPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activaruso_enPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextArearesponsablePedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarresponsablePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldorden_compraPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarorden_compraPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldlugar_entregaPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarlugar_entregaPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextAreadescripcionPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activardescripcionPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfechaPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarfechaPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_emisionPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarfecha_emisionPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entregaPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarfecha_entregaPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jDateChooserfecha_entrega_clientePedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarfecha_entrega_clientePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_seguroPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarnombre_seguroPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldnombre_consignatarioPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarnombre_consignatarioPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldpreciosPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarpreciosPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldfletePedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarfletePedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldseguroPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarseguroPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldgastosPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activargastosPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcfrPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarcfrPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldcifPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarcifPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jTextFieldtotalPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activartotalPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_formatoPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_formatoPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_anioPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_anioPedidoCompraImpor);
		this.jInternalFrameDetalleFormPedidoCompraImpor.jComboBoxid_mesPedidoCompraImpor.setEnabled(this.pedidocompraimporConstantesFunciones.activarid_mesPedidoCompraImpor);
		}
	}
	
		
}