/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.sris.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.sris.util.TransaccionLocalConstantesFunciones;
import com.bydan.erp.sris.util.TransaccionLocalParameterReturnGeneral;
//import com.bydan.erp.sris.util.TransaccionLocalParameterGeneral;
//import com.bydan.erp.sris.presentation.report.source.TransaccionLocalBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.sris.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.sris.resources.reportes.AuxiliarReportes;


import com.bydan.erp.sris.util.*;
import com.bydan.erp.sris.business.logic.*;

import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.sris.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;

import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.sris.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class TransaccionLocalBeanSwingJInternalFrame extends TransaccionLocalJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(TransaccionLocalBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<TransaccionLocal> transaccionlocalValidator = new ClassValidator<TransaccionLocal>(TransaccionLocal.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public TransaccionLocal transaccionlocal;	
	public TransaccionLocal transaccionlocalAux;
	public TransaccionLocal transaccionlocalAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public TransaccionLocal transaccionlocalTotales;
	public Long idTransaccionLocalActual;
	public Long iIdNuevoTransaccionLocal=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboCompra="";

	public List<Compra> comprasForeignKey;

	public List<Compra> getcomprasForeignKey() {
		return comprasForeignKey;
	}

	public void setcomprasForeignKey(List<Compra> comprasForeignKey) {
		this.comprasForeignKey = comprasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Compra compraForeignKey;

	public Compra getcompraForeignKey() {
		return compraForeignKey;
	}

	public void setcompraForeignKey(Compra compraForeignKey) {
		this.compraForeignKey = compraForeignKey;
	}

	public String sFinalQueryComboPeriodoDeclara="";

	public List<PeriodoDeclara> periododeclarasForeignKey;

	public List<PeriodoDeclara> getperiododeclarasForeignKey() {
		return periododeclarasForeignKey;
	}

	public void setperiododeclarasForeignKey(List<PeriodoDeclara> periododeclarasForeignKey) {
		this.periododeclarasForeignKey = periododeclarasForeignKey;
	}

	//OBJETO FK ACTUAL
	public PeriodoDeclara periododeclaraForeignKey;

	public PeriodoDeclara getperiododeclaraForeignKey() {
		return periododeclaraForeignKey;
	}

	public void setperiododeclaraForeignKey(PeriodoDeclara periododeclaraForeignKey) {
		this.periododeclaraForeignKey = periododeclaraForeignKey;
	}

	public String sFinalQueryComboTransaccionConta="";

	public List<TransaccionConta> transaccioncontasForeignKey;

	public List<TransaccionConta> gettransaccioncontasForeignKey() {
		return transaccioncontasForeignKey;
	}

	public void settransaccioncontasForeignKey(List<TransaccionConta> transaccioncontasForeignKey) {
		this.transaccioncontasForeignKey = transaccioncontasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TransaccionConta transaccioncontaForeignKey;

	public TransaccionConta gettransaccioncontaForeignKey() {
		return transaccioncontaForeignKey;
	}

	public void settransaccioncontaForeignKey(TransaccionConta transaccioncontaForeignKey) {
		this.transaccioncontaForeignKey = transaccioncontaForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboTipoComprobante="";

	public List<TipoComprobante> tipocomprobantesForeignKey;

	public List<TipoComprobante> gettipocomprobantesForeignKey() {
		return tipocomprobantesForeignKey;
	}

	public void settipocomprobantesForeignKey(List<TipoComprobante> tipocomprobantesForeignKey) {
		this.tipocomprobantesForeignKey = tipocomprobantesForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoComprobante tipocomprobanteForeignKey;

	public TipoComprobante gettipocomprobanteForeignKey() {
		return tipocomprobanteForeignKey;
	}

	public void settipocomprobanteForeignKey(TipoComprobante tipocomprobanteForeignKey) {
		this.tipocomprobanteForeignKey = tipocomprobanteForeignKey;
	}

	public String sFinalQueryComboTipoTributario="";

	public List<TipoTributario> tipotributariosForeignKey;

	public List<TipoTributario> gettipotributariosForeignKey() {
		return tipotributariosForeignKey;
	}

	public void settipotributariosForeignKey(List<TipoTributario> tipotributariosForeignKey) {
		this.tipotributariosForeignKey = tipotributariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoTributario tipotributarioForeignKey;

	public TipoTributario gettipotributarioForeignKey() {
		return tipotributarioForeignKey;
	}

	public void settipotributarioForeignKey(TipoTributario tipotributarioForeignKey) {
		this.tipotributarioForeignKey = tipotributarioForeignKey;
	}

	public String sFinalQueryComboAsientoContable="";

	public List<AsientoContable> asientocontablesForeignKey;

	public List<AsientoContable> getasientocontablesForeignKey() {
		return asientocontablesForeignKey;
	}

	public void setasientocontablesForeignKey(List<AsientoContable> asientocontablesForeignKey) {
		this.asientocontablesForeignKey = asientocontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public AsientoContable asientocontableForeignKey;

	public AsientoContable getasientocontableForeignKey() {
		return asientocontableForeignKey;
	}

	public void setasientocontableForeignKey(AsientoContable asientocontableForeignKey) {
		this.asientocontableForeignKey = asientocontableForeignKey;
	}

	public String sFinalQueryComboTipoIva="";

	public List<TipoIva> tipoivasForeignKey;

	public List<TipoIva> gettipoivasForeignKey() {
		return tipoivasForeignKey;
	}

	public void settipoivasForeignKey(List<TipoIva> tipoivasForeignKey) {
		this.tipoivasForeignKey = tipoivasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoIva tipoivaForeignKey;

	public TipoIva gettipoivaForeignKey() {
		return tipoivaForeignKey;
	}

	public void settipoivaForeignKey(TipoIva tipoivaForeignKey) {
		this.tipoivaForeignKey = tipoivaForeignKey;
	}

	public String sFinalQueryComboTipoRetencionIva="";

	public List<TipoRetencionIva> tiporetencionivasForeignKey;

	public List<TipoRetencionIva> gettiporetencionivasForeignKey() {
		return tiporetencionivasForeignKey;
	}

	public void settiporetencionivasForeignKey(List<TipoRetencionIva> tiporetencionivasForeignKey) {
		this.tiporetencionivasForeignKey = tiporetencionivasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoRetencionIva tiporetencionivaForeignKey;

	public TipoRetencionIva gettiporetencionivaForeignKey() {
		return tiporetencionivaForeignKey;
	}

	public void settiporetencionivaForeignKey(TipoRetencionIva tiporetencionivaForeignKey) {
		this.tiporetencionivaForeignKey = tiporetencionivaForeignKey;
	}

	public String sFinalQueryComboTipoRetencionIvaPresta="";

	public List<TipoRetencionIva> tiporetencionivaprestasForeignKey;

	public List<TipoRetencionIva> gettiporetencionivaprestasForeignKey() {
		return tiporetencionivaprestasForeignKey;
	}

	public void settiporetencionivaprestasForeignKey(List<TipoRetencionIva> tiporetencionivaprestasForeignKey) {
		this.tiporetencionivaprestasForeignKey = tiporetencionivaprestasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoRetencionIva tiporetencionivaprestaForeignKey;

	public TipoRetencionIva gettiporetencionivaprestaForeignKey() {
		return tiporetencionivaprestaForeignKey;
	}

	public void settiporetencionivaprestaForeignKey(TipoRetencionIva tiporetencionivaprestaForeignKey) {
		this.tiporetencionivaprestaForeignKey = tiporetencionivaprestaForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idAsientoContableActual=0L;

	public Long getidAsientoContableActual() {
		return idAsientoContableActual;
	}

	public void setidAsientoContableActual(Long idAsientoContableActual) {
		this.idAsientoContableActual= idAsientoContableActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoTransaccionLocal;
	public Boolean isPermisoNuevoTransaccionLocal;
	public Boolean isPermisoActualizarTransaccionLocal;
	public Boolean isPermisoActualizarOriginalTransaccionLocal;
	public Boolean isPermisoEliminarTransaccionLocal;
	public Boolean isPermisoGuardarCambiosTransaccionLocal;
	public Boolean isPermisoConsultaTransaccionLocal;
	public Boolean isPermisoBusquedaTransaccionLocal;
	public Boolean isPermisoReporteTransaccionLocal;
	public Boolean isPermisoPaginacionMedioTransaccionLocal;
	public Boolean isPermisoPaginacionAltoTransaccionLocal;
	public Boolean isPermisoPaginacionTodoTransaccionLocal;
	public Boolean isPermisoCopiarTransaccionLocal;
	public Boolean isPermisoVerFormTransaccionLocal;
	public Boolean isPermisoDuplicarTransaccionLocal;
	public Boolean isPermisoOrdenTransaccionLocal;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public TransaccionLocalParameterReturnGeneral transaccionlocalReturnGeneral;
	public TransaccionLocalParameterReturnGeneral transaccionlocalParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoTransaccionLocal=false;
	public Boolean esParaAccionDesdeFormularioTransaccionLocal=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected TransaccionLocalSessionBeanAdditional transaccionlocalSessionBeanAdditional=null;
	
	public TransaccionLocalSessionBeanAdditional getTransaccionLocalSessionBeanAdditional() {
		return this.transaccionlocalSessionBeanAdditional;
	}
	
	public void setTransaccionLocalSessionBeanAdditional(TransaccionLocalSessionBeanAdditional transaccionlocalSessionBeanAdditional) {
		try {
			this.transaccionlocalSessionBeanAdditional=transaccionlocalSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected TransaccionLocalBeanSwingJInternalFrameAdditional transaccionlocalBeanSwingJInternalFrameAdditional=null;
	//public class TransaccionLocalBeanSwingJInternalFrame
	
	public TransaccionLocalBeanSwingJInternalFrameAdditional getTransaccionLocalBeanSwingJInternalFrameAdditional() {
		return this.transaccionlocalBeanSwingJInternalFrameAdditional;
	}
	
	public void setTransaccionLocalBeanSwingJInternalFrameAdditional(TransaccionLocalBeanSwingJInternalFrameAdditional transaccionlocalBeanSwingJInternalFrameAdditional) {
		try {
			this.transaccionlocalBeanSwingJInternalFrameAdditional=transaccionlocalBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public TransaccionLocalLogic transaccionlocalLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public TransaccionLocal transaccionlocalBean;
	public TransaccionLocalConstantesFunciones transaccionlocalConstantesFunciones;
	//public TransaccionLocalParameterReturnGeneral transaccionlocalReturnGeneral;
	
	//FK
	
	public CompraLogic compraLogic;
	public PeriodoDeclaraLogic periododeclaraLogic;
	public TransaccionContaLogic transaccioncontaLogic;
	public ClienteLogic clienteLogic;
	public TipoComprobanteLogic tipocomprobanteLogic;
	public TipoTributarioLogic tipotributarioLogic;
	public AsientoContableLogic asientocontableLogic;
	public TipoIvaLogic tipoivaLogic;
	public TipoRetencionIvaLogic tiporetencionivaLogic;
	public TipoRetencionIvaLogic tiporetencionivaprestaLogic;
	
	//PARAMETROS
	
	
	//public List<TransaccionLocal> transaccionlocals;	
	//public List<TransaccionLocal> transaccionlocalsEliminados;
	//public List<TransaccionLocal> transaccionlocalsAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoTransaccionLocal=false;
	public Boolean isVisibilidadCeldaDuplicarTransaccionLocal=true;
	public Boolean isVisibilidadCeldaCopiarTransaccionLocal=true;
	public Boolean isVisibilidadCeldaVerFormTransaccionLocal=true;
	public Boolean isVisibilidadCeldaOrdenTransaccionLocal=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesTransaccionLocal=false;
	public Boolean isVisibilidadCeldaModificarTransaccionLocal=false;
	public Boolean isVisibilidadCeldaActualizarTransaccionLocal=false;
	public Boolean isVisibilidadCeldaEliminarTransaccionLocal=false;
	public Boolean isVisibilidadCeldaCancelarTransaccionLocal=false;
	public Boolean isVisibilidadCeldaGuardarTransaccionLocal=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosTransaccionLocal=false;	
	
	
	public Boolean isVisibilidadFK_IdAsientoContable=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdCompra=false;
	public Boolean isVisibilidadFK_IdPeriodoDeclara=false;
	public Boolean isVisibilidadFK_IdTipoComprobante=false;
	public Boolean isVisibilidadFK_IdTipoIva=false;
	public Boolean isVisibilidadFK_IdTipoRetencionIva=false;
	public Boolean isVisibilidadFK_IdTipoRetencionIvaPresta=false;
	public Boolean isVisibilidadFK_IdTipoTributario=false;
	public Boolean isVisibilidadFK_IdTransaccionConta=false;
	
	public Long getiIdNuevoTransaccionLocal() {
		return this.iIdNuevoTransaccionLocal;
	}

	public void setiIdNuevoTransaccionLocal(Long iIdNuevoTransaccionLocal) {
		this.iIdNuevoTransaccionLocal = iIdNuevoTransaccionLocal;
	}
	
	public Long getidTransaccionLocalActual() {
		return this.idTransaccionLocalActual;
	}

	public void setidTransaccionLocalActual(Long idTransaccionLocalActual) {
		this.idTransaccionLocalActual = idTransaccionLocalActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public TransaccionLocal gettransaccionlocal() {
		return this.transaccionlocal;
	}

	public void settransaccionlocal(TransaccionLocal transaccionlocal) {
		this.transaccionlocal = transaccionlocal;
	}
	
	public TransaccionLocal gettransaccionlocalAux() {
		return this.transaccionlocalAux;
	}

	public void settransaccionlocalAux(TransaccionLocal transaccionlocalAux) {
		this.transaccionlocalAux = transaccionlocalAux;
	}				
	
	public TransaccionLocal gettransaccionlocalAnterior() {
		return this.transaccionlocalAnterior;
	}

	public void settransaccionlocalAnterior(TransaccionLocal transaccionlocalAnterior) {
		this.transaccionlocalAnterior = transaccionlocalAnterior;
	}	
	
	public TransaccionLocal gettransaccionlocalTotales() {
		return this.transaccionlocalTotales;
	}

	public void settransaccionlocalTotales(TransaccionLocal transaccionlocalTotales) {
		this.transaccionlocalTotales = transaccionlocalTotales;
	}	
	
	public TransaccionLocal gettransaccionlocalBean() {
		return this.transaccionlocalBean;
	}

	public void settransaccionlocalBean(TransaccionLocal transaccionlocalBean) {
		this.transaccionlocalBean = transaccionlocalBean;
	}	
	
	public TransaccionLocalParameterReturnGeneral gettransaccionlocalReturnGeneral() {
		return this.transaccionlocalReturnGeneral;
	}

	public void settransaccionlocalReturnGeneral(TransaccionLocalParameterReturnGeneral transaccionlocalReturnGeneral) {
		this.transaccionlocalReturnGeneral = transaccionlocalReturnGeneral;
	}	
	
	
	public Long id_asiento_contableFK_IdAsientoContable=null;

	public Long getid_asiento_contableFK_IdAsientoContable() {
		return this.id_asiento_contableFK_IdAsientoContable;
	}

	public void setid_asiento_contableFK_IdAsientoContable(Long id_asiento_contableFK_IdAsientoContable) {
		this.id_asiento_contableFK_IdAsientoContable = id_asiento_contableFK_IdAsientoContable;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_compraFK_IdCompra=null;

	public Long getid_compraFK_IdCompra() {
		return this.id_compraFK_IdCompra;
	}

	public void setid_compraFK_IdCompra(Long id_compraFK_IdCompra) {
		this.id_compraFK_IdCompra = id_compraFK_IdCompra;
	}

	public Long id_periodo_declaraFK_IdPeriodoDeclara=-1L;

	public Long getid_periodo_declaraFK_IdPeriodoDeclara() {
		return this.id_periodo_declaraFK_IdPeriodoDeclara;
	}

	public void setid_periodo_declaraFK_IdPeriodoDeclara(Long id_periodo_declaraFK_IdPeriodoDeclara) {
		this.id_periodo_declaraFK_IdPeriodoDeclara = id_periodo_declaraFK_IdPeriodoDeclara;
	}

	public Long id_tipo_comprobanteFK_IdTipoComprobante=-1L;

	public Long getid_tipo_comprobanteFK_IdTipoComprobante() {
		return this.id_tipo_comprobanteFK_IdTipoComprobante;
	}

	public void setid_tipo_comprobanteFK_IdTipoComprobante(Long id_tipo_comprobanteFK_IdTipoComprobante) {
		this.id_tipo_comprobanteFK_IdTipoComprobante = id_tipo_comprobanteFK_IdTipoComprobante;
	}

	public Long id_tipo_ivaFK_IdTipoIva=-1L;

	public Long getid_tipo_ivaFK_IdTipoIva() {
		return this.id_tipo_ivaFK_IdTipoIva;
	}

	public void setid_tipo_ivaFK_IdTipoIva(Long id_tipo_ivaFK_IdTipoIva) {
		this.id_tipo_ivaFK_IdTipoIva = id_tipo_ivaFK_IdTipoIva;
	}

	public Long id_tipo_retencion_ivaFK_IdTipoRetencionIva=-1L;

	public Long getid_tipo_retencion_ivaFK_IdTipoRetencionIva() {
		return this.id_tipo_retencion_ivaFK_IdTipoRetencionIva;
	}

	public void setid_tipo_retencion_ivaFK_IdTipoRetencionIva(Long id_tipo_retencion_ivaFK_IdTipoRetencionIva) {
		this.id_tipo_retencion_ivaFK_IdTipoRetencionIva = id_tipo_retencion_ivaFK_IdTipoRetencionIva;
	}

	public Long id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta=-1L;

	public Long getid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta() {
		return this.id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta;
	}

	public void setid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta(Long id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta) {
		this.id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta = id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta;
	}

	public Long id_tipo_tributarioFK_IdTipoTributario=-1L;

	public Long getid_tipo_tributarioFK_IdTipoTributario() {
		return this.id_tipo_tributarioFK_IdTipoTributario;
	}

	public void setid_tipo_tributarioFK_IdTipoTributario(Long id_tipo_tributarioFK_IdTipoTributario) {
		this.id_tipo_tributarioFK_IdTipoTributario = id_tipo_tributarioFK_IdTipoTributario;
	}

	public Long id_transaccion_contaFK_IdTransaccionConta=-1L;

	public Long getid_transaccion_contaFK_IdTransaccionConta() {
		return this.id_transaccion_contaFK_IdTransaccionConta;
	}

	public void setid_transaccion_contaFK_IdTransaccionConta(Long id_transaccion_contaFK_IdTransaccionConta) {
		this.id_transaccion_contaFK_IdTransaccionConta = id_transaccion_contaFK_IdTransaccionConta;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public TransaccionLocalLogic getTransaccionLocalLogic()	{		
		return transaccionlocalLogic;
	}

	public void setTransaccionLocalLogic(TransaccionLocalLogic transaccionlocalLogic) {
		this.transaccionlocalLogic = transaccionlocalLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoTransaccionLocal() {
		return isEsNuevoTransaccionLocal;
	}

	public void setIsEsNuevoTransaccionLocal(Boolean isEsNuevoTransaccionLocal) {
		this.isEsNuevoTransaccionLocal = isEsNuevoTransaccionLocal;
	}

	public Boolean getEsParaAccionDesdeFormularioTransaccionLocal() {
		return esParaAccionDesdeFormularioTransaccionLocal;
	}
	
	public void setEsParaAccionDesdeFormularioTransaccionLocal(Boolean esParaAccionDesdeFormularioTransaccionLocal) {
		this.esParaAccionDesdeFormularioTransaccionLocal = esParaAccionDesdeFormularioTransaccionLocal;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosComprasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.comprasForeignKey=new ArrayList<Compra>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Compra compraNulo = new Compra();

			CompraLogic compraLogic=new CompraLogic();

			compraLogic.getCompraDataAccess().setIsForForeingKeyData(true);

			if(this.transaccionlocalSessionBean==null) {
				this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionCompra()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getCompraDataAccess().setIsForForeingKeyData(true);

					compraLogic.getTodosComprasWithConnection(sFinalQuery,new Pagination());

					this.comprasForeignKey=compraLogic.getCompras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.comprasForeignKey.add(0, compraNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCompra(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getEntityWithConnection(transaccionlocalSessionBean.getlidCompraActual());
					this.comprasForeignKey.add(compraLogic.getCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodoDeclarasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periododeclarasForeignKey=new ArrayList<PeriodoDeclara>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoDeclaraLogic periododeclaraLogic=new PeriodoDeclaraLogic();

			periododeclaraLogic.getPeriodoDeclaraDataAccess().setIsForForeingKeyData(true);

			if(this.transaccionlocalSessionBean==null) {
				this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionPeriodoDeclara()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					periododeclaraLogic.getPeriodoDeclaraDataAccess().setIsForForeingKeyData(true);

					periododeclaraLogic.getTodosPeriodoDeclarasWithConnection(sFinalQuery,new Pagination());

					this.periododeclarasForeignKey=periododeclaraLogic.getPeriodoDeclaras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodoDeclara(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periododeclaraLogic.getEntityWithConnection(transaccionlocalSessionBean.getlidPeriodoDeclaraActual());
					this.periododeclarasForeignKey.add(periododeclaraLogic.getPeriodoDeclara());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionContasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccioncontasForeignKey=new ArrayList<TransaccionConta>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionContaLogic transaccioncontaLogic=new TransaccionContaLogic();

			transaccioncontaLogic.getTransaccionContaDataAccess().setIsForForeingKeyData(true);

			if(this.transaccionlocalSessionBean==null) {
				this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionConta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccioncontaLogic.getTransaccionContaDataAccess().setIsForForeingKeyData(true);

					transaccioncontaLogic.getTodosTransaccionContasWithConnection(sFinalQuery,new Pagination());

					this.transaccioncontasForeignKey=transaccioncontaLogic.getTransaccionContas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionConta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccioncontaLogic.getEntityWithConnection(transaccionlocalSessionBean.getlidTransaccionContaActual());
					this.transaccioncontasForeignKey.add(transaccioncontaLogic.getTransaccionConta());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.transaccionlocalSessionBean==null) {
				this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(transaccionlocalSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoComprobantesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocomprobantesForeignKey=new ArrayList<TipoComprobante>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoComprobanteLogic tipocomprobanteLogic=new TipoComprobanteLogic();

			tipocomprobanteLogic.getTipoComprobanteDataAccess().setIsForForeingKeyData(true);

			if(this.transaccionlocalSessionBean==null) {
				this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoComprobante()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocomprobanteLogic.getTipoComprobanteDataAccess().setIsForForeingKeyData(true);

					tipocomprobanteLogic.getTodosTipoComprobantesWithConnection(sFinalQuery,new Pagination());

					this.tipocomprobantesForeignKey=tipocomprobanteLogic.getTipoComprobantes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoComprobante(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocomprobanteLogic.getEntityWithConnection(transaccionlocalSessionBean.getlidTipoComprobanteActual());
					this.tipocomprobantesForeignKey.add(tipocomprobanteLogic.getTipoComprobante());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoTributariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipotributariosForeignKey=new ArrayList<TipoTributario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoTributarioLogic tipotributarioLogic=new TipoTributarioLogic();

			tipotributarioLogic.getTipoTributarioDataAccess().setIsForForeingKeyData(true);

			if(this.transaccionlocalSessionBean==null) {
				this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoTributario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotributarioLogic.getTipoTributarioDataAccess().setIsForForeingKeyData(true);

					tipotributarioLogic.getTodosTipoTributariosWithConnection(sFinalQuery,new Pagination());

					this.tipotributariosForeignKey=tipotributarioLogic.getTipoTributarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoTributario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotributarioLogic.getEntityWithConnection(transaccionlocalSessionBean.getlidTipoTributarioActual());
					this.tipotributariosForeignKey.add(tipotributarioLogic.getTipoTributario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAsientoContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AsientoContable asientocontableNulo = new AsientoContable();

			AsientoContableLogic asientocontableLogic=new AsientoContableLogic();

			asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

			if(this.transaccionlocalSessionBean==null) {
				this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

					asientocontableLogic.getTodosAsientoContablesWithConnection(sFinalQuery,new Pagination());

					this.asientocontablesForeignKey=asientocontableLogic.getAsientoContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.asientocontablesForeignKey.add(0, asientocontableNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAsientoContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(transaccionlocalSessionBean.getlidAsientoContableActual());
					this.asientocontablesForeignKey.add(asientocontableLogic.getAsientoContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoIvasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoivasForeignKey=new ArrayList<TipoIva>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoIvaLogic tipoivaLogic=new TipoIvaLogic();

			tipoivaLogic.getTipoIvaDataAccess().setIsForForeingKeyData(true);

			if(this.transaccionlocalSessionBean==null) {
				this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoIva()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoivaLogic.getTipoIvaDataAccess().setIsForForeingKeyData(true);

					tipoivaLogic.getTodosTipoIvasWithConnection(sFinalQuery,new Pagination());

					this.tipoivasForeignKey=tipoivaLogic.getTipoIvas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoIva(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoivaLogic.getEntityWithConnection(transaccionlocalSessionBean.getlidTipoIvaActual());
					this.tipoivasForeignKey.add(tipoivaLogic.getTipoIva());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoRetencionIvasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tiporetencionivasForeignKey=new ArrayList<TipoRetencionIva>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoRetencionIvaLogic tiporetencionivaLogic=new TipoRetencionIvaLogic();

			tiporetencionivaLogic.getTipoRetencionIvaDataAccess().setIsForForeingKeyData(true);

			if(this.transaccionlocalSessionBean==null) {
				this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIva()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporetencionivaLogic.getTipoRetencionIvaDataAccess().setIsForForeingKeyData(true);

					tiporetencionivaLogic.getTodosTipoRetencionIvasWithConnection(sFinalQuery,new Pagination());

					this.tiporetencionivasForeignKey=tiporetencionivaLogic.getTipoRetencionIvas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoRetencionIva(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporetencionivaLogic.getEntityWithConnection(transaccionlocalSessionBean.getlidTipoRetencionIvaActual());
					this.tiporetencionivasForeignKey.add(tiporetencionivaLogic.getTipoRetencionIva());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoRetencionIvaPrestasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tiporetencionivaprestasForeignKey=new ArrayList<TipoRetencionIva>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoRetencionIvaLogic tiporetencionivaLogic=new TipoRetencionIvaLogic();

			tiporetencionivaLogic.getTipoRetencionIvaDataAccess().setIsForForeingKeyData(true);

			if(this.transaccionlocalSessionBean==null) {
				this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIvaPresta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporetencionivaprestaLogic.getTipoRetencionIvaDataAccess().setIsForForeingKeyData(true);

					tiporetencionivaLogic.getTodosTipoRetencionIvasWithConnection(sFinalQuery,new Pagination());

					this.tiporetencionivaprestasForeignKey=tiporetencionivaLogic.getTipoRetencionIvas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoRetencionIvaPresta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporetencionivaLogic.getEntityWithConnection(transaccionlocalSessionBean.getlidTipoRetencionIvaPrestaActual());
					this.tiporetencionivaprestasForeignKey.add(tiporetencionivaLogic.getTipoRetencionIva());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualCompraForeignKey(Long idCompraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Compra  compraTemp=null;

			for(Compra compraAux:comprasForeignKey) {
				if(compraAux.getId()!=null && compraAux.getId().equals(idCompraSeleccionado)) {
					compraTemp=compraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(compraTemp!=null) {

					if(this.transaccionlocal!=null) {
						this.transaccionlocal.setCompra(compraTemp);
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal.setSelectedItem(compraTemp);
					}
				} else {
					//jComboBoxid_compraTransaccionLocal.setSelectedItem(compraTemp);
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal.getItemCount()>0) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCompra") || sFormularioTipoBusqueda.equals("Todos")){
					if(compraTemp!=null && jComboBoxid_compraFK_IdCompraTransaccionLocal!=null) {
						jComboBoxid_compraFK_IdCompraTransaccionLocal.setSelectedItem(compraTemp);
					} else {
						if(jComboBoxid_compraFK_IdCompraTransaccionLocal!=null) {
							//jComboBoxid_compraFK_IdCompraTransaccionLocal.setSelectedItem(compraTemp);
							if(jComboBoxid_compraFK_IdCompraTransaccionLocal.getItemCount()>0) {
								jComboBoxid_compraFK_IdCompraTransaccionLocal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCompraForeignKeyDescripcion(Long idCompraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Compra  compraTemp=null;

			for(Compra compraAux:comprasForeignKey) {
				if(compraAux.getId()!=null && compraAux.getId().equals(idCompraSeleccionado)) {
					compraTemp=compraAux;
					break;
				}
			}


			sDescripcion=CompraConstantesFunciones.getCompraDescripcion(compraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCompraForeignKeyGenerico(Long idCompraSeleccionado,JComboBox jComboBoxid_compraTransaccionLocalGenerico)throws Exception
	{
		try
		{
			Compra  compraTemp=null;

			for(Compra compraAux:comprasForeignKey) {
				if(compraAux.getId()!=null && compraAux.getId().equals(idCompraSeleccionado)) {
					compraTemp=compraAux;
					break;
				}
			}

			if(compraTemp!=null) {
				jComboBoxid_compraTransaccionLocalGenerico.setSelectedItem(compraTemp);
			} else {
				if(jComboBoxid_compraTransaccionLocalGenerico!=null && jComboBoxid_compraTransaccionLocalGenerico.getItemCount()>0) {
					jComboBoxid_compraTransaccionLocalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoDeclaraForeignKey(Long idPeriodoDeclaraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			PeriodoDeclara  periododeclaraTemp=null;

			for(PeriodoDeclara periododeclaraAux:periododeclarasForeignKey) {
				if(periododeclaraAux.getId()!=null && periododeclaraAux.getId().equals(idPeriodoDeclaraSeleccionado)) {
					periododeclaraTemp=periododeclaraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periododeclaraTemp!=null) {

					if(this.transaccionlocal!=null) {
						this.transaccionlocal.setPeriodoDeclara(periododeclaraTemp);
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal.setSelectedItem(periododeclaraTemp);
					}
				} else {
					//jComboBoxid_periodo_declaraTransaccionLocal.setSelectedItem(periododeclaraTemp);
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal.getItemCount()>0) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPeriodoDeclara") || sFormularioTipoBusqueda.equals("Todos")){
					if(periododeclaraTemp!=null && jComboBoxid_periodo_declaraFK_IdPeriodoDeclaraTransaccionLocal!=null) {
						jComboBoxid_periodo_declaraFK_IdPeriodoDeclaraTransaccionLocal.setSelectedItem(periododeclaraTemp);
					} else {
						if(jComboBoxid_periodo_declaraFK_IdPeriodoDeclaraTransaccionLocal!=null) {
							//jComboBoxid_periodo_declaraFK_IdPeriodoDeclaraTransaccionLocal.setSelectedItem(periododeclaraTemp);
							if(jComboBoxid_periodo_declaraFK_IdPeriodoDeclaraTransaccionLocal.getItemCount()>0) {
								jComboBoxid_periodo_declaraFK_IdPeriodoDeclaraTransaccionLocal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoDeclaraForeignKeyDescripcion(Long idPeriodoDeclaraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			PeriodoDeclara  periododeclaraTemp=null;

			for(PeriodoDeclara periododeclaraAux:periododeclarasForeignKey) {
				if(periododeclaraAux.getId()!=null && periododeclaraAux.getId().equals(idPeriodoDeclaraSeleccionado)) {
					periododeclaraTemp=periododeclaraAux;
					break;
				}
			}


			sDescripcion=PeriodoDeclaraConstantesFunciones.getPeriodoDeclaraDescripcion(periododeclaraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoDeclaraForeignKeyGenerico(Long idPeriodoDeclaraSeleccionado,JComboBox jComboBoxid_periodo_declaraTransaccionLocalGenerico)throws Exception
	{
		try
		{
			PeriodoDeclara  periododeclaraTemp=null;

			for(PeriodoDeclara periododeclaraAux:periododeclarasForeignKey) {
				if(periododeclaraAux.getId()!=null && periododeclaraAux.getId().equals(idPeriodoDeclaraSeleccionado)) {
					periododeclaraTemp=periododeclaraAux;
					break;
				}
			}

			if(periododeclaraTemp!=null) {
				jComboBoxid_periodo_declaraTransaccionLocalGenerico.setSelectedItem(periododeclaraTemp);
			} else {
				if(jComboBoxid_periodo_declaraTransaccionLocalGenerico!=null && jComboBoxid_periodo_declaraTransaccionLocalGenerico.getItemCount()>0) {
					jComboBoxid_periodo_declaraTransaccionLocalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionContaForeignKey(Long idTransaccionContaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TransaccionConta  transaccioncontaTemp=null;

			for(TransaccionConta transaccioncontaAux:transaccioncontasForeignKey) {
				if(transaccioncontaAux.getId()!=null && transaccioncontaAux.getId().equals(idTransaccionContaSeleccionado)) {
					transaccioncontaTemp=transaccioncontaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccioncontaTemp!=null) {

					if(this.transaccionlocal!=null) {
						this.transaccionlocal.setTransaccionConta(transaccioncontaTemp);
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal.setSelectedItem(transaccioncontaTemp);
					}
				} else {
					//jComboBoxid_transaccion_contaTransaccionLocal.setSelectedItem(transaccioncontaTemp);
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal.getItemCount()>0) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionConta") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccioncontaTemp!=null && jComboBoxid_transaccion_contaFK_IdTransaccionContaTransaccionLocal!=null) {
						jComboBoxid_transaccion_contaFK_IdTransaccionContaTransaccionLocal.setSelectedItem(transaccioncontaTemp);
					} else {
						if(jComboBoxid_transaccion_contaFK_IdTransaccionContaTransaccionLocal!=null) {
							//jComboBoxid_transaccion_contaFK_IdTransaccionContaTransaccionLocal.setSelectedItem(transaccioncontaTemp);
							if(jComboBoxid_transaccion_contaFK_IdTransaccionContaTransaccionLocal.getItemCount()>0) {
								jComboBoxid_transaccion_contaFK_IdTransaccionContaTransaccionLocal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionContaForeignKeyDescripcion(Long idTransaccionContaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TransaccionConta  transaccioncontaTemp=null;

			for(TransaccionConta transaccioncontaAux:transaccioncontasForeignKey) {
				if(transaccioncontaAux.getId()!=null && transaccioncontaAux.getId().equals(idTransaccionContaSeleccionado)) {
					transaccioncontaTemp=transaccioncontaAux;
					break;
				}
			}


			sDescripcion=TransaccionContaConstantesFunciones.getTransaccionContaDescripcion(transaccioncontaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionContaForeignKeyGenerico(Long idTransaccionContaSeleccionado,JComboBox jComboBoxid_transaccion_contaTransaccionLocalGenerico)throws Exception
	{
		try
		{
			TransaccionConta  transaccioncontaTemp=null;

			for(TransaccionConta transaccioncontaAux:transaccioncontasForeignKey) {
				if(transaccioncontaAux.getId()!=null && transaccioncontaAux.getId().equals(idTransaccionContaSeleccionado)) {
					transaccioncontaTemp=transaccioncontaAux;
					break;
				}
			}

			if(transaccioncontaTemp!=null) {
				jComboBoxid_transaccion_contaTransaccionLocalGenerico.setSelectedItem(transaccioncontaTemp);
			} else {
				if(jComboBoxid_transaccion_contaTransaccionLocalGenerico!=null && jComboBoxid_transaccion_contaTransaccionLocalGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_contaTransaccionLocalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.transaccionlocal!=null) {
						this.transaccionlocal.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteTransaccionLocal.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal.getItemCount()>0) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteTransaccionLocal!=null) {
						jComboBoxid_clienteFK_IdClienteTransaccionLocal.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteTransaccionLocal!=null) {
							//jComboBoxid_clienteFK_IdClienteTransaccionLocal.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteTransaccionLocal.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteTransaccionLocal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteTransaccionLocalGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteTransaccionLocalGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteTransaccionLocalGenerico!=null && jComboBoxid_clienteTransaccionLocalGenerico.getItemCount()>0) {
					jComboBoxid_clienteTransaccionLocalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoComprobanteForeignKey(Long idTipoComprobanteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoComprobante  tipocomprobanteTemp=null;

			for(TipoComprobante tipocomprobanteAux:tipocomprobantesForeignKey) {
				if(tipocomprobanteAux.getId()!=null && tipocomprobanteAux.getId().equals(idTipoComprobanteSeleccionado)) {
					tipocomprobanteTemp=tipocomprobanteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocomprobanteTemp!=null) {

					if(this.transaccionlocal!=null) {
						this.transaccionlocal.setTipoComprobante(tipocomprobanteTemp);
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal.setSelectedItem(tipocomprobanteTemp);
					}
				} else {
					//jComboBoxid_tipo_comprobanteTransaccionLocal.setSelectedItem(tipocomprobanteTemp);
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal.getItemCount()>0) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoComprobante") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipocomprobanteTemp!=null && jComboBoxid_tipo_comprobanteFK_IdTipoComprobanteTransaccionLocal!=null) {
						jComboBoxid_tipo_comprobanteFK_IdTipoComprobanteTransaccionLocal.setSelectedItem(tipocomprobanteTemp);
					} else {
						if(jComboBoxid_tipo_comprobanteFK_IdTipoComprobanteTransaccionLocal!=null) {
							//jComboBoxid_tipo_comprobanteFK_IdTipoComprobanteTransaccionLocal.setSelectedItem(tipocomprobanteTemp);
							if(jComboBoxid_tipo_comprobanteFK_IdTipoComprobanteTransaccionLocal.getItemCount()>0) {
								jComboBoxid_tipo_comprobanteFK_IdTipoComprobanteTransaccionLocal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoComprobanteForeignKeyDescripcion(Long idTipoComprobanteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoComprobante  tipocomprobanteTemp=null;

			for(TipoComprobante tipocomprobanteAux:tipocomprobantesForeignKey) {
				if(tipocomprobanteAux.getId()!=null && tipocomprobanteAux.getId().equals(idTipoComprobanteSeleccionado)) {
					tipocomprobanteTemp=tipocomprobanteAux;
					break;
				}
			}


			sDescripcion=TipoComprobanteConstantesFunciones.getTipoComprobanteDescripcion(tipocomprobanteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoComprobanteForeignKeyGenerico(Long idTipoComprobanteSeleccionado,JComboBox jComboBoxid_tipo_comprobanteTransaccionLocalGenerico)throws Exception
	{
		try
		{
			TipoComprobante  tipocomprobanteTemp=null;

			for(TipoComprobante tipocomprobanteAux:tipocomprobantesForeignKey) {
				if(tipocomprobanteAux.getId()!=null && tipocomprobanteAux.getId().equals(idTipoComprobanteSeleccionado)) {
					tipocomprobanteTemp=tipocomprobanteAux;
					break;
				}
			}

			if(tipocomprobanteTemp!=null) {
				jComboBoxid_tipo_comprobanteTransaccionLocalGenerico.setSelectedItem(tipocomprobanteTemp);
			} else {
				if(jComboBoxid_tipo_comprobanteTransaccionLocalGenerico!=null && jComboBoxid_tipo_comprobanteTransaccionLocalGenerico.getItemCount()>0) {
					jComboBoxid_tipo_comprobanteTransaccionLocalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoTributarioForeignKey(Long idTipoTributarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoTributario  tipotributarioTemp=null;

			for(TipoTributario tipotributarioAux:tipotributariosForeignKey) {
				if(tipotributarioAux.getId()!=null && tipotributarioAux.getId().equals(idTipoTributarioSeleccionado)) {
					tipotributarioTemp=tipotributarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipotributarioTemp!=null) {

					if(this.transaccionlocal!=null) {
						this.transaccionlocal.setTipoTributario(tipotributarioTemp);
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal.setSelectedItem(tipotributarioTemp);
					}
				} else {
					//jComboBoxid_tipo_tributarioTransaccionLocal.setSelectedItem(tipotributarioTemp);
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal.getItemCount()>0) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoTributario") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipotributarioTemp!=null && jComboBoxid_tipo_tributarioFK_IdTipoTributarioTransaccionLocal!=null) {
						jComboBoxid_tipo_tributarioFK_IdTipoTributarioTransaccionLocal.setSelectedItem(tipotributarioTemp);
					} else {
						if(jComboBoxid_tipo_tributarioFK_IdTipoTributarioTransaccionLocal!=null) {
							//jComboBoxid_tipo_tributarioFK_IdTipoTributarioTransaccionLocal.setSelectedItem(tipotributarioTemp);
							if(jComboBoxid_tipo_tributarioFK_IdTipoTributarioTransaccionLocal.getItemCount()>0) {
								jComboBoxid_tipo_tributarioFK_IdTipoTributarioTransaccionLocal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoTributarioForeignKeyDescripcion(Long idTipoTributarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoTributario  tipotributarioTemp=null;

			for(TipoTributario tipotributarioAux:tipotributariosForeignKey) {
				if(tipotributarioAux.getId()!=null && tipotributarioAux.getId().equals(idTipoTributarioSeleccionado)) {
					tipotributarioTemp=tipotributarioAux;
					break;
				}
			}


			sDescripcion=TipoTributarioConstantesFunciones.getTipoTributarioDescripcion(tipotributarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoTributarioForeignKeyGenerico(Long idTipoTributarioSeleccionado,JComboBox jComboBoxid_tipo_tributarioTransaccionLocalGenerico)throws Exception
	{
		try
		{
			TipoTributario  tipotributarioTemp=null;

			for(TipoTributario tipotributarioAux:tipotributariosForeignKey) {
				if(tipotributarioAux.getId()!=null && tipotributarioAux.getId().equals(idTipoTributarioSeleccionado)) {
					tipotributarioTemp=tipotributarioAux;
					break;
				}
			}

			if(tipotributarioTemp!=null) {
				jComboBoxid_tipo_tributarioTransaccionLocalGenerico.setSelectedItem(tipotributarioTemp);
			} else {
				if(jComboBoxid_tipo_tributarioTransaccionLocalGenerico!=null && jComboBoxid_tipo_tributarioTransaccionLocalGenerico.getItemCount()>0) {
					jComboBoxid_tipo_tributarioTransaccionLocalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAsientoContableForeignKey(Long idAsientoContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(asientocontableTemp!=null) {

					if(this.transaccionlocal!=null) {
						this.transaccionlocal.setAsientoContable(asientocontableTemp);
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal.setSelectedItem(asientocontableTemp);
					}
				} else {
					//jComboBoxid_asiento_contableTransaccionLocal.setSelectedItem(asientocontableTemp);
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal.getItemCount()>0) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(asientocontableTemp!=null && jComboBoxid_asiento_contableFK_IdAsientoContableTransaccionLocal!=null) {
						jComboBoxid_asiento_contableFK_IdAsientoContableTransaccionLocal.setSelectedItem(asientocontableTemp);
					} else {
						if(jComboBoxid_asiento_contableFK_IdAsientoContableTransaccionLocal!=null) {
							//jComboBoxid_asiento_contableFK_IdAsientoContableTransaccionLocal.setSelectedItem(asientocontableTemp);
							if(jComboBoxid_asiento_contableFK_IdAsientoContableTransaccionLocal.getItemCount()>0) {
								jComboBoxid_asiento_contableFK_IdAsientoContableTransaccionLocal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAsientoContableForeignKeyDescripcion(Long idAsientoContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}


			sDescripcion=AsientoContableConstantesFunciones.getAsientoContableDescripcion(asientocontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAsientoContableForeignKeyGenerico(Long idAsientoContableSeleccionado,JComboBox jComboBoxid_asiento_contableTransaccionLocalGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(asientocontableTemp!=null) {
				jComboBoxid_asiento_contableTransaccionLocalGenerico.setSelectedItem(asientocontableTemp);
			} else {
				if(jComboBoxid_asiento_contableTransaccionLocalGenerico!=null && jComboBoxid_asiento_contableTransaccionLocalGenerico.getItemCount()>0) {
					jComboBoxid_asiento_contableTransaccionLocalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoIvaForeignKey(Long idTipoIvaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoIva  tipoivaTemp=null;

			for(TipoIva tipoivaAux:tipoivasForeignKey) {
				if(tipoivaAux.getId()!=null && tipoivaAux.getId().equals(idTipoIvaSeleccionado)) {
					tipoivaTemp=tipoivaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoivaTemp!=null) {

					if(this.transaccionlocal!=null) {
						this.transaccionlocal.setTipoIva(tipoivaTemp);
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.setSelectedItem(tipoivaTemp);
					}
				} else {
					//jComboBoxid_tipo_ivaTransaccionLocal.setSelectedItem(tipoivaTemp);
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.getItemCount()>0) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoIva") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoivaTemp!=null && jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal!=null) {
						jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal.setSelectedItem(tipoivaTemp);
					} else {
						if(jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal!=null) {
							//jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal.setSelectedItem(tipoivaTemp);
							if(jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal.getItemCount()>0) {
								jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoIvaForeignKeyDescripcion(Long idTipoIvaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoIva  tipoivaTemp=null;

			for(TipoIva tipoivaAux:tipoivasForeignKey) {
				if(tipoivaAux.getId()!=null && tipoivaAux.getId().equals(idTipoIvaSeleccionado)) {
					tipoivaTemp=tipoivaAux;
					break;
				}
			}


			sDescripcion=TipoIvaConstantesFunciones.getTipoIvaDescripcion(tipoivaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoIvaForeignKeyGenerico(Long idTipoIvaSeleccionado,JComboBox jComboBoxid_tipo_ivaTransaccionLocalGenerico)throws Exception
	{
		try
		{
			TipoIva  tipoivaTemp=null;

			for(TipoIva tipoivaAux:tipoivasForeignKey) {
				if(tipoivaAux.getId()!=null && tipoivaAux.getId().equals(idTipoIvaSeleccionado)) {
					tipoivaTemp=tipoivaAux;
					break;
				}
			}

			if(tipoivaTemp!=null) {
				jComboBoxid_tipo_ivaTransaccionLocalGenerico.setSelectedItem(tipoivaTemp);
			} else {
				if(jComboBoxid_tipo_ivaTransaccionLocalGenerico!=null && jComboBoxid_tipo_ivaTransaccionLocalGenerico.getItemCount()>0) {
					jComboBoxid_tipo_ivaTransaccionLocalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoRetencionIvaForeignKey(Long idTipoRetencionIvaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoRetencionIva  tiporetencionivaTemp=null;

			for(TipoRetencionIva tiporetencionivaAux:tiporetencionivasForeignKey) {
				if(tiporetencionivaAux.getId()!=null && tiporetencionivaAux.getId().equals(idTipoRetencionIvaSeleccionado)) {
					tiporetencionivaTemp=tiporetencionivaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tiporetencionivaTemp!=null) {

					if(this.transaccionlocal!=null) {
						this.transaccionlocal.setTipoRetencionIva(tiporetencionivaTemp);
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.setSelectedItem(tiporetencionivaTemp);
					}
				} else {
					//jComboBoxid_tipo_retencion_ivaTransaccionLocal.setSelectedItem(tiporetencionivaTemp);
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.getItemCount()>0) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoRetencionIva") || sFormularioTipoBusqueda.equals("Todos")){
					if(tiporetencionivaTemp!=null && jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal!=null) {
						jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal.setSelectedItem(tiporetencionivaTemp);
					} else {
						if(jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal!=null) {
							//jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal.setSelectedItem(tiporetencionivaTemp);
							if(jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal.getItemCount()>0) {
								jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoRetencionIvaForeignKeyDescripcion(Long idTipoRetencionIvaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoRetencionIva  tiporetencionivaTemp=null;

			for(TipoRetencionIva tiporetencionivaAux:tiporetencionivasForeignKey) {
				if(tiporetencionivaAux.getId()!=null && tiporetencionivaAux.getId().equals(idTipoRetencionIvaSeleccionado)) {
					tiporetencionivaTemp=tiporetencionivaAux;
					break;
				}
			}


			sDescripcion=TipoRetencionIvaConstantesFunciones.getTipoRetencionIvaDescripcion(tiporetencionivaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoRetencionIvaForeignKeyGenerico(Long idTipoRetencionIvaSeleccionado,JComboBox jComboBoxid_tipo_retencion_ivaTransaccionLocalGenerico)throws Exception
	{
		try
		{
			TipoRetencionIva  tiporetencionivaTemp=null;

			for(TipoRetencionIva tiporetencionivaAux:tiporetencionivasForeignKey) {
				if(tiporetencionivaAux.getId()!=null && tiporetencionivaAux.getId().equals(idTipoRetencionIvaSeleccionado)) {
					tiporetencionivaTemp=tiporetencionivaAux;
					break;
				}
			}

			if(tiporetencionivaTemp!=null) {
				jComboBoxid_tipo_retencion_ivaTransaccionLocalGenerico.setSelectedItem(tiporetencionivaTemp);
			} else {
				if(jComboBoxid_tipo_retencion_ivaTransaccionLocalGenerico!=null && jComboBoxid_tipo_retencion_ivaTransaccionLocalGenerico.getItemCount()>0) {
					jComboBoxid_tipo_retencion_ivaTransaccionLocalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoRetencionIvaPrestaForeignKey(Long idTipoRetencionIvaPrestaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoRetencionIva  tiporetencionivaprestaTemp=null;

			for(TipoRetencionIva tiporetencionivaprestaAux:tiporetencionivaprestasForeignKey) {
				if(tiporetencionivaprestaAux.getId()!=null && tiporetencionivaprestaAux.getId().equals(idTipoRetencionIvaPrestaSeleccionado)) {
					tiporetencionivaprestaTemp=tiporetencionivaprestaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tiporetencionivaprestaTemp!=null) {

					if(this.transaccionlocal!=null) {
						this.transaccionlocal.setTipoRetencionIvaPresta(tiporetencionivaprestaTemp);
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.setSelectedItem(tiporetencionivaprestaTemp);
					}
				} else {
					//jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.setSelectedItem(tiporetencionivaprestaTemp);
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.getItemCount()>0) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoRetencionIvaPresta") || sFormularioTipoBusqueda.equals("Todos")){
					if(tiporetencionivaprestaTemp!=null && jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal!=null) {
						jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal.setSelectedItem(tiporetencionivaprestaTemp);
					} else {
						if(jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal!=null) {
							//jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal.setSelectedItem(tiporetencionivaprestaTemp);
							if(jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal.getItemCount()>0) {
								jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoRetencionIvaPrestaForeignKeyDescripcion(Long idTipoRetencionIvaPrestaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoRetencionIva  tiporetencionivaprestaTemp=null;

			for(TipoRetencionIva tiporetencionivaprestaAux:tiporetencionivaprestasForeignKey) {
				if(tiporetencionivaprestaAux.getId()!=null && tiporetencionivaprestaAux.getId().equals(idTipoRetencionIvaPrestaSeleccionado)) {
					tiporetencionivaprestaTemp=tiporetencionivaprestaAux;
					break;
				}
			}


			sDescripcion=TipoRetencionIvaConstantesFunciones.getTipoRetencionIvaDescripcion(tiporetencionivaprestaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoRetencionIvaPrestaForeignKeyGenerico(Long idTipoRetencionIvaPrestaSeleccionado,JComboBox jComboBoxid_tipo_retencion_iva_prestaTransaccionLocalGenerico)throws Exception
	{
		try
		{
			TipoRetencionIva  tiporetencionivaprestaTemp=null;

			for(TipoRetencionIva tiporetencionivaprestaAux:tiporetencionivaprestasForeignKey) {
				if(tiporetencionivaprestaAux.getId()!=null && tiporetencionivaprestaAux.getId().equals(idTipoRetencionIvaPrestaSeleccionado)) {
					tiporetencionivaprestaTemp=tiporetencionivaprestaAux;
					break;
				}
			}

			if(tiporetencionivaprestaTemp!=null) {
				jComboBoxid_tipo_retencion_iva_prestaTransaccionLocalGenerico.setSelectedItem(tiporetencionivaprestaTemp);
			} else {
				if(jComboBoxid_tipo_retencion_iva_prestaTransaccionLocalGenerico!=null && jComboBoxid_tipo_retencion_iva_prestaTransaccionLocalGenerico.getItemCount()>0) {
					jComboBoxid_tipo_retencion_iva_prestaTransaccionLocalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCompraForeignKey(TransaccionLocal transaccionlocal,JComboBox jComboBoxid_compraTransaccionLocalGenerico)throws Exception
	{
		try
		{
			Compra  compraAux=new Compra();

			if(jComboBoxid_compraTransaccionLocalGenerico==null) {
				compraAux=(Compra)this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal.getSelectedItem();
			} else {
				compraAux=(Compra)jComboBoxid_compraTransaccionLocalGenerico.getSelectedItem();
			}

			if(compraAux!=null) {
				transaccionlocal.setid_compra(compraAux.getId());
				transaccionlocal.setcompra_descripcion(TransaccionLocalConstantesFunciones.getCompraDescripcion(compraAux));
				transaccionlocal.setCompra(compraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoDeclaraForeignKey(TransaccionLocal transaccionlocal,JComboBox jComboBoxid_periodo_declaraTransaccionLocalGenerico)throws Exception
	{
		try
		{
			PeriodoDeclara  periododeclaraAux=new PeriodoDeclara();

			if(jComboBoxid_periodo_declaraTransaccionLocalGenerico==null) {
				periododeclaraAux=(PeriodoDeclara)this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal.getSelectedItem();
			} else {
				periododeclaraAux=(PeriodoDeclara)jComboBoxid_periodo_declaraTransaccionLocalGenerico.getSelectedItem();
			}

			if(periododeclaraAux!=null && periododeclaraAux.getId()!=null) {
				transaccionlocal.setid_periodo_declara(periododeclaraAux.getId());
				transaccionlocal.setperiododeclara_descripcion(TransaccionLocalConstantesFunciones.getPeriodoDeclaraDescripcion(periododeclaraAux));
				transaccionlocal.setPeriodoDeclara(periododeclaraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionContaForeignKey(TransaccionLocal transaccionlocal,JComboBox jComboBoxid_transaccion_contaTransaccionLocalGenerico)throws Exception
	{
		try
		{
			TransaccionConta  transaccioncontaAux=new TransaccionConta();

			if(jComboBoxid_transaccion_contaTransaccionLocalGenerico==null) {
				transaccioncontaAux=(TransaccionConta)this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal.getSelectedItem();
			} else {
				transaccioncontaAux=(TransaccionConta)jComboBoxid_transaccion_contaTransaccionLocalGenerico.getSelectedItem();
			}

			if(transaccioncontaAux!=null && transaccioncontaAux.getId()!=null) {
				transaccionlocal.setid_transaccion_conta(transaccioncontaAux.getId());
				transaccionlocal.settransaccionconta_descripcion(TransaccionLocalConstantesFunciones.getTransaccionContaDescripcion(transaccioncontaAux));
				transaccionlocal.setTransaccionConta(transaccioncontaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(TransaccionLocal transaccionlocal,JComboBox jComboBoxid_clienteTransaccionLocalGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteTransaccionLocalGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteTransaccionLocalGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				transaccionlocal.setid_cliente(clienteAux.getId());
				transaccionlocal.setcliente_descripcion(TransaccionLocalConstantesFunciones.getClienteDescripcion(clienteAux));
				transaccionlocal.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoComprobanteForeignKey(TransaccionLocal transaccionlocal,JComboBox jComboBoxid_tipo_comprobanteTransaccionLocalGenerico)throws Exception
	{
		try
		{
			TipoComprobante  tipocomprobanteAux=new TipoComprobante();

			if(jComboBoxid_tipo_comprobanteTransaccionLocalGenerico==null) {
				tipocomprobanteAux=(TipoComprobante)this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal.getSelectedItem();
			} else {
				tipocomprobanteAux=(TipoComprobante)jComboBoxid_tipo_comprobanteTransaccionLocalGenerico.getSelectedItem();
			}

			if(tipocomprobanteAux!=null && tipocomprobanteAux.getId()!=null) {
				transaccionlocal.setid_tipo_comprobante(tipocomprobanteAux.getId());
				transaccionlocal.settipocomprobante_descripcion(TransaccionLocalConstantesFunciones.getTipoComprobanteDescripcion(tipocomprobanteAux));
				transaccionlocal.setTipoComprobante(tipocomprobanteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoTributarioForeignKey(TransaccionLocal transaccionlocal,JComboBox jComboBoxid_tipo_tributarioTransaccionLocalGenerico)throws Exception
	{
		try
		{
			TipoTributario  tipotributarioAux=new TipoTributario();

			if(jComboBoxid_tipo_tributarioTransaccionLocalGenerico==null) {
				tipotributarioAux=(TipoTributario)this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal.getSelectedItem();
			} else {
				tipotributarioAux=(TipoTributario)jComboBoxid_tipo_tributarioTransaccionLocalGenerico.getSelectedItem();
			}

			if(tipotributarioAux!=null && tipotributarioAux.getId()!=null) {
				transaccionlocal.setid_tipo_tributario(tipotributarioAux.getId());
				transaccionlocal.settipotributario_descripcion(TransaccionLocalConstantesFunciones.getTipoTributarioDescripcion(tipotributarioAux));
				transaccionlocal.setTipoTributario(tipotributarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAsientoContableForeignKey(TransaccionLocal transaccionlocal,JComboBox jComboBoxid_asiento_contableTransaccionLocalGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableAux=new AsientoContable();

			if(jComboBoxid_asiento_contableTransaccionLocalGenerico==null) {
				asientocontableAux=(AsientoContable)this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal.getSelectedItem();
			} else {
				asientocontableAux=(AsientoContable)jComboBoxid_asiento_contableTransaccionLocalGenerico.getSelectedItem();
			}

			if(asientocontableAux!=null) {
				transaccionlocal.setid_asiento_contable(asientocontableAux.getId());
				transaccionlocal.setasientocontable_descripcion(TransaccionLocalConstantesFunciones.getAsientoContableDescripcion(asientocontableAux));
				transaccionlocal.setAsientoContable(asientocontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoIvaForeignKey(TransaccionLocal transaccionlocal,JComboBox jComboBoxid_tipo_ivaTransaccionLocalGenerico)throws Exception
	{
		try
		{
			TipoIva  tipoivaAux=new TipoIva();

			if(jComboBoxid_tipo_ivaTransaccionLocalGenerico==null) {
				tipoivaAux=(TipoIva)this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.getSelectedItem();
			} else {
				tipoivaAux=(TipoIva)jComboBoxid_tipo_ivaTransaccionLocalGenerico.getSelectedItem();
			}

			if(tipoivaAux!=null && tipoivaAux.getId()!=null) {
				transaccionlocal.setid_tipo_iva(tipoivaAux.getId());
				transaccionlocal.settipoiva_descripcion(TransaccionLocalConstantesFunciones.getTipoIvaDescripcion(tipoivaAux));
				transaccionlocal.setTipoIva(tipoivaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoRetencionIvaForeignKey(TransaccionLocal transaccionlocal,JComboBox jComboBoxid_tipo_retencion_ivaTransaccionLocalGenerico)throws Exception
	{
		try
		{
			TipoRetencionIva  tiporetencionivaAux=new TipoRetencionIva();

			if(jComboBoxid_tipo_retencion_ivaTransaccionLocalGenerico==null) {
				tiporetencionivaAux=(TipoRetencionIva)this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.getSelectedItem();
			} else {
				tiporetencionivaAux=(TipoRetencionIva)jComboBoxid_tipo_retencion_ivaTransaccionLocalGenerico.getSelectedItem();
			}

			if(tiporetencionivaAux!=null && tiporetencionivaAux.getId()!=null) {
				transaccionlocal.setid_tipo_retencion_iva(tiporetencionivaAux.getId());
				transaccionlocal.settiporetencioniva_descripcion(TransaccionLocalConstantesFunciones.getTipoRetencionIvaDescripcion(tiporetencionivaAux));
				transaccionlocal.setTipoRetencionIva(tiporetencionivaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoRetencionIvaPrestaForeignKey(TransaccionLocal transaccionlocal,JComboBox jComboBoxid_tipo_retencion_iva_prestaTransaccionLocalGenerico)throws Exception
	{
		try
		{
			TipoRetencionIva  tiporetencionivaAux=new TipoRetencionIva();

			if(jComboBoxid_tipo_retencion_iva_prestaTransaccionLocalGenerico==null) {
				tiporetencionivaAux=(TipoRetencionIva)this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.getSelectedItem();
			} else {
				tiporetencionivaAux=(TipoRetencionIva)jComboBoxid_tipo_retencion_iva_prestaTransaccionLocalGenerico.getSelectedItem();
			}

			if(tiporetencionivaAux!=null && tiporetencionivaAux.getId()!=null) {
				transaccionlocal.setid_tipo_retencion_iva_presta(tiporetencionivaAux.getId());
				transaccionlocal.settiporetencionivapresta_descripcion(TransaccionLocalConstantesFunciones.getTipoRetencionIvaPrestaDescripcion(tiporetencionivaAux));
				transaccionlocal.setTipoRetencionIvaPresta(tiporetencionivaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameComprasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCompra=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal.removeAllItems();

							for(Compra compra:this.comprasForeignKey) {
								this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal.addItem(compra);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
					}

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCompra") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_compraFK_IdCompraTransaccionLocal.removeAllItems();

							for(Compra compra:this.comprasForeignKey) {
								this.jComboBoxid_compraFK_IdCompraTransaccionLocal.addItem(compra);
							}
						}

						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodoDeclarasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodoDeclara=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal.removeAllItems();

							for(PeriodoDeclara periododeclara:this.periododeclarasForeignKey) {
								this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal.addItem(periododeclara);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
					}

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPeriodoDeclara") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_periodo_declaraFK_IdPeriodoDeclaraTransaccionLocal.removeAllItems();

							for(PeriodoDeclara periododeclara:this.periododeclarasForeignKey) {
								this.jComboBoxid_periodo_declaraFK_IdPeriodoDeclaraTransaccionLocal.addItem(periododeclara);
							}
						}

						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionContasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccionConta=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal.removeAllItems();

							for(TransaccionConta transaccionconta:this.transaccioncontasForeignKey) {
								this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal.addItem(transaccionconta);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
					}

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionConta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_contaFK_IdTransaccionContaTransaccionLocal.removeAllItems();

							for(TransaccionConta transaccionconta:this.transaccioncontasForeignKey) {
								this.jComboBoxid_transaccion_contaFK_IdTransaccionContaTransaccionLocal.addItem(transaccionconta);
							}
						}

						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
					}

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteTransaccionLocal.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteTransaccionLocal.addItem(cliente);
							}
						}

						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoComprobantesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoComprobante=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal.removeAllItems();

							for(TipoComprobante tipocomprobante:this.tipocomprobantesForeignKey) {
								this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal.addItem(tipocomprobante);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
					}

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoComprobante") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_comprobanteFK_IdTipoComprobanteTransaccionLocal.removeAllItems();

							for(TipoComprobante tipocomprobante:this.tipocomprobantesForeignKey) {
								this.jComboBoxid_tipo_comprobanteFK_IdTipoComprobanteTransaccionLocal.addItem(tipocomprobante);
							}
						}

						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoTributariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoTributario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal.removeAllItems();

							for(TipoTributario tipotributario:this.tipotributariosForeignKey) {
								this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal.addItem(tipotributario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
					}

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoTributario") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_tributarioFK_IdTipoTributarioTransaccionLocal.removeAllItems();

							for(TipoTributario tipotributario:this.tipotributariosForeignKey) {
								this.jComboBoxid_tipo_tributarioFK_IdTipoTributarioTransaccionLocal.addItem(tipotributario);
							}
						}

						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAsientoContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAsientoContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal.addItem(asientocontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
					}

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableTransaccionLocal.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jComboBoxid_asiento_contableFK_IdAsientoContableTransaccionLocal.addItem(asientocontable);
							}
						}

						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoIvasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoIva=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.removeAllItems();

							for(TipoIva tipoiva:this.tipoivasForeignKey) {
								this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.addItem(tipoiva);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
					}

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoIva") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal.removeAllItems();

							for(TipoIva tipoiva:this.tipoivasForeignKey) {
								this.jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal.addItem(tipoiva);
							}
						}

						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoRetencionIvasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoRetencionIva=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.removeAllItems();

							for(TipoRetencionIva tiporetencioniva:this.tiporetencionivasForeignKey) {
								this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.addItem(tiporetencioniva);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
					}

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoRetencionIva") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal.removeAllItems();

							for(TipoRetencionIva tiporetencioniva:this.tiporetencionivasForeignKey) {
								this.jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal.addItem(tiporetencioniva);
							}
						}

						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoRetencionIvaPrestasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoRetencionIva=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.removeAllItems();

							for(TipoRetencionIva tiporetencionivapresta:this.tiporetencionivaprestasForeignKey) {
								this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.addItem(tiporetencionivapresta);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { 
					}

					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoRetencionIvaPresta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal.removeAllItems();

							for(TipoRetencionIva tiporetencionivapresta:this.tiporetencionivaprestasForeignKey) {
								this.jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal.addItem(tiporetencionivapresta);
							}
						}

						if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameCompraForeignKey(Compra compra,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal.setSelectedItem(compra);
						}
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_compraFK_IdCompraTransaccionLocal.setSelectedItem(compra);
						} else {
							this.jComboBoxid_compraFK_IdCompraTransaccionLocal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoDeclaraForeignKey(PeriodoDeclara periododeclara,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal.setSelectedItem(periododeclara);
						}
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_periodo_declaraFK_IdPeriodoDeclaraTransaccionLocal.setSelectedItem(periododeclara);
						} else {
							this.jComboBoxid_periodo_declaraFK_IdPeriodoDeclaraTransaccionLocal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionContaForeignKey(TransaccionConta transaccionconta,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal.setSelectedItem(transaccionconta);
						}
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_contaFK_IdTransaccionContaTransaccionLocal.setSelectedItem(transaccionconta);
						} else {
							this.jComboBoxid_transaccion_contaFK_IdTransaccionContaTransaccionLocal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteTransaccionLocal.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteTransaccionLocal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoComprobanteForeignKey(TipoComprobante tipocomprobante,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal.setSelectedItem(tipocomprobante);
						}
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_comprobanteFK_IdTipoComprobanteTransaccionLocal.setSelectedItem(tipocomprobante);
						} else {
							this.jComboBoxid_tipo_comprobanteFK_IdTipoComprobanteTransaccionLocal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoTributarioForeignKey(TipoTributario tipotributario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal.setSelectedItem(tipotributario);
						}
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_tributarioFK_IdTipoTributarioTransaccionLocal.setSelectedItem(tipotributario);
						} else {
							this.jComboBoxid_tipo_tributarioFK_IdTipoTributarioTransaccionLocal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAsientoContableForeignKey(AsientoContable asientocontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal.setSelectedItem(asientocontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableTransaccionLocal.setSelectedItem(asientocontable);
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableTransaccionLocal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoIvaForeignKey(TipoIva tipoiva,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.setSelectedItem(tipoiva);
						}
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal.setSelectedItem(tipoiva);
						} else {
							this.jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoRetencionIvaForeignKey(TipoRetencionIva tiporetencioniva,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.setSelectedItem(tiporetencioniva);
						}
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal.setSelectedItem(tiporetencioniva);
						} else {
							this.jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoRetencionIvaPrestaForeignKey(TipoRetencionIva tiporetencionivapresta,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.setSelectedItem(tiporetencionivapresta);
						}
					} else {
						if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal.setSelectedItem(tiporetencionivapresta);
						} else {
							this.jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesTransaccionLocal() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			TransaccionLocalConstantesFunciones.refrescarForeignKeysDescripcionesTransaccionLocal(this.transaccionlocalLogic.getTransaccionLocals());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			TransaccionLocalConstantesFunciones.refrescarForeignKeysDescripcionesTransaccionLocal(this.transaccionlocals);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Compra.class));
		classes.add(new Classe(PeriodoDeclara.class));
		classes.add(new Classe(TransaccionConta.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(TipoComprobante.class));
		classes.add(new Classe(TipoTributario.class));
		classes.add(new Classe(AsientoContable.class));
		classes.add(new Classe(TipoIva.class));
		classes.add(new Classe(TipoRetencionIva.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//transaccionlocalLogic.setTransaccionLocals(this.transaccionlocals);
			transaccionlocalLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public TransaccionLocalParameterReturnGeneral getTransaccionLocalParameterGeneral() {
		return this.transaccionlocalParameterGeneral;
	}
	
	public void setTransaccionLocalParameterGeneral(TransaccionLocalParameterReturnGeneral transaccionlocalParameterGeneral) {
		this.transaccionlocalParameterGeneral = transaccionlocalParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoTransaccionLocal() {
		return isPermisoTodoTransaccionLocal;
	}

	public void setIsPermisoTodoTransaccionLocal(Boolean isPermisoTodoTransaccionLocal) {
		this.isPermisoTodoTransaccionLocal = isPermisoTodoTransaccionLocal;
	}

	public Boolean getIsPermisoNuevoTransaccionLocal() {
		return isPermisoNuevoTransaccionLocal;
	}

	public void setIsPermisoNuevoTransaccionLocal(Boolean isPermisoNuevoTransaccionLocal) {
		this.isPermisoNuevoTransaccionLocal = isPermisoNuevoTransaccionLocal;
	}

	public Boolean getIsPermisoActualizarTransaccionLocal() {
		return isPermisoActualizarTransaccionLocal;
	}

	public void setIsPermisoActualizarTransaccionLocal(Boolean isPermisoActualizarTransaccionLocal) {
		this.isPermisoActualizarTransaccionLocal = isPermisoActualizarTransaccionLocal;
	}

	public Boolean getIsPermisoEliminarTransaccionLocal() {
		return isPermisoEliminarTransaccionLocal;
	}

	public void setIsPermisoEliminarTransaccionLocal(Boolean isPermisoEliminarTransaccionLocal) {
		this.isPermisoEliminarTransaccionLocal = isPermisoEliminarTransaccionLocal;
	}

	public Boolean getIsPermisoGuardarCambiosTransaccionLocal() {
		return isPermisoGuardarCambiosTransaccionLocal;
	}

	public void setIsPermisoGuardarCambiosTransaccionLocal(Boolean isPermisoGuardarCambiosTransaccionLocal) {
		this.isPermisoGuardarCambiosTransaccionLocal = isPermisoGuardarCambiosTransaccionLocal;
	}
	
	public Boolean getIsPermisoConsultaTransaccionLocal() {
		return isPermisoConsultaTransaccionLocal;
	}

	public void setIsPermisoConsultaTransaccionLocal(Boolean isPermisoConsultaTransaccionLocal) {
		this.isPermisoConsultaTransaccionLocal = isPermisoConsultaTransaccionLocal;
	}

	public Boolean getIsPermisoBusquedaTransaccionLocal() {
		return isPermisoBusquedaTransaccionLocal;
	}

	public void setIsPermisoBusquedaTransaccionLocal(Boolean isPermisoBusquedaTransaccionLocal) {
		this.isPermisoBusquedaTransaccionLocal = isPermisoBusquedaTransaccionLocal;
	}

	public Boolean getIsPermisoReporteTransaccionLocal() {
		return isPermisoReporteTransaccionLocal;
	}

	public void setIsPermisoReporteTransaccionLocal(Boolean isPermisoReporteTransaccionLocal) {
		this.isPermisoReporteTransaccionLocal = isPermisoReporteTransaccionLocal;
	}
	
	public Boolean getIsPermisoPaginacionMedioTransaccionLocal() {
		return isPermisoPaginacionMedioTransaccionLocal;
	}

	public void setIsPermisoPaginacionMedioTransaccionLocal(Boolean isPermisoPaginacionMedioTransaccionLocal) {
		this.isPermisoPaginacionMedioTransaccionLocal = isPermisoPaginacionMedioTransaccionLocal;
	}
	
	public Boolean getIsPermisoPaginacionTodoTransaccionLocal() {
		return isPermisoPaginacionTodoTransaccionLocal;
	}

	public void setIsPermisoPaginacionTodoTransaccionLocal(Boolean isPermisoPaginacionTodoTransaccionLocal) {
		this.isPermisoPaginacionTodoTransaccionLocal = isPermisoPaginacionTodoTransaccionLocal;
	}
	
	public Boolean getIsPermisoPaginacionAltoTransaccionLocal() {
		return isPermisoPaginacionAltoTransaccionLocal;
	}

	public void setIsPermisoPaginacionAltoTransaccionLocal(Boolean isPermisoPaginacionAltoTransaccionLocal) {
		this.isPermisoPaginacionAltoTransaccionLocal = isPermisoPaginacionAltoTransaccionLocal;
	}
	
	public Boolean getIsPermisoCopiarTransaccionLocal() {
		return isPermisoCopiarTransaccionLocal;
	}

	public void setIsPermisoCopiarTransaccionLocal(Boolean isPermisoCopiarTransaccionLocal) {
		this.isPermisoCopiarTransaccionLocal = isPermisoCopiarTransaccionLocal;
	}
	
	public Boolean getIsPermisoVerFormTransaccionLocal() {
		return isPermisoVerFormTransaccionLocal;
	}

	public void setIsPermisoVerFormTransaccionLocal(Boolean isPermisoVerFormTransaccionLocal) {
		this.isPermisoVerFormTransaccionLocal = isPermisoVerFormTransaccionLocal;
	}
	
	public Boolean getIsPermisoDuplicarTransaccionLocal() {
		return isPermisoDuplicarTransaccionLocal;
	}

	public void setIsPermisoDuplicarTransaccionLocal(Boolean isPermisoDuplicarTransaccionLocal) {
		this.isPermisoDuplicarTransaccionLocal = isPermisoDuplicarTransaccionLocal;
	}
	
	public Boolean getIsPermisoOrdenTransaccionLocal() {
		return isPermisoOrdenTransaccionLocal;
	}

	public void setIsPermisoOrdenTransaccionLocal(Boolean isPermisoOrdenTransaccionLocal) {
		this.isPermisoOrdenTransaccionLocal = isPermisoOrdenTransaccionLocal;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoTransaccionLocal() {
		return isVisibilidadCeldaNuevoTransaccionLocal;
	}

	public void setIsVisibilidadCeldaNuevoTransaccionLocal(Boolean isVisibilidadCeldaNuevoTransaccionLocal) {
		this.isVisibilidadCeldaNuevoTransaccionLocal = isVisibilidadCeldaNuevoTransaccionLocal;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarTransaccionLocal() {
		return isVisibilidadCeldaDuplicarTransaccionLocal;
	}

	public void setIsVisibilidadCeldaDuplicarTransaccionLocal(Boolean isVisibilidadCeldaDuplicarTransaccionLocal) {
		this.isVisibilidadCeldaDuplicarTransaccionLocal = isVisibilidadCeldaDuplicarTransaccionLocal;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarTransaccionLocal() {
		return isVisibilidadCeldaCopiarTransaccionLocal;
	}

	public void setIsVisibilidadCeldaCopiarTransaccionLocal(Boolean isVisibilidadCeldaCopiarTransaccionLocal) {
		this.isVisibilidadCeldaCopiarTransaccionLocal = isVisibilidadCeldaCopiarTransaccionLocal;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormTransaccionLocal() {
		return isVisibilidadCeldaVerFormTransaccionLocal;
	}

	public void setIsVisibilidadCeldaVerFormTransaccionLocal(Boolean isVisibilidadCeldaVerFormTransaccionLocal) {
		this.isVisibilidadCeldaVerFormTransaccionLocal = isVisibilidadCeldaVerFormTransaccionLocal;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenTransaccionLocal() {
		return isVisibilidadCeldaOrdenTransaccionLocal;
	}

	public void setIsVisibilidadCeldaOrdenTransaccionLocal(Boolean isVisibilidadCeldaOrdenTransaccionLocal) {
		this.isVisibilidadCeldaOrdenTransaccionLocal = isVisibilidadCeldaOrdenTransaccionLocal;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesTransaccionLocal() {
		return isVisibilidadCeldaNuevoRelacionesTransaccionLocal;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesTransaccionLocal(Boolean isVisibilidadCeldaNuevoRelacionesTransaccionLocal) {
		this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal = isVisibilidadCeldaNuevoRelacionesTransaccionLocal;
	}
	
	public Boolean getIsVisibilidadCeldaModificarTransaccionLocal() {
		return isVisibilidadCeldaModificarTransaccionLocal;
	}

	public void setIsVisibilidadCeldaModificarTransaccionLocal(Boolean isVisibilidadCeldaModificarTransaccionLocal) {
		this.isVisibilidadCeldaModificarTransaccionLocal = isVisibilidadCeldaModificarTransaccionLocal;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarTransaccionLocal() {
		return isVisibilidadCeldaActualizarTransaccionLocal;
	}

	public void setIsVisibilidadCeldaActualizarTransaccionLocal(Boolean isVisibilidadCeldaActualizarTransaccionLocal) {
		this.isVisibilidadCeldaActualizarTransaccionLocal = isVisibilidadCeldaActualizarTransaccionLocal;
	}

	public Boolean getIsVisibilidadCeldaEliminarTransaccionLocal() {
		return isVisibilidadCeldaEliminarTransaccionLocal;
	}

	public void setIsVisibilidadCeldaEliminarTransaccionLocal(Boolean isVisibilidadCeldaEliminarTransaccionLocal) {
		this.isVisibilidadCeldaEliminarTransaccionLocal = isVisibilidadCeldaEliminarTransaccionLocal;
	}

	public Boolean getIsVisibilidadCeldaCancelarTransaccionLocal() {
		return isVisibilidadCeldaCancelarTransaccionLocal;
	}

	public void setIsVisibilidadCeldaCancelarTransaccionLocal(Boolean isVisibilidadCeldaCancelarTransaccionLocal) {
		this.isVisibilidadCeldaCancelarTransaccionLocal = isVisibilidadCeldaCancelarTransaccionLocal;
	}

	public Boolean getIsVisibilidadCeldaGuardarTransaccionLocal() {
		return isVisibilidadCeldaGuardarTransaccionLocal;
	}

	public void setIsVisibilidadCeldaGuardarTransaccionLocal(Boolean isVisibilidadCeldaGuardarTransaccionLocal) {
		this.isVisibilidadCeldaGuardarTransaccionLocal = isVisibilidadCeldaGuardarTransaccionLocal;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosTransaccionLocal() {
		return isVisibilidadCeldaGuardarCambiosTransaccionLocal;
	}

	public void setIsVisibilidadCeldaGuardarCambiosTransaccionLocal(Boolean isVisibilidadCeldaGuardarCambiosTransaccionLocal) {
		this.isVisibilidadCeldaGuardarCambiosTransaccionLocal = isVisibilidadCeldaGuardarCambiosTransaccionLocal;
	}
		
	public TransaccionLocalSessionBean gettransaccionlocalSessionBean() {
		return this.transaccionlocalSessionBean;
	}
	
	public void settransaccionlocalSessionBean(TransaccionLocalSessionBean transaccionlocalSessionBean) {
		this.transaccionlocalSessionBean=transaccionlocalSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAsientoContable() {
		return this.isVisibilidadFK_IdAsientoContable;
	}

	public void setisVisibilidadFK_IdAsientoContable(Boolean isVisibilidadFK_IdAsientoContable) {
		this.isVisibilidadFK_IdAsientoContable=isVisibilidadFK_IdAsientoContable;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdCompra() {
		return this.isVisibilidadFK_IdCompra;
	}

	public void setisVisibilidadFK_IdCompra(Boolean isVisibilidadFK_IdCompra) {
		this.isVisibilidadFK_IdCompra=isVisibilidadFK_IdCompra;
	}

	public Boolean getisVisibilidadFK_IdPeriodoDeclara() {
		return this.isVisibilidadFK_IdPeriodoDeclara;
	}

	public void setisVisibilidadFK_IdPeriodoDeclara(Boolean isVisibilidadFK_IdPeriodoDeclara) {
		this.isVisibilidadFK_IdPeriodoDeclara=isVisibilidadFK_IdPeriodoDeclara;
	}

	public Boolean getisVisibilidadFK_IdTipoComprobante() {
		return this.isVisibilidadFK_IdTipoComprobante;
	}

	public void setisVisibilidadFK_IdTipoComprobante(Boolean isVisibilidadFK_IdTipoComprobante) {
		this.isVisibilidadFK_IdTipoComprobante=isVisibilidadFK_IdTipoComprobante;
	}

	public Boolean getisVisibilidadFK_IdTipoIva() {
		return this.isVisibilidadFK_IdTipoIva;
	}

	public void setisVisibilidadFK_IdTipoIva(Boolean isVisibilidadFK_IdTipoIva) {
		this.isVisibilidadFK_IdTipoIva=isVisibilidadFK_IdTipoIva;
	}

	public Boolean getisVisibilidadFK_IdTipoRetencionIva() {
		return this.isVisibilidadFK_IdTipoRetencionIva;
	}

	public void setisVisibilidadFK_IdTipoRetencionIva(Boolean isVisibilidadFK_IdTipoRetencionIva) {
		this.isVisibilidadFK_IdTipoRetencionIva=isVisibilidadFK_IdTipoRetencionIva;
	}

	public Boolean getisVisibilidadFK_IdTipoRetencionIvaPresta() {
		return this.isVisibilidadFK_IdTipoRetencionIvaPresta;
	}

	public void setisVisibilidadFK_IdTipoRetencionIvaPresta(Boolean isVisibilidadFK_IdTipoRetencionIvaPresta) {
		this.isVisibilidadFK_IdTipoRetencionIvaPresta=isVisibilidadFK_IdTipoRetencionIvaPresta;
	}

	public Boolean getisVisibilidadFK_IdTipoTributario() {
		return this.isVisibilidadFK_IdTipoTributario;
	}

	public void setisVisibilidadFK_IdTipoTributario(Boolean isVisibilidadFK_IdTipoTributario) {
		this.isVisibilidadFK_IdTipoTributario=isVisibilidadFK_IdTipoTributario;
	}

	public Boolean getisVisibilidadFK_IdTransaccionConta() {
		return this.isVisibilidadFK_IdTransaccionConta;
	}

	public void setisVisibilidadFK_IdTransaccionConta(Boolean isVisibilidadFK_IdTransaccionConta) {
		this.isVisibilidadFK_IdTransaccionConta=isVisibilidadFK_IdTransaccionConta;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(TransaccionLocal transaccionlocal)throws Exception {
		try {
			
				this.setActualParaGuardarCompraForeignKey(transaccionlocal,null);
				this.setActualParaGuardarPeriodoDeclaraForeignKey(transaccionlocal,null);
				this.setActualParaGuardarTransaccionContaForeignKey(transaccionlocal,null);
				this.setActualParaGuardarClienteForeignKey(transaccionlocal,null);
				this.setActualParaGuardarTipoComprobanteForeignKey(transaccionlocal,null);
				this.setActualParaGuardarTipoTributarioForeignKey(transaccionlocal,null);
				this.setActualParaGuardarAsientoContableForeignKey(transaccionlocal,null);
				this.setActualParaGuardarTipoIvaForeignKey(transaccionlocal,null);
				this.setActualParaGuardarTipoRetencionIvaForeignKey(transaccionlocal,null);
				this.setActualParaGuardarTipoRetencionIvaPrestaForeignKey(transaccionlocal,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(TransaccionLocal transaccionlocal,TransaccionLocal transaccionlocalAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalTransaccionLocal(transaccionlocal);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		transaccionlocalAux.setId(transaccionlocal.getId());
		transaccionlocalAux.setVersionRow(transaccionlocal.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessTransaccionLocal();
		
			int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = transaccionlocalValidator.getInvalidValues(this.transaccionlocal);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			transaccionlocalLogic.setDatosCliente(datosCliente);
			transaccionlocalLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				transaccionlocalAux=new  TransaccionLocal();
				
				transaccionlocalAux.setIsNew(true);
				transaccionlocalAux.setIsChanged(true);
				
				transaccionlocalAux.setTransaccionLocalOriginal(this.transaccionlocal);
				
				transaccionlocalAux.setId(this.transaccionlocal.getId());	
				transaccionlocalAux.setVersionRow(this.transaccionlocal.getVersionRow());	
				
				if(this.transaccionlocal.getid_compra()!=null && this.transaccionlocal.getid_compra()>0L) {
					transaccionlocalAux.setid_compra(this.transaccionlocal.getid_compra());
				} else {
					transaccionlocalAux.setid_compra(null);
				}	
				transaccionlocalAux.setruc(this.transaccionlocal.getruc());	
				transaccionlocalAux.setrazon_social(this.transaccionlocal.getrazon_social());	
				transaccionlocalAux.setid_periodo_declara(this.transaccionlocal.getid_periodo_declara());	
				transaccionlocalAux.setid_transaccion_conta(this.transaccionlocal.getid_transaccion_conta());	
				transaccionlocalAux.setid_cliente(this.transaccionlocal.getid_cliente());	
				transaccionlocalAux.setidentificacion(this.transaccionlocal.getidentificacion());	
				transaccionlocalAux.setid_tipo_comprobante(this.transaccionlocal.getid_tipo_comprobante());	
				transaccionlocalAux.setfecha_emision(this.transaccionlocal.getfecha_emision());	
				transaccionlocalAux.setfecha_registro_contable(this.transaccionlocal.getfecha_registro_contable());	
				transaccionlocalAux.setnumero_secuencial(this.transaccionlocal.getnumero_secuencial());	
				transaccionlocalAux.setnumero_serie(this.transaccionlocal.getnumero_serie());	
				transaccionlocalAux.setnumero_autorizacion(this.transaccionlocal.getnumero_autorizacion());	
				transaccionlocalAux.setfecha_caducidad(this.transaccionlocal.getfecha_caducidad());	
				transaccionlocalAux.setid_tipo_tributario(this.transaccionlocal.getid_tipo_tributario());	
				transaccionlocalAux.setnumero_documento_contable(this.transaccionlocal.getnumero_documento_contable());	
				
				if(this.transaccionlocal.getid_asiento_contable()!=null && this.transaccionlocal.getid_asiento_contable()>0L) {
					transaccionlocalAux.setid_asiento_contable(this.transaccionlocal.getid_asiento_contable());
				} else {
					transaccionlocalAux.setid_asiento_contable(null);
				}	
				transaccionlocalAux.setes_rise(this.transaccionlocal.getes_rise());	
				transaccionlocalAux.setbienes_iva(this.transaccionlocal.getbienes_iva());	
				transaccionlocalAux.setbienes_sin_iva(this.transaccionlocal.getbienes_sin_iva());	
				transaccionlocalAux.setid_tipo_iva(this.transaccionlocal.getid_tipo_iva());	
				transaccionlocalAux.setservicios_iva(this.transaccionlocal.getservicios_iva());	
				transaccionlocalAux.setservicios_sin_iva(this.transaccionlocal.getservicios_sin_iva());	
				transaccionlocalAux.setmonto_iva(this.transaccionlocal.getmonto_iva());	
				transaccionlocalAux.settotal_iva(this.transaccionlocal.gettotal_iva());	
				transaccionlocalAux.settotal_sin_iva(this.transaccionlocal.gettotal_sin_iva());	
				transaccionlocalAux.setmonto_ice(this.transaccionlocal.getmonto_ice());	
				transaccionlocalAux.settransfe_iva_retener(this.transaccionlocal.gettransfe_iva_retener());	
				transaccionlocalAux.setpresta_iva_retener(this.transaccionlocal.getpresta_iva_retener());	
				transaccionlocalAux.setid_tipo_retencion_iva(this.transaccionlocal.getid_tipo_retencion_iva());	
				transaccionlocalAux.setid_tipo_retencion_iva_presta(this.transaccionlocal.getid_tipo_retencion_iva_presta());	
				transaccionlocalAux.settransfe_iva_retenido(this.transaccionlocal.gettransfe_iva_retenido());	
				transaccionlocalAux.setpresta_iva_retenido(this.transaccionlocal.getpresta_iva_retenido());	
				transaccionlocalAux.setpermite_devolucion(this.transaccionlocal.getpermite_devolucion());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.transaccionlocalSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.transaccionlocalSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(transaccionlocalAux,transaccionlocalLogic.getTransaccionLocals());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(transaccionlocalAux,transaccionlocals);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.transaccionlocalSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.transaccionlocalSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalLogic.saveTransaccionLocals();//WithConnection
						//transaccionlocalLogic.getSetVersionRowTransaccionLocals();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.transaccionlocal,transaccionlocalAux);
					
					this.refrescarForeignKeysDescripcionesTransaccionLocal();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.transaccionlocalSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								transaccionlocalLogic.saveTransaccionLocalRelaciones(transaccionlocalAux);//WithConnection
								//transaccionlocalLogic.getSetVersionRowTransaccionLocals();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.transaccionlocal,transaccionlocalAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.transaccionlocalSessionBean.getEstaModoGuardarRelaciones() 
									|| this.transaccionlocalSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(transaccionlocalAux,transaccionlocalLogic.getTransaccionLocals());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(transaccionlocalAux,transaccionlocals);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.transaccionlocal,transaccionlocalAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				transaccionlocalAux=new  TransaccionLocal();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado() 
					|| (this.transaccionlocalSessionBean.getEsGuardarRelacionado() && this.transaccionlocal.getId()>=0)) {
						
					transaccionlocalAux.setIsNew(false);
				}
				
				transaccionlocalAux.setIsDeleted(false);
			
				transaccionlocalAux.setId(this.transaccionlocal.getId());	
				transaccionlocalAux.setVersionRow(this.transaccionlocal.getVersionRow());	
				
				if(this.transaccionlocal.getid_compra()!=null && this.transaccionlocal.getid_compra()>0L) {
					transaccionlocalAux.setid_compra(this.transaccionlocal.getid_compra());
				} else {
					transaccionlocalAux.setid_compra(null);
				}	
				transaccionlocalAux.setruc(this.transaccionlocal.getruc());	
				transaccionlocalAux.setrazon_social(this.transaccionlocal.getrazon_social());	
				transaccionlocalAux.setid_periodo_declara(this.transaccionlocal.getid_periodo_declara());	
				transaccionlocalAux.setid_transaccion_conta(this.transaccionlocal.getid_transaccion_conta());	
				transaccionlocalAux.setid_cliente(this.transaccionlocal.getid_cliente());	
				transaccionlocalAux.setidentificacion(this.transaccionlocal.getidentificacion());	
				transaccionlocalAux.setid_tipo_comprobante(this.transaccionlocal.getid_tipo_comprobante());	
				transaccionlocalAux.setfecha_emision(this.transaccionlocal.getfecha_emision());	
				transaccionlocalAux.setfecha_registro_contable(this.transaccionlocal.getfecha_registro_contable());	
				transaccionlocalAux.setnumero_secuencial(this.transaccionlocal.getnumero_secuencial());	
				transaccionlocalAux.setnumero_serie(this.transaccionlocal.getnumero_serie());	
				transaccionlocalAux.setnumero_autorizacion(this.transaccionlocal.getnumero_autorizacion());	
				transaccionlocalAux.setfecha_caducidad(this.transaccionlocal.getfecha_caducidad());	
				transaccionlocalAux.setid_tipo_tributario(this.transaccionlocal.getid_tipo_tributario());	
				transaccionlocalAux.setnumero_documento_contable(this.transaccionlocal.getnumero_documento_contable());	
				
				if(this.transaccionlocal.getid_asiento_contable()!=null && this.transaccionlocal.getid_asiento_contable()>0L) {
					transaccionlocalAux.setid_asiento_contable(this.transaccionlocal.getid_asiento_contable());
				} else {
					transaccionlocalAux.setid_asiento_contable(null);
				}	
				transaccionlocalAux.setes_rise(this.transaccionlocal.getes_rise());	
				transaccionlocalAux.setbienes_iva(this.transaccionlocal.getbienes_iva());	
				transaccionlocalAux.setbienes_sin_iva(this.transaccionlocal.getbienes_sin_iva());	
				transaccionlocalAux.setid_tipo_iva(this.transaccionlocal.getid_tipo_iva());	
				transaccionlocalAux.setservicios_iva(this.transaccionlocal.getservicios_iva());	
				transaccionlocalAux.setservicios_sin_iva(this.transaccionlocal.getservicios_sin_iva());	
				transaccionlocalAux.setmonto_iva(this.transaccionlocal.getmonto_iva());	
				transaccionlocalAux.settotal_iva(this.transaccionlocal.gettotal_iva());	
				transaccionlocalAux.settotal_sin_iva(this.transaccionlocal.gettotal_sin_iva());	
				transaccionlocalAux.setmonto_ice(this.transaccionlocal.getmonto_ice());	
				transaccionlocalAux.settransfe_iva_retener(this.transaccionlocal.gettransfe_iva_retener());	
				transaccionlocalAux.setpresta_iva_retener(this.transaccionlocal.getpresta_iva_retener());	
				transaccionlocalAux.setid_tipo_retencion_iva(this.transaccionlocal.getid_tipo_retencion_iva());	
				transaccionlocalAux.setid_tipo_retencion_iva_presta(this.transaccionlocal.getid_tipo_retencion_iva_presta());	
				transaccionlocalAux.settransfe_iva_retenido(this.transaccionlocal.gettransfe_iva_retenido());	
				transaccionlocalAux.setpresta_iva_retenido(this.transaccionlocal.getpresta_iva_retenido());	
				transaccionlocalAux.setpermite_devolucion(this.transaccionlocal.getpermite_devolucion());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(transaccionlocalAux,transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(transaccionlocalAux,transaccionlocals);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.transaccionlocalSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.transaccionlocalSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalLogic.saveTransaccionLocals();//WithConnection
						//transaccionlocalLogic.getSetVersionRowTransaccionLocals();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.transaccionlocal,transaccionlocalAux);
					
					this.refrescarForeignKeysDescripcionesTransaccionLocal();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.transaccionlocalSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								transaccionlocalLogic.saveTransaccionLocalRelaciones(transaccionlocalAux);//WithConnection
								//transaccionlocalLogic.getSetVersionRowTransaccionLocals();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.transaccionlocal,transaccionlocalAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.transaccionlocalSessionBean.getEstaModoGuardarRelaciones() 
									|| this.transaccionlocalSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(transaccionlocalAux,transaccionlocalLogic.getTransaccionLocals());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(transaccionlocalAux,transaccionlocals);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.transaccionlocal,transaccionlocalAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				transaccionlocalAux=new  TransaccionLocal();
				
				transaccionlocalAux.setIsNew(false);
				transaccionlocalAux.setIsChanged(false);
				
				transaccionlocalAux.setIsDeleted(true);
				
				transaccionlocalAux.setId(this.transaccionlocal.getId());	
				transaccionlocalAux.setVersionRow(this.transaccionlocal.getVersionRow());	
				
				if(this.transaccionlocal.getid_compra()!=null && this.transaccionlocal.getid_compra()>0L) {
					transaccionlocalAux.setid_compra(this.transaccionlocal.getid_compra());
				} else {
					transaccionlocalAux.setid_compra(null);
				}	
				transaccionlocalAux.setruc(this.transaccionlocal.getruc());	
				transaccionlocalAux.setrazon_social(this.transaccionlocal.getrazon_social());	
				transaccionlocalAux.setid_periodo_declara(this.transaccionlocal.getid_periodo_declara());	
				transaccionlocalAux.setid_transaccion_conta(this.transaccionlocal.getid_transaccion_conta());	
				transaccionlocalAux.setid_cliente(this.transaccionlocal.getid_cliente());	
				transaccionlocalAux.setidentificacion(this.transaccionlocal.getidentificacion());	
				transaccionlocalAux.setid_tipo_comprobante(this.transaccionlocal.getid_tipo_comprobante());	
				transaccionlocalAux.setfecha_emision(this.transaccionlocal.getfecha_emision());	
				transaccionlocalAux.setfecha_registro_contable(this.transaccionlocal.getfecha_registro_contable());	
				transaccionlocalAux.setnumero_secuencial(this.transaccionlocal.getnumero_secuencial());	
				transaccionlocalAux.setnumero_serie(this.transaccionlocal.getnumero_serie());	
				transaccionlocalAux.setnumero_autorizacion(this.transaccionlocal.getnumero_autorizacion());	
				transaccionlocalAux.setfecha_caducidad(this.transaccionlocal.getfecha_caducidad());	
				transaccionlocalAux.setid_tipo_tributario(this.transaccionlocal.getid_tipo_tributario());	
				transaccionlocalAux.setnumero_documento_contable(this.transaccionlocal.getnumero_documento_contable());	
				
				if(this.transaccionlocal.getid_asiento_contable()!=null && this.transaccionlocal.getid_asiento_contable()>0L) {
					transaccionlocalAux.setid_asiento_contable(this.transaccionlocal.getid_asiento_contable());
				} else {
					transaccionlocalAux.setid_asiento_contable(null);
				}	
				transaccionlocalAux.setes_rise(this.transaccionlocal.getes_rise());	
				transaccionlocalAux.setbienes_iva(this.transaccionlocal.getbienes_iva());	
				transaccionlocalAux.setbienes_sin_iva(this.transaccionlocal.getbienes_sin_iva());	
				transaccionlocalAux.setid_tipo_iva(this.transaccionlocal.getid_tipo_iva());	
				transaccionlocalAux.setservicios_iva(this.transaccionlocal.getservicios_iva());	
				transaccionlocalAux.setservicios_sin_iva(this.transaccionlocal.getservicios_sin_iva());	
				transaccionlocalAux.setmonto_iva(this.transaccionlocal.getmonto_iva());	
				transaccionlocalAux.settotal_iva(this.transaccionlocal.gettotal_iva());	
				transaccionlocalAux.settotal_sin_iva(this.transaccionlocal.gettotal_sin_iva());	
				transaccionlocalAux.setmonto_ice(this.transaccionlocal.getmonto_ice());	
				transaccionlocalAux.settransfe_iva_retener(this.transaccionlocal.gettransfe_iva_retener());	
				transaccionlocalAux.setpresta_iva_retener(this.transaccionlocal.getpresta_iva_retener());	
				transaccionlocalAux.setid_tipo_retencion_iva(this.transaccionlocal.getid_tipo_retencion_iva());	
				transaccionlocalAux.setid_tipo_retencion_iva_presta(this.transaccionlocal.getid_tipo_retencion_iva_presta());	
				transaccionlocalAux.settransfe_iva_retenido(this.transaccionlocal.gettransfe_iva_retenido());	
				transaccionlocalAux.setpresta_iva_retenido(this.transaccionlocal.getpresta_iva_retenido());	
				transaccionlocalAux.setpermite_devolucion(this.transaccionlocal.getpermite_devolucion());	
				
				if(this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.transaccionlocalAux.getId()>=0) {	
						this.transaccionlocalsEliminados.add(transaccionlocalAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(transaccionlocalAux,transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(transaccionlocalAux,transaccionlocals);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.transaccionlocalSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.transaccionlocalSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalLogic.saveTransaccionLocals();//WithConnection
						//transaccionlocalLogic.getSetVersionRowTransaccionLocals();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.transaccionlocalSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								transaccionlocalLogic.saveTransaccionLocalRelaciones(transaccionlocalAux);//WithConnection
								//transaccionlocalLogic.getSetVersionRowTransaccionLocals();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.transaccionlocalSessionBean.getEstaModoGuardarRelaciones() 
								|| this.transaccionlocalSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(transaccionlocalAux,transaccionlocalLogic.getTransaccionLocals());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(transaccionlocalAux,transaccionlocals);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getTransaccionLocals().addAll(this.transaccionlocalsEliminados);
					
					transaccionlocalLogic.saveTransaccionLocals();//WithConnection
					//transaccionlocalLogic.getSetVersionRowTransaccionLocals();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesTransaccionLocal();
				
				this.transaccionlocalsEliminados= new ArrayList<TransaccionLocal>();		
			}
			
			if(this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Transaccion Local GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Transaccion Local",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.transaccionlocal=transaccionlocalAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessTransaccionLocal();
      	}
		
	}	
	
	public void actualizarRelaciones(TransaccionLocal transaccionlocalLocal) throws Exception {
		
		if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(TransaccionLocal transaccionlocalLocal) throws Exception {	
		if(this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(CompraDetalleFormJInternalFrame.class)) {
				CompraBeanSwingJInternalFrame compraBeanSwingJInternalFrameLocal=(CompraBeanSwingJInternalFrame) ((CompraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				compraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCompra(compraBeanSwingJInternalFrameLocal.getcompra(),true);
				compraBeanSwingJInternalFrameLocal.actualizarLista(compraBeanSwingJInternalFrameLocal.compra,this.comprasForeignKey);

				compraBeanSwingJInternalFrameLocal.actualizarRelaciones(compraBeanSwingJInternalFrameLocal.compra);

				transaccionlocalLocal.setCompra(compraBeanSwingJInternalFrameLocal.compra);

				this.addItemDefectoCombosForeignKeyCompra();
				this.cargarCombosFrameComprasForeignKey("Formulario");
				this.setActualCompraForeignKey(compraBeanSwingJInternalFrameLocal.compra.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDeclaraDetalleFormJInternalFrame.class)) {
				PeriodoDeclaraBeanSwingJInternalFrame periododeclaraBeanSwingJInternalFrameLocal=(PeriodoDeclaraBeanSwingJInternalFrame) ((PeriodoDeclaraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periododeclaraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodoDeclara(periododeclaraBeanSwingJInternalFrameLocal.getperiododeclara(),true);
				periododeclaraBeanSwingJInternalFrameLocal.actualizarLista(periododeclaraBeanSwingJInternalFrameLocal.periododeclara,this.periododeclarasForeignKey);

				periododeclaraBeanSwingJInternalFrameLocal.actualizarRelaciones(periododeclaraBeanSwingJInternalFrameLocal.periododeclara);

				transaccionlocalLocal.setPeriodoDeclara(periododeclaraBeanSwingJInternalFrameLocal.periododeclara);

				this.addItemDefectoCombosForeignKeyPeriodoDeclara();
				this.cargarCombosFramePeriodoDeclarasForeignKey("Formulario");
				this.setActualPeriodoDeclaraForeignKey(periododeclaraBeanSwingJInternalFrameLocal.periododeclara.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionContaDetalleFormJInternalFrame.class)) {
				TransaccionContaBeanSwingJInternalFrame transaccioncontaBeanSwingJInternalFrameLocal=(TransaccionContaBeanSwingJInternalFrame) ((TransaccionContaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccioncontaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccionConta(transaccioncontaBeanSwingJInternalFrameLocal.gettransaccionconta(),true);
				transaccioncontaBeanSwingJInternalFrameLocal.actualizarLista(transaccioncontaBeanSwingJInternalFrameLocal.transaccionconta,this.transaccioncontasForeignKey);

				transaccioncontaBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccioncontaBeanSwingJInternalFrameLocal.transaccionconta);

				transaccionlocalLocal.setTransaccionConta(transaccioncontaBeanSwingJInternalFrameLocal.transaccionconta);

				this.addItemDefectoCombosForeignKeyTransaccionConta();
				this.cargarCombosFrameTransaccionContasForeignKey("Formulario");
				this.setActualTransaccionContaForeignKey(transaccioncontaBeanSwingJInternalFrameLocal.transaccionconta.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				transaccionlocalLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoComprobanteDetalleFormJInternalFrame.class)) {
				TipoComprobanteBeanSwingJInternalFrame tipocomprobanteBeanSwingJInternalFrameLocal=(TipoComprobanteBeanSwingJInternalFrame) ((TipoComprobanteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocomprobanteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoComprobante(tipocomprobanteBeanSwingJInternalFrameLocal.gettipocomprobante(),true);
				tipocomprobanteBeanSwingJInternalFrameLocal.actualizarLista(tipocomprobanteBeanSwingJInternalFrameLocal.tipocomprobante,this.tipocomprobantesForeignKey);

				tipocomprobanteBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocomprobanteBeanSwingJInternalFrameLocal.tipocomprobante);

				transaccionlocalLocal.setTipoComprobante(tipocomprobanteBeanSwingJInternalFrameLocal.tipocomprobante);

				this.addItemDefectoCombosForeignKeyTipoComprobante();
				this.cargarCombosFrameTipoComprobantesForeignKey("Formulario");
				this.setActualTipoComprobanteForeignKey(tipocomprobanteBeanSwingJInternalFrameLocal.tipocomprobante.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoTributarioDetalleFormJInternalFrame.class)) {
				TipoTributarioBeanSwingJInternalFrame tipotributarioBeanSwingJInternalFrameLocal=(TipoTributarioBeanSwingJInternalFrame) ((TipoTributarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipotributarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoTributario(tipotributarioBeanSwingJInternalFrameLocal.gettipotributario(),true);
				tipotributarioBeanSwingJInternalFrameLocal.actualizarLista(tipotributarioBeanSwingJInternalFrameLocal.tipotributario,this.tipotributariosForeignKey);

				tipotributarioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipotributarioBeanSwingJInternalFrameLocal.tipotributario);

				transaccionlocalLocal.setTipoTributario(tipotributarioBeanSwingJInternalFrameLocal.tipotributario);

				this.addItemDefectoCombosForeignKeyTipoTributario();
				this.cargarCombosFrameTipoTributariosForeignKey("Formulario");
				this.setActualTipoTributarioForeignKey(tipotributarioBeanSwingJInternalFrameLocal.tipotributario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AsientoContableDetalleFormJInternalFrame.class)) {
				AsientoContableBeanSwingJInternalFrame asientocontableBeanSwingJInternalFrameLocal=(AsientoContableBeanSwingJInternalFrame) ((AsientoContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				asientocontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAsientoContable(asientocontableBeanSwingJInternalFrameLocal.getasientocontable(),true);
				asientocontableBeanSwingJInternalFrameLocal.actualizarLista(asientocontableBeanSwingJInternalFrameLocal.asientocontable,this.asientocontablesForeignKey);

				asientocontableBeanSwingJInternalFrameLocal.actualizarRelaciones(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				transaccionlocalLocal.setAsientoContable(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey("Formulario");
				this.setActualAsientoContableForeignKey(asientocontableBeanSwingJInternalFrameLocal.asientocontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoIvaDetalleFormJInternalFrame.class)) {
				TipoIvaBeanSwingJInternalFrame tipoivaBeanSwingJInternalFrameLocal=(TipoIvaBeanSwingJInternalFrame) ((TipoIvaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoivaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoIva(tipoivaBeanSwingJInternalFrameLocal.gettipoiva(),true);
				tipoivaBeanSwingJInternalFrameLocal.actualizarLista(tipoivaBeanSwingJInternalFrameLocal.tipoiva,this.tipoivasForeignKey);

				tipoivaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoivaBeanSwingJInternalFrameLocal.tipoiva);

				transaccionlocalLocal.setTipoIva(tipoivaBeanSwingJInternalFrameLocal.tipoiva);

				this.addItemDefectoCombosForeignKeyTipoIva();
				this.cargarCombosFrameTipoIvasForeignKey("Formulario");
				this.setActualTipoIvaForeignKey(tipoivaBeanSwingJInternalFrameLocal.tipoiva.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoRetencionIvaDetalleFormJInternalFrame.class)) {
				TipoRetencionIvaBeanSwingJInternalFrame tiporetencionivaBeanSwingJInternalFrameLocal=(TipoRetencionIvaBeanSwingJInternalFrame) ((TipoRetencionIvaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tiporetencionivaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoRetencionIva(tiporetencionivaBeanSwingJInternalFrameLocal.gettiporetencioniva(),true);
				tiporetencionivaBeanSwingJInternalFrameLocal.actualizarLista(tiporetencionivaBeanSwingJInternalFrameLocal.tiporetencioniva,this.tiporetencionivasForeignKey);

				tiporetencionivaBeanSwingJInternalFrameLocal.actualizarRelaciones(tiporetencionivaBeanSwingJInternalFrameLocal.tiporetencioniva);

				transaccionlocalLocal.setTipoRetencionIva(tiporetencionivaBeanSwingJInternalFrameLocal.tiporetencioniva);

				this.addItemDefectoCombosForeignKeyTipoRetencionIva();
				this.cargarCombosFrameTipoRetencionIvasForeignKey("Formulario");
				this.setActualTipoRetencionIvaForeignKey(tiporetencionivaBeanSwingJInternalFrameLocal.tiporetencioniva.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoRetencionIvaDetalleFormJInternalFrame.class)) {
				TipoRetencionIvaBeanSwingJInternalFrame tiporetencionivaprestaBeanSwingJInternalFrameLocal=(TipoRetencionIvaBeanSwingJInternalFrame) ((TipoRetencionIvaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tiporetencionivaprestaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoRetencionIva(tiporetencionivaprestaBeanSwingJInternalFrameLocal.gettiporetencioniva(),true);
				tiporetencionivaprestaBeanSwingJInternalFrameLocal.actualizarLista(tiporetencionivaprestaBeanSwingJInternalFrameLocal.tiporetencioniva,this.tiporetencionivaprestasForeignKey);

				tiporetencionivaprestaBeanSwingJInternalFrameLocal.actualizarRelaciones(tiporetencionivaprestaBeanSwingJInternalFrameLocal.tiporetencioniva);

				transaccionlocalLocal.setTipoRetencionIvaPresta(tiporetencionivaprestaBeanSwingJInternalFrameLocal.tiporetencioniva);

				this.addItemDefectoCombosForeignKeyTipoRetencionIvaPresta();
				this.cargarCombosFrameTipoRetencionIvaPrestasForeignKey("Formulario");
				this.setActualTipoRetencionIvaPrestaForeignKey(tiporetencionivaprestaBeanSwingJInternalFrameLocal.tiporetencioniva.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarTransaccionLocalActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = transaccionlocalValidator.getInvalidValues(this.transaccionlocal);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(TransaccionLocal transaccionlocal,List<TransaccionLocal> transaccionlocals) throws Exception {
		try	{		
			TransaccionLocalConstantesFunciones.actualizarLista(transaccionlocal,transaccionlocals,this.transaccionlocalSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(TransaccionLocal transaccionlocal,List<TransaccionLocal> transaccionlocals) throws Exception {
		try	{			
			TransaccionLocalConstantesFunciones.actualizarSelectedLista(transaccionlocal,transaccionlocals);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<TransaccionLocal> transaccionlocalsLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				transaccionlocalsLocal=this.transaccionlocalLogic.getTransaccionLocals();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				transaccionlocalsLocal=this.transaccionlocals;
			}
			//ARCHITECTURE
		
			for(TransaccionLocal transaccionlocalLocal:transaccionlocalsLocal) {
				if(this.permiteMantenimiento(transaccionlocalLocal) && transaccionlocalLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+TransaccionLocalConstantesFunciones.getTransaccionLocalLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.IDCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_compraTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.RUC)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelrucTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.RAZONSOCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelrazon_socialTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.IDPERIODODECLARA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_periodo_declaraTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.IDTRANSACCIONCONTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_transaccion_contaTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_clienteTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.IDENTIFICACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelidentificacionTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.IDTIPOCOMPROBANTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_tipo_comprobanteTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelfecha_emisionTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.FECHAREGISTROCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelfecha_registro_contableTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.NUMEROSECUENCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelnumero_secuencialTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.NUMEROSERIE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelnumero_serieTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.NUMEROAUTORIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelnumero_autorizacionTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.FECHACADUCIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelfecha_caducidadTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.IDTIPOTRIBUTARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_tipo_tributarioTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.NUMERODOCUMENTOCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelnumero_documento_contableTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.IDASIENTOCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_asiento_contableTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.ESRISE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabeles_riseTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.BIENESIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelbienes_ivaTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.BIENESSINIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelbienes_sin_ivaTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.IDTIPOIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_tipo_ivaTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.SERVICIOSIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelservicios_ivaTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.SERVICIOSSINIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelservicios_sin_ivaTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.MONTOIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelmonto_ivaTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.TOTALIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabeltotal_ivaTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.TOTALSINIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabeltotal_sin_ivaTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.MONTOICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelmonto_iceTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.TRANSFEIVARETENER)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabeltransfe_iva_retenerTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.PRESTAIVARETENER)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelpresta_iva_retenerTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.IDTIPORETENCIONIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_tipo_retencion_ivaTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.IDTIPORETENCIONIVAPRESTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_tipo_retencion_iva_prestaTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.TRANSFEIVARETENIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabeltransfe_iva_retenidoTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.PRESTAIVARETENIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelpresta_iva_retenidoTransaccionLocal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TransaccionLocalConstantesFunciones.PERMITEDEVOLUCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelpermite_devolucionTransaccionLocal,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_compraTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelrucTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelrazon_socialTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_periodo_declaraTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_transaccion_contaTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_clienteTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelidentificacionTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_tipo_comprobanteTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelfecha_emisionTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelfecha_registro_contableTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelnumero_secuencialTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelnumero_serieTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelnumero_autorizacionTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelfecha_caducidadTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_tipo_tributarioTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelnumero_documento_contableTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_asiento_contableTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabeles_riseTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelbienes_ivaTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelbienes_sin_ivaTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_tipo_ivaTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelservicios_ivaTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelservicios_sin_ivaTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelmonto_ivaTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabeltotal_ivaTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabeltotal_sin_ivaTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelmonto_iceTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabeltransfe_iva_retenerTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelpresta_iva_retenerTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_tipo_retencion_ivaTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelid_tipo_retencion_iva_prestaTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabeltransfe_iva_retenidoTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelpresta_iva_retenidoTransaccionLocal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTransaccionLocal.jLabelpermite_devolucionTransaccionLocal,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoTransaccionLocal--;	
		
		
		this.transaccionlocalAux=new TransaccionLocal();
		
		this.transaccionlocalAux.setId(this.iIdNuevoTransaccionLocal);
		this.transaccionlocalAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.transaccionlocalLogic.getTransaccionLocals().add(this.transaccionlocalAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.transaccionlocals.add(this.transaccionlocalAux);
		}
		//ARCHITECTURE
		
		this.transaccionlocal=this.transaccionlocalAux;
		
		if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioTransaccionLocal(this.transaccionlocal);
			this.setVariablesObjetoActualToFormularioForeignKeyTransaccionLocal(this.transaccionlocal);
		}
				
		//this.setDefaultControlesTransaccionLocal();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyTransaccionLocal();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyTransaccionLocal();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyTransaccionLocal();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualTransaccionLocal(this.transaccionlocalBean,this.transaccionlocal,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(TransaccionLocalConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
			classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.transaccionlocalReturnGeneral=transaccionlocalLogic.procesarEventosTransaccionLocalsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.transaccionlocalLogic.getTransaccionLocals(),this.transaccionlocal,this.transaccionlocalParameterGeneral,this.isEsNuevoTransaccionLocal,classes);//this.transaccionlocalLogic.getTransaccionLocal()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanTransaccionLocal(this.transaccionlocalReturnGeneral,this.transaccionlocalBean,false);
		
		if(this.transaccionlocalReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyTransaccionLocal(this.transaccionlocalReturnGeneral.getTransaccionLocal());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioTransaccionLocal(this.transaccionlocalReturnGeneral.getTransaccionLocal());
		}
		
		if(this.transaccionlocalReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioTransaccionLocal(this.transaccionlocalReturnGeneral.getTransaccionLocal(),classes);//this.transaccionlocalBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyTransaccionLocal();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyTransaccionLocal();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			TransaccionLocalBeanSwingJInternalFrameAdditional.RecargarFormTransaccionLocal(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingTransaccionLocal(false);
						
			if(transaccionlocalSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualTransaccionLocal();
			}
			
			this.actualizarVisualTableDatosTransaccionLocal();
			
			this.jTableDatosTransaccionLocal.setRowSelectionInterval(this.getIndiceNuevoTransaccionLocal(), this.getIndiceNuevoTransaccionLocal());
			
			this.seleccionarFilaTablaTransaccionLocalActual();
						
			this.actualizarEstadoCeldasBotonesTransaccionLocal("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesTransaccionLocal(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldrucTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarrucTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextArearazon_socialTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarrazon_socialTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldidentificacionTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activaridentificacionTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_emisionTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarfecha_emisionTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_registro_contableTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarfecha_registro_contableTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_secuencialTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarnumero_secuencialTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_serieTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarnumero_serieTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_autorizacionTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarnumero_autorizacionTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_caducidadTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarfecha_caducidadTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_documento_contableTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarnumero_documento_contableTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxes_riseTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activares_riseTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarbienes_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarbienes_sin_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarservicios_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarservicios_sin_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_ivaTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarmonto_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activartotal_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_sin_ivaTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activartotal_sin_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_iceTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarmonto_iceTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activartransfe_iva_retenerTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarpresta_iva_retenerTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenidoTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activartransfe_iva_retenidoTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenidoTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarpresta_iva_retenidoTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxpermite_devolucionTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarpermite_devolucionTransaccionLocal);	
		//
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarid_compraTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarid_periodo_declaraTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarid_transaccion_contaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarid_clienteTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarid_tipo_comprobanteTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarid_tipo_tributarioTransaccionLocal);//
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarid_asiento_contableTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarid_tipo_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarid_tipo_retencion_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.setEnabled(isHabilitar && this.transaccionlocalConstantesFunciones.activarid_tipo_retencion_iva_prestaTransaccionLocal);
	};
	
	public void setDefaultControlesTransaccionLocal() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoTransaccionLocal(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.transaccionlocalSessionBean.setConGuardarRelaciones(true);			
			this.transaccionlocalSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormTransaccionLocal.jTabbedPaneRelacionesTransaccionLocal.setVisible(true);
			
					
		} else {
			//this.transaccionlocalSessionBean.setConGuardarRelaciones(false);			
			this.transaccionlocalSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormTransaccionLocal.jTabbedPaneRelacionesTransaccionLocal.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoTransaccionLocal() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TransaccionLocal transaccionlocalAux:this.transaccionlocalLogic.getTransaccionLocals()) {
				if(transaccionlocalAux.getId().equals(this.iIdNuevoTransaccionLocal)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TransaccionLocal transaccionlocalAux:this.transaccionlocals) {
				if(transaccionlocalAux.getId().equals(this.iIdNuevoTransaccionLocal)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualTransaccionLocal(TransaccionLocal transaccionlocal,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TransaccionLocal transaccionlocalAux:this.transaccionlocalLogic.getTransaccionLocals()) {
				if(transaccionlocalAux.getId().equals(transaccionlocal.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TransaccionLocal transaccionlocalAux:this.transaccionlocals) {
				if(transaccionlocalAux.getId().equals(transaccionlocal.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalTransaccionLocal(TransaccionLocal transaccionlocalOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TransaccionLocal transaccionlocalAux:this.transaccionlocalLogic.getTransaccionLocals()) {
				if(transaccionlocalAux.getTransaccionLocalOriginal().getId().equals(transaccionlocalOriginal.getId())) {
					existe=true;
					transaccionlocalOriginal.setId(transaccionlocalAux.getId());
					transaccionlocalOriginal.setVersionRow(transaccionlocalAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TransaccionLocal transaccionlocalAux:this.transaccionlocals) {
				if(transaccionlocalAux.getTransaccionLocalOriginal().getId().equals(transaccionlocalOriginal.getId())) {
					existe=true;
					transaccionlocalOriginal.setId(transaccionlocalAux.getId());
					transaccionlocalOriginal.setVersionRow(transaccionlocalAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosTransaccionLocal(Boolean esParaCancelar) throws Exception {
		transaccionlocalsAux=new ArrayList<TransaccionLocal>();
		transaccionlocalAux=new TransaccionLocal();
		
		if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(TransaccionLocal transaccionlocalAux:this.transaccionlocalLogic.getTransaccionLocals()) {
					if(transaccionlocalAux.getId()<0) {
						transaccionlocalsAux.add(transaccionlocalAux);
					}		
				}
				this.iIdNuevoTransaccionLocal=0L;
				this.transaccionlocalLogic.getTransaccionLocals().removeAll(transaccionlocalsAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TransaccionLocal transaccionlocalAux:this.transaccionlocals) {
					if(transaccionlocalAux.getId()<0) {
						transaccionlocalsAux.add(transaccionlocalAux);
					}		
				}
				this.iIdNuevoTransaccionLocal=0L;
				this.transaccionlocals.removeAll(transaccionlocalsAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoTransaccionLocal 
					&& this.transaccionlocalLogic.getTransaccionLocals().size()>0
					) {
					transaccionlocalAux=this.transaccionlocalLogic.getTransaccionLocals().get(this.transaccionlocalLogic.getTransaccionLocals().size() - 1);
				
					if(transaccionlocalAux.getId()<0) {
						this.transaccionlocalLogic.getTransaccionLocals().remove(transaccionlocalAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoTransaccionLocal && this.transaccionlocals.size()>0) {
					transaccionlocalAux=this.transaccionlocals.get(this.transaccionlocals.size() - 1);
				
					if(transaccionlocalAux.getId()<0) {
						this.transaccionlocals.remove(transaccionlocalAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoTransaccionLocal(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(transaccionlocal.getId()<0) {
				this.transaccionlocalLogic.getTransaccionLocals().remove(this.transaccionlocal);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(transaccionlocal.getId()<0) {
				this.transaccionlocals.remove(this.transaccionlocal);
			}
		}			
	}
	
	public void setEstadosInicialesTransaccionLocal(List<TransaccionLocal> transaccionlocalsAux) throws Exception {
		TransaccionLocalConstantesFunciones.setEstadosInicialesTransaccionLocal(transaccionlocalsAux);
	}
	
	public void setEstadosInicialesTransaccionLocal(TransaccionLocal transaccionlocalAux) throws Exception {
		TransaccionLocalConstantesFunciones.setEstadosInicialesTransaccionLocal(transaccionlocalAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarTransaccionLocalActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesTransaccionLocal("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarTransaccionLocalActual()) {
				if(!this.isEsNuevoTransaccionLocal) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesTransaccionLocal("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoTransaccionLocal=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarTransaccionLocalActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Transaccion Local ?", "MANTENIMIENTO DE Transaccion Local", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesTransaccionLocal("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(TransaccionLocal transaccionlocal) throws Exception {
		TransaccionLocalConstantesFunciones.seleccionarAsignar(this.transaccionlocal,transaccionlocal);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarTransaccionLocal=this.isPermisoActualizarOriginalTransaccionLocal;
			
			
			this.seleccionarAsignar(transaccionlocal);
			
			

			idClienteActual=transaccionlocal.getid_cliente();
			this.seleccionarClienteActual();

			idAsientoContableActual=transaccionlocal.getid_asiento_contable();
			this.seleccionarAsientoContableActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			TransaccionLocalConstantesFunciones.quitarEspaciosTransaccionLocal(this.transaccionlocal,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesTransaccionLocal("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.transaccionlocalSessionBean.setsFuncionBusquedaRapida(this.transaccionlocalSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarAsientoContableActual() throws Exception {
		try	{
			AsientoContable asientocontableAux=new AsientoContable();

			if(this.idAsientoContableActual != null && this.idAsientoContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(this.idAsientoContableActual);
					asientocontableAux= asientocontableLogic.getAsientoContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				asientocontablesForeignKey=new ArrayList<AsientoContable>();
				asientocontablesForeignKey.add(asientocontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoTransaccionLocal) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosTransaccionLocal(esParaCancelar);				
				this.cancelarNuevoTransaccionLocal(esParaCancelar);								
			}
			
			this.transaccionlocal=new TransaccionLocal();
			
			this.inicializarTransaccionLocal();
			
			this.actualizarEstadoCeldasBotonesTransaccionLocal("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarTransaccionLocal() throws Exception {
		try {
			TransaccionLocalConstantesFunciones.inicializarTransaccionLocal(this.transaccionlocal);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.transaccionlocalLogic.getTransaccionLocals().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteTransaccionLocals(String sAccionBusqueda,List<TransaccionLocal> transaccionlocalsParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="TransaccionLocal"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="TransaccionLocalMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("TransaccionLocalMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="TransaccionLocal"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Transaccion Locales");		
		parameters.put("busquedapor", TransaccionLocalConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceTransaccionLocal=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			TransaccionLocalConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			TransaccionLocalConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceTransaccionLocal=new JRBeanArrayDataSource(TransaccionLocalJInternalFrame.TraerTransaccionLocalBeans(transaccionlocalsParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceTransaccionLocal);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+TransaccionLocalConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+TransaccionLocalConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(TransaccionLocalBean.TraerTransaccionLocalBeans(transaccionlocalsParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteTransaccionLocals(sAccionBusqueda,sTipoArchivoReporte,transaccionlocalsParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalTransaccionLocals(sAccionBusqueda,sTipoArchivoReporte,transaccionlocalsParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoTransaccionLocalActionPerformed(null);
					//this.generarExcelReporteTransaccionLocals(sAccionBusqueda,sTipoArchivoReporte,transaccionlocalsParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalTransaccionLocals(sAccionBusqueda,sTipoArchivoReporte,transaccionlocalsParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesTransaccionLocals(sAccionBusqueda,sTipoArchivoReporte,transaccionlocalsParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesTransaccionLocals(sAccionBusqueda,sTipoArchivoReporte,transaccionlocalsParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteTransaccionLocals(String sAccionBusqueda,String sTipoArchivoReporte,List<TransaccionLocal> transaccionlocalsParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"transaccionlocal";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("TransaccionLocals");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderTransaccionLocal("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(TransaccionLocal transaccionlocal : transaccionlocalsParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			TransaccionLocalConstantesFunciones.generarExcelReporteDataTransaccionLocal("NORMAL",row,workbook,transaccionlocal,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Transaccion Local",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderTransaccionLocal(String sTipo,Row row,Workbook workbook) {
		
		TransaccionLocalConstantesFunciones.generarExcelReporteHeaderTransaccionLocal(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalTransaccionLocals(String sAccionBusqueda,String sTipoArchivoReporte,List<TransaccionLocal> transaccionlocalsParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"transaccionlocal_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("TransaccionLocals");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(TransaccionLocal transaccionlocal : transaccionlocalsParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(TransaccionLocalConstantesFunciones.getTransaccionLocalDescripcion(transaccionlocal));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_IDCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getcompra_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_RUC))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_RUC);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getruc());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getrazon_social());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_IDPERIODODECLARA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDPERIODODECLARA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getperiododeclara_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_IDTRANSACCIONCONTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTRANSACCIONCONTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.gettransaccionconta_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getidentificacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_IDTIPOCOMPROBANTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPOCOMPROBANTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.gettipocomprobante_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getfecha_registro_contable());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getnumero_secuencial());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getnumero_serie());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getnumero_autorizacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getfecha_caducidad());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_IDTIPOTRIBUTARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPOTRIBUTARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.gettipotributario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getnumero_documento_contable());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_IDASIENTOCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDASIENTOCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getasientocontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_ESRISE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_ESRISE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(transaccionlocal.getes_rise()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_BIENESIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_BIENESIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getbienes_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getbienes_sin_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_IDTIPOIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPOIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.gettipoiva_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getservicios_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getservicios_sin_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_MONTOIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_MONTOIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getmonto_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_TOTALIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_TOTALIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.gettotal_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.gettotal_sin_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_MONTOICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_MONTOICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getmonto_ice());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.gettransfe_iva_retener());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getpresta_iva_retener());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.gettiporetencioniva_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.gettiporetencionivapresta_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.gettransfe_iva_retenido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(transaccionlocal.getpresta_iva_retenido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(transaccionlocal.getpermite_devolucion()));


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Transaccion Local",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesTransaccionLocals(String sAccionBusqueda,String sTipoArchivoReporte,List<TransaccionLocal> transaccionlocalsParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<TransaccionLocal> transaccionlocalsRespaldo=null;
		
		classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.transaccionlocalLogic.setDatosCliente(this.datosCliente);
		this.transaccionlocalLogic.setDatosDeep(this.datosDeep);
		this.transaccionlocalLogic.setIsConDeep(true);
		
		transaccionlocalsRespaldo=this.transaccionlocalLogic.getTransaccionLocals();
		
		this.transaccionlocalLogic.setTransaccionLocals(transaccionlocalsParaReportes);	
		this.transaccionlocalLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		transaccionlocalsParaReportes=this.transaccionlocalLogic.getTransaccionLocals();
		this.transaccionlocalLogic.setTransaccionLocals(transaccionlocalsRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"transaccionlocal_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("TransaccionLocals");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderTransaccionLocal("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(TransaccionLocal transaccionlocal : transaccionlocalsParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderTransaccionLocal("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			TransaccionLocalConstantesFunciones.generarExcelReporteDataTransaccionLocal("NORMAL",row,workbook,transaccionlocal,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(TransaccionLocalConstantesFunciones.getTransaccionLocalDescripcion(transaccionlocal));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Transaccion Local",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoTransaccionLocal.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTransaccionLocal.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoTransaccionLocal.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTransaccionLocal.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessTransaccionLocal() throws Exception {		
		this.startProcessTransaccionLocal(true);
	}
	
	public void startProcessTransaccionLocal(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasTransaccionLocal ,this.jPanelParametrosReportesTransaccionLocal, this.jScrollPanelDatosTransaccionLocal,this.jPanelPaginacionTransaccionLocal, this.jScrollPanelDatosEdicionTransaccionLocal, this.jPanelAccionesTransaccionLocal,this.jPanelAccionesFormularioTransaccionLocal,this.jmenuBarTransaccionLocal,this.jmenuBarDetalleTransaccionLocal,this.jTtoolBarTransaccionLocal,this.jTtoolBarDetalleTransaccionLocal);		
		
		final JTabbedPane jTabbedPaneBusquedasTransaccionLocal=this.jTabbedPaneBusquedasTransaccionLocal; 
		
		final JPanel jPanelParametrosReportesTransaccionLocal=this.jPanelParametrosReportesTransaccionLocal;
		//final JScrollPane jScrollPanelDatosTransaccionLocal=this.jScrollPanelDatosTransaccionLocal;
		final JTable jTableDatosTransaccionLocal=this.jTableDatosTransaccionLocal;		
		final JPanel jPanelPaginacionTransaccionLocal=this.jPanelPaginacionTransaccionLocal;
		//final JScrollPane jScrollPanelDatosEdicionTransaccionLocal=this.jScrollPanelDatosEdicionTransaccionLocal;
		final JPanel jPanelAccionesTransaccionLocal=this.jPanelAccionesTransaccionLocal;
		
		JPanel jPanelCamposAuxiliarTransaccionLocal=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarTransaccionLocal=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
			jPanelCamposAuxiliarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jPanelCamposTransaccionLocal;
			jPanelAccionesFormularioAuxiliarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jPanelAccionesFormularioTransaccionLocal;
		}
		
		final JPanel jPanelCamposTransaccionLocal=jPanelCamposAuxiliarTransaccionLocal;
		final JPanel jPanelAccionesFormularioTransaccionLocal=jPanelAccionesFormularioAuxiliarTransaccionLocal;
		
		
		final JMenuBar jmenuBarTransaccionLocal=this.jmenuBarTransaccionLocal;
		final JToolBar jTtoolBarTransaccionLocal=this.jTtoolBarTransaccionLocal;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarTransaccionLocal=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarTransaccionLocal=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
			jmenuBarDetalleAuxiliarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jmenuBarDetalleTransaccionLocal;
			jTtoolBarDetalleAuxiliarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jTtoolBarDetalleTransaccionLocal;
		}
		
		final JMenuBar jmenuBarDetalleTransaccionLocal=jmenuBarDetalleAuxiliarTransaccionLocal;
		final JToolBar jTtoolBarDetalleTransaccionLocal=jTtoolBarDetalleAuxiliarTransaccionLocal;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasTransaccionLocal;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesTransaccionLocal;
			processRunnable.jTableDatos=jTableDatosTransaccionLocal;
			processRunnable.jPanelCampos=jPanelCamposTransaccionLocal;
			processRunnable.jPanelPaginacion=jPanelPaginacionTransaccionLocal;
			processRunnable.jPanelAcciones=jPanelAccionesTransaccionLocal;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioTransaccionLocal;
			
			
			processRunnable.jmenuBar=jmenuBarTransaccionLocal;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleTransaccionLocal;
			processRunnable.jTtoolBar=jTtoolBarTransaccionLocal;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleTransaccionLocal;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasTransaccionLocal ,jPanelParametrosReportesTransaccionLocal,jTableDatosTransaccionLocal, /*jScrollPanelDatosTransaccionLocal,*/jPanelCamposTransaccionLocal,jPanelPaginacionTransaccionLocal, /*jScrollPanelDatosEdicionTransaccionLocal,*/ jPanelAccionesTransaccionLocal,jPanelAccionesFormularioTransaccionLocal,jmenuBarTransaccionLocal,jmenuBarDetalleTransaccionLocal,jTtoolBarTransaccionLocal,jTtoolBarDetalleTransaccionLocal);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasTransaccionLocal ,jPanelParametrosReportesTransaccionLocal, jScrollPanelDatosTransaccionLocal,jPanelPaginacionTransaccionLocal, jScrollPanelDatosEdicionTransaccionLocal, jPanelAccionesTransaccionLocal,jPanelAccionesFormularioTransaccionLocal,jmenuBarTransaccionLocal,jmenuBarDetalleTransaccionLocal,jTtoolBarTransaccionLocal,jTtoolBarDetalleTransaccionLocal);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessTransaccionLocal() {// throws Exception 
		this.finishProcessTransaccionLocal(true);
	}
	
	public void finishProcessTransaccionLocal(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasTransaccionLocal ,this.jPanelParametrosReportesTransaccionLocal, this.jScrollPanelDatosTransaccionLocal,this.jPanelPaginacionTransaccionLocal, this.jScrollPanelDatosEdicionTransaccionLocal, this.jPanelAccionesTransaccionLocal,this.jPanelAccionesFormularioTransaccionLocal,this.jmenuBarTransaccionLocal,this.jmenuBarDetalleTransaccionLocal,this.jTtoolBarTransaccionLocal,this.jTtoolBarDetalleTransaccionLocal);		
		
		final JTabbedPane jTabbedPaneBusquedasTransaccionLocal=this.jTabbedPaneBusquedasTransaccionLocal; 
		
		final JPanel jPanelParametrosReportesTransaccionLocal=this.jPanelParametrosReportesTransaccionLocal;
		//final JScrollPane jScrollPanelDatosTransaccionLocal=this.jScrollPanelDatosTransaccionLocal;
		final JTable jTableDatosTransaccionLocal=this.jTableDatosTransaccionLocal;		
		final JPanel jPanelPaginacionTransaccionLocal=this.jPanelPaginacionTransaccionLocal;
		//final JScrollPane jScrollPanelDatosEdicionTransaccionLocal=this.jScrollPanelDatosEdicionTransaccionLocal;
		final JPanel jPanelAccionesTransaccionLocal=this.jPanelAccionesTransaccionLocal;
		
		JPanel jPanelCamposAuxiliarTransaccionLocal=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarTransaccionLocal=new JPanel();
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
			jPanelCamposAuxiliarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jPanelCamposTransaccionLocal;
			jPanelAccionesFormularioAuxiliarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jPanelAccionesFormularioTransaccionLocal;
		}
		
		final JPanel jPanelCamposTransaccionLocal=jPanelCamposAuxiliarTransaccionLocal;
		final JPanel jPanelAccionesFormularioTransaccionLocal=jPanelAccionesFormularioAuxiliarTransaccionLocal;
		
		
		final JMenuBar jmenuBarTransaccionLocal=this.jmenuBarTransaccionLocal;		
		final JToolBar jTtoolBarTransaccionLocal=this.jTtoolBarTransaccionLocal;
				
		JMenuBar jmenuBarDetalleAuxiliarTransaccionLocal=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarTransaccionLocal=new JToolBar();
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
			jmenuBarDetalleAuxiliarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jmenuBarDetalleTransaccionLocal;
			jTtoolBarDetalleAuxiliarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jTtoolBarDetalleTransaccionLocal;		
		}
		
		final JMenuBar jmenuBarDetalleTransaccionLocal=jmenuBarDetalleAuxiliarTransaccionLocal;
		final JToolBar jTtoolBarDetalleTransaccionLocal=jTtoolBarDetalleAuxiliarTransaccionLocal;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasTransaccionLocal;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesTransaccionLocal;
			processRunnable.jTableDatos=jTableDatosTransaccionLocal;
			processRunnable.jPanelCampos=jPanelCamposTransaccionLocal;
			processRunnable.jPanelPaginacion=jPanelPaginacionTransaccionLocal;
			processRunnable.jPanelAcciones=jPanelAccionesTransaccionLocal;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioTransaccionLocal;
			
			
			processRunnable.jmenuBar=jmenuBarTransaccionLocal;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleTransaccionLocal;
			processRunnable.jTtoolBar=jTtoolBarTransaccionLocal;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleTransaccionLocal;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasTransaccionLocal ,jPanelParametrosReportesTransaccionLocal, jTableDatosTransaccionLocal,/*jScrollPanelDatosTransaccionLocal,*/jPanelCamposTransaccionLocal,jPanelPaginacionTransaccionLocal, /*jScrollPanelDatosEdicionTransaccionLocal,*/ jPanelAccionesTransaccionLocal,jPanelAccionesFormularioTransaccionLocal,jmenuBarTransaccionLocal,jmenuBarDetalleTransaccionLocal,jTtoolBarTransaccionLocal,jTtoolBarDetalleTransaccionLocal));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesTransaccionLocal(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarTransaccionLocal(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuTransaccionLocal(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarTransaccionLocal(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarTransaccionLocal,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleTransaccionLocal,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuTransaccionLocal(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarTransaccionLocal,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleTransaccionLocal,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.transaccionlocalConstantesFunciones.getsFinalQueryTransaccionLocal();
		String  finalQueryPaginacionTodos=this.transaccionlocalConstantesFunciones.getsFinalQueryTransaccionLocal();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=TransaccionLocalConstantesFunciones.getArrayColumnasGlobalesNoTransaccionLocal(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=TransaccionLocalConstantesFunciones.getArrayColumnasGlobalesTransaccionLocal(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,TransaccionLocalConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.transaccionlocalsEliminados= new ArrayList<TransaccionLocal>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessTransaccionLocal();
		
				///*TransaccionLocalSessionBean*/this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			
			if(this.transaccionlocalSessionBean==null) {
				this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=TransaccionLocalConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=TransaccionLocalConstantesFunciones.getClassesForeignKeysOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/transaccionlocal."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			transaccionlocalsAux= new ArrayList<TransaccionLocal>();
			
				
			transaccionlocalLogic.setDatosCliente(this.datosCliente);
			transaccionlocalLogic.setDatosDeep(this.datosDeep);
			transaccionlocalLogic.setIsConDeep(true);
			
			
			transaccionlocalLogic.getTransaccionLocalDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					transaccionlocalLogic.getTodosTransaccionLocals(finalQueryGlobal,pagination);
					
					//transaccionlocalLogic.getTodosTransaccionLocalsWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(transaccionlocalLogic.getTransaccionLocals()==null|| transaccionlocalLogic.getTransaccionLocals().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							transaccionlocalsAux= new ArrayList<TransaccionLocal>();
							transaccionlocalsAux.addAll(transaccionlocalLogic.getTransaccionLocals());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocalsAux= new ArrayList<TransaccionLocal>();
							transaccionlocalsAux.addAll(transaccionlocals);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							transaccionlocalLogic.getTodosTransaccionLocals(finalQueryGlobal+"",this.pagination);												
							
							//transaccionlocalLogic.getTodosTransaccionLocalsWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteTransaccionLocals("Todos",transaccionlocalLogic.getTransaccionLocals() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());					
							transaccionlocalLogic.getTransaccionLocals().addAll(transaccionlocalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocals=new ArrayList<TransaccionLocal>();
							transaccionlocals.addAll(transaccionlocalsAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idTransaccionLocal=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idTransaccionLocal=this.idActual;
				
				} else if(this.idTransaccionLocalActual!=null && this.idTransaccionLocalActual!=0L) {
					idTransaccionLocal=idTransaccionLocalActual;
				}
				
					
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndicePorId(idTransaccionLocal);
				
				this.transaccionlocals=new ArrayList<TransaccionLocal>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					transaccionlocalLogic.getEntity(idTransaccionLocal);
					
					//transaccionlocalLogic.getEntityWithConnection(idTransaccionLocal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());
					transaccionlocalLogic.getTransaccionLocals().add(transaccionlocalLogic.getTransaccionLocal());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.transaccionlocals=new ArrayList<TransaccionLocal>();
					this.transaccionlocals.add(transaccionlocal);
				}
				
				if(transaccionlocalLogic.getTransaccionLocal()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdAsientoContable")) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					transaccionlocalLogic.getTransaccionLocalsFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=transaccionlocalLogic.getTransaccionLocals()==null||transaccionlocalLogic.getTransaccionLocals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=transaccionlocals==null|| transaccionlocals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalsAux=new ArrayList<TransaccionLocal>();
						transaccionlocalsAux.addAll(transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocalsAux=new ArrayList<TransaccionLocal>();
							transaccionlocalsAux.addAll(transaccionlocals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							transaccionlocalLogic.getTransaccionLocalsFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTransaccionLocals("FK_IdAsientoContable",transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTransaccionLocals("FK_IdAsientoContable",transaccionlocals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());
						transaccionlocalLogic.getTransaccionLocals().addAll(transaccionlocalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocals=new ArrayList<TransaccionLocal>();
							transaccionlocals.addAll(transaccionlocalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					transaccionlocalLogic.getTransaccionLocalsFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=transaccionlocalLogic.getTransaccionLocals()==null||transaccionlocalLogic.getTransaccionLocals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=transaccionlocals==null|| transaccionlocals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalsAux=new ArrayList<TransaccionLocal>();
						transaccionlocalsAux.addAll(transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocalsAux=new ArrayList<TransaccionLocal>();
							transaccionlocalsAux.addAll(transaccionlocals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							transaccionlocalLogic.getTransaccionLocalsFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTransaccionLocals("FK_IdCliente",transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTransaccionLocals("FK_IdCliente",transaccionlocals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());
						transaccionlocalLogic.getTransaccionLocals().addAll(transaccionlocalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocals=new ArrayList<TransaccionLocal>();
							transaccionlocals.addAll(transaccionlocalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCompra")) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdCompra(id_compraFK_IdCompra);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					transaccionlocalLogic.getTransaccionLocalsFK_IdCompra(finalQueryGlobal,pagination,id_compraFK_IdCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdCompra(id_compraFK_IdCompra);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdCompra(id_compraFK_IdCompra);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=transaccionlocalLogic.getTransaccionLocals()==null||transaccionlocalLogic.getTransaccionLocals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=transaccionlocals==null|| transaccionlocals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalsAux=new ArrayList<TransaccionLocal>();
						transaccionlocalsAux.addAll(transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocalsAux=new ArrayList<TransaccionLocal>();
							transaccionlocalsAux.addAll(transaccionlocals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							transaccionlocalLogic.getTransaccionLocalsFK_IdCompra(finalQueryGlobal,pagination,id_compraFK_IdCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdCompra(id_compraFK_IdCompra);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdCompra(id_compraFK_IdCompra);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTransaccionLocals("FK_IdCompra",transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTransaccionLocals("FK_IdCompra",transaccionlocals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());
						transaccionlocalLogic.getTransaccionLocals().addAll(transaccionlocalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocals=new ArrayList<TransaccionLocal>();
							transaccionlocals.addAll(transaccionlocalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodoDeclara")) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdPeriodoDeclara(id_periodo_declaraFK_IdPeriodoDeclara);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					transaccionlocalLogic.getTransaccionLocalsFK_IdPeriodoDeclara(finalQueryGlobal,pagination,id_periodo_declaraFK_IdPeriodoDeclara);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdPeriodoDeclara(id_periodo_declaraFK_IdPeriodoDeclara);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdPeriodoDeclara(id_periodo_declaraFK_IdPeriodoDeclara);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=transaccionlocalLogic.getTransaccionLocals()==null||transaccionlocalLogic.getTransaccionLocals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=transaccionlocals==null|| transaccionlocals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalsAux=new ArrayList<TransaccionLocal>();
						transaccionlocalsAux.addAll(transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocalsAux=new ArrayList<TransaccionLocal>();
							transaccionlocalsAux.addAll(transaccionlocals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							transaccionlocalLogic.getTransaccionLocalsFK_IdPeriodoDeclara(finalQueryGlobal,pagination,id_periodo_declaraFK_IdPeriodoDeclara);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdPeriodoDeclara(id_periodo_declaraFK_IdPeriodoDeclara);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdPeriodoDeclara(id_periodo_declaraFK_IdPeriodoDeclara);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTransaccionLocals("FK_IdPeriodoDeclara",transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTransaccionLocals("FK_IdPeriodoDeclara",transaccionlocals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());
						transaccionlocalLogic.getTransaccionLocals().addAll(transaccionlocalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocals=new ArrayList<TransaccionLocal>();
							transaccionlocals.addAll(transaccionlocalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoComprobante")) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoComprobante(id_tipo_comprobanteFK_IdTipoComprobante);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					transaccionlocalLogic.getTransaccionLocalsFK_IdTipoComprobante(finalQueryGlobal,pagination,id_tipo_comprobanteFK_IdTipoComprobante);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoComprobante(id_tipo_comprobanteFK_IdTipoComprobante);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoComprobante(id_tipo_comprobanteFK_IdTipoComprobante);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=transaccionlocalLogic.getTransaccionLocals()==null||transaccionlocalLogic.getTransaccionLocals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=transaccionlocals==null|| transaccionlocals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalsAux=new ArrayList<TransaccionLocal>();
						transaccionlocalsAux.addAll(transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocalsAux=new ArrayList<TransaccionLocal>();
							transaccionlocalsAux.addAll(transaccionlocals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							transaccionlocalLogic.getTransaccionLocalsFK_IdTipoComprobante(finalQueryGlobal,pagination,id_tipo_comprobanteFK_IdTipoComprobante);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoComprobante(id_tipo_comprobanteFK_IdTipoComprobante);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoComprobante(id_tipo_comprobanteFK_IdTipoComprobante);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTransaccionLocals("FK_IdTipoComprobante",transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTransaccionLocals("FK_IdTipoComprobante",transaccionlocals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());
						transaccionlocalLogic.getTransaccionLocals().addAll(transaccionlocalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocals=new ArrayList<TransaccionLocal>();
							transaccionlocals.addAll(transaccionlocalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoIva")) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoIva(id_tipo_ivaFK_IdTipoIva);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					transaccionlocalLogic.getTransaccionLocalsFK_IdTipoIva(finalQueryGlobal,pagination,id_tipo_ivaFK_IdTipoIva);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoIva(id_tipo_ivaFK_IdTipoIva);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoIva(id_tipo_ivaFK_IdTipoIva);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=transaccionlocalLogic.getTransaccionLocals()==null||transaccionlocalLogic.getTransaccionLocals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=transaccionlocals==null|| transaccionlocals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalsAux=new ArrayList<TransaccionLocal>();
						transaccionlocalsAux.addAll(transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocalsAux=new ArrayList<TransaccionLocal>();
							transaccionlocalsAux.addAll(transaccionlocals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							transaccionlocalLogic.getTransaccionLocalsFK_IdTipoIva(finalQueryGlobal,pagination,id_tipo_ivaFK_IdTipoIva);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoIva(id_tipo_ivaFK_IdTipoIva);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoIva(id_tipo_ivaFK_IdTipoIva);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTransaccionLocals("FK_IdTipoIva",transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTransaccionLocals("FK_IdTipoIva",transaccionlocals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());
						transaccionlocalLogic.getTransaccionLocals().addAll(transaccionlocalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocals=new ArrayList<TransaccionLocal>();
							transaccionlocals.addAll(transaccionlocalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoRetencionIva")) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIva(id_tipo_retencion_ivaFK_IdTipoRetencionIva);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					transaccionlocalLogic.getTransaccionLocalsFK_IdTipoRetencionIva(finalQueryGlobal,pagination,id_tipo_retencion_ivaFK_IdTipoRetencionIva);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIva(id_tipo_retencion_ivaFK_IdTipoRetencionIva);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIva(id_tipo_retencion_ivaFK_IdTipoRetencionIva);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=transaccionlocalLogic.getTransaccionLocals()==null||transaccionlocalLogic.getTransaccionLocals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=transaccionlocals==null|| transaccionlocals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalsAux=new ArrayList<TransaccionLocal>();
						transaccionlocalsAux.addAll(transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocalsAux=new ArrayList<TransaccionLocal>();
							transaccionlocalsAux.addAll(transaccionlocals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							transaccionlocalLogic.getTransaccionLocalsFK_IdTipoRetencionIva(finalQueryGlobal,pagination,id_tipo_retencion_ivaFK_IdTipoRetencionIva);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIva(id_tipo_retencion_ivaFK_IdTipoRetencionIva);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIva(id_tipo_retencion_ivaFK_IdTipoRetencionIva);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTransaccionLocals("FK_IdTipoRetencionIva",transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTransaccionLocals("FK_IdTipoRetencionIva",transaccionlocals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());
						transaccionlocalLogic.getTransaccionLocals().addAll(transaccionlocalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocals=new ArrayList<TransaccionLocal>();
							transaccionlocals.addAll(transaccionlocalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoRetencionIvaPresta")) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaPresta(id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					transaccionlocalLogic.getTransaccionLocalsFK_IdTipoRetencionIvaPresta(finalQueryGlobal,pagination,id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaPresta(id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaPresta(id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=transaccionlocalLogic.getTransaccionLocals()==null||transaccionlocalLogic.getTransaccionLocals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=transaccionlocals==null|| transaccionlocals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalsAux=new ArrayList<TransaccionLocal>();
						transaccionlocalsAux.addAll(transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocalsAux=new ArrayList<TransaccionLocal>();
							transaccionlocalsAux.addAll(transaccionlocals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							transaccionlocalLogic.getTransaccionLocalsFK_IdTipoRetencionIvaPresta(finalQueryGlobal,pagination,id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaPresta(id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaPresta(id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTransaccionLocals("FK_IdTipoRetencionIvaPresta",transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTransaccionLocals("FK_IdTipoRetencionIvaPresta",transaccionlocals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());
						transaccionlocalLogic.getTransaccionLocals().addAll(transaccionlocalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocals=new ArrayList<TransaccionLocal>();
							transaccionlocals.addAll(transaccionlocalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoTributario")) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoTributario(id_tipo_tributarioFK_IdTipoTributario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					transaccionlocalLogic.getTransaccionLocalsFK_IdTipoTributario(finalQueryGlobal,pagination,id_tipo_tributarioFK_IdTipoTributario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoTributario(id_tipo_tributarioFK_IdTipoTributario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoTributario(id_tipo_tributarioFK_IdTipoTributario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=transaccionlocalLogic.getTransaccionLocals()==null||transaccionlocalLogic.getTransaccionLocals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=transaccionlocals==null|| transaccionlocals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalsAux=new ArrayList<TransaccionLocal>();
						transaccionlocalsAux.addAll(transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocalsAux=new ArrayList<TransaccionLocal>();
							transaccionlocalsAux.addAll(transaccionlocals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							transaccionlocalLogic.getTransaccionLocalsFK_IdTipoTributario(finalQueryGlobal,pagination,id_tipo_tributarioFK_IdTipoTributario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoTributario(id_tipo_tributarioFK_IdTipoTributario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTipoTributario(id_tipo_tributarioFK_IdTipoTributario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTransaccionLocals("FK_IdTipoTributario",transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTransaccionLocals("FK_IdTipoTributario",transaccionlocals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());
						transaccionlocalLogic.getTransaccionLocals().addAll(transaccionlocalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocals=new ArrayList<TransaccionLocal>();
							transaccionlocals.addAll(transaccionlocalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionConta")) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTransaccionConta(id_transaccion_contaFK_IdTransaccionConta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					transaccionlocalLogic.getTransaccionLocalsFK_IdTransaccionConta(finalQueryGlobal,pagination,id_transaccion_contaFK_IdTransaccionConta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTransaccionConta(id_transaccion_contaFK_IdTransaccionConta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTransaccionConta(id_transaccion_contaFK_IdTransaccionConta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=transaccionlocalLogic.getTransaccionLocals()==null||transaccionlocalLogic.getTransaccionLocals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=transaccionlocals==null|| transaccionlocals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalsAux=new ArrayList<TransaccionLocal>();
						transaccionlocalsAux.addAll(transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocalsAux=new ArrayList<TransaccionLocal>();
							transaccionlocalsAux.addAll(transaccionlocals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							transaccionlocalLogic.getTransaccionLocalsFK_IdTransaccionConta(finalQueryGlobal,pagination,id_transaccion_contaFK_IdTransaccionConta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTransaccionConta(id_transaccion_contaFK_IdTransaccionConta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TransaccionLocalConstantesFunciones.getDetalleIndiceFK_IdTransaccionConta(id_transaccion_contaFK_IdTransaccionConta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTransaccionLocals("FK_IdTransaccionConta",transaccionlocalLogic.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTransaccionLocals("FK_IdTransaccionConta",transaccionlocals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());
						transaccionlocalLogic.getTransaccionLocals().addAll(transaccionlocalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocals=new ArrayList<TransaccionLocal>();
							transaccionlocals.addAll(transaccionlocalsAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesTransaccionLocal();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessTransaccionLocal();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=transaccionlocalLogic.getTransaccionLocals().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=transaccionlocals.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=transaccionlocalLogic.getTransaccionLocals().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=transaccionlocals.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(TransaccionLocal transaccionlocal) {
		Boolean permite=true;
		
		if(this.transaccionlocal.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=TransaccionLocalConstantesFunciones.getOrderByListaTransaccionLocal();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=TransaccionLocalConstantesFunciones.getOrderByListaTransaccionLocal();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TransaccionLocal transaccionlocal:transaccionlocalLogic.getTransaccionLocals()) {
				if(transaccionlocal.getsType().equals(Constantes2.S_TOTALES)) {
					transaccionlocalTotales=transaccionlocal;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TransaccionLocal transaccionlocal:this.transaccionlocals) {
				if(transaccionlocal.getsType().equals(Constantes2.S_TOTALES)) {
					transaccionlocalTotales=transaccionlocal;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.transaccionlocalAux=new TransaccionLocal();
			this.transaccionlocalAux.setsType(Constantes2.S_TOTALES);
			this.transaccionlocalAux.setIsNew(false);
			this.transaccionlocalAux.setIsChanged(false);
			this.transaccionlocalAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				TransaccionLocalConstantesFunciones.TotalizarValoresFilaTransaccionLocal(this.transaccionlocalLogic.getTransaccionLocals(),this.transaccionlocalAux);
				
				this.transaccionlocalLogic.getTransaccionLocals().add(this.transaccionlocalAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				TransaccionLocalConstantesFunciones.TotalizarValoresFilaTransaccionLocal(this.transaccionlocals,this.transaccionlocalAux);
				
				this.transaccionlocals.add(this.transaccionlocalAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		transaccionlocalTotales=new TransaccionLocal();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.transaccionlocalLogic.getTransaccionLocals().remove(transaccionlocalTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.transaccionlocals.remove(transaccionlocalTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		transaccionlocalTotales=new TransaccionLocal();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TransaccionLocal transaccionlocal:transaccionlocalLogic.getTransaccionLocals()) {
				if(transaccionlocal.getsType().equals(Constantes2.S_TOTALES)) {
					transaccionlocalTotales=transaccionlocal;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				TransaccionLocalConstantesFunciones.TotalizarValoresFilaTransaccionLocal(this.transaccionlocalLogic.getTransaccionLocals(),transaccionlocalTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TransaccionLocal transaccionlocal:this.transaccionlocals) {
				if(transaccionlocal.getsType().equals(Constantes2.S_TOTALES)) {
					transaccionlocalTotales=transaccionlocal;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				TransaccionLocalConstantesFunciones.TotalizarValoresFilaTransaccionLocal(this.transaccionlocals,transaccionlocalTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getTransaccionLocalsFK_IdAsientoContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdAsientoContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTransaccionLocalsFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTransaccionLocalsFK_IdCompra()throws Exception {
		try {
			sAccionBusqueda="FK_IdCompra";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTransaccionLocalsFK_IdPeriodoDeclara()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodoDeclara";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTransaccionLocalsFK_IdTipoComprobante()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoComprobante";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTransaccionLocalsFK_IdTipoIva()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoIva";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTransaccionLocalsFK_IdTipoRetencionIva()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoRetencionIva";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTransaccionLocalsFK_IdTipoRetencionIvaPresta()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoRetencionIvaPresta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTransaccionLocalsFK_IdTipoTributario()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoTributario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTransaccionLocalsFK_IdTransaccionConta()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionConta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getTransaccionLocalsFK_IdAsientoContable(String sFinalQuery,Long id_asiento_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionlocalLogic.getTransaccionLocalsFK_IdAsientoContable(sFinalQuery,this.pagination,id_asiento_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTransaccionLocalsFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionlocalLogic.getTransaccionLocalsFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTransaccionLocalsFK_IdCompra(String sFinalQuery,Long id_compra)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionlocalLogic.getTransaccionLocalsFK_IdCompra(sFinalQuery,this.pagination,id_compra);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTransaccionLocalsFK_IdPeriodoDeclara(String sFinalQuery,Long id_periodo_declara)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionlocalLogic.getTransaccionLocalsFK_IdPeriodoDeclara(sFinalQuery,this.pagination,id_periodo_declara);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTransaccionLocalsFK_IdTipoComprobante(String sFinalQuery,Long id_tipo_comprobante)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionlocalLogic.getTransaccionLocalsFK_IdTipoComprobante(sFinalQuery,this.pagination,id_tipo_comprobante);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTransaccionLocalsFK_IdTipoIva(String sFinalQuery,Long id_tipo_iva)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionlocalLogic.getTransaccionLocalsFK_IdTipoIva(sFinalQuery,this.pagination,id_tipo_iva);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTransaccionLocalsFK_IdTipoRetencionIva(String sFinalQuery,Long id_tipo_retencion_iva)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionlocalLogic.getTransaccionLocalsFK_IdTipoRetencionIva(sFinalQuery,this.pagination,id_tipo_retencion_iva);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTransaccionLocalsFK_IdTipoRetencionIvaPresta(String sFinalQuery,Long id_tipo_retencion_iva_presta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionlocalLogic.getTransaccionLocalsFK_IdTipoRetencionIvaPresta(sFinalQuery,this.pagination,id_tipo_retencion_iva_presta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTransaccionLocalsFK_IdTipoTributario(String sFinalQuery,Long id_tipo_tributario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionlocalLogic.getTransaccionLocalsFK_IdTipoTributario(sFinalQuery,this.pagination,id_tipo_tributario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTransaccionLocalsFK_IdTransaccionConta(String sFinalQuery,Long id_transaccion_conta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionlocalLogic.getTransaccionLocalsFK_IdTransaccionConta(sFinalQuery,this.pagination,id_transaccion_conta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosTransaccionLocal() {
		this.isPermisoTodoTransaccionLocal=false;
		this.isPermisoNuevoTransaccionLocal=false;
		this.isPermisoActualizarTransaccionLocal=false;
		this.isPermisoActualizarOriginalTransaccionLocal=false;
		this.isPermisoEliminarTransaccionLocal=false;
		this.isPermisoGuardarCambiosTransaccionLocal=false;
		this.isPermisoConsultaTransaccionLocal=false;
		this.isPermisoBusquedaTransaccionLocal=false;
		this.isPermisoReporteTransaccionLocal=false;		
		this.isPermisoOrdenTransaccionLocal=false;		
		this.isPermisoPaginacionMedioTransaccionLocal=false;		
		this.isPermisoPaginacionAltoTransaccionLocal=false;
		this.isPermisoPaginacionTodoTransaccionLocal=false;
		this.isPermisoCopiarTransaccionLocal=false;		
		this.isPermisoVerFormTransaccionLocal=false;		
		this.isPermisoDuplicarTransaccionLocal=false;		
		this.isPermisoOrdenTransaccionLocal=false;		
	}
	
	public void setPermisosUsuarioTransaccionLocal(Boolean isPermiso) {
		this.isPermisoTodoTransaccionLocal=isPermiso;
		this.isPermisoNuevoTransaccionLocal=isPermiso;
		this.isPermisoActualizarTransaccionLocal=isPermiso;
		this.isPermisoActualizarOriginalTransaccionLocal=isPermiso;
		this.isPermisoEliminarTransaccionLocal=isPermiso;
		this.isPermisoGuardarCambiosTransaccionLocal=isPermiso;
		this.isPermisoConsultaTransaccionLocal=isPermiso;
		this.isPermisoBusquedaTransaccionLocal=isPermiso;
		this.isPermisoReporteTransaccionLocal=isPermiso;
		this.isPermisoOrdenTransaccionLocal=isPermiso;		
		this.isPermisoPaginacionMedioTransaccionLocal=isPermiso;		
		this.isPermisoPaginacionAltoTransaccionLocal=isPermiso;		
		this.isPermisoPaginacionTodoTransaccionLocal=isPermiso;		
		this.isPermisoCopiarTransaccionLocal=isPermiso;		
		this.isPermisoVerFormTransaccionLocal=isPermiso;		
		this.isPermisoDuplicarTransaccionLocal=isPermiso;
		this.isPermisoOrdenTransaccionLocal=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioTransaccionLocal(Boolean isPermiso) {
		//this.isPermisoTodoTransaccionLocal=isPermiso;
		this.isPermisoNuevoTransaccionLocal=isPermiso;
		this.isPermisoActualizarTransaccionLocal=isPermiso;
		this.isPermisoActualizarOriginalTransaccionLocal=isPermiso;
		this.isPermisoEliminarTransaccionLocal=isPermiso;
		this.isPermisoGuardarCambiosTransaccionLocal=isPermiso;
		//this.isPermisoConsultaTransaccionLocal=isPermiso;
		//this.isPermisoBusquedaTransaccionLocal=isPermiso;
		//this.isPermisoReporteTransaccionLocal=isPermiso;
		//this.isPermisoOrdenTransaccionLocal=isPermiso;		
		//this.isPermisoPaginacionMedioTransaccionLocal=isPermiso;		
		//this.isPermisoPaginacionAltoTransaccionLocal=isPermiso;		
		//this.isPermisoPaginacionTodoTransaccionLocal=isPermiso;		
		//this.isPermisoCopiarTransaccionLocal=isPermiso;		
		//this.isPermisoDuplicarTransaccionLocal=isPermiso;
		//this.isPermisoOrdenTransaccionLocal=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioTransaccionLocalClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(TransaccionLocalJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebTransaccionLocal(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioTransaccionLocalClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioTransaccionLocalClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionTransaccionLocalClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioTransaccionLocalClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioTransaccionLocal() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(TransaccionLocalJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, TransaccionLocalConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoTransaccionLocal=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarTransaccionLocal=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalTransaccionLocal=this.isPermisoActualizarTransaccionLocal;
			this.isPermisoEliminarTransaccionLocal=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosTransaccionLocal=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaTransaccionLocal=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaTransaccionLocal=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoTransaccionLocal=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteTransaccionLocal=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenTransaccionLocal=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioTransaccionLocal=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoTransaccionLocal=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoTransaccionLocal=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarTransaccionLocal=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormTransaccionLocal=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarTransaccionLocal=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenTransaccionLocal=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosTransaccionLocal.setToolTipText(this.jTableDatosTransaccionLocal.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioTransaccionLocal(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioTransaccionLocal(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(TransaccionLocalJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(TransaccionLocalJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioTransaccionLocal() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyTransaccionLocalListas()throws Exception {
		try	{						
			
				this.comprasForeignKey=new ArrayList();
				this.periododeclarasForeignKey=new ArrayList();
				this.transaccioncontasForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.tipocomprobantesForeignKey=new ArrayList();
				this.tipotributariosForeignKey=new ArrayList();
				this.asientocontablesForeignKey=new ArrayList();
				this.tipoivasForeignKey=new ArrayList();
				this.tiporetencionivasForeignKey=new ArrayList();
				this.tiporetencionivaprestasForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyTransaccionLocalListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(TransaccionLocalJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyTransaccionLocalListas(false);
			} else {
			
				this.cargarCombosForeignKeyCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoDeclaraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionContaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoComprobanteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoTributarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoIvaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoRetencionIvaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoRetencionIvaPrestaListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyCompraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.comprasForeignKey==null||this.comprasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CompraConstantesFunciones.getArrayColumnasGlobalesCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CompraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CompraConstantesFunciones.SFINALQUERY;

				this.cargarCombosComprasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoDeclaraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periododeclarasForeignKey==null||this.periododeclarasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoDeclaraConstantesFunciones.getArrayColumnasGlobalesPeriodoDeclara(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoDeclaraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoDeclaraConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodoDeclarasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionContaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccioncontasForeignKey==null||this.transaccioncontasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionContaConstantesFunciones.getArrayColumnasGlobalesTransaccionConta(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionContaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionContaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionContasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoComprobanteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocomprobantesForeignKey==null||this.tipocomprobantesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoComprobanteConstantesFunciones.getArrayColumnasGlobalesTipoComprobante(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoComprobanteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoComprobanteConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoComprobantesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTributarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipotributariosForeignKey==null||this.tipotributariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoTributarioConstantesFunciones.getArrayColumnasGlobalesTipoTributario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoTributarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoTributarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoTributariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AsientoContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoIvaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoivasForeignKey==null||this.tipoivasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoIvaConstantesFunciones.getArrayColumnasGlobalesTipoIva(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoIvaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoIvaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoIvasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencionIvaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tiporetencionivasForeignKey==null||this.tiporetencionivasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoRetencionIvaConstantesFunciones.getArrayColumnasGlobalesTipoRetencionIva(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRetencionIvaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoRetencionIvaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoRetencionIvasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencionIvaPrestaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tiporetencionivaprestasForeignKey==null||this.tiporetencionivaprestasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoRetencionIvaConstantesFunciones.getArrayColumnasGlobalesTipoRetencionIva(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRetencionIvaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoRetencionIvaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoRetencionIvaPrestasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyTransaccionLocalListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			TransaccionLocalParameterReturnGeneral transaccionlocalReturnGeneral=new TransaccionLocalParameterReturnGeneral();
						
			


				String finalQueryGlobalCompra="";

				if(((this.comprasForeignKey==null||this.comprasForeignKey.size()<=0) && this.transaccionlocalConstantesFunciones.cargarid_compraTransaccionLocal)
					 || (this.esRecargarFks && this.transaccionlocalConstantesFunciones.cargarid_compraTransaccionLocal)) {

					if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionCompra()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CompraConstantesFunciones.getArrayColumnasGlobalesCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCompra=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CompraConstantesFunciones.TABLENAME);

						finalQueryGlobalCompra=Funciones.GetFinalQueryAppend(finalQueryGlobalCompra, "");
						finalQueryGlobalCompra+=CompraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosComprasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCompra=" WHERE " + ConstantesSql.ID + "="+transaccionlocalSessionBean.getlidCompraActual();
					}
				} else {
					finalQueryGlobalCompra="NONE";
				}


				String finalQueryGlobalPeriodoDeclara="";

				if(((this.periododeclarasForeignKey==null||this.periododeclarasForeignKey.size()<=0) && this.transaccionlocalConstantesFunciones.cargarid_periodo_declaraTransaccionLocal)
					 || (this.esRecargarFks && this.transaccionlocalConstantesFunciones.cargarid_periodo_declaraTransaccionLocal)) {

					if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionPeriodoDeclara()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoDeclaraConstantesFunciones.getArrayColumnasGlobalesPeriodoDeclara(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodoDeclara=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoDeclaraConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodoDeclara=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodoDeclara, "");
						finalQueryGlobalPeriodoDeclara+=PeriodoDeclaraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodoDeclarasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodoDeclara=" WHERE " + ConstantesSql.ID + "="+transaccionlocalSessionBean.getlidPeriodoDeclaraActual();
					}
				} else {
					finalQueryGlobalPeriodoDeclara="NONE";
				}


				String finalQueryGlobalTransaccionConta="";

				if(((this.transaccioncontasForeignKey==null||this.transaccioncontasForeignKey.size()<=0) && this.transaccionlocalConstantesFunciones.cargarid_transaccion_contaTransaccionLocal)
					 || (this.esRecargarFks && this.transaccionlocalConstantesFunciones.cargarid_transaccion_contaTransaccionLocal)) {

					if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionConta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionContaConstantesFunciones.getArrayColumnasGlobalesTransaccionConta(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionConta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionContaConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionConta=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionConta, "");
						finalQueryGlobalTransaccionConta+=TransaccionContaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionContasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionConta=" WHERE " + ConstantesSql.ID + "="+transaccionlocalSessionBean.getlidTransaccionContaActual();
					}
				} else {
					finalQueryGlobalTransaccionConta="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.transaccionlocalConstantesFunciones.cargarid_clienteTransaccionLocal)
					 || (this.esRecargarFks && this.transaccionlocalConstantesFunciones.cargarid_clienteTransaccionLocal)) {

					if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+transaccionlocalSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalTipoComprobante="";

				if(((this.tipocomprobantesForeignKey==null||this.tipocomprobantesForeignKey.size()<=0) && this.transaccionlocalConstantesFunciones.cargarid_tipo_comprobanteTransaccionLocal)
					 || (this.esRecargarFks && this.transaccionlocalConstantesFunciones.cargarid_tipo_comprobanteTransaccionLocal)) {

					if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoComprobante()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoComprobanteConstantesFunciones.getArrayColumnasGlobalesTipoComprobante(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoComprobante=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoComprobanteConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoComprobante=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoComprobante, "");
						finalQueryGlobalTipoComprobante+=TipoComprobanteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoComprobantesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoComprobante=" WHERE " + ConstantesSql.ID + "="+transaccionlocalSessionBean.getlidTipoComprobanteActual();
					}
				} else {
					finalQueryGlobalTipoComprobante="NONE";
				}


				String finalQueryGlobalTipoTributario="";

				if(((this.tipotributariosForeignKey==null||this.tipotributariosForeignKey.size()<=0) && this.transaccionlocalConstantesFunciones.cargarid_tipo_tributarioTransaccionLocal)
					 || (this.esRecargarFks && this.transaccionlocalConstantesFunciones.cargarid_tipo_tributarioTransaccionLocal)) {

					if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoTributario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoTributarioConstantesFunciones.getArrayColumnasGlobalesTipoTributario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoTributario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoTributarioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoTributario=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoTributario, "");
						finalQueryGlobalTipoTributario+=TipoTributarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoTributariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoTributario=" WHERE " + ConstantesSql.ID + "="+transaccionlocalSessionBean.getlidTipoTributarioActual();
					}
				} else {
					finalQueryGlobalTipoTributario="NONE";
				}


				String finalQueryGlobalAsientoContable="";

				if(((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0) && this.transaccionlocalConstantesFunciones.cargarid_asiento_contableTransaccionLocal)
					 || (this.esRecargarFks && this.transaccionlocalConstantesFunciones.cargarid_asiento_contableTransaccionLocal)) {

					if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAsientoContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

						finalQueryGlobalAsientoContable=Funciones.GetFinalQueryAppend(finalQueryGlobalAsientoContable, "");
						finalQueryGlobalAsientoContable+=AsientoContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAsientoContable=" WHERE " + ConstantesSql.ID + "="+transaccionlocalSessionBean.getlidAsientoContableActual();
					}
				} else {
					finalQueryGlobalAsientoContable="NONE";
				}


				String finalQueryGlobalTipoIva="";

				if(((this.tipoivasForeignKey==null||this.tipoivasForeignKey.size()<=0) && this.transaccionlocalConstantesFunciones.cargarid_tipo_ivaTransaccionLocal)
					 || (this.esRecargarFks && this.transaccionlocalConstantesFunciones.cargarid_tipo_ivaTransaccionLocal)) {

					if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoIva()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoIvaConstantesFunciones.getArrayColumnasGlobalesTipoIva(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoIva=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoIvaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoIva=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoIva, "");
						finalQueryGlobalTipoIva+=TipoIvaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoIvasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoIva=" WHERE " + ConstantesSql.ID + "="+transaccionlocalSessionBean.getlidTipoIvaActual();
					}
				} else {
					finalQueryGlobalTipoIva="NONE";
				}


				String finalQueryGlobalTipoRetencionIva="";

				if(((this.tiporetencionivasForeignKey==null||this.tiporetencionivasForeignKey.size()<=0) && this.transaccionlocalConstantesFunciones.cargarid_tipo_retencion_ivaTransaccionLocal)
					 || (this.esRecargarFks && this.transaccionlocalConstantesFunciones.cargarid_tipo_retencion_ivaTransaccionLocal)) {

					if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIva()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoRetencionIvaConstantesFunciones.getArrayColumnasGlobalesTipoRetencionIva(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoRetencionIva=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRetencionIvaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoRetencionIva=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoRetencionIva, "");
						finalQueryGlobalTipoRetencionIva+=TipoRetencionIvaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoRetencionIvasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoRetencionIva=" WHERE " + ConstantesSql.ID + "="+transaccionlocalSessionBean.getlidTipoRetencionIvaActual();
					}
				} else {
					finalQueryGlobalTipoRetencionIva="NONE";
				}


				String finalQueryGlobalTipoRetencionIvaPresta="";

				if(((this.tiporetencionivaprestasForeignKey==null||this.tiporetencionivaprestasForeignKey.size()<=0) && this.transaccionlocalConstantesFunciones.cargarid_tipo_retencion_iva_prestaTransaccionLocal)
					 || (this.esRecargarFks && this.transaccionlocalConstantesFunciones.cargarid_tipo_retencion_iva_prestaTransaccionLocal)) {

					if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIvaPresta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoRetencionIvaConstantesFunciones.getArrayColumnasGlobalesTipoRetencionIva(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoRetencionIvaPresta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRetencionIvaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoRetencionIvaPresta=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoRetencionIvaPresta, "");
						finalQueryGlobalTipoRetencionIvaPresta+=TipoRetencionIvaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoRetencionIvaPrestasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoRetencionIvaPresta=" WHERE " + ConstantesSql.ID + "="+transaccionlocalSessionBean.getlidTipoRetencionIvaPrestaActual();
					}
				} else {
					finalQueryGlobalTipoRetencionIvaPresta="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				transaccionlocalReturnGeneral=transaccionlocalLogic.cargarCombosLoteForeignKeyTransaccionLocal(finalQueryGlobalCompra,finalQueryGlobalPeriodoDeclara,finalQueryGlobalTransaccionConta,finalQueryGlobalCliente,finalQueryGlobalTipoComprobante,finalQueryGlobalTipoTributario,finalQueryGlobalAsientoContable,finalQueryGlobalTipoIva,finalQueryGlobalTipoRetencionIva,finalQueryGlobalTipoRetencionIvaPresta);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalCompra.equals("NONE")) {
				this.comprasForeignKey=transaccionlocalReturnGeneral.getcomprasForeignKey();
			}

			if(!finalQueryGlobalPeriodoDeclara.equals("NONE")) {
				this.periododeclarasForeignKey=transaccionlocalReturnGeneral.getperiododeclarasForeignKey();
			}

			if(!finalQueryGlobalTransaccionConta.equals("NONE")) {
				this.transaccioncontasForeignKey=transaccionlocalReturnGeneral.gettransaccioncontasForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=transaccionlocalReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalTipoComprobante.equals("NONE")) {
				this.tipocomprobantesForeignKey=transaccionlocalReturnGeneral.gettipocomprobantesForeignKey();
			}

			if(!finalQueryGlobalTipoTributario.equals("NONE")) {
				this.tipotributariosForeignKey=transaccionlocalReturnGeneral.gettipotributariosForeignKey();
			}

			if(!finalQueryGlobalAsientoContable.equals("NONE")) {
				this.asientocontablesForeignKey=transaccionlocalReturnGeneral.getasientocontablesForeignKey();
			}

			if(!finalQueryGlobalTipoIva.equals("NONE")) {
				this.tipoivasForeignKey=transaccionlocalReturnGeneral.gettipoivasForeignKey();
			}

			if(!finalQueryGlobalTipoRetencionIva.equals("NONE")) {
				this.tiporetencionivasForeignKey=transaccionlocalReturnGeneral.gettiporetencionivasForeignKey();
			}

			if(!finalQueryGlobalTipoRetencionIvaPresta.equals("NONE")) {
				this.tiporetencionivaprestasForeignKey=transaccionlocalReturnGeneral.gettiporetencionivaprestasForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyTransaccionLocal()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyCompra();
			this.addItemDefectoCombosForeignKeyPeriodoDeclara();
			this.addItemDefectoCombosForeignKeyTransaccionConta();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyTipoComprobante();
			this.addItemDefectoCombosForeignKeyTipoTributario();
			this.addItemDefectoCombosForeignKeyAsientoContable();
			this.addItemDefectoCombosForeignKeyTipoIva();
			this.addItemDefectoCombosForeignKeyTipoRetencionIva();
			this.addItemDefectoCombosForeignKeyTipoRetencionIvaPresta();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyCompra()throws Exception {
		try {
			if(this.transaccionlocalSessionBean==null) {
				this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionCompra()) {
				Compra compra=new Compra();
				CompraConstantesFunciones.setCompraDescripcion(compra,Constantes.SMENSAJE_ESCOJA_OPCION);
				compra.setId(null);

				if(!CompraConstantesFunciones.ExisteEnLista(this.comprasForeignKey,compra,true)) {

					this.comprasForeignKey.add(0,compra);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodoDeclara()throws Exception {
		try {

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionPeriodoDeclara()) {
				PeriodoDeclara periododeclara=new PeriodoDeclara();
				PeriodoDeclaraConstantesFunciones.setPeriodoDeclaraDescripcion(periododeclara,Constantes.SMENSAJE_ESCOJA_OPCION);
				periododeclara.setId(null);

				if(!PeriodoDeclaraConstantesFunciones.ExisteEnLista(this.periododeclarasForeignKey,periododeclara,true)) {

					this.periododeclarasForeignKey.add(0,periododeclara);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionConta()throws Exception {
		try {

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionConta()) {
				TransaccionConta transaccionconta=new TransaccionConta();
				TransaccionContaConstantesFunciones.setTransaccionContaDescripcion(transaccionconta,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccionconta.setId(null);

				if(!TransaccionContaConstantesFunciones.ExisteEnLista(this.transaccioncontasForeignKey,transaccionconta,true)) {

					this.transaccioncontasForeignKey.add(0,transaccionconta);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoComprobante()throws Exception {
		try {

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoComprobante()) {
				TipoComprobante tipocomprobante=new TipoComprobante();
				TipoComprobanteConstantesFunciones.setTipoComprobanteDescripcion(tipocomprobante,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocomprobante.setId(null);

				if(!TipoComprobanteConstantesFunciones.ExisteEnLista(this.tipocomprobantesForeignKey,tipocomprobante,true)) {

					this.tipocomprobantesForeignKey.add(0,tipocomprobante);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoTributario()throws Exception {
		try {

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoTributario()) {
				TipoTributario tipotributario=new TipoTributario();
				TipoTributarioConstantesFunciones.setTipoTributarioDescripcion(tipotributario,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipotributario.setId(null);

				if(!TipoTributarioConstantesFunciones.ExisteEnLista(this.tipotributariosForeignKey,tipotributario,true)) {

					this.tipotributariosForeignKey.add(0,tipotributario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAsientoContable()throws Exception {
		try {

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				AsientoContable asientocontable=new AsientoContable();
				AsientoContableConstantesFunciones.setAsientoContableDescripcion(asientocontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				asientocontable.setId(null);

				if(!AsientoContableConstantesFunciones.ExisteEnLista(this.asientocontablesForeignKey,asientocontable,true)) {

					this.asientocontablesForeignKey.add(0,asientocontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoIva()throws Exception {
		try {

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoIva()) {
				TipoIva tipoiva=new TipoIva();
				TipoIvaConstantesFunciones.setTipoIvaDescripcion(tipoiva,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoiva.setId(null);

				if(!TipoIvaConstantesFunciones.ExisteEnLista(this.tipoivasForeignKey,tipoiva,true)) {

					this.tipoivasForeignKey.add(0,tipoiva);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoRetencionIva()throws Exception {
		try {

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIva()) {
				TipoRetencionIva tiporetencioniva=new TipoRetencionIva();
				TipoRetencionIvaConstantesFunciones.setTipoRetencionIvaDescripcion(tiporetencioniva,Constantes.SMENSAJE_ESCOJA_OPCION);
				tiporetencioniva.setId(null);

				if(!TipoRetencionIvaConstantesFunciones.ExisteEnLista(this.tiporetencionivasForeignKey,tiporetencioniva,true)) {

					this.tiporetencionivasForeignKey.add(0,tiporetencioniva);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoRetencionIvaPresta()throws Exception {
		try {

			if(!this.transaccionlocalSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIvaPresta()) {
				TipoRetencionIva tiporetencionivapresta=new TipoRetencionIva();
				TipoRetencionIvaConstantesFunciones.setTipoRetencionIvaDescripcion(tiporetencionivapresta,Constantes.SMENSAJE_ESCOJA_OPCION);
				tiporetencionivapresta.setId(null);

				if(!TipoRetencionIvaConstantesFunciones.ExisteEnLista(this.tiporetencionivaprestasForeignKey,tiporetencionivapresta,true)) {

					this.tiporetencionivaprestasForeignKey.add(0,tiporetencionivapresta);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyTransaccionLocal()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyTipoIva("Todos");
			this.initActionsCombosForeignKeyTipoRetencionIva("Todos");
			this.initActionsCombosForeignKeyTipoRetencionIvaPresta("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyTransaccionLocal(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyTipoIva(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyTipoRetencionIva(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyTipoRetencionIvaPresta(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyTipoIva(JComboBox jComboBoxTipoIvaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			TipoIva tipoivaLocal=(TipoIva)jComboBoxTipoIvaGenerico.getSelectedItem();

			if(tipoivaLocal!=null  && tipoivaLocal.getId()!=null  && tipoivaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_tipo_iva="+tipoivaLocal.getId();
			}
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyTipoRetencionIva(JComboBox jComboBoxTipoRetencionIvaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			TipoRetencionIva tiporetencionivaLocal=(TipoRetencionIva)jComboBoxTipoRetencionIvaGenerico.getSelectedItem();

			if(tiporetencionivaLocal!=null  && tiporetencionivaLocal.getId()!=null  && tiporetencionivaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_tipo_retencion_iva="+tiporetencionivaLocal.getId();
			}
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyTipoRetencionIvaPresta(JComboBox jComboBoxTipoRetencionIvaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			TipoRetencionIva tiporetencionivaLocal=(TipoRetencionIva)jComboBoxTipoRetencionIvaGenerico.getSelectedItem();

			if(tiporetencionivaLocal!=null  && tiporetencionivaLocal.getId()!=null  && tiporetencionivaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_tipo_retencion_iva_presta="+tiporetencionivaLocal.getId();
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyTipoIva(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.addItemListener(new ComboBoxItemListener(this,"id_tipo_ivaTransaccionLocal"));
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.addFocusListener(new ComboBoxFocusListener(this,"id_tipo_ivaTransaccionLocal"));
					}
				} else {
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.addActionListener(new ComboBoxActionListener(this,"id_tipo_ivaTransaccionLocal"));
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.addFocusListener(new ComboBoxFocusListener(this,"id_tipo_ivaTransaccionLocal"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal"));

						this.jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal"));

					} else {
						this.jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal"));

						this.jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyTipoRetencionIva(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.addItemListener(new ComboBoxItemListener(this,"id_tipo_retencion_ivaTransaccionLocal"));
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.addFocusListener(new ComboBoxFocusListener(this,"id_tipo_retencion_ivaTransaccionLocal"));
					}
				} else {
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.addActionListener(new ComboBoxActionListener(this,"id_tipo_retencion_ivaTransaccionLocal"));
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.addFocusListener(new ComboBoxFocusListener(this,"id_tipo_retencion_ivaTransaccionLocal"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal"));

						this.jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal"));

					} else {
						this.jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal"));

						this.jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyTipoRetencionIvaPresta(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.addItemListener(new ComboBoxItemListener(this,"id_tipo_retencion_iva_prestaTransaccionLocal"));
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.addFocusListener(new ComboBoxFocusListener(this,"id_tipo_retencion_iva_prestaTransaccionLocal"));
					}
				} else {
					if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.addActionListener(new ComboBoxActionListener(this,"id_tipo_retencion_iva_prestaTransaccionLocal"));
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.addFocusListener(new ComboBoxFocusListener(this,"id_tipo_retencion_iva_prestaTransaccionLocal"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal"));

						this.jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal"));

					} else {
						this.jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal"));

						this.jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyTransaccionLocal()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
			
			
				this.transaccionlocal.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
				this.transaccionlocal.setfecha_registro_contable(this.parametroGeneralUsuario.getfecha_sistema());
				this.transaccionlocal.setfecha_caducidad(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyTransaccionLocal();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyTransaccionLocal(TransaccionLocal transaccionlocal)throws Exception {	
		try {
			
			this.setActualCompraForeignKey(transaccionlocal.getid_compra(),false,"Formulario");
			this.setActualPeriodoDeclaraForeignKey(transaccionlocal.getid_periodo_declara(),false,"Formulario");
			this.setActualTransaccionContaForeignKey(transaccionlocal.getid_transaccion_conta(),false,"Formulario");
			this.setActualClienteForeignKey(transaccionlocal.getid_cliente(),false,"Formulario");
			this.setActualTipoComprobanteForeignKey(transaccionlocal.getid_tipo_comprobante(),false,"Formulario");
			this.setActualTipoTributarioForeignKey(transaccionlocal.getid_tipo_tributario(),false,"Formulario");
			this.setActualAsientoContableForeignKey(transaccionlocal.getid_asiento_contable(),false,"Formulario");
			this.setActualTipoIvaForeignKey(transaccionlocal.getid_tipo_iva(),false,"Formulario");
			this.setActualTipoRetencionIvaForeignKey(transaccionlocal.getid_tipo_retencion_iva(),false,"Formulario");
			this.setActualTipoRetencionIvaPrestaForeignKey(transaccionlocal.getid_tipo_retencion_iva_presta(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyTransaccionLocal(TransaccionLocal transaccionlocal,String sTipoEvento)throws Exception {	
		try {
			
			

				if(transaccionlocal.getCliente()!=null && !sTipoEvento.equals("id_clienteTransaccionLocal")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(transaccionlocal.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(transaccionlocal.getAsientoContable()!=null && !sTipoEvento.equals("id_asiento_contableTransaccionLocal")) { //sTipoEvento Evita Bucle Infinito

					this.asientocontablesForeignKey=new ArrayList<AsientoContable>();
					this.asientocontablesForeignKey.add(transaccionlocal.getAsientoContable());

					this.addItemDefectoCombosForeignKeyAsientoContable();
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyTransaccionLocal()throws Exception {	
		try {
			
			this.setActualCompraForeignKey(this.transaccionlocalConstantesFunciones.getid_compra(),false,"Formulario");
			this.setActualPeriodoDeclaraForeignKey(this.transaccionlocalConstantesFunciones.getid_periodo_declara(),false,"Formulario");
			this.setActualTransaccionContaForeignKey(this.transaccionlocalConstantesFunciones.getid_transaccion_conta(),false,"Formulario");
			this.setActualClienteForeignKey(this.transaccionlocalConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualTipoComprobanteForeignKey(this.transaccionlocalConstantesFunciones.getid_tipo_comprobante(),false,"Formulario");
			this.setActualTipoTributarioForeignKey(this.transaccionlocalConstantesFunciones.getid_tipo_tributario(),false,"Formulario");
			this.setActualAsientoContableForeignKey(this.transaccionlocalConstantesFunciones.getid_asiento_contable(),false,"Formulario");
			this.setActualTipoIvaForeignKey(this.transaccionlocalConstantesFunciones.getid_tipo_iva(),false,"Formulario");
			this.setActualTipoRetencionIvaForeignKey(this.transaccionlocalConstantesFunciones.getid_tipo_retencion_iva(),false,"Formulario");
			this.setActualTipoRetencionIvaPrestaForeignKey(this.transaccionlocalConstantesFunciones.getid_tipo_retencion_iva_presta(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyTransaccionLocal()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyTransaccionLocal()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyTransaccionLocal()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroTransaccionLocal()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyTransaccionLocal()throws Exception {
		try {
			

			this.cargarCombosFrameComprasForeignKey("Todos");
			this.cargarCombosFramePeriodoDeclarasForeignKey("Todos");
			this.cargarCombosFrameTransaccionContasForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameTipoComprobantesForeignKey("Todos");
			this.cargarCombosFrameTipoTributariosForeignKey("Todos");
			this.cargarCombosFrameAsientoContablesForeignKey("Todos");
			this.cargarCombosFrameTipoIvasForeignKey("Todos");
			this.cargarCombosFrameTipoRetencionIvasForeignKey("Todos");
			this.cargarCombosFrameTipoRetencionIvaPrestasForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyTransaccionLocal(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameComprasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodoDeclarasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionContasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoComprobantesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoTributariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoIvasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoRetencionIvasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoRetencionIvaPrestasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyTransaccionLocal()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal.getItemCount()>0) {
				this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal.getItemCount()>0) {
				this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal.getItemCount()>0) {
				this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal.getItemCount()>0) {
				this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal.getItemCount()>0) {
				this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal.getItemCount()>0) {
				this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal.getItemCount()>0) {
				this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.getItemCount()>0) {
				this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.getItemCount()>0) {
				this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.getItemCount()>0) {
				this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	















	public void recargarFormTransaccionLocalTipoIva(JComboBox<?> jComboBoxGenericoTipoIva,String sFormularioTipoBusqueda) throws Exception {

	}

	public void recargarFormTransaccionLocalTipoRetencionIva(JComboBox<?> jComboBoxGenericoTipoRetencionIva,String sFormularioTipoBusqueda) throws Exception {

	}

	public void recargarFormTransaccionLocalTipoRetencionIvaPresta(JComboBox<?> jComboBoxGenericoTipoRetencionIva,String sFormularioTipoBusqueda) throws Exception {

	}
	
	

	public TransaccionLocalBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public TransaccionLocalBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public TransaccionLocalBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.transaccionlocalSessionBean=new TransaccionLocalSessionBean(); 
		this.transaccionlocalConstantesFunciones=new TransaccionLocalConstantesFunciones(); 
		this.transaccionlocalBean=new TransaccionLocal();//(this.transaccionlocalConstantesFunciones); 		
		this.transaccionlocalReturnGeneral=new TransaccionLocalParameterReturnGeneral(); 
		
		this.transaccionlocalSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.transaccionlocalSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public TransaccionLocalBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public TransaccionLocalBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public TransaccionLocalBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessTransaccionLocal(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.transaccionlocalConstantesFunciones=new TransaccionLocalConstantesFunciones(); 
			this.transaccionlocalBean=new TransaccionLocal();//this.transaccionlocalConstantesFunciones); 			
			this.transaccionlocalReturnGeneral=new TransaccionLocalParameterReturnGeneral(); 
		
			TransaccionLocalBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Transaccion Local Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.transaccionlocal=new TransaccionLocal();
			this.transaccionlocals = new ArrayList<TransaccionLocal>();
			this.transaccionlocalsAux = new ArrayList<TransaccionLocal>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic=new TransaccionLocalLogic();
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}
			
			//this.transaccionlocalSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.transaccionlocalSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormTransaccionLocal);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoTransaccionLocal!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoTransaccionLocal);	
					}
					
					if(this.jInternalFrameImportacionTransaccionLocal!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionTransaccionLocal);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByTransaccionLocal!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByTransaccionLocal);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormTransaccionLocal);
				this.jInternalFrameDetalleFormTransaccionLocal.setVisible(false);
				this.jInternalFrameDetalleFormTransaccionLocal.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoTransaccionLocal!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoTransaccionLocal);
					this.jInternalFrameReporteDinamicoTransaccionLocal.setVisible(false);
					this.jInternalFrameReporteDinamicoTransaccionLocal.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionTransaccionLocal!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionTransaccionLocal);
					this.jInternalFrameImportacionTransaccionLocal.setVisible(false);
					this.jInternalFrameImportacionTransaccionLocal.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByTransaccionLocal!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByTransaccionLocal);
					this.jInternalFrameOrderByTransaccionLocal.setVisible(false);
					this.jInternalFrameOrderByTransaccionLocal.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idTransaccionLocalActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=TransaccionLocalConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.transaccionlocalReturnGeneral=new TransaccionLocalParameterReturnGeneral();
			
			this.transaccionlocalParameterGeneral=new TransaccionLocalParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.transaccionlocalLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(TransaccionLocalJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,TransaccionLocalConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.transaccionlocalSessionBean.getEsGuardarRelacionado(),this.transaccionlocalSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,TransaccionLocalConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.transaccionlocalSessionBean.getEsGuardarRelacionado(),this.transaccionlocalSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoTransaccionLocal=false;
			this.isVisibilidadCeldaDuplicarTransaccionLocal=true;
			this.isVisibilidadCeldaCopiarTransaccionLocal=true;
			this.isVisibilidadCeldaVerFormTransaccionLocal=true;
			this.isVisibilidadCeldaOrdenTransaccionLocal=true;
			this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=false;
			this.isVisibilidadCeldaModificarTransaccionLocal=false;
			this.isVisibilidadCeldaActualizarTransaccionLocal=false;
			this.isVisibilidadCeldaEliminarTransaccionLocal=false;
			this.isVisibilidadCeldaCancelarTransaccionLocal=false;
			this.isVisibilidadCeldaGuardarTransaccionLocal=false;
			this.isVisibilidadCeldaGuardarCambiosTransaccionLocal=false;
			
			
			this.isVisibilidadFK_IdAsientoContable=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdCompra=true;
			this.isVisibilidadFK_IdPeriodoDeclara=true;
			this.isVisibilidadFK_IdTipoComprobante=true;
			this.isVisibilidadFK_IdTipoIva=true;
			this.isVisibilidadFK_IdTipoRetencionIva=true;
			this.isVisibilidadFK_IdTipoRetencionIvaPresta=true;
			this.isVisibilidadFK_IdTipoTributario=true;
			this.isVisibilidadFK_IdTransaccionConta=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesTransaccionLocal("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosTransaccionLocal();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioTransaccionLocal(false);
			
			this.setPermisosUsuarioTransaccionLocal();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado() 
				|| (this.transaccionlocalSessionBean.getEsGuardarRelacionado() && this.transaccionlocalSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioTransaccionLocalClasesRelacionadas();
			}
			
			if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioTransaccionLocalClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosTransaccionLocal();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualTransaccionLocal();
			}
			
			if(!this.isPermisoBusquedaTransaccionLocal) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasTransaccionLocal.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioTransaccionLocal,this.isPermisoPaginacionMedioTransaccionLocal,this.isPermisoPaginacionTodoTransaccionLocal);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(TransaccionLocalConstantesFunciones.getTiposSeleccionarTransaccionLocal());
				
				this.tiposColumnasSelect=TransaccionLocalConstantesFunciones.getTiposSeleccionarTransaccionLocal(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioTransaccionLocal();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioTransaccionLocal(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioTransaccionLocal(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesTransaccionLocal() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.compraLogic=new CompraLogic();
			this.periododeclaraLogic=new PeriodoDeclaraLogic();
			this.transaccioncontaLogic=new TransaccionContaLogic();
			this.clienteLogic=new ClienteLogic();
			this.tipocomprobanteLogic=new TipoComprobanteLogic();
			this.tipotributarioLogic=new TipoTributarioLogic();
			this.asientocontableLogic=new AsientoContableLogic();
			this.tipoivaLogic=new TipoIvaLogic();
			this.tiporetencionivaLogic=new TipoRetencionIvaLogic();
			this.tiporetencionivaprestaLogic=new TipoRetencionIvaLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				transaccionlocalImplementable= (TransaccionLocalImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+TransaccionLocalConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				transaccionlocalImplementableHome= (TransaccionLocalImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+TransaccionLocalConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.transaccionlocals= new ArrayList<TransaccionLocal>();
			this.transaccionlocalsEliminados= new ArrayList<TransaccionLocal>();
						
			this.isEsNuevoTransaccionLocal=false;
			this.esParaAccionDesdeFormularioTransaccionLocal=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idClienteActual=0L;
			this.idAsientoContableActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.comprasForeignKey=new ArrayList<Compra>() ;
			this.periododeclarasForeignKey=new ArrayList<PeriodoDeclara>() ;
			this.transaccioncontasForeignKey=new ArrayList<TransaccionConta>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.tipocomprobantesForeignKey=new ArrayList<TipoComprobante>() ;
			this.tipotributariosForeignKey=new ArrayList<TipoTributario>() ;
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>() ;
			this.tipoivasForeignKey=new ArrayList<TipoIva>() ;
			this.tiporetencionivasForeignKey=new ArrayList<TipoRetencionIva>() ;
			this.tiporetencionivaprestasForeignKey=new ArrayList<TipoRetencionIva>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyTransaccionLocal(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroTransaccionLocal();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			TransaccionLocalBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=TransaccionLocalConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesTransaccionLocal("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingTransaccionLocal(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioTransaccionLocal();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioTransaccionLocal();
			}
			
			TransaccionLocalBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasTransaccionLocal.getTabCount(); i++) {
					this.jTabbedPaneBusquedasTransaccionLocal.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasTransaccionLocal.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessTransaccionLocal(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga TransaccionLocal: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectTransaccionLocal() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesTransaccionLocal")) {
				iIndex=this.jInternalFrameDetalleFormTransaccionLocal.jTabbedPaneRelacionesTransaccionLocal.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormTransaccionLocal.jTabbedPaneRelacionesTransaccionLocal.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessTransaccionLocal();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyTransaccionLocal(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyTransaccionLocal(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyTransaccionLocal(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyTransaccionLocalListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyTransaccionLocal();
		
		this.cargarCombosFrameForeignKeyTransaccionLocal();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyTransaccionLocal();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyTransaccionLocal();
		}
	}
	
	

	public void cargarCombosForeignKeyCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCompra();
				this.cargarCombosFrameComprasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCompra(this.comprasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoDeclara(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPeriodoDeclaraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPeriodoDeclara();
				this.cargarCombosFramePeriodoDeclarasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaPeriodoDeclara(this.periododeclarasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionConta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionContaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionConta();
				this.cargarCombosFrameTransaccionContasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionConta(this.transaccioncontasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoComprobante(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoComprobanteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoComprobante();
				this.cargarCombosFrameTipoComprobantesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoComprobante(this.tipocomprobantesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTributario(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoTributarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoTributario();
				this.cargarCombosFrameTipoTributariosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoTributario(this.tipotributariosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoIva(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoIvaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoIva();
				this.cargarCombosFrameTipoIvasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoIva("Todos");
				}

			this.recargarComboTablaTipoIva(this.tipoivasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencionIva(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoRetencionIvaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoRetencionIva();
				this.cargarCombosFrameTipoRetencionIvasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoRetencionIva("Todos");
				}

			this.recargarComboTablaTipoRetencionIva(this.tiporetencionivasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencionIvaPresta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoRetencionIvaPrestaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoRetencionIvaPresta();
				this.cargarCombosFrameTipoRetencionIvaPrestasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoRetencionIvaPresta("Todos");
				}

			this.recargarComboTablaTipoRetencionIvaPresta(this.tiporetencionivaprestasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoTransaccionLocalActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormTransaccionLocal==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			
			
			if(jTableDatosTransaccionLocal.getRowCount()>=1) {
				jTableDatosTransaccionLocal.removeRowSelectionInterval(0, jTableDatosTransaccionLocal.getRowCount()-1);						
			}
			
			this.isEsNuevoTransaccionLocal=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoTransaccionLocal(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesTransaccionLocal(true);			
			//this.transaccionlocal=new TransaccionLocal();
			//this.transaccionlocal.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesTransaccionLocal(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTransaccionLocal() ;
			
			if(TransaccionLocalJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleTransaccionLocal(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.transaccionlocal);	
			this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);				
			
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			
			if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar TransaccionLocal: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarTransaccionLocalActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<TransaccionLocal> transaccionlocalsSeleccionados=new ArrayList<TransaccionLocal>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosTransaccionLocal.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosTransaccionLocal.getSelectedRows().length;			
			}
			
			transaccionlocalsSeleccionados=this.getTransaccionLocalsSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoTransaccionLocal--;			
				//TransaccionLocal transaccionlocalAux= new TransaccionLocal();			
				//transaccionlocalAux.setId(this.iIdNuevoTransaccionLocal);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//TransaccionLocal transaccionlocalOrigen=new TransaccionLocal();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(TransaccionLocal transaccionlocalOrigen : transaccionlocalsSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							transaccionlocalOrigen =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							transaccionlocalOrigen =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaTransaccionLocal();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.transaccionlocal.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosTransaccionLocal(transaccionlocalOrigen,this.transaccionlocal,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.transaccionlocalLogic.getTransaccionLocals().add(this.transaccionlocalAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.transaccionlocals.add(this.transaccionlocalAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaTransaccionLocal(false);
				
				this.jTableDatosTransaccionLocal.setRowSelectionInterval(this.getIndiceNuevoTransaccionLocal(), this.getIndiceNuevoTransaccionLocal());
				
				int iLastRow =  this.jTableDatosTransaccionLocal.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosTransaccionLocal.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosTransaccionLocal.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaTransaccionLocal(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<TransaccionLocal> transaccionlocalsSeleccionados=new ArrayList<TransaccionLocal>();									
		
			TransaccionLocal transaccionlocalOrigen=new TransaccionLocal();
			TransaccionLocal transaccionlocalDestino=new TransaccionLocal();
				
			transaccionlocalsSeleccionados=this.getTransaccionLocalsSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosTransaccionLocal.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || transaccionlocalsSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosTransaccionLocal.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalOrigen =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						transaccionlocalOrigen =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						transaccionlocalDestino =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						transaccionlocalDestino =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				transaccionlocalOrigen =transaccionlocalsSeleccionados.get(0);
				transaccionlocalDestino =transaccionlocalsSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosTransaccionLocal(transaccionlocalOrigen,transaccionlocalDestino,true,false);
				
				transaccionlocalDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(transaccionlocalDestino,transaccionlocalLogic.getTransaccionLocals());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(transaccionlocalDestino,transaccionlocals);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaTransaccionLocal(false);
				
				//this.jTableDatosTransaccionLocal.setRowSelectionInterval(this.getIndiceNuevoTransaccionLocal(), this.getIndiceNuevoTransaccionLocal());
				
				int iLastRow =  this.jTableDatosTransaccionLocal.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosTransaccionLocal.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosTransaccionLocal.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaTransaccionLocal(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormTransaccionLocal==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormTransaccionLocal.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesTransaccionLocal.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasTransaccionLocal.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesTransaccionLocal.setVisible(!isVisible);
			this.jPanelPaginacionTransaccionLocal.setVisible(!isVisible);
			this.jPanelAccionesTransaccionLocal.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameTransaccionLocal();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoTransaccionLocal();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionTransaccionLocal();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByTransaccionLocal();
			
			this.abrirFrameOrderByTransaccionLocal();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByTransaccionLocal();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleTransaccionLocal(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormTransaccionLocal);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormTransaccionLocal.isMaximum()) {
					this.jInternalFrameDetalleFormTransaccionLocal.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormTransaccionLocal.setSize(this.jInternalFrameDetalleFormTransaccionLocal.iWidthFormulario,this.jInternalFrameDetalleFormTransaccionLocal.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormTransaccionLocal.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormTransaccionLocal.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormTransaccionLocal.isMaximum()) {
						this.jInternalFrameDetalleFormTransaccionLocal.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormTransaccionLocal.jContentPaneDetalleTransaccionLocal.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormTransaccionLocal.jTabbedPaneRelacionesTransaccionLocal.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormTransaccionLocal.jContentPaneDetalleTransaccionLocal.getWidth(),TransaccionLocalConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormTransaccionLocal.jTabbedPaneRelacionesTransaccionLocal.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormTransaccionLocal.jContentPaneDetalleTransaccionLocal.getWidth(),TransaccionLocalConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormTransaccionLocal.jTabbedPaneRelacionesTransaccionLocal.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormTransaccionLocal.jContentPaneDetalleTransaccionLocal.getWidth(),TransaccionLocalConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormTransaccionLocal.setVisible(true);
	        this.jInternalFrameDetalleFormTransaccionLocal.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByTransaccionLocal() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByTransaccionLocal==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByTransaccionLocal=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByTransaccionLocal,false,this);
				} else {
					this.jInternalFrameOrderByTransaccionLocal=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByTransaccionLocal,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByTransaccionLocal);
				this.jInternalFrameOrderByTransaccionLocal.setVisible(false);
				this.jInternalFrameOrderByTransaccionLocal.setSelected(false);
				
				this.jInternalFrameOrderByTransaccionLocal.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByTransaccionLocal"));
				
				this.inicializarActualizarBindingTablaOrderByTransaccionLocal();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionTransaccionLocal() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionTransaccionLocal==null) {
				
				this.jInternalFrameImportacionTransaccionLocal=new ImportacionJInternalFrame(TransaccionLocalConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionTransaccionLocal);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionTransaccionLocal);
				this.jInternalFrameImportacionTransaccionLocal.setVisible(false);
				this.jInternalFrameImportacionTransaccionLocal.setSelected(false);


				this.jInternalFrameImportacionTransaccionLocal.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionTransaccionLocal"));
				this.jInternalFrameImportacionTransaccionLocal.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionTransaccionLocal"));
				this.jInternalFrameImportacionTransaccionLocal.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionTransaccionLocal"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoTransaccionLocal() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoTransaccionLocal==null) {
				this.jInternalFrameReporteDinamicoTransaccionLocal=new ReporteDinamicoJInternalFrame(TransaccionLocalConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoTransaccionLocal);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoTransaccionLocal);
				this.jInternalFrameReporteDinamicoTransaccionLocal.setVisible(false);
				this.jInternalFrameReporteDinamicoTransaccionLocal.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoTransaccionLocal.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoTransaccionLocal"));
				this.jInternalFrameReporteDinamicoTransaccionLocal.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoTransaccionLocal"));
				this.jInternalFrameReporteDinamicoTransaccionLocal.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoTransaccionLocal"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualTransaccionLocal();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleTransaccionLocal() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormTransaccionLocal);
			
	       	this.jInternalFrameDetalleFormTransaccionLocal.setVisible(false);
	        this.jInternalFrameDetalleFormTransaccionLocal.setSelected(false);
			
			//this.jInternalFrameDetalleFormTransaccionLocal.dispose();
			//this.jInternalFrameDetalleFormTransaccionLocal=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoTransaccionLocal() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoTransaccionLocal.setVisible(true);
	        this.jInternalFrameReporteDinamicoTransaccionLocal.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionTransaccionLocal() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionTransaccionLocal.setVisible(true);
	        this.jInternalFrameImportacionTransaccionLocal.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByTransaccionLocal() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByTransaccionLocal.setVisible(true);
	        this.jInternalFrameOrderByTransaccionLocal.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByTransaccionLocal() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByTransaccionLocal.setVisible(false);
	        this.jInternalFrameOrderByTransaccionLocal.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoTransaccionLocal() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoTransaccionLocal.setVisible(false);
	        this.jInternalFrameReporteDinamicoTransaccionLocal.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionTransaccionLocal() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionTransaccionLocal.setVisible(false);
	        this.jInternalFrameImportacionTransaccionLocal.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarTransaccionLocal(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarTransaccionLocal(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesTransaccionLocal(true);
			//this.isEsNuevoTransaccionLocal=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesTransaccionLocal("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesTransaccionLocal(false) ;
			
			if(transaccionlocalSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(TransaccionLocalJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleTransaccionLocal(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTransaccionLocal(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaTransaccionLocalActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarTransaccionLocal(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormTransaccionLocal==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesTransaccionLocal(true);
			//this.isEsNuevoTransaccionLocal=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.transaccionlocal.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesTransaccionLocal("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesTransaccionLocal(false) ;
			
			if(TransaccionLocalJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleTransaccionLocal(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTransaccionLocal(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Cliente")) {
				if(!this.transaccionlocalConstantesFunciones.cargarid_clienteTransaccionLocal) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingTransaccionLocal(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("AsientoContable")) {
				if(!this.transaccionlocalConstantesFunciones.cargarid_asiento_contableTransaccionLocal) {
					this.cargarCombosAsientoContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingTransaccionLocal(false,false);
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_asiento_contable (id);

				this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	
	
	public void recargarComboTablaCompra(List<Compra> comprasForeignKey)throws Exception{
		TableColumn tableColumnCompra=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDCOMPRA));
		TableCellEditor tableCellEditorCompra =tableColumnCompra.getCellEditor();

		CompraTableCell compraTableCellFk=(CompraTableCell)tableCellEditorCompra;

		if(compraTableCellFk!=null) {
			compraTableCellFk.setcomprasForeignKey(comprasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTransaccionLocal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//compraTableCellFk.setRowActual(intSelectedRow);
			//compraTableCellFk.setcomprasForeignKeyActual(comprasForeignKey);
		//}


		if(compraTableCellFk!=null) {
			compraTableCellFk.RecargarComprasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPeriodoDeclara(List<PeriodoDeclara> periododeclarasForeignKey)throws Exception{
		TableColumn tableColumnPeriodoDeclara=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDPERIODODECLARA));
		TableCellEditor tableCellEditorPeriodoDeclara =tableColumnPeriodoDeclara.getCellEditor();

		PeriodoDeclaraTableCell periododeclaraTableCellFk=(PeriodoDeclaraTableCell)tableCellEditorPeriodoDeclara;

		if(periododeclaraTableCellFk!=null) {
			periododeclaraTableCellFk.setperiododeclarasForeignKey(periododeclarasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTransaccionLocal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//periododeclaraTableCellFk.setRowActual(intSelectedRow);
			//periododeclaraTableCellFk.setperiododeclarasForeignKeyActual(periododeclarasForeignKey);
		//}


		if(periododeclaraTableCellFk!=null) {
			periododeclaraTableCellFk.RecargarPeriodoDeclarasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionConta(List<TransaccionConta> transaccioncontasForeignKey)throws Exception{
		TableColumn tableColumnTransaccionConta=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDTRANSACCIONCONTA));
		TableCellEditor tableCellEditorTransaccionConta =tableColumnTransaccionConta.getCellEditor();

		TransaccionContaTableCell transaccioncontaTableCellFk=(TransaccionContaTableCell)tableCellEditorTransaccionConta;

		if(transaccioncontaTableCellFk!=null) {
			transaccioncontaTableCellFk.settransaccioncontasForeignKey(transaccioncontasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTransaccionLocal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccioncontaTableCellFk.setRowActual(intSelectedRow);
			//transaccioncontaTableCellFk.settransaccioncontasForeignKeyActual(transaccioncontasForeignKey);
		//}


		if(transaccioncontaTableCellFk!=null) {
			transaccioncontaTableCellFk.RecargarTransaccionContasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTransaccionLocal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoComprobante(List<TipoComprobante> tipocomprobantesForeignKey)throws Exception{
		TableColumn tableColumnTipoComprobante=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDTIPOCOMPROBANTE));
		TableCellEditor tableCellEditorTipoComprobante =tableColumnTipoComprobante.getCellEditor();

		TipoComprobanteTableCell tipocomprobanteTableCellFk=(TipoComprobanteTableCell)tableCellEditorTipoComprobante;

		if(tipocomprobanteTableCellFk!=null) {
			tipocomprobanteTableCellFk.settipocomprobantesForeignKey(tipocomprobantesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTransaccionLocal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocomprobanteTableCellFk.setRowActual(intSelectedRow);
			//tipocomprobanteTableCellFk.settipocomprobantesForeignKeyActual(tipocomprobantesForeignKey);
		//}


		if(tipocomprobanteTableCellFk!=null) {
			tipocomprobanteTableCellFk.RecargarTipoComprobantesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoTributario(List<TipoTributario> tipotributariosForeignKey)throws Exception{
		TableColumn tableColumnTipoTributario=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDTIPOTRIBUTARIO));
		TableCellEditor tableCellEditorTipoTributario =tableColumnTipoTributario.getCellEditor();

		TipoTributarioTableCell tipotributarioTableCellFk=(TipoTributarioTableCell)tableCellEditorTipoTributario;

		if(tipotributarioTableCellFk!=null) {
			tipotributarioTableCellFk.settipotributariosForeignKey(tipotributariosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTransaccionLocal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipotributarioTableCellFk.setRowActual(intSelectedRow);
			//tipotributarioTableCellFk.settipotributariosForeignKeyActual(tipotributariosForeignKey);
		//}


		if(tipotributarioTableCellFk!=null) {
			tipotributarioTableCellFk.RecargarTipoTributariosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAsientoContable(List<AsientoContable> asientocontablesForeignKey)throws Exception{
		TableColumn tableColumnAsientoContable=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDASIENTOCONTABLE));
		TableCellEditor tableCellEditorAsientoContable =tableColumnAsientoContable.getCellEditor();

		AsientoContableTableCell asientocontableTableCellFk=(AsientoContableTableCell)tableCellEditorAsientoContable;

		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.setasientocontablesForeignKey(asientocontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTransaccionLocal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//asientocontableTableCellFk.setRowActual(intSelectedRow);
			//asientocontableTableCellFk.setasientocontablesForeignKeyActual(asientocontablesForeignKey);
		//}


		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.RecargarAsientoContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoIva(List<TipoIva> tipoivasForeignKey)throws Exception{
		TableColumn tableColumnTipoIva=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDTIPOIVA));
		TableCellEditor tableCellEditorTipoIva =tableColumnTipoIva.getCellEditor();

		TipoIvaTableCell tipoivaTableCellFk=(TipoIvaTableCell)tableCellEditorTipoIva;

		if(tipoivaTableCellFk!=null) {
			tipoivaTableCellFk.settipoivasForeignKey(tipoivasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTransaccionLocal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoivaTableCellFk.setRowActual(intSelectedRow);
			//tipoivaTableCellFk.settipoivasForeignKeyActual(tipoivasForeignKey);
		//}


		if(tipoivaTableCellFk!=null) {
			tipoivaTableCellFk.RecargarTipoIvasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoRetencionIva(List<TipoRetencionIva> tiporetencionivasForeignKey)throws Exception{
		TableColumn tableColumnTipoRetencionIva=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVA));
		TableCellEditor tableCellEditorTipoRetencionIva =tableColumnTipoRetencionIva.getCellEditor();

		TipoRetencionIvaTableCell tiporetencionivaTableCellFk=(TipoRetencionIvaTableCell)tableCellEditorTipoRetencionIva;

		if(tiporetencionivaTableCellFk!=null) {
			tiporetencionivaTableCellFk.settiporetencionivasForeignKey(tiporetencionivasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTransaccionLocal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tiporetencionivaTableCellFk.setRowActual(intSelectedRow);
			//tiporetencionivaTableCellFk.settiporetencionivasForeignKeyActual(tiporetencionivasForeignKey);
		//}


		if(tiporetencionivaTableCellFk!=null) {
			tiporetencionivaTableCellFk.RecargarTipoRetencionIvasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoRetencionIvaPresta(List<TipoRetencionIva> tiporetencionivaprestasForeignKey)throws Exception{
		TableColumn tableColumnTipoRetencionIvaPresta=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA));
		TableCellEditor tableCellEditorTipoRetencionIvaPresta =tableColumnTipoRetencionIvaPresta.getCellEditor();

		TipoRetencionIvaTableCell tiporetencionivaTableCellFk=(TipoRetencionIvaTableCell)tableCellEditorTipoRetencionIvaPresta;

		if(tiporetencionivaTableCellFk!=null) {
			tiporetencionivaTableCellFk.settiporetencionivasForeignKey(tiporetencionivaprestasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTransaccionLocal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tiporetencionivaTableCellFk.setRowActual(intSelectedRow);
			//tiporetencionivaTableCellFk.settiporetencionivasForeignKeyActual(tiporetencionivaprestasForeignKey);
		//}


		if(tiporetencionivaTableCellFk!=null) {
			tiporetencionivaTableCellFk.RecargarTipoRetencionIvasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_asiento_contable (Long id) throws Exception {
		this.setActualAsientoContableForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesTransaccionLocal(false);
			
			//if(!this.isEsNuevoTransaccionLocal) {								
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
				this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				
			}
			
			if(this.permiteMantenimiento(this.transaccionlocal)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoTransaccionLocal=true;
					this.inicializarActualizarBindingTablaTransaccionLocal(false);
					this.isEsNuevoTransaccionLocal=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoTransaccionLocal=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoTransaccionLocal=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesTransaccionLocal(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualTransaccionLocal(false);
				
				this.habilitarDeshabilitarControlesTransaccionLocal(false);
			
												
				
				if(TransaccionLocalJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleTransaccionLocal();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoTransaccionLocalActionPerformed(evt,transaccionlocalSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualTransaccionLocal(this.transaccionlocal,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosTransaccionLocal.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,transaccionlocalSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.transaccionlocal.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(TransaccionLocal.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TransaccionLocal.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				this.transaccionlocal.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				this.transaccionlocal.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.transaccionlocal)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((TransaccionLocalModel) this.jTableDatosTransaccionLocal.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoTransaccionLocal=true;
				this.inicializarActualizarBindingTablaTransaccionLocal(false);
				this.isEsNuevoTransaccionLocal=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesTransaccionLocal(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualTransaccionLocal(false);
				
				this.habilitarDeshabilitarControlesTransaccionLocal(false);
				
				
				
				if(TransaccionLocalJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleTransaccionLocal();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosTransaccionLocal.getRowCount()>=1) {
				jTableDatosTransaccionLocal.removeRowSelectionInterval(0, jTableDatosTransaccionLocal.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesTransaccionLocal(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaTransaccionLocal(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesTransaccionLocal(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTransaccionLocal(false) ;
			
			this.isEsNuevoTransaccionLocal=false;
			
			if(TransaccionLocalJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleTransaccionLocal();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingTransaccionLocal(false);
				
				//SI ES MANUAL
				if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualTransaccionLocal();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoTransaccionLocal--;			
			//TransaccionLocal transaccionlocalAux= new TransaccionLocal();			
			//transaccionlocalAux.setId(this.iIdNuevoTransaccionLocal);
			
			if(this.jInternalFrameDetalleFormTransaccionLocal==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaTransaccionLocal();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
			
			this.transaccionlocal.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.transaccionlocalLogic.getTransaccionLocals().add(this.transaccionlocalAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.transaccionlocals.add(this.transaccionlocalAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaTransaccionLocal(false);
			
			this.jTableDatosTransaccionLocal.setRowSelectionInterval(this.getIndiceNuevoTransaccionLocal(), this.getIndiceNuevoTransaccionLocal());
			
			int iLastRow =  this.jTableDatosTransaccionLocal.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosTransaccionLocal.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosTransaccionLocal.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaTransaccionLocal(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingTransaccionLocal(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTransaccionLocal(false);
			
			//SI ES MANUAL
			if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualTransaccionLocal();
			}
			
			//this.abrirFrameTreeTransaccionLocal();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Transaccion LocalES ?", "MANTENIMIENTO DE Transaccion Local", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionTransaccionLocal.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralTransaccionLocal();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.transaccionlocalReturnGeneral=transaccionlocalLogic.procesarImportacionTransaccionLocalsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.transaccionlocalParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarTransaccionLocalReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionTransaccionLocal.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionTransaccionLocal.setFileImportacion(this.jInternalFrameImportacionTransaccionLocal.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionTransaccionLocal.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionTransaccionLocal.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionTransaccionLocal.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionTransaccionLocal.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<TransaccionLocal> transaccionlocalsSeleccionados=new ArrayList<TransaccionLocal>();		

		transaccionlocalsSeleccionados=this.getTransaccionLocalsSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("TransaccionLocalBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"TransaccionLocalBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteTransaccionLocals("Todos",transaccionlocalsSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Transaccion Local",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoTransaccionLocal.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTransaccionLocal.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case TransaccionLocalConstantesFunciones.LABEL_IDCOMPRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Compra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Compra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Compra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Compra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_RUC:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_c_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_c_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_c_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_c_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_zonSocial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_zonSocial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_zonSocial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_zonSocial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDPERIODODECLARA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_PeriodoDeclara_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_PeriodoDeclara_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_PeriodoDeclara_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_PeriodoDeclara_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTRANSACCIONCONTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionConta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionConta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionConta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionConta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_entificacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_entificacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_entificacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_entificacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOCOMPROBANTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoComprobante_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoComprobante_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoComprobante_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoComprobante_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaRegistroContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaRegistroContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaRegistroContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaRegistroContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroSecuencial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroSecuencial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroSecuencial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroSecuencial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroSerie_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroSerie_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroSerie_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroSerie_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroAutorizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroAutorizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroAutorizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroAutorizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaCaducidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaCaducidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaCaducidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaCaducidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOTRIBUTARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoTributario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoTributario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoTributario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoTributario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroDocumentoContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroDocumentoContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroDocumentoContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroDocumentoContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AsientoContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AsientoContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AsientoContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AsientoContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_ESRISE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Rise_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Rise_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Rise_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Rise_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_BIENESIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_enesIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_enesIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_enesIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_enesIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_enesSinIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_enesSinIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_enesSinIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_enesSinIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOIVA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rviciosIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rviciosIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rviciosIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rviciosIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rviciosSinIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rviciosSinIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rviciosSinIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rviciosSinIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_MONTOIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_TOTALIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talSinIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talSinIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talSinIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talSinIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_MONTOICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoIce_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoIce_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoIce_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoIce_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ansfeIvaRetener_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ansfeIvaRetener_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ansfeIvaRetener_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ansfeIvaRetener_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_estaIvaRetener_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_estaIvaRetener_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_estaIvaRetener_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_estaIvaRetener_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoRetencionIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoRetencionIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoRetencionIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoRetencionIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoRetencionIvaPresta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoRetencionIvaPresta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoRetencionIvaPresta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoRetencionIvaPresta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ansfeIvaRetenido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ansfeIvaRetenido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ansfeIvaRetenido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ansfeIvaRetenido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_estaIvaRetenido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_estaIvaRetenido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_estaIvaRetenido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_estaIvaRetenido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rmiteDevolucion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rmiteDevolucion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rmiteDevolucion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rmiteDevolucion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoTransaccionLocal.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case TransaccionLocalConstantesFunciones.LABEL_IDCOMPRA:
					sNombreCampoCategoria="id_compra";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoria="ruc";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL:
					sNombreCampoCategoria="razon_social";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDPERIODODECLARA:
					sNombreCampoCategoria="id_periodo_declara";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTRANSACCIONCONTA:
					sNombreCampoCategoria="id_transaccion_conta";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION:
					sNombreCampoCategoria="identificacion";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOCOMPROBANTE:
					sNombreCampoCategoria="id_tipo_comprobante";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					sNombreCampoCategoria="fecha_registro_contable";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					sNombreCampoCategoria="numero_secuencial";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE:
					sNombreCampoCategoria="numero_serie";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					sNombreCampoCategoria="numero_autorizacion";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD:
					sNombreCampoCategoria="fecha_caducidad";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOTRIBUTARIO:
					sNombreCampoCategoria="id_tipo_tributario";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE:
					sNombreCampoCategoria="numero_documento_contable";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoria="id_asiento_contable";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_ESRISE:
					sNombreCampoCategoria="es_rise";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_BIENESIVA:
					sNombreCampoCategoria="bienes_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA:
					sNombreCampoCategoria="bienes_sin_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOIVA:
					sNombreCampoCategoria="id_tipo_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA:
					sNombreCampoCategoria="servicios_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA:
					sNombreCampoCategoria="servicios_sin_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_MONTOIVA:
					sNombreCampoCategoria="monto_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TOTALIVA:
					sNombreCampoCategoria="total_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA:
					sNombreCampoCategoria="total_sin_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_MONTOICE:
					sNombreCampoCategoria="monto_ice";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER:
					sNombreCampoCategoria="transfe_iva_retener";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER:
					sNombreCampoCategoria="presta_iva_retener";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVA:
					sNombreCampoCategoria="id_tipo_retencion_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA:
					sNombreCampoCategoria="id_tipo_retencion_iva_presta";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO:
					sNombreCampoCategoria="transfe_iva_retenido";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO:
					sNombreCampoCategoria="presta_iva_retenido";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION:
					sNombreCampoCategoria="permite_devolucion";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case TransaccionLocalConstantesFunciones.LABEL_IDCOMPRA:
					sNombreCampoCategoriaValor="id_compra";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoriaValor="ruc";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL:
					sNombreCampoCategoriaValor="razon_social";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDPERIODODECLARA:
					sNombreCampoCategoriaValor="id_periodo_declara";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTRANSACCIONCONTA:
					sNombreCampoCategoriaValor="id_transaccion_conta";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION:
					sNombreCampoCategoriaValor="identificacion";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOCOMPROBANTE:
					sNombreCampoCategoriaValor="id_tipo_comprobante";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					sNombreCampoCategoriaValor="fecha_registro_contable";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					sNombreCampoCategoriaValor="numero_secuencial";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE:
					sNombreCampoCategoriaValor="numero_serie";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					sNombreCampoCategoriaValor="numero_autorizacion";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD:
					sNombreCampoCategoriaValor="fecha_caducidad";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOTRIBUTARIO:
					sNombreCampoCategoriaValor="id_tipo_tributario";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE:
					sNombreCampoCategoriaValor="numero_documento_contable";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoriaValor="id_asiento_contable";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_ESRISE:
					sNombreCampoCategoriaValor="es_rise";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_BIENESIVA:
					sNombreCampoCategoriaValor="bienes_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA:
					sNombreCampoCategoriaValor="bienes_sin_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOIVA:
					sNombreCampoCategoriaValor="id_tipo_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA:
					sNombreCampoCategoriaValor="servicios_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA:
					sNombreCampoCategoriaValor="servicios_sin_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_MONTOIVA:
					sNombreCampoCategoriaValor="monto_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TOTALIVA:
					sNombreCampoCategoriaValor="total_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA:
					sNombreCampoCategoriaValor="total_sin_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_MONTOICE:
					sNombreCampoCategoriaValor="monto_ice";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER:
					sNombreCampoCategoriaValor="transfe_iva_retener";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER:
					sNombreCampoCategoriaValor="presta_iva_retener";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVA:
					sNombreCampoCategoriaValor="id_tipo_retencion_iva";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA:
					sNombreCampoCategoriaValor="id_tipo_retencion_iva_presta";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO:
					sNombreCampoCategoriaValor="transfe_iva_retenido";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO:
					sNombreCampoCategoriaValor="presta_iva_retenido";
					break;

				case TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION:
					sNombreCampoCategoriaValor="permite_devolucion";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoTransaccionLocal.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTransaccionLocal.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case TransaccionLocalConstantesFunciones.LABEL_IDCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_compra");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_RUC:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruc Informante",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ruc");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Razon Social",sNombreCampoCategoria,sNombreCampoCategoriaValor,"razon_social");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDPERIODODECLARA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo Declara",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo_declara");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTRANSACCIONCONTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_conta");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Prove/Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Identificacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"identificacion");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOCOMPROBANTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T. Comprobante",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_comprobante");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Reg Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_registro_contable");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nro Secuencial",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_secuencial");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nro Serie",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_serie");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nro Autorizacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_autorizacion");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Caducidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_caducidad");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOTRIBUTARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cod. Tributario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_tributario");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nro Documento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_documento_contable");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Asiento C.",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_asiento_contable");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_ESRISE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Rise",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_rise");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_BIENESIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bienes Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"bienes_iva");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"BienesTarifa 0",sNombreCampoCategoria,sNombreCampoCategoriaValor,"bienes_sin_iva");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"% Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_iva");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Servicios Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"servicios_iva");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Servicios Tarifa 0",sNombreCampoCategoria,sNombreCampoCategoriaValor,"servicios_sin_iva");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_MONTOIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_iva");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TOTALIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"B. Ãmp. Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_iva");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"B. Imp. Tarifa 0",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_sin_iva");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_MONTOICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto ICE",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_ice");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Iva Retener",sNombreCampoCategoria,sNombreCampoCategoriaValor,"transfe_iva_retener");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Iva Retener.",sNombreCampoCategoria,sNombreCampoCategoriaValor,"presta_iva_retener");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"% Iva_",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_retencion_iva");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"% Iva.",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_retencion_iva_presta");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva Retenido",sNombreCampoCategoria,sNombreCampoCategoriaValor,"transfe_iva_retenido");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva Retenido.",sNombreCampoCategoria,sNombreCampoCategoriaValor,"presta_iva_retenido");
					break;

				case TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Devolucion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"permite_devolucion");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<TransaccionLocal> transaccionlocalsSeleccionados=new ArrayList<TransaccionLocal>();		
		
		transaccionlocalsSeleccionados=this.getTransaccionLocalsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"transaccionlocal";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("TransaccionLocals");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoTransaccionLocal.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoTransaccionLocal.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case TransaccionLocalConstantesFunciones.LABEL_IDCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDCOMPRA);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getcompra_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_RUC:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_RUC);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getruc());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getrazon_social());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDPERIODODECLARA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDPERIODODECLARA);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getperiododeclara_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTRANSACCIONCONTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTRANSACCIONCONTA);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.gettransaccionconta_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getidentificacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOCOMPROBANTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPOCOMPROBANTE);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.gettipocomprobante_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getfecha_registro_contable());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getnumero_secuencial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getnumero_serie());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getnumero_autorizacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getfecha_caducidad());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOTRIBUTARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPOTRIBUTARIO);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.gettipotributario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getnumero_documento_contable());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDASIENTOCONTABLE);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getasientocontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_ESRISE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_ESRISE);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getes_rise());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_BIENESIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_BIENESIVA);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getbienes_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getbienes_sin_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPOIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPOIVA);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.gettipoiva_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getservicios_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getservicios_sin_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_MONTOIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_MONTOIVA);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getmonto_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TOTALIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_TOTALIVA);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.gettotal_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.gettotal_sin_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_MONTOICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_MONTOICE);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getmonto_ice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.gettransfe_iva_retener());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getpresta_iva_retener());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVA);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.gettiporetencioniva_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.gettiporetencionivapresta_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.gettransfe_iva_retenido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getpresta_iva_retenido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION);
					iRow++;

					for(TransaccionLocal transaccionlocal:transaccionlocalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(transaccionlocal.getpermite_devolucion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelTransaccionLocal(row);				
			//	iRow++;
			//}				
			
			//for(TransaccionLocal transaccionlocalAux:transaccionlocalsSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelTransaccionLocal(transaccionlocalAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Transaccion Local",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTransaccionLocal(false);
			
			//SI ES MANUAL
			if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualTransaccionLocal();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTransaccionLocal(false);
			
			//SI ES MANUAL
			if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualTransaccionLocal();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTransaccionLocal(false);
			
			//SI ES MANUAL
			if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualTransaccionLocal();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaTransaccionLocal() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosTransaccionLocal.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosTransaccionLocal.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosTransaccionLocal.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosTransaccionLocal.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosTransaccionLocal.setMinimumSize(dimensionMinimum);
		this.jTableDatosTransaccionLocal.setMaximumSize(dimensionMaximum);
		this.jTableDatosTransaccionLocal.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingTransaccionLocal(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingTransaccionLocal(esInicializar,true);
	}
	
	public void inicializarActualizarBindingTransaccionLocal(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaTransaccionLocal(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesTransaccionLocal(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasTransaccionLocal(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesTransaccionLocal(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesTransaccionLocal(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !TransaccionLocalJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualTransaccionLocal() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaTransaccionLocal();
		
		this.inicializarActualizarBindingBotonesManualTransaccionLocal(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualTransaccionLocal();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesTransaccionLocal() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualTransaccionLocal(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualTransaccionLocal(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosTransaccionLocal.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosTransaccionLocal.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteTransaccionLocal.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxPostAccionNuevoTransaccionLocal.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxPostAccionSinCerrarTransaccionLocal.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxPostAccionSinMensajeTransaccionLocal.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosTransaccionLocal.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosTransaccionLocal.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteTransaccionLocal.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
				this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxPostAccionNuevoTransaccionLocal.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxPostAccionSinCerrarTransaccionLocal.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxPostAccionSinMensajeTransaccionLocal.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionTransaccionLocal.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionTransaccionLocal.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesTransaccionLocal.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoTransaccionLocal!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesTransaccionLocal.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesTransaccionLocal.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarTransaccionLocal.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesTransaccionLocal.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoTransaccionLocal!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesTransaccionLocal.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralTransaccionLocal.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesTransaccionLocal(Boolean esInicializar) throws Exception {
		try	{	
			if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualTransaccionLocal(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesTransaccionLocal() throws Exception {
		try	{
			if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualTransaccionLocal();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleTransaccionLocal() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualTransaccionLocal() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesTransaccionLocal.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesTransaccionLocal.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesTransaccionLocal.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesTransaccionLocal.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesTransaccionLocal.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesTransaccionLocal.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionTransaccionLocal.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionTransaccionLocal.addItem(reporte);
			}
			
			
			if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionTransaccionLocal.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionTransaccionLocal.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesTransaccionLocal.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesTransaccionLocal.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesTransaccionLocal.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesTransaccionLocal.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarTransaccionLocal.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarTransaccionLocal.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarTransaccionLocal.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualTransaccionLocal();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualTransaccionLocal() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoTransaccionLocal!=null) {
				this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoTransaccionLocal!=null) {
				this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoTransaccionLocal!=null) {
				
				if(this.jInternalFrameReporteDinamicoTransaccionLocal.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoTransaccionLocal.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoTransaccionLocal.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoTransaccionLocal.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoTransaccionLocal.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoTransaccionLocal.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=TransaccionLocalConstantesFunciones.getTiposSeleccionarTransaccionLocal(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=TransaccionLocalConstantesFunciones.getTiposSeleccionarTransaccionLocal(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoTransaccionLocal.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoTransaccionLocal.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=TransaccionLocalConstantesFunciones.getTiposSeleccionarTransaccionLocal(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoTransaccionLocal.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoTransaccionLocal.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualTransaccionLocal()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_asiento_contableFK_IdAsientoContableTransaccionLocal.getSelectedItem()!=null){this.id_asiento_contableFK_IdAsientoContable=((AsientoContable)this.jComboBoxid_asiento_contableFK_IdAsientoContableTransaccionLocal.getSelectedItem()).getId();}
		if(this.jComboBoxid_clienteFK_IdClienteTransaccionLocal.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteTransaccionLocal.getSelectedItem()).getId();}
		if(this.jComboBoxid_compraFK_IdCompraTransaccionLocal.getSelectedItem()!=null){this.id_compraFK_IdCompra=((Compra)this.jComboBoxid_compraFK_IdCompraTransaccionLocal.getSelectedItem()).getId();}
		if(this.jComboBoxid_periodo_declaraFK_IdPeriodoDeclaraTransaccionLocal.getSelectedItem()!=null){this.id_periodo_declaraFK_IdPeriodoDeclara=((PeriodoDeclara)this.jComboBoxid_periodo_declaraFK_IdPeriodoDeclaraTransaccionLocal.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_comprobanteFK_IdTipoComprobanteTransaccionLocal.getSelectedItem()!=null){this.id_tipo_comprobanteFK_IdTipoComprobante=((TipoComprobante)this.jComboBoxid_tipo_comprobanteFK_IdTipoComprobanteTransaccionLocal.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal.getSelectedItem()!=null){this.id_tipo_ivaFK_IdTipoIva=((TipoIva)this.jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal.getSelectedItem()!=null){this.id_tipo_retencion_ivaFK_IdTipoRetencionIva=((TipoRetencionIva)this.jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal.getSelectedItem()!=null){this.id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta=((TipoRetencionIva)this.jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_tributarioFK_IdTipoTributarioTransaccionLocal.getSelectedItem()!=null){this.id_tipo_tributarioFK_IdTipoTributario=((TipoTributario)this.jComboBoxid_tipo_tributarioFK_IdTipoTributarioTransaccionLocal.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_contaFK_IdTransaccionContaTransaccionLocal.getSelectedItem()!=null){this.id_transaccion_contaFK_IdTransaccionConta=((TransaccionConta)this.jComboBoxid_transaccion_contaFK_IdTransaccionContaTransaccionLocal.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasTransaccionLocal(Boolean esInicializar) throws Exception {				
		if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualTransaccionLocal();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaTransaccionLocal() throws Exception {
		this.inicializarActualizarBindingTablaTransaccionLocal(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByTransaccionLocal() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByTransaccionLocal.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByTransaccionLocal.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByTransaccionLocal.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByTransaccionLocal.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByTransaccionLocal.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosTransaccionLocalOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocalOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByTransaccionLocal.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByTransaccionLocal.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByTransaccionLocal.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaTransaccionLocal(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=transaccionlocalLogic.getTransaccionLocals().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=transaccionlocals.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosTransaccionLocal.setModel(new TransaccionLocalModel(this.transaccionlocalLogic.getTransaccionLocals(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosTransaccionLocal.setModel(new TransaccionLocalModel(this.transaccionlocals,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByTransaccionLocal!=null && this.jInternalFrameOrderByTransaccionLocal.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByTransaccionLocal();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+TransaccionLocalConstantesFunciones.SCLASSWEBTITULO,transaccionlocalConstantesFunciones.resaltarSeleccionarTransaccionLocal,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+TransaccionLocalConstantesFunciones.SCLASSWEBTITULO,transaccionlocalConstantesFunciones.resaltarSeleccionarTransaccionLocal,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_ID));

		if(this.transaccionlocalConstantesFunciones.mostraridTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.transaccionlocalConstantesFunciones.resaltaridTransaccionLocal,this.transaccionlocalConstantesFunciones.activaridTransaccionLocal,iSizeTabla,this,true,"idTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltaridTransaccionLocal,this.transaccionlocalConstantesFunciones.activaridTransaccionLocal,this,true,"idTransaccionLocal","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_RUC));

		if(this.transaccionlocalConstantesFunciones.mostrarrucTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_RUC,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.transaccionlocalConstantesFunciones.resaltarrucTransaccionLocal,this.transaccionlocalConstantesFunciones.activarrucTransaccionLocal,iSizeTabla,this,true,"rucTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarrucTransaccionLocal,this.transaccionlocalConstantesFunciones.activarrucTransaccionLocal,this,true,"rucTransaccionLocal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL));

		if(this.transaccionlocalConstantesFunciones.mostrarrazon_socialTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.transaccionlocalConstantesFunciones.resaltarrazon_socialTransaccionLocal,this.transaccionlocalConstantesFunciones.activarrazon_socialTransaccionLocal,iSizeTabla,this,true,"razon_socialTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarrazon_socialTransaccionLocal,this.transaccionlocalConstantesFunciones.activarrazon_socialTransaccionLocal,this,true,"razon_socialTransaccionLocal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDPERIODODECLARA));

		if(this.transaccionlocalConstantesFunciones.mostrarid_periodo_declaraTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_IDPERIODODECLARA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PeriodoDeclaraTableCell(this.periododeclarasForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_periodo_declaraTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_periodo_declaraTransaccionLocal,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoDeclaraTableCell(this.periododeclarasForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_periodo_declaraTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_periodo_declaraTransaccionLocal,true,"id_periodo_declaraTransaccionLocal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDTRANSACCIONCONTA));

		if(this.transaccionlocalConstantesFunciones.mostrarid_transaccion_contaTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_IDTRANSACCIONCONTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionContaTableCell(this.transaccioncontasForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_transaccion_contaTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_transaccion_contaTransaccionLocal,iSizeTabla));
			tableColumn.setCellEditor(new TransaccionContaTableCell(this.transaccioncontasForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_transaccion_contaTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_transaccion_contaTransaccionLocal,true,"id_transaccion_contaTransaccionLocal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDCLIENTE));

		if(this.transaccionlocalConstantesFunciones.mostrarid_clienteTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_clienteTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_clienteTransaccionLocal,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_clienteTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_clienteTransaccionLocal,true,"id_clienteTransaccionLocal","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION));

		if(this.transaccionlocalConstantesFunciones.mostraridentificacionTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.transaccionlocalConstantesFunciones.resaltaridentificacionTransaccionLocal,this.transaccionlocalConstantesFunciones.activaridentificacionTransaccionLocal,iSizeTabla,this,true,"identificacionTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltaridentificacionTransaccionLocal,this.transaccionlocalConstantesFunciones.activaridentificacionTransaccionLocal,this,true,"identificacionTransaccionLocal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDTIPOCOMPROBANTE));

		if(this.transaccionlocalConstantesFunciones.mostrarid_tipo_comprobanteTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_IDTIPOCOMPROBANTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoComprobanteTableCell(this.tipocomprobantesForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_tipo_comprobanteTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_tipo_comprobanteTransaccionLocal,iSizeTabla));
			tableColumn.setCellEditor(new TipoComprobanteTableCell(this.tipocomprobantesForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_tipo_comprobanteTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_tipo_comprobanteTransaccionLocal,true,"id_tipo_comprobanteTransaccionLocal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION));

		if(this.transaccionlocalConstantesFunciones.mostrarfecha_emisionTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.transaccionlocalConstantesFunciones.resaltarfecha_emisionTransaccionLocal,this.transaccionlocalConstantesFunciones.activarfecha_emisionTransaccionLocal,iSizeTabla,this,true,"fecha_emisionTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarfecha_emisionTransaccionLocal,this.transaccionlocalConstantesFunciones.activarfecha_emisionTransaccionLocal,this,true,"fecha_emisionTransaccionLocal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE));

		if(this.transaccionlocalConstantesFunciones.mostrarfecha_registro_contableTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.transaccionlocalConstantesFunciones.resaltarfecha_registro_contableTransaccionLocal,this.transaccionlocalConstantesFunciones.activarfecha_registro_contableTransaccionLocal,iSizeTabla,this,true,"fecha_registro_contableTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarfecha_registro_contableTransaccionLocal,this.transaccionlocalConstantesFunciones.activarfecha_registro_contableTransaccionLocal,this,true,"fecha_registro_contableTransaccionLocal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL));

		if(this.transaccionlocalConstantesFunciones.mostrarnumero_secuencialTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.transaccionlocalConstantesFunciones.resaltarnumero_secuencialTransaccionLocal,this.transaccionlocalConstantesFunciones.activarnumero_secuencialTransaccionLocal,iSizeTabla,this,true,"numero_secuencialTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarnumero_secuencialTransaccionLocal,this.transaccionlocalConstantesFunciones.activarnumero_secuencialTransaccionLocal,this,true,"numero_secuencialTransaccionLocal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE));

		if(this.transaccionlocalConstantesFunciones.mostrarnumero_serieTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.transaccionlocalConstantesFunciones.resaltarnumero_serieTransaccionLocal,this.transaccionlocalConstantesFunciones.activarnumero_serieTransaccionLocal,iSizeTabla,this,true,"numero_serieTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarnumero_serieTransaccionLocal,this.transaccionlocalConstantesFunciones.activarnumero_serieTransaccionLocal,this,true,"numero_serieTransaccionLocal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION));

		if(this.transaccionlocalConstantesFunciones.mostrarnumero_autorizacionTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.transaccionlocalConstantesFunciones.resaltarnumero_autorizacionTransaccionLocal,this.transaccionlocalConstantesFunciones.activarnumero_autorizacionTransaccionLocal,iSizeTabla,this,true,"numero_autorizacionTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarnumero_autorizacionTransaccionLocal,this.transaccionlocalConstantesFunciones.activarnumero_autorizacionTransaccionLocal,this,true,"numero_autorizacionTransaccionLocal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD));

		if(this.transaccionlocalConstantesFunciones.mostrarfecha_caducidadTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.transaccionlocalConstantesFunciones.resaltarfecha_caducidadTransaccionLocal,this.transaccionlocalConstantesFunciones.activarfecha_caducidadTransaccionLocal,iSizeTabla,this,true,"fecha_caducidadTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarfecha_caducidadTransaccionLocal,this.transaccionlocalConstantesFunciones.activarfecha_caducidadTransaccionLocal,this,true,"fecha_caducidadTransaccionLocal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDTIPOTRIBUTARIO));

		if(this.transaccionlocalConstantesFunciones.mostrarid_tipo_tributarioTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_IDTIPOTRIBUTARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoTributarioTableCell(this.tipotributariosForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_tipo_tributarioTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_tipo_tributarioTransaccionLocal,iSizeTabla));
			tableColumn.setCellEditor(new TipoTributarioTableCell(this.tipotributariosForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_tipo_tributarioTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_tipo_tributarioTransaccionLocal,true,"id_tipo_tributarioTransaccionLocal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE));

		if(this.transaccionlocalConstantesFunciones.mostrarnumero_documento_contableTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.transaccionlocalConstantesFunciones.resaltarnumero_documento_contableTransaccionLocal,this.transaccionlocalConstantesFunciones.activarnumero_documento_contableTransaccionLocal,iSizeTabla,this,true,"numero_documento_contableTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarnumero_documento_contableTransaccionLocal,this.transaccionlocalConstantesFunciones.activarnumero_documento_contableTransaccionLocal,this,true,"numero_documento_contableTransaccionLocal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_ESRISE));

		if(this.transaccionlocalConstantesFunciones.mostrares_riseTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_ESRISE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.transaccionlocalConstantesFunciones.resaltares_riseTransaccionLocal,this.transaccionlocalConstantesFunciones.activares_riseTransaccionLocal,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.transaccionlocalConstantesFunciones.resaltares_riseTransaccionLocal,this.transaccionlocalConstantesFunciones.activares_riseTransaccionLocal,this,true,"es_riseTransaccionLocal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_BIENESIVA));

		if(this.transaccionlocalConstantesFunciones.mostrarbienes_ivaTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_BIENESIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.transaccionlocalConstantesFunciones.resaltarbienes_ivaTransaccionLocal,this.transaccionlocalConstantesFunciones.activarbienes_ivaTransaccionLocal,iSizeTabla,this,true,"bienes_ivaTransaccionLocal","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarbienes_ivaTransaccionLocal,this.transaccionlocalConstantesFunciones.activarbienes_ivaTransaccionLocal,this,true,"bienes_ivaTransaccionLocal","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA));

		if(this.transaccionlocalConstantesFunciones.mostrarbienes_sin_ivaTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.transaccionlocalConstantesFunciones.resaltarbienes_sin_ivaTransaccionLocal,this.transaccionlocalConstantesFunciones.activarbienes_sin_ivaTransaccionLocal,iSizeTabla,this,true,"bienes_sin_ivaTransaccionLocal","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarbienes_sin_ivaTransaccionLocal,this.transaccionlocalConstantesFunciones.activarbienes_sin_ivaTransaccionLocal,this,true,"bienes_sin_ivaTransaccionLocal","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDTIPOIVA));

		if(this.transaccionlocalConstantesFunciones.mostrarid_tipo_ivaTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_IDTIPOIVA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoIvaTableCell(this.tipoivasForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_tipo_ivaTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_tipo_ivaTransaccionLocal,iSizeTabla));
			tableColumn.setCellEditor(new TipoIvaTableCell(this.tipoivasForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_tipo_ivaTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_tipo_ivaTransaccionLocal,true,"id_tipo_ivaTransaccionLocal","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA));

		if(this.transaccionlocalConstantesFunciones.mostrarservicios_ivaTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.transaccionlocalConstantesFunciones.resaltarservicios_ivaTransaccionLocal,this.transaccionlocalConstantesFunciones.activarservicios_ivaTransaccionLocal,iSizeTabla,this,true,"servicios_ivaTransaccionLocal","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarservicios_ivaTransaccionLocal,this.transaccionlocalConstantesFunciones.activarservicios_ivaTransaccionLocal,this,true,"servicios_ivaTransaccionLocal","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA));

		if(this.transaccionlocalConstantesFunciones.mostrarservicios_sin_ivaTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.transaccionlocalConstantesFunciones.resaltarservicios_sin_ivaTransaccionLocal,this.transaccionlocalConstantesFunciones.activarservicios_sin_ivaTransaccionLocal,iSizeTabla,this,true,"servicios_sin_ivaTransaccionLocal","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarservicios_sin_ivaTransaccionLocal,this.transaccionlocalConstantesFunciones.activarservicios_sin_ivaTransaccionLocal,this,true,"servicios_sin_ivaTransaccionLocal","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_MONTOIVA));

		if(this.transaccionlocalConstantesFunciones.mostrarmonto_ivaTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_MONTOIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.transaccionlocalConstantesFunciones.resaltarmonto_ivaTransaccionLocal,this.transaccionlocalConstantesFunciones.activarmonto_ivaTransaccionLocal,iSizeTabla,this,true,"monto_ivaTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarmonto_ivaTransaccionLocal,this.transaccionlocalConstantesFunciones.activarmonto_ivaTransaccionLocal,this,true,"monto_ivaTransaccionLocal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_TOTALIVA));

		if(this.transaccionlocalConstantesFunciones.mostrartotal_ivaTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_TOTALIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.transaccionlocalConstantesFunciones.resaltartotal_ivaTransaccionLocal,this.transaccionlocalConstantesFunciones.activartotal_ivaTransaccionLocal,iSizeTabla,this,true,"total_ivaTransaccionLocal","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltartotal_ivaTransaccionLocal,this.transaccionlocalConstantesFunciones.activartotal_ivaTransaccionLocal,this,true,"total_ivaTransaccionLocal","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA));

		if(this.transaccionlocalConstantesFunciones.mostrartotal_sin_ivaTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.transaccionlocalConstantesFunciones.resaltartotal_sin_ivaTransaccionLocal,this.transaccionlocalConstantesFunciones.activartotal_sin_ivaTransaccionLocal,iSizeTabla,this,true,"total_sin_ivaTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltartotal_sin_ivaTransaccionLocal,this.transaccionlocalConstantesFunciones.activartotal_sin_ivaTransaccionLocal,this,true,"total_sin_ivaTransaccionLocal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_MONTOICE));

		if(this.transaccionlocalConstantesFunciones.mostrarmonto_iceTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_MONTOICE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.transaccionlocalConstantesFunciones.resaltarmonto_iceTransaccionLocal,this.transaccionlocalConstantesFunciones.activarmonto_iceTransaccionLocal,iSizeTabla,this,true,"monto_iceTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarmonto_iceTransaccionLocal,this.transaccionlocalConstantesFunciones.activarmonto_iceTransaccionLocal,this,true,"monto_iceTransaccionLocal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER));

		if(this.transaccionlocalConstantesFunciones.mostrartransfe_iva_retenerTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.transaccionlocalConstantesFunciones.resaltartransfe_iva_retenerTransaccionLocal,this.transaccionlocalConstantesFunciones.activartransfe_iva_retenerTransaccionLocal,iSizeTabla,this,true,"transfe_iva_retenerTransaccionLocal","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltartransfe_iva_retenerTransaccionLocal,this.transaccionlocalConstantesFunciones.activartransfe_iva_retenerTransaccionLocal,this,true,"transfe_iva_retenerTransaccionLocal","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER));

		if(this.transaccionlocalConstantesFunciones.mostrarpresta_iva_retenerTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.transaccionlocalConstantesFunciones.resaltarpresta_iva_retenerTransaccionLocal,this.transaccionlocalConstantesFunciones.activarpresta_iva_retenerTransaccionLocal,iSizeTabla,this,true,"presta_iva_retenerTransaccionLocal","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarpresta_iva_retenerTransaccionLocal,this.transaccionlocalConstantesFunciones.activarpresta_iva_retenerTransaccionLocal,this,true,"presta_iva_retenerTransaccionLocal","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVA));

		if(this.transaccionlocalConstantesFunciones.mostrarid_tipo_retencion_ivaTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoRetencionIvaTableCell(this.tiporetencionivasForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_tipo_retencion_ivaTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_tipo_retencion_ivaTransaccionLocal,iSizeTabla));
			tableColumn.setCellEditor(new TipoRetencionIvaTableCell(this.tiporetencionivasForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_tipo_retencion_ivaTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_tipo_retencion_ivaTransaccionLocal,true,"id_tipo_retencion_ivaTransaccionLocal","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA));

		if(this.transaccionlocalConstantesFunciones.mostrarid_tipo_retencion_iva_prestaTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoRetencionIvaTableCell(this.tiporetencionivaprestasForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_tipo_retencion_iva_prestaTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_tipo_retencion_iva_prestaTransaccionLocal,iSizeTabla));
			tableColumn.setCellEditor(new TipoRetencionIvaTableCell(this.tiporetencionivaprestasForeignKey,this.transaccionlocalConstantesFunciones.resaltarid_tipo_retencion_iva_prestaTransaccionLocal,this,this.transaccionlocalConstantesFunciones.activarid_tipo_retencion_iva_prestaTransaccionLocal,true,"id_tipo_retencion_iva_prestaTransaccionLocal","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO));

		if(this.transaccionlocalConstantesFunciones.mostrartransfe_iva_retenidoTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.transaccionlocalConstantesFunciones.resaltartransfe_iva_retenidoTransaccionLocal,this.transaccionlocalConstantesFunciones.activartransfe_iva_retenidoTransaccionLocal,iSizeTabla,this,true,"transfe_iva_retenidoTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltartransfe_iva_retenidoTransaccionLocal,this.transaccionlocalConstantesFunciones.activartransfe_iva_retenidoTransaccionLocal,this,true,"transfe_iva_retenidoTransaccionLocal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO));

		if(this.transaccionlocalConstantesFunciones.mostrarpresta_iva_retenidoTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.transaccionlocalConstantesFunciones.resaltarpresta_iva_retenidoTransaccionLocal,this.transaccionlocalConstantesFunciones.activarpresta_iva_retenidoTransaccionLocal,iSizeTabla,this,true,"presta_iva_retenidoTransaccionLocal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarpresta_iva_retenidoTransaccionLocal,this.transaccionlocalConstantesFunciones.activarpresta_iva_retenidoTransaccionLocal,this,true,"presta_iva_retenidoTransaccionLocal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION));

		if(this.transaccionlocalConstantesFunciones.mostrarpermite_devolucionTransaccionLocal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.transaccionlocalConstantesFunciones.resaltarpermite_devolucionTransaccionLocal,this.transaccionlocalConstantesFunciones.activarpermite_devolucionTransaccionLocal,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.transaccionlocalConstantesFunciones.resaltarpermite_devolucionTransaccionLocal,this.transaccionlocalConstantesFunciones.activarpermite_devolucionTransaccionLocal,this,true,"permite_devolucionTransaccionLocal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TransaccionLocalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.transaccionlocalSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.transaccionlocalSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosTransaccionLocal.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.transaccionlocalSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.transaccionlocalSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosTransaccionLocal.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarTransaccionLocal && this.isPermisoGuardarCambiosTransaccionLocal) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.transaccionlocalSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.transaccionlocalSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosTransaccionLocal.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosTransaccionLocal.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarTransaccionLocal && this.isPermisoGuardarCambiosTransaccionLocal) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarTransaccionLocal && this.isPermisoGuardarCambiosTransaccionLocal) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosTransaccionLocal.moveColumn(this.jTableDatosTransaccionLocal.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosTransaccionLocal.moveColumn(this.jTableDatosTransaccionLocal.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosTransaccionLocal.moveColumn(this.jTableDatosTransaccionLocal.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosTransaccionLocal.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosTransaccionLocal.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosTransaccionLocal,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosTransaccionLocal.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosTransaccionLocal.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!TransaccionLocalJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosTransaccionLocal.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosTransaccionLocal.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosTransaccionLocal.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=transaccionlocalLogic.getTransaccionLocals().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=transaccionlocals.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosTransaccionLocal.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosTransaccionLocal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosTransaccionLocal();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoTransaccionLocal=false;
					
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormTransaccionLocal==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosTransaccionLocal.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosTransaccionLocal.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.transaccionlocal.getsType().equals("DUPLICADO")
				   || this.transaccionlocal.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoTransaccionLocal=true;
				
				} else {
					this.isEsNuevoTransaccionLocal=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
					if(this.transaccionlocal.getId()>=0 && !this.transaccionlocal.getIsNew()) {						
						this.isEsNuevoTransaccionLocal=false;
						
					} else {
						this.isEsNuevoTransaccionLocal=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoTransaccionLocal(esRelaciones);						
				
				this.seleccionarTransaccionLocal(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.transaccionlocal.getId()<0) {
					this.isEsNuevoTransaccionLocal=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarTransaccionLocal(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarTransaccionLocal(evt,rowIndex);
				}	
				
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion TransaccionLocal: " + this.dDif); 
					}
				}								
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarTransaccionLocal(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.transaccionlocal)) {
					if(this.transaccionlocal.getId()>0) {
						this.transaccionlocal.setIsDeleted(true);
						
						this.transaccionlocalsEliminados.add(this.transaccionlocal);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.transaccionlocalLogic.getTransaccionLocals().remove(this.transaccionlocal);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.transaccionlocals.remove(this.transaccionlocal);				
					}
					
					
					((TransaccionLocalModel) this.jTableDatosTransaccionLocal.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaTransaccionLocal(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarTransaccionLocal(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoTransaccionLocal) {
			
			if(this.jInternalFrameDetalleFormTransaccionLocal==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosTransaccionLocal.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosTransaccionLocal.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioTransaccionLocal(this.transaccionlocal);
				}
				
				//ARCHITECTURE
				try {
					

					//Compra
					if(!this.transaccionlocalConstantesFunciones.cargarid_compraTransaccionLocal || this.transaccionlocalConstantesFunciones.event_dependid_compraTransaccionLocal) {
						//this.cargarCombosComprasForeignKeyLista(" where id="+this.transaccionlocal.getid_compra());
									//this.inicializarActualizarBindingTransaccionLocal(false,false);
						this.comprasForeignKey=new ArrayList<Compra>();

						if(transaccionlocal.getCompra()!=null) {
							this.comprasForeignKey.add(transaccionlocal.getCompra());
						}

						this.addItemDefectoCombosForeignKeyCompra();
						this.cargarCombosFrameComprasForeignKey("Todos");
					}
					this.setActualCompraForeignKey(this.transaccionlocal.getid_compra(),false,"Formulario");

					//PeriodoDeclara
					if(!this.transaccionlocalConstantesFunciones.cargarid_periodo_declaraTransaccionLocal || this.transaccionlocalConstantesFunciones.event_dependid_periodo_declaraTransaccionLocal) {
						//this.cargarCombosPeriodoDeclarasForeignKeyLista(" where id="+this.transaccionlocal.getid_periodo_declara());
									//this.inicializarActualizarBindingTransaccionLocal(false,false);
						this.periododeclarasForeignKey=new ArrayList<PeriodoDeclara>();

						if(transaccionlocal.getPeriodoDeclara()!=null) {
							this.periododeclarasForeignKey.add(transaccionlocal.getPeriodoDeclara());
						}

						this.addItemDefectoCombosForeignKeyPeriodoDeclara();
						this.cargarCombosFramePeriodoDeclarasForeignKey("Todos");
					}
					this.setActualPeriodoDeclaraForeignKey(this.transaccionlocal.getid_periodo_declara(),false,"Formulario");

					//TransaccionConta
					if(!this.transaccionlocalConstantesFunciones.cargarid_transaccion_contaTransaccionLocal || this.transaccionlocalConstantesFunciones.event_dependid_transaccion_contaTransaccionLocal) {
						//this.cargarCombosTransaccionContasForeignKeyLista(" where id="+this.transaccionlocal.getid_transaccion_conta());
									//this.inicializarActualizarBindingTransaccionLocal(false,false);
						this.transaccioncontasForeignKey=new ArrayList<TransaccionConta>();

						if(transaccionlocal.getTransaccionConta()!=null) {
							this.transaccioncontasForeignKey.add(transaccionlocal.getTransaccionConta());
						}

						this.addItemDefectoCombosForeignKeyTransaccionConta();
						this.cargarCombosFrameTransaccionContasForeignKey("Todos");
					}
					this.setActualTransaccionContaForeignKey(this.transaccionlocal.getid_transaccion_conta(),false,"Formulario");

					//Cliente
					if(!this.transaccionlocalConstantesFunciones.cargarid_clienteTransaccionLocal || this.transaccionlocalConstantesFunciones.event_dependid_clienteTransaccionLocal) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.transaccionlocal.getid_cliente());
									//this.inicializarActualizarBindingTransaccionLocal(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(transaccionlocal.getCliente()!=null) {
							this.clientesForeignKey.add(transaccionlocal.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.transaccionlocal.getid_cliente(),false,"Formulario");

					//TipoComprobante
					if(!this.transaccionlocalConstantesFunciones.cargarid_tipo_comprobanteTransaccionLocal || this.transaccionlocalConstantesFunciones.event_dependid_tipo_comprobanteTransaccionLocal) {
						//this.cargarCombosTipoComprobantesForeignKeyLista(" where id="+this.transaccionlocal.getid_tipo_comprobante());
									//this.inicializarActualizarBindingTransaccionLocal(false,false);
						this.tipocomprobantesForeignKey=new ArrayList<TipoComprobante>();

						if(transaccionlocal.getTipoComprobante()!=null) {
							this.tipocomprobantesForeignKey.add(transaccionlocal.getTipoComprobante());
						}

						this.addItemDefectoCombosForeignKeyTipoComprobante();
						this.cargarCombosFrameTipoComprobantesForeignKey("Todos");
					}
					this.setActualTipoComprobanteForeignKey(this.transaccionlocal.getid_tipo_comprobante(),false,"Formulario");

					//TipoTributario
					if(!this.transaccionlocalConstantesFunciones.cargarid_tipo_tributarioTransaccionLocal || this.transaccionlocalConstantesFunciones.event_dependid_tipo_tributarioTransaccionLocal) {
						//this.cargarCombosTipoTributariosForeignKeyLista(" where id="+this.transaccionlocal.getid_tipo_tributario());
									//this.inicializarActualizarBindingTransaccionLocal(false,false);
						this.tipotributariosForeignKey=new ArrayList<TipoTributario>();

						if(transaccionlocal.getTipoTributario()!=null) {
							this.tipotributariosForeignKey.add(transaccionlocal.getTipoTributario());
						}

						this.addItemDefectoCombosForeignKeyTipoTributario();
						this.cargarCombosFrameTipoTributariosForeignKey("Todos");
					}
					this.setActualTipoTributarioForeignKey(this.transaccionlocal.getid_tipo_tributario(),false,"Formulario");

					//AsientoContable
					if(!this.transaccionlocalConstantesFunciones.cargarid_asiento_contableTransaccionLocal || this.transaccionlocalConstantesFunciones.event_dependid_asiento_contableTransaccionLocal) {
						//this.cargarCombosAsientoContablesForeignKeyLista(" where id="+this.transaccionlocal.getid_asiento_contable());
									//this.inicializarActualizarBindingTransaccionLocal(false,false);
						this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

						if(transaccionlocal.getAsientoContable()!=null) {
							this.asientocontablesForeignKey.add(transaccionlocal.getAsientoContable());
						}

						this.addItemDefectoCombosForeignKeyAsientoContable();
						this.cargarCombosFrameAsientoContablesForeignKey("Todos");
					}
					this.setActualAsientoContableForeignKey(this.transaccionlocal.getid_asiento_contable(),false,"Formulario");

					//TipoIva
					if(!this.transaccionlocalConstantesFunciones.cargarid_tipo_ivaTransaccionLocal || this.transaccionlocalConstantesFunciones.event_dependid_tipo_ivaTransaccionLocal) {
						//this.cargarCombosTipoIvasForeignKeyLista(" where id="+this.transaccionlocal.getid_tipo_iva());
									//this.inicializarActualizarBindingTransaccionLocal(false,false);
						this.tipoivasForeignKey=new ArrayList<TipoIva>();

						if(transaccionlocal.getTipoIva()!=null) {
							this.tipoivasForeignKey.add(transaccionlocal.getTipoIva());
						}

						this.addItemDefectoCombosForeignKeyTipoIva();
						this.cargarCombosFrameTipoIvasForeignKey("Todos");
					}
					this.setActualTipoIvaForeignKey(this.transaccionlocal.getid_tipo_iva(),false,"Formulario");

					//TipoRetencionIva
					if(!this.transaccionlocalConstantesFunciones.cargarid_tipo_retencion_ivaTransaccionLocal || this.transaccionlocalConstantesFunciones.event_dependid_tipo_retencion_ivaTransaccionLocal) {
						//this.cargarCombosTipoRetencionIvasForeignKeyLista(" where id="+this.transaccionlocal.getid_tipo_retencion_iva());
									//this.inicializarActualizarBindingTransaccionLocal(false,false);
						this.tiporetencionivasForeignKey=new ArrayList<TipoRetencionIva>();

						if(transaccionlocal.getTipoRetencionIva()!=null) {
							this.tiporetencionivasForeignKey.add(transaccionlocal.getTipoRetencionIva());
						}

						this.addItemDefectoCombosForeignKeyTipoRetencionIva();
						this.cargarCombosFrameTipoRetencionIvasForeignKey("Todos");
					}
					this.setActualTipoRetencionIvaForeignKey(this.transaccionlocal.getid_tipo_retencion_iva(),false,"Formulario");

					//TipoRetencionIvaPresta
					if(!this.transaccionlocalConstantesFunciones.cargarid_tipo_retencion_iva_prestaTransaccionLocal || this.transaccionlocalConstantesFunciones.event_dependid_tipo_retencion_iva_prestaTransaccionLocal) {
						//this.cargarCombosTipoRetencionIvaPrestasForeignKeyLista(" where id="+this.transaccionlocal.getid_tipo_retencion_iva_presta());
									//this.inicializarActualizarBindingTransaccionLocal(false,false);
						this.tiporetencionivaprestasForeignKey=new ArrayList<TipoRetencionIva>();

						if(transaccionlocal.getTipoRetencionIvaPresta()!=null) {
							this.tiporetencionivaprestasForeignKey.add(transaccionlocal.getTipoRetencionIvaPresta());
						}

						this.addItemDefectoCombosForeignKeyTipoRetencionIvaPresta();
						this.cargarCombosFrameTipoRetencionIvaPrestasForeignKey("Todos");
					}
					this.setActualTipoRetencionIvaPrestaForeignKey(this.transaccionlocal.getid_tipo_retencion_iva_presta(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesTransaccionLocal("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesTransaccionLocal(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualTransaccionLocal() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoTransaccionLocal(TransaccionLocal transaccionlocal) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoTransaccionLocal(transaccionlocal,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoTransaccionLocal(TransaccionLocal transaccionlocal,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioTransaccionLocal(transaccionlocal);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyTransaccionLocal(transaccionlocal,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyTransaccionLocal(transaccionlocal);
	}
	
	public void setVariablesObjetoActualToFormularioTransaccionLocal(TransaccionLocal transaccionlocal) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormTransaccionLocal==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormTransaccionLocal.jLabelidTransaccionLocal.setText(transaccionlocal.getId().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldrucTransaccionLocal.setText(transaccionlocal.getruc());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextArearazon_socialTransaccionLocal.setText(transaccionlocal.getrazon_social());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldidentificacionTransaccionLocal.setText(transaccionlocal.getidentificacion());
			this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_emisionTransaccionLocal.setDate(transaccionlocal.getfecha_emision());
			this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_registro_contableTransaccionLocal.setDate(transaccionlocal.getfecha_registro_contable());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_secuencialTransaccionLocal.setText(transaccionlocal.getnumero_secuencial());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_serieTransaccionLocal.setText(transaccionlocal.getnumero_serie());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_autorizacionTransaccionLocal.setText(transaccionlocal.getnumero_autorizacion());
			this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_caducidadTransaccionLocal.setDate(transaccionlocal.getfecha_caducidad());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_documento_contableTransaccionLocal.setText(transaccionlocal.getnumero_documento_contable());
			this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxes_riseTransaccionLocal.setSelected(transaccionlocal.getes_rise());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.setText(transaccionlocal.getbienes_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.setText(transaccionlocal.getbienes_sin_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.setText(transaccionlocal.getservicios_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.setText(transaccionlocal.getservicios_sin_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_ivaTransaccionLocal.setText(transaccionlocal.getmonto_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.setText(transaccionlocal.gettotal_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_sin_ivaTransaccionLocal.setText(transaccionlocal.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_iceTransaccionLocal.setText(transaccionlocal.getmonto_ice().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.setText(transaccionlocal.gettransfe_iva_retener().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.setText(transaccionlocal.getpresta_iva_retener().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenidoTransaccionLocal.setText(transaccionlocal.gettransfe_iva_retenido().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenidoTransaccionLocal.setText(transaccionlocal.getpresta_iva_retenido().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxpermite_devolucionTransaccionLocal.setSelected(transaccionlocal.getpermite_devolucion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,TransaccionLocal transaccionlocalLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,transaccionlocalLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,TransaccionLocal transaccionlocalLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				transaccionlocalLocal=this.transaccionlocal;
			} else {
				transaccionlocalLocal=this.transaccionlocalAnterior;
			}
		}
		
		if(this.permiteMantenimiento(transaccionlocalLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoTransaccionLocal(transaccionlocalLocal,true);
					
					if(transaccionlocalSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(transaccionlocalLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(transaccionlocalLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoTransaccionLocal(TransaccionLocal transaccionlocal,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualTransaccionLocal(transaccionlocal,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(transaccionlocal);
	}
	
	public void setVariablesFormularioToObjetoActualTransaccionLocal(TransaccionLocal transaccionlocal,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualTransaccionLocal(transaccionlocal,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualTransaccionLocal(TransaccionLocal transaccionlocal,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormTransaccionLocal==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormTransaccionLocal.jLabelidTransaccionLocal.getText()==null || this.jInternalFrameDetalleFormTransaccionLocal.jLabelidTransaccionLocal.getText()=="" || this.jInternalFrameDetalleFormTransaccionLocal.jLabelidTransaccionLocal.getText()=="Id") {
				this.jInternalFrameDetalleFormTransaccionLocal.jLabelidTransaccionLocal.setText("0");
			}

			if(conColumnasBase) {transaccionlocal.setId(Long.parseLong(this.jInternalFrameDetalleFormTransaccionLocal.jLabelidTransaccionLocal.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelIdTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setruc(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldrucTransaccionLocal.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_RUC+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelrucTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setrazon_social(this.jInternalFrameDetalleFormTransaccionLocal.jTextArearazon_socialTransaccionLocal.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelrazon_socialTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setidentificacion(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldidentificacionTransaccionLocal.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelidentificacionTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setfecha_emision(this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_emisionTransaccionLocal.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelfecha_emisionTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setfecha_registro_contable(this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_registro_contableTransaccionLocal.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelfecha_registro_contableTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setnumero_secuencial(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_secuencialTransaccionLocal.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelnumero_secuencialTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setnumero_serie(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_serieTransaccionLocal.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelnumero_serieTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setnumero_autorizacion(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_autorizacionTransaccionLocal.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelnumero_autorizacionTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setfecha_caducidad(this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_caducidadTransaccionLocal.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelfecha_caducidadTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setnumero_documento_contable(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_documento_contableTransaccionLocal.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelnumero_documento_contableTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setes_rise(this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxes_riseTransaccionLocal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_ESRISE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabeles_riseTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setbienes_iva(Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_BIENESIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelbienes_ivaTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setbienes_sin_iva(Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelbienes_sin_ivaTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setservicios_iva(Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelservicios_ivaTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setservicios_sin_iva(Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelservicios_sin_ivaTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setmonto_iva(Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_ivaTransaccionLocal.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_MONTOIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelmonto_ivaTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.settotal_iva(Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_TOTALIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabeltotal_ivaTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.settotal_sin_iva(Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_sin_ivaTransaccionLocal.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabeltotal_sin_ivaTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setmonto_ice(Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_iceTransaccionLocal.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_MONTOICE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelmonto_iceTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.settransfe_iva_retener(Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabeltransfe_iva_retenerTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setpresta_iva_retener(Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelpresta_iva_retenerTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.settransfe_iva_retenido(Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenidoTransaccionLocal.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabeltransfe_iva_retenidoTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setpresta_iva_retenido(Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenidoTransaccionLocal.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelpresta_iva_retenidoTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			transaccionlocal.setpermite_devolucion(this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxpermite_devolucionTransaccionLocal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTransaccionLocal.jLabelpermite_devolucionTransaccionLocal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualTransaccionLocal(TransaccionLocal transaccionlocalBean,TransaccionLocal transaccionlocal,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && transaccionlocalBean.getid_periodo_declara()!=null && !transaccionlocalBean.getid_periodo_declara().equals(-1L))) {transaccionlocal.setid_periodo_declara(transaccionlocalBean.getid_periodo_declara());}
			if(conDefault || (!conDefault && transaccionlocalBean.getid_transaccion_conta()!=null && !transaccionlocalBean.getid_transaccion_conta().equals(-1L))) {transaccionlocal.setid_transaccion_conta(transaccionlocalBean.getid_transaccion_conta());}
			if(conDefault || (!conDefault && transaccionlocalBean.getid_cliente()!=null && !transaccionlocalBean.getid_cliente().equals(-1L))) {transaccionlocal.setid_cliente(transaccionlocalBean.getid_cliente());}
			if(conDefault || (!conDefault && transaccionlocalBean.getid_tipo_comprobante()!=null && !transaccionlocalBean.getid_tipo_comprobante().equals(-1L))) {transaccionlocal.setid_tipo_comprobante(transaccionlocalBean.getid_tipo_comprobante());}
			if(conDefault || (!conDefault && transaccionlocalBean.getid_tipo_tributario()!=null && !transaccionlocalBean.getid_tipo_tributario().equals(-1L))) {transaccionlocal.setid_tipo_tributario(transaccionlocalBean.getid_tipo_tributario());}
			if(conDefault || (!conDefault && transaccionlocalBean.getid_tipo_iva()!=null && !transaccionlocalBean.getid_tipo_iva().equals(-1L))) {transaccionlocal.setid_tipo_iva(transaccionlocalBean.getid_tipo_iva());}
			if(conDefault || (!conDefault && transaccionlocalBean.getid_tipo_retencion_iva()!=null && !transaccionlocalBean.getid_tipo_retencion_iva().equals(-1L))) {transaccionlocal.setid_tipo_retencion_iva(transaccionlocalBean.getid_tipo_retencion_iva());}
			if(conDefault || (!conDefault && transaccionlocalBean.getid_tipo_retencion_iva_presta()!=null && !transaccionlocalBean.getid_tipo_retencion_iva_presta().equals(-1L))) {transaccionlocal.setid_tipo_retencion_iva_presta(transaccionlocalBean.getid_tipo_retencion_iva_presta());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosTransaccionLocal(TransaccionLocal transaccionlocalOrigen,TransaccionLocal transaccionlocal,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && transaccionlocalOrigen.getId()!=null && !transaccionlocalOrigen.getId().equals(0L))) {transaccionlocal.setId(transaccionlocalOrigen.getId());}}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getid_compra()!=null && !transaccionlocalOrigen.getid_compra().equals(null))) {transaccionlocal.setid_compra(transaccionlocalOrigen.getid_compra());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getruc()!=null && !transaccionlocalOrigen.getruc().equals(""))) {transaccionlocal.setruc(transaccionlocalOrigen.getruc());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getrazon_social()!=null && !transaccionlocalOrigen.getrazon_social().equals(""))) {transaccionlocal.setrazon_social(transaccionlocalOrigen.getrazon_social());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getid_periodo_declara()!=null && !transaccionlocalOrigen.getid_periodo_declara().equals(-1L))) {transaccionlocal.setid_periodo_declara(transaccionlocalOrigen.getid_periodo_declara());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getid_transaccion_conta()!=null && !transaccionlocalOrigen.getid_transaccion_conta().equals(-1L))) {transaccionlocal.setid_transaccion_conta(transaccionlocalOrigen.getid_transaccion_conta());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getid_cliente()!=null && !transaccionlocalOrigen.getid_cliente().equals(-1L))) {transaccionlocal.setid_cliente(transaccionlocalOrigen.getid_cliente());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getidentificacion()!=null && !transaccionlocalOrigen.getidentificacion().equals(""))) {transaccionlocal.setidentificacion(transaccionlocalOrigen.getidentificacion());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getid_tipo_comprobante()!=null && !transaccionlocalOrigen.getid_tipo_comprobante().equals(-1L))) {transaccionlocal.setid_tipo_comprobante(transaccionlocalOrigen.getid_tipo_comprobante());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getfecha_emision()!=null && !transaccionlocalOrigen.getfecha_emision().equals(new Date()))) {transaccionlocal.setfecha_emision(transaccionlocalOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getfecha_registro_contable()!=null && !transaccionlocalOrigen.getfecha_registro_contable().equals(new Date()))) {transaccionlocal.setfecha_registro_contable(transaccionlocalOrigen.getfecha_registro_contable());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getnumero_secuencial()!=null && !transaccionlocalOrigen.getnumero_secuencial().equals(""))) {transaccionlocal.setnumero_secuencial(transaccionlocalOrigen.getnumero_secuencial());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getnumero_serie()!=null && !transaccionlocalOrigen.getnumero_serie().equals(""))) {transaccionlocal.setnumero_serie(transaccionlocalOrigen.getnumero_serie());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getnumero_autorizacion()!=null && !transaccionlocalOrigen.getnumero_autorizacion().equals(""))) {transaccionlocal.setnumero_autorizacion(transaccionlocalOrigen.getnumero_autorizacion());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getfecha_caducidad()!=null && !transaccionlocalOrigen.getfecha_caducidad().equals(new Date()))) {transaccionlocal.setfecha_caducidad(transaccionlocalOrigen.getfecha_caducidad());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getid_tipo_tributario()!=null && !transaccionlocalOrigen.getid_tipo_tributario().equals(-1L))) {transaccionlocal.setid_tipo_tributario(transaccionlocalOrigen.getid_tipo_tributario());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getnumero_documento_contable()!=null && !transaccionlocalOrigen.getnumero_documento_contable().equals(""))) {transaccionlocal.setnumero_documento_contable(transaccionlocalOrigen.getnumero_documento_contable());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getid_asiento_contable()!=null && !transaccionlocalOrigen.getid_asiento_contable().equals(null))) {transaccionlocal.setid_asiento_contable(transaccionlocalOrigen.getid_asiento_contable());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getes_rise()!=null && !transaccionlocalOrigen.getes_rise().equals(false))) {transaccionlocal.setes_rise(transaccionlocalOrigen.getes_rise());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getbienes_iva()!=null && !transaccionlocalOrigen.getbienes_iva().equals(0.0))) {transaccionlocal.setbienes_iva(transaccionlocalOrigen.getbienes_iva());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getbienes_sin_iva()!=null && !transaccionlocalOrigen.getbienes_sin_iva().equals(0.0))) {transaccionlocal.setbienes_sin_iva(transaccionlocalOrigen.getbienes_sin_iva());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getid_tipo_iva()!=null && !transaccionlocalOrigen.getid_tipo_iva().equals(-1L))) {transaccionlocal.setid_tipo_iva(transaccionlocalOrigen.getid_tipo_iva());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getservicios_iva()!=null && !transaccionlocalOrigen.getservicios_iva().equals(0.0))) {transaccionlocal.setservicios_iva(transaccionlocalOrigen.getservicios_iva());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getservicios_sin_iva()!=null && !transaccionlocalOrigen.getservicios_sin_iva().equals(0.0))) {transaccionlocal.setservicios_sin_iva(transaccionlocalOrigen.getservicios_sin_iva());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getmonto_iva()!=null && !transaccionlocalOrigen.getmonto_iva().equals(0.0))) {transaccionlocal.setmonto_iva(transaccionlocalOrigen.getmonto_iva());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.gettotal_iva()!=null && !transaccionlocalOrigen.gettotal_iva().equals(0.0))) {transaccionlocal.settotal_iva(transaccionlocalOrigen.gettotal_iva());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.gettotal_sin_iva()!=null && !transaccionlocalOrigen.gettotal_sin_iva().equals(0.0))) {transaccionlocal.settotal_sin_iva(transaccionlocalOrigen.gettotal_sin_iva());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getmonto_ice()!=null && !transaccionlocalOrigen.getmonto_ice().equals(0.0))) {transaccionlocal.setmonto_ice(transaccionlocalOrigen.getmonto_ice());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.gettransfe_iva_retener()!=null && !transaccionlocalOrigen.gettransfe_iva_retener().equals(0.0))) {transaccionlocal.settransfe_iva_retener(transaccionlocalOrigen.gettransfe_iva_retener());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getpresta_iva_retener()!=null && !transaccionlocalOrigen.getpresta_iva_retener().equals(0.0))) {transaccionlocal.setpresta_iva_retener(transaccionlocalOrigen.getpresta_iva_retener());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getid_tipo_retencion_iva()!=null && !transaccionlocalOrigen.getid_tipo_retencion_iva().equals(-1L))) {transaccionlocal.setid_tipo_retencion_iva(transaccionlocalOrigen.getid_tipo_retencion_iva());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getid_tipo_retencion_iva_presta()!=null && !transaccionlocalOrigen.getid_tipo_retencion_iva_presta().equals(-1L))) {transaccionlocal.setid_tipo_retencion_iva_presta(transaccionlocalOrigen.getid_tipo_retencion_iva_presta());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.gettransfe_iva_retenido()!=null && !transaccionlocalOrigen.gettransfe_iva_retenido().equals(0.0))) {transaccionlocal.settransfe_iva_retenido(transaccionlocalOrigen.gettransfe_iva_retenido());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getpresta_iva_retenido()!=null && !transaccionlocalOrigen.getpresta_iva_retenido().equals(0.0))) {transaccionlocal.setpresta_iva_retenido(transaccionlocalOrigen.getpresta_iva_retenido());}
			if(conDefault || (!conDefault && transaccionlocalOrigen.getpermite_devolucion()!=null && !transaccionlocalOrigen.getpermite_devolucion().equals(false))) {transaccionlocal.setpermite_devolucion(transaccionlocalOrigen.getpermite_devolucion());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioTransaccionLocal(TransaccionLocal transaccionlocal) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormTransaccionLocal.jLabelidTransaccionLocal.setText(transaccionlocal.getId().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldrucTransaccionLocal.setText(transaccionlocal.getruc());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextArearazon_socialTransaccionLocal.setText(transaccionlocal.getrazon_social());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldidentificacionTransaccionLocal.setText(transaccionlocal.getidentificacion());
			this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_emisionTransaccionLocal.setDate(transaccionlocal.getfecha_emision());
			this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_registro_contableTransaccionLocal.setDate(transaccionlocal.getfecha_registro_contable());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_secuencialTransaccionLocal.setText(transaccionlocal.getnumero_secuencial());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_serieTransaccionLocal.setText(transaccionlocal.getnumero_serie());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_autorizacionTransaccionLocal.setText(transaccionlocal.getnumero_autorizacion());
			this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_caducidadTransaccionLocal.setDate(transaccionlocal.getfecha_caducidad());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_documento_contableTransaccionLocal.setText(transaccionlocal.getnumero_documento_contable());
			this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxes_riseTransaccionLocal.setSelected(transaccionlocal.getes_rise());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.setText(transaccionlocal.getbienes_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.setText(transaccionlocal.getbienes_sin_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.setText(transaccionlocal.getservicios_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.setText(transaccionlocal.getservicios_sin_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_ivaTransaccionLocal.setText(transaccionlocal.getmonto_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.setText(transaccionlocal.gettotal_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_sin_ivaTransaccionLocal.setText(transaccionlocal.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_iceTransaccionLocal.setText(transaccionlocal.getmonto_ice().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.setText(transaccionlocal.gettransfe_iva_retener().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.setText(transaccionlocal.getpresta_iva_retener().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenidoTransaccionLocal.setText(transaccionlocal.gettransfe_iva_retenido().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenidoTransaccionLocal.setText(transaccionlocal.getpresta_iva_retenido().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxpermite_devolucionTransaccionLocal.setSelected(transaccionlocal.getpermite_devolucion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioTransaccionLocal(TransaccionLocalBean transaccionlocalBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormTransaccionLocal.jLabelidTransaccionLocal.setText(transaccionlocalBean.getId().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldrucTransaccionLocal.setText(transaccionlocalBean.getruc());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextArearazon_socialTransaccionLocal.setText(transaccionlocalBean.getrazon_social());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldidentificacionTransaccionLocal.setText(transaccionlocalBean.getidentificacion());
			this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_emisionTransaccionLocal.setDate(transaccionlocalBean.getfecha_emision());
			this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_registro_contableTransaccionLocal.setDate(transaccionlocalBean.getfecha_registro_contable());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_secuencialTransaccionLocal.setText(transaccionlocalBean.getnumero_secuencial());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_serieTransaccionLocal.setText(transaccionlocalBean.getnumero_serie());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_autorizacionTransaccionLocal.setText(transaccionlocalBean.getnumero_autorizacion());
			this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_caducidadTransaccionLocal.setDate(transaccionlocalBean.getfecha_caducidad());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_documento_contableTransaccionLocal.setText(transaccionlocalBean.getnumero_documento_contable());
			this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxes_riseTransaccionLocal.setSelected(transaccionlocalBean.getes_rise());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.setText(transaccionlocalBean.getbienes_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.setText(transaccionlocalBean.getbienes_sin_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.setText(transaccionlocalBean.getservicios_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.setText(transaccionlocalBean.getservicios_sin_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_ivaTransaccionLocal.setText(transaccionlocalBean.getmonto_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.setText(transaccionlocalBean.gettotal_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_sin_ivaTransaccionLocal.setText(transaccionlocalBean.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_iceTransaccionLocal.setText(transaccionlocalBean.getmonto_ice().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.setText(transaccionlocalBean.gettransfe_iva_retener().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.setText(transaccionlocalBean.getpresta_iva_retener().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenidoTransaccionLocal.setText(transaccionlocalBean.gettransfe_iva_retenido().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenidoTransaccionLocal.setText(transaccionlocalBean.getpresta_iva_retenido().toString());
			this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxpermite_devolucionTransaccionLocal.setSelected(transaccionlocalBean.getpermite_devolucion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanTransaccionLocal(TransaccionLocalParameterReturnGeneral transaccionlocalReturnGeneral,TransaccionLocalBean transaccionlocalBean,Boolean conDefault) throws Exception { 
		try {
			TransaccionLocal transaccionlocalLocal=new TransaccionLocal();
			
			transaccionlocalLocal=transaccionlocalReturnGeneral.getTransaccionLocal();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && transaccionlocalLocal.getId()!=null && !transaccionlocalLocal.getId().equals(0L))) {transaccionlocalBean.setId(transaccionlocalLocal.getId());}}
			if(conDefault || (!conDefault && transaccionlocalLocal.getruc()!=null && !transaccionlocalLocal.getruc().equals(""))) {transaccionlocalBean.setruc(transaccionlocalLocal.getruc());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getrazon_social()!=null && !transaccionlocalLocal.getrazon_social().equals(""))) {transaccionlocalBean.setrazon_social(transaccionlocalLocal.getrazon_social());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getid_periodo_declara()!=null && !transaccionlocalLocal.getid_periodo_declara().equals(-1L))) {transaccionlocalBean.setid_periodo_declara(transaccionlocalLocal.getid_periodo_declara());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getid_transaccion_conta()!=null && !transaccionlocalLocal.getid_transaccion_conta().equals(-1L))) {transaccionlocalBean.setid_transaccion_conta(transaccionlocalLocal.getid_transaccion_conta());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getid_cliente()!=null && !transaccionlocalLocal.getid_cliente().equals(-1L))) {transaccionlocalBean.setid_cliente(transaccionlocalLocal.getid_cliente());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getidentificacion()!=null && !transaccionlocalLocal.getidentificacion().equals(""))) {transaccionlocalBean.setidentificacion(transaccionlocalLocal.getidentificacion());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getid_tipo_comprobante()!=null && !transaccionlocalLocal.getid_tipo_comprobante().equals(-1L))) {transaccionlocalBean.setid_tipo_comprobante(transaccionlocalLocal.getid_tipo_comprobante());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getfecha_emision()!=null && !transaccionlocalLocal.getfecha_emision().equals(new Date()))) {transaccionlocalBean.setfecha_emision(transaccionlocalLocal.getfecha_emision());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getfecha_registro_contable()!=null && !transaccionlocalLocal.getfecha_registro_contable().equals(new Date()))) {transaccionlocalBean.setfecha_registro_contable(transaccionlocalLocal.getfecha_registro_contable());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getnumero_secuencial()!=null && !transaccionlocalLocal.getnumero_secuencial().equals(""))) {transaccionlocalBean.setnumero_secuencial(transaccionlocalLocal.getnumero_secuencial());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getnumero_serie()!=null && !transaccionlocalLocal.getnumero_serie().equals(""))) {transaccionlocalBean.setnumero_serie(transaccionlocalLocal.getnumero_serie());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getnumero_autorizacion()!=null && !transaccionlocalLocal.getnumero_autorizacion().equals(""))) {transaccionlocalBean.setnumero_autorizacion(transaccionlocalLocal.getnumero_autorizacion());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getfecha_caducidad()!=null && !transaccionlocalLocal.getfecha_caducidad().equals(new Date()))) {transaccionlocalBean.setfecha_caducidad(transaccionlocalLocal.getfecha_caducidad());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getid_tipo_tributario()!=null && !transaccionlocalLocal.getid_tipo_tributario().equals(-1L))) {transaccionlocalBean.setid_tipo_tributario(transaccionlocalLocal.getid_tipo_tributario());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getnumero_documento_contable()!=null && !transaccionlocalLocal.getnumero_documento_contable().equals(""))) {transaccionlocalBean.setnumero_documento_contable(transaccionlocalLocal.getnumero_documento_contable());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getes_rise()!=null && !transaccionlocalLocal.getes_rise().equals(false))) {transaccionlocalBean.setes_rise(transaccionlocalLocal.getes_rise());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getbienes_iva()!=null && !transaccionlocalLocal.getbienes_iva().equals(0.0))) {transaccionlocalBean.setbienes_iva(transaccionlocalLocal.getbienes_iva());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getbienes_sin_iva()!=null && !transaccionlocalLocal.getbienes_sin_iva().equals(0.0))) {transaccionlocalBean.setbienes_sin_iva(transaccionlocalLocal.getbienes_sin_iva());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getid_tipo_iva()!=null && !transaccionlocalLocal.getid_tipo_iva().equals(-1L))) {transaccionlocalBean.setid_tipo_iva(transaccionlocalLocal.getid_tipo_iva());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getservicios_iva()!=null && !transaccionlocalLocal.getservicios_iva().equals(0.0))) {transaccionlocalBean.setservicios_iva(transaccionlocalLocal.getservicios_iva());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getservicios_sin_iva()!=null && !transaccionlocalLocal.getservicios_sin_iva().equals(0.0))) {transaccionlocalBean.setservicios_sin_iva(transaccionlocalLocal.getservicios_sin_iva());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getmonto_iva()!=null && !transaccionlocalLocal.getmonto_iva().equals(0.0))) {transaccionlocalBean.setmonto_iva(transaccionlocalLocal.getmonto_iva());}
			if(conDefault || (!conDefault && transaccionlocalLocal.gettotal_iva()!=null && !transaccionlocalLocal.gettotal_iva().equals(0.0))) {transaccionlocalBean.settotal_iva(transaccionlocalLocal.gettotal_iva());}
			if(conDefault || (!conDefault && transaccionlocalLocal.gettotal_sin_iva()!=null && !transaccionlocalLocal.gettotal_sin_iva().equals(0.0))) {transaccionlocalBean.settotal_sin_iva(transaccionlocalLocal.gettotal_sin_iva());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getmonto_ice()!=null && !transaccionlocalLocal.getmonto_ice().equals(0.0))) {transaccionlocalBean.setmonto_ice(transaccionlocalLocal.getmonto_ice());}
			if(conDefault || (!conDefault && transaccionlocalLocal.gettransfe_iva_retener()!=null && !transaccionlocalLocal.gettransfe_iva_retener().equals(0.0))) {transaccionlocalBean.settransfe_iva_retener(transaccionlocalLocal.gettransfe_iva_retener());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getpresta_iva_retener()!=null && !transaccionlocalLocal.getpresta_iva_retener().equals(0.0))) {transaccionlocalBean.setpresta_iva_retener(transaccionlocalLocal.getpresta_iva_retener());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getid_tipo_retencion_iva()!=null && !transaccionlocalLocal.getid_tipo_retencion_iva().equals(-1L))) {transaccionlocalBean.setid_tipo_retencion_iva(transaccionlocalLocal.getid_tipo_retencion_iva());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getid_tipo_retencion_iva_presta()!=null && !transaccionlocalLocal.getid_tipo_retencion_iva_presta().equals(-1L))) {transaccionlocalBean.setid_tipo_retencion_iva_presta(transaccionlocalLocal.getid_tipo_retencion_iva_presta());}
			if(conDefault || (!conDefault && transaccionlocalLocal.gettransfe_iva_retenido()!=null && !transaccionlocalLocal.gettransfe_iva_retenido().equals(0.0))) {transaccionlocalBean.settransfe_iva_retenido(transaccionlocalLocal.gettransfe_iva_retenido());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getpresta_iva_retenido()!=null && !transaccionlocalLocal.getpresta_iva_retenido().equals(0.0))) {transaccionlocalBean.setpresta_iva_retenido(transaccionlocalLocal.getpresta_iva_retenido());}
			if(conDefault || (!conDefault && transaccionlocalLocal.getpermite_devolucion()!=null && !transaccionlocalLocal.getpermite_devolucion().equals(false))) {transaccionlocalBean.setpermite_devolucion(transaccionlocalLocal.getpermite_devolucion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxTransaccionLocalGenerico(Long idTransaccionLocalSeleccionado,JComboBox jComboBoxTransaccionLocal,List<TransaccionLocal> transaccionlocalsLocal)throws Exception {
		try {
			TransaccionLocal  transaccionlocalTemp=null;

			for(TransaccionLocal transaccionlocalAux:transaccionlocalsLocal) {
				if(transaccionlocalAux.getId()!=null && transaccionlocalAux.getId().equals(idTransaccionLocalSeleccionado)) {
					transaccionlocalTemp=transaccionlocalAux;
					break;
				}
			}

			jComboBoxTransaccionLocal.setSelectedItem(transaccionlocalTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxTransaccionLocalGenerico(JComboBox jComboBoxTransaccionLocal,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxTransaccionLocal.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxTransaccionLocal.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxTransaccionLocal.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxTransaccionLocal.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxTransaccionLocal.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxTransaccionLocal.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxTransaccionLocal.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxTransaccionLocal.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxTransaccionLocal.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxTransaccionLocal.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			transaccionlocal=(TransaccionLocal) transaccionlocalLogic.getTransaccionLocals().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			transaccionlocal =(TransaccionLocal) transaccionlocals.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Compra")) {
			//sDescripcion=this.getActualCompraForeignKeyDescripcion((Long)value);
			if(!transaccionlocal.getIsNew() && !transaccionlocal.getIsChanged() && !transaccionlocal.getIsDeleted()) {
				sDescripcion=transaccionlocal.getcompra_descripcion();
			} else {
				//sDescripcion=this.getActualCompraForeignKeyDescripcion((Long)value);
				sDescripcion=transaccionlocal.getcompra_descripcion();
			}
		}

		if(sTipo.equals("PeriodoDeclara")) {
			//sDescripcion=this.getActualPeriodoDeclaraForeignKeyDescripcion((Long)value);
			if(!transaccionlocal.getIsNew() && !transaccionlocal.getIsChanged() && !transaccionlocal.getIsDeleted()) {
				sDescripcion=transaccionlocal.getperiododeclara_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoDeclaraForeignKeyDescripcion((Long)value);
				sDescripcion=transaccionlocal.getperiododeclara_descripcion();
			}
		}

		if(sTipo.equals("TransaccionConta")) {
			//sDescripcion=this.getActualTransaccionContaForeignKeyDescripcion((Long)value);
			if(!transaccionlocal.getIsNew() && !transaccionlocal.getIsChanged() && !transaccionlocal.getIsDeleted()) {
				sDescripcion=transaccionlocal.gettransaccionconta_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionContaForeignKeyDescripcion((Long)value);
				sDescripcion=transaccionlocal.gettransaccionconta_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!transaccionlocal.getIsNew() && !transaccionlocal.getIsChanged() && !transaccionlocal.getIsDeleted()) {
				sDescripcion=transaccionlocal.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=transaccionlocal.getcliente_descripcion();
			}
		}

		if(sTipo.equals("TipoComprobante")) {
			//sDescripcion=this.getActualTipoComprobanteForeignKeyDescripcion((Long)value);
			if(!transaccionlocal.getIsNew() && !transaccionlocal.getIsChanged() && !transaccionlocal.getIsDeleted()) {
				sDescripcion=transaccionlocal.gettipocomprobante_descripcion();
			} else {
				//sDescripcion=this.getActualTipoComprobanteForeignKeyDescripcion((Long)value);
				sDescripcion=transaccionlocal.gettipocomprobante_descripcion();
			}
		}

		if(sTipo.equals("TipoTributario")) {
			//sDescripcion=this.getActualTipoTributarioForeignKeyDescripcion((Long)value);
			if(!transaccionlocal.getIsNew() && !transaccionlocal.getIsChanged() && !transaccionlocal.getIsDeleted()) {
				sDescripcion=transaccionlocal.gettipotributario_descripcion();
			} else {
				//sDescripcion=this.getActualTipoTributarioForeignKeyDescripcion((Long)value);
				sDescripcion=transaccionlocal.gettipotributario_descripcion();
			}
		}

		if(sTipo.equals("AsientoContable")) {
			//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
			if(!transaccionlocal.getIsNew() && !transaccionlocal.getIsChanged() && !transaccionlocal.getIsDeleted()) {
				sDescripcion=transaccionlocal.getasientocontable_descripcion();
			} else {
				//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
				sDescripcion=transaccionlocal.getasientocontable_descripcion();
			}
		}

		if(sTipo.equals("TipoIva")) {
			//sDescripcion=this.getActualTipoIvaForeignKeyDescripcion((Long)value);
			if(!transaccionlocal.getIsNew() && !transaccionlocal.getIsChanged() && !transaccionlocal.getIsDeleted()) {
				sDescripcion=transaccionlocal.gettipoiva_descripcion();
			} else {
				//sDescripcion=this.getActualTipoIvaForeignKeyDescripcion((Long)value);
				sDescripcion=transaccionlocal.gettipoiva_descripcion();
			}
		}

		if(sTipo.equals("TipoRetencionIva")) {
			//sDescripcion=this.getActualTipoRetencionIvaForeignKeyDescripcion((Long)value);
			if(!transaccionlocal.getIsNew() && !transaccionlocal.getIsChanged() && !transaccionlocal.getIsDeleted()) {
				sDescripcion=transaccionlocal.gettiporetencioniva_descripcion();
			} else {
				//sDescripcion=this.getActualTipoRetencionIvaForeignKeyDescripcion((Long)value);
				sDescripcion=transaccionlocal.gettiporetencioniva_descripcion();
			}
		}

		if(sTipo.equals("TipoRetencionIvaPresta")) {
			//sDescripcion=this.getActualTipoRetencionIvaPrestaForeignKeyDescripcion((Long)value);
			if(!transaccionlocal.getIsNew() && !transaccionlocal.getIsChanged() && !transaccionlocal.getIsDeleted()) {
				sDescripcion=transaccionlocal.gettiporetencionivapresta_descripcion();
			} else {
				//sDescripcion=this.getActualTipoRetencionIvaPrestaForeignKeyDescripcion((Long)value);
				sDescripcion=transaccionlocal.gettiporetencionivapresta_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		TransaccionLocal transaccionlocalRow=new TransaccionLocal();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			transaccionlocalRow=(TransaccionLocal) transaccionlocalLogic.getTransaccionLocals().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			transaccionlocalRow=(TransaccionLocal) transaccionlocals.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualTransaccionLocal(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoTransaccionLocal.setVisible((this.isVisibilidadCeldaNuevoTransaccionLocal && this.isPermisoNuevoTransaccionLocal));			
			this.jButtonDuplicarTransaccionLocal.setVisible((this.isVisibilidadCeldaDuplicarTransaccionLocal && this.isPermisoDuplicarTransaccionLocal));			
			this.jButtonCopiarTransaccionLocal.setVisible((this.isVisibilidadCeldaCopiarTransaccionLocal && this.isPermisoCopiarTransaccionLocal));
			this.jButtonVerFormTransaccionLocal.setVisible((this.isVisibilidadCeldaVerFormTransaccionLocal && this.isPermisoVerFormTransaccionLocal));
			
			this.jButtonAbrirOrderByTransaccionLocal.setVisible((this.isVisibilidadCeldaOrdenTransaccionLocal && this.isPermisoOrdenTransaccionLocal));			
			
			this.jButtonNuevoRelacionesTransaccionLocal.setVisible((this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal && this.isPermisoNuevoTransaccionLocal));			
			this.jButtonNuevoGuardarCambiosTransaccionLocal.setVisible((this.isVisibilidadCeldaNuevoTransaccionLocal && this.isPermisoNuevoTransaccionLocal && this.isPermisoGuardarCambiosTransaccionLocal));
			
			if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonModificarTransaccionLocal.setVisible((this.isVisibilidadCeldaModificarTransaccionLocal && this.isPermisoActualizarTransaccionLocal));	
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonActualizarTransaccionLocal.setVisible((this.isVisibilidadCeldaActualizarTransaccionLocal && this.isPermisoActualizarTransaccionLocal));	
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonEliminarTransaccionLocal.setVisible((this.isVisibilidadCeldaEliminarTransaccionLocal && this.isPermisoEliminarTransaccionLocal));
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonCancelarTransaccionLocal.setVisible(this.isVisibilidadCeldaCancelarTransaccionLocal);							
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonGuardarCambiosTransaccionLocal.setVisible((this.isVisibilidadCeldaGuardarTransaccionLocal && this.isPermisoGuardarCambiosTransaccionLocal));			
			
			}
						
			this.jButtonGuardarCambiosTablaTransaccionLocal.setVisible((this.isVisibilidadCeldaGuardarCambiosTransaccionLocal && this.isPermisoGuardarCambiosTransaccionLocal));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarTransaccionLocal.setVisible((this.isVisibilidadCeldaNuevoTransaccionLocal && this.isPermisoNuevoTransaccionLocal));						
			this.jButtonDuplicarToolBarTransaccionLocal.setVisible((this.isVisibilidadCeldaDuplicarTransaccionLocal && this.isPermisoDuplicarTransaccionLocal));						
			this.jButtonCopiarToolBarTransaccionLocal.setVisible((this.isVisibilidadCeldaCopiarTransaccionLocal && this.isPermisoCopiarTransaccionLocal));			
			this.jButtonVerFormToolBarTransaccionLocal.setVisible((this.isVisibilidadCeldaVerFormTransaccionLocal && this.isPermisoVerFormTransaccionLocal));			
			this.jButtonAbrirOrderByToolBarTransaccionLocal.setVisible((this.isVisibilidadCeldaOrdenTransaccionLocal && this.isPermisoOrdenTransaccionLocal));
			this.jButtonNuevoRelacionesToolBarTransaccionLocal.setVisible((this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal && this.isPermisoNuevoTransaccionLocal));			
			this.jButtonNuevoGuardarCambiosToolBarTransaccionLocal.setVisible((this.isVisibilidadCeldaNuevoTransaccionLocal && this.isPermisoNuevoTransaccionLocal && this.isPermisoGuardarCambiosTransaccionLocal));			
			
			if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonModificarToolBarTransaccionLocal.setVisible((this.isVisibilidadCeldaModificarTransaccionLocal && this.isPermisoActualizarTransaccionLocal));	
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonActualizarToolBarTransaccionLocal.setVisible((this.isVisibilidadCeldaActualizarTransaccionLocal  && this.isPermisoActualizarTransaccionLocal));	
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonEliminarToolBarTransaccionLocal.setVisible((this.isVisibilidadCeldaEliminarTransaccionLocal && this.isPermisoEliminarTransaccionLocal));
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonCancelarToolBarTransaccionLocal.setVisible(this.isVisibilidadCeldaCancelarTransaccionLocal);				
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonGuardarCambiosToolBarTransaccionLocal.setVisible((this.isVisibilidadCeldaGuardarTransaccionLocal && this.isPermisoGuardarCambiosTransaccionLocal));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarTransaccionLocal.setVisible((this.isVisibilidadCeldaGuardarCambiosTransaccionLocal && this.isPermisoGuardarCambiosTransaccionLocal));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoTransaccionLocal.setVisible((this.isVisibilidadCeldaNuevoTransaccionLocal && this.isPermisoNuevoTransaccionLocal));			
			this.jMenuItemDuplicarTransaccionLocal.setVisible((this.isVisibilidadCeldaDuplicarTransaccionLocal && this.isPermisoDuplicarTransaccionLocal));			
			this.jMenuItemCopiarTransaccionLocal.setVisible((this.isVisibilidadCeldaCopiarTransaccionLocal && this.isPermisoCopiarTransaccionLocal));			
			this.jMenuItemVerFormTransaccionLocal.setVisible((this.isVisibilidadCeldaVerFormTransaccionLocal && this.isPermisoVerFormTransaccionLocal));			
			this.jMenuItemAbrirOrderByTransaccionLocal.setVisible((this.isVisibilidadCeldaOrdenTransaccionLocal && this.isPermisoOrdenTransaccionLocal));			
			//this.jMenuItemMostrarOcultarTransaccionLocal.setVisible((this.isVisibilidadCeldaOrdenTransaccionLocal && this.isPermisoOrdenTransaccionLocal));
			this.jMenuItemDetalleAbrirOrderByTransaccionLocal.setVisible((this.isVisibilidadCeldaOrdenTransaccionLocal && this.isPermisoOrdenTransaccionLocal));			
			//this.jMenuItemDetalleMostrarOcultarTransaccionLocal.setVisible((this.isVisibilidadCeldaOrdenTransaccionLocal && this.isPermisoOrdenTransaccionLocal));			
			this.jMenuItemNuevoRelacionesTransaccionLocal.setVisible((this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal && this.isPermisoNuevoTransaccionLocal));			
			this.jMenuItemNuevoGuardarCambiosTransaccionLocal.setVisible((this.isVisibilidadCeldaNuevoTransaccionLocal && this.isPermisoNuevoTransaccionLocal && this.isPermisoGuardarCambiosTransaccionLocal));									
			
			if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
			this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemModificarTransaccionLocal.setVisible((this.isVisibilidadCeldaModificarTransaccionLocal && this.isPermisoActualizarTransaccionLocal));	
			this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemActualizarTransaccionLocal.setVisible((this.isVisibilidadCeldaActualizarTransaccionLocal && this.isPermisoActualizarTransaccionLocal));	
			this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemEliminarTransaccionLocal.setVisible((this.isVisibilidadCeldaEliminarTransaccionLocal && this.isPermisoEliminarTransaccionLocal));
			this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemCancelarTransaccionLocal.setVisible(this.isVisibilidadCeldaCancelarTransaccionLocal);				
			}
			
			this.jMenuItemGuardarCambiosTransaccionLocal.setVisible((this.isVisibilidadCeldaGuardarTransaccionLocal && this.isPermisoGuardarCambiosTransaccionLocal));						
			this.jMenuItemGuardarCambiosTablaTransaccionLocal.setVisible((this.isVisibilidadCeldaGuardarCambiosTransaccionLocal && this.isPermisoGuardarCambiosTransaccionLocal));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoTransaccionLocal=this.jButtonNuevoTransaccionLocal.isVisible();
			this.isVisibilidadCeldaDuplicarTransaccionLocal=this.jButtonDuplicarTransaccionLocal.isVisible();
			this.isVisibilidadCeldaCopiarTransaccionLocal=this.jButtonCopiarTransaccionLocal.isVisible();
			this.isVisibilidadCeldaVerFormTransaccionLocal=this.jButtonVerFormTransaccionLocal.isVisible();
			
			this.isVisibilidadCeldaOrdenTransaccionLocal=this.jButtonAbrirOrderByTransaccionLocal.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=this.jButtonNuevoRelacionesTransaccionLocal.isVisible();
			this.isVisibilidadCeldaModificarTransaccionLocal=this.jButtonModificarTransaccionLocal.isVisible();
			
			if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
			this.isVisibilidadCeldaActualizarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jButtonActualizarTransaccionLocal.isVisible();
			this.isVisibilidadCeldaEliminarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jButtonEliminarTransaccionLocal.isVisible();
			this.isVisibilidadCeldaCancelarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jButtonCancelarTransaccionLocal.isVisible();
			this.isVisibilidadCeldaGuardarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jButtonGuardarCambiosTransaccionLocal.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosTransaccionLocal=this.jButtonGuardarCambiosTablaTransaccionLocal.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoTransaccionLocal=this.jButtonNuevoToolBarTransaccionLocal.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=this.jButtonNuevoRelacionesToolBarTransaccionLocal.isVisible();
			
			if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
			this.isVisibilidadCeldaModificarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jButtonModificarToolBarTransaccionLocal.isVisible();
			this.isVisibilidadCeldaActualizarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jButtonActualizarToolBarTransaccionLocal.isVisible();
			this.isVisibilidadCeldaEliminarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jButtonEliminarToolBarTransaccionLocal.isVisible();
			this.isVisibilidadCeldaCancelarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jButtonCancelarToolBarTransaccionLocal.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarTransaccionLocal=this.jButtonGuardarCambiosToolBarTransaccionLocal.isVisible();
			this.isVisibilidadCeldaGuardarCambiosTransaccionLocal=this.jButtonGuardarCambiosTablaToolBarTransaccionLocal.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoTransaccionLocal=this.jMenuItemNuevoTransaccionLocal.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=this.jMenuItemNuevoRelacionesTransaccionLocal.isVisible();
			
			if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
			this.isVisibilidadCeldaModificarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemModificarTransaccionLocal.isVisible();
			this.isVisibilidadCeldaActualizarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemActualizarTransaccionLocal.isVisible();
			this.isVisibilidadCeldaEliminarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemEliminarTransaccionLocal.isVisible();
			this.isVisibilidadCeldaCancelarTransaccionLocal=this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemCancelarTransaccionLocal.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarTransaccionLocal=this.jMenuItemGuardarCambiosTransaccionLocal.isVisible();
			this.isVisibilidadCeldaGuardarCambiosTransaccionLocal=this.jMenuItemGuardarCambiosTablaTransaccionLocal.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesTransaccionLocal(Boolean esInicializar) {
		if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {			
			if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
				//if(this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesTransaccionLocal();
			}
			
			this.inicializarActualizarBindingBotonesManualTransaccionLocal(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualTransaccionLocal() {
		this.jButtonNuevoTransaccionLocal.setVisible(this.isPermisoNuevoTransaccionLocal);			
		this.jButtonDuplicarTransaccionLocal.setVisible(this.isPermisoDuplicarTransaccionLocal);			
		this.jButtonCopiarTransaccionLocal.setVisible(this.isPermisoCopiarTransaccionLocal);			
		this.jButtonVerFormTransaccionLocal.setVisible(this.isPermisoVerFormTransaccionLocal);			
		
		this.jButtonAbrirOrderByTransaccionLocal.setVisible(this.isPermisoOrdenTransaccionLocal);					
		
		this.jButtonNuevoRelacionesTransaccionLocal.setVisible(this.isPermisoNuevoTransaccionLocal);			
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonModificarTransaccionLocal.setVisible(this.isPermisoActualizarTransaccionLocal);	
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonActualizarTransaccionLocal.setVisible(this.isPermisoActualizarTransaccionLocal);	
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonEliminarTransaccionLocal.setVisible(this.isPermisoEliminarTransaccionLocal);
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonCancelarTransaccionLocal.setVisible(this.isVisibilidadCeldaCancelarTransaccionLocal);						
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonGuardarCambiosTransaccionLocal.setVisible(this.isPermisoGuardarCambiosTransaccionLocal);							
		}
		
		this.jButtonGuardarCambiosTablaTransaccionLocal.setVisible(this.isPermisoActualizarTransaccionLocal);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleTransaccionLocal() {
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonModificarTransaccionLocal.setVisible(this.isPermisoActualizarTransaccionLocal);	
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonActualizarTransaccionLocal.setVisible(this.isPermisoActualizarTransaccionLocal);	
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonEliminarTransaccionLocal.setVisible(this.isPermisoEliminarTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonCancelarTransaccionLocal.setVisible(this.isVisibilidadCeldaCancelarTransaccionLocal);							
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonGuardarCambiosTransaccionLocal.setVisible((this.isVisibilidadCeldaGuardarTransaccionLocal && this.isPermisoGuardarCambiosTransaccionLocal));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosTransaccionLocal() {
		if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualTransaccionLocal();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesTransaccionLocal() {
	}
	
	public void jTableDatosTransaccionLocalListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarTransaccionLocal(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.transaccionlocal.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_compraTransaccionLocalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocompra=true;

			idTienePermisocompra=this.tienePermisosUsuarioEnPaginaWebTransaccionLocal(CompraConstantesFunciones.CLASSNAME);

			if(idTienePermisocompra) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTransaccionLocal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTransaccionLocal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);

				this.compraBeanSwingJInternalFrame=new CompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.compraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.compraBeanSwingJInternalFrame.getCompraLogic().setConnexion(this.transaccionlocalLogic.getConnexion());

				if(this.transaccionlocal.getid_compra()!=null) {
					this.compraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.compraBeanSwingJInternalFrame.setIdActual(this.transaccionlocal.getid_compra());
					this.compraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.compraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.compraBeanSwingJInternalFrame.inicializarActualizarBindingTablaCompra();
				}

				JInternalFrameBase jinternalFrame =this.compraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTransaccionLocal=(TitledBorder)this.jScrollPanelDatosTransaccionLocal.getBorder();
				TitledBorder titledBordercompra=(TitledBorder)this.compraBeanSwingJInternalFrame.jScrollPanelDatosCompra.getBorder();

				titledBordercompra.setTitle(titledBorderTransaccionLocal.getTitle() + " -> Compra");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_compraTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getid_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_compra = "+this.transaccionlocal.getid_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonrucTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getruc()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ruc like '%"+this.transaccionlocal.getruc()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonrazon_socialTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getrazon_social()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where razon_social like '%"+this.transaccionlocal.getrazon_social()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodo_declaraTransaccionLocalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiododeclara=true;

			idTienePermisoperiododeclara=this.tienePermisosUsuarioEnPaginaWebTransaccionLocal(PeriodoDeclaraConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiododeclara) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTransaccionLocal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTransaccionLocal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);

				this.periododeclaraBeanSwingJInternalFrame=new PeriodoDeclaraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periododeclaraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periododeclaraBeanSwingJInternalFrame.getPeriodoDeclaraLogic().setConnexion(this.transaccionlocalLogic.getConnexion());

				if(this.transaccionlocal.getid_periodo_declara()!=null) {
					this.periododeclaraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periododeclaraBeanSwingJInternalFrame.setIdActual(this.transaccionlocal.getid_periodo_declara());
					this.periododeclaraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periododeclaraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periododeclaraBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodoDeclara();
				}

				JInternalFrameBase jinternalFrame =this.periododeclaraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTransaccionLocal=(TitledBorder)this.jScrollPanelDatosTransaccionLocal.getBorder();
				TitledBorder titledBorderperiododeclara=(TitledBorder)this.periododeclaraBeanSwingJInternalFrame.jScrollPanelDatosPeriodoDeclara.getBorder();

				titledBorderperiododeclara.setTitle(titledBorderTransaccionLocal.getTitle() + " -> Periodo Declara");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodo_declaraTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getid_periodo_declara()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo_declara = "+this.transaccionlocal.getid_periodo_declara().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_contaTransaccionLocalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccionconta=true;

			idTienePermisotransaccionconta=this.tienePermisosUsuarioEnPaginaWebTransaccionLocal(TransaccionContaConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccionconta) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTransaccionLocal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTransaccionLocal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);

				this.transaccioncontaBeanSwingJInternalFrame=new TransaccionContaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccioncontaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccioncontaBeanSwingJInternalFrame.getTransaccionContaLogic().setConnexion(this.transaccionlocalLogic.getConnexion());

				if(this.transaccionlocal.getid_transaccion_conta()!=null) {
					this.transaccioncontaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccioncontaBeanSwingJInternalFrame.setIdActual(this.transaccionlocal.getid_transaccion_conta());
					this.transaccioncontaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccioncontaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccioncontaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccionConta();
				}

				JInternalFrameBase jinternalFrame =this.transaccioncontaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTransaccionLocal=(TitledBorder)this.jScrollPanelDatosTransaccionLocal.getBorder();
				TitledBorder titledBordertransaccionconta=(TitledBorder)this.transaccioncontaBeanSwingJInternalFrame.jScrollPanelDatosTransaccionConta.getBorder();

				titledBordertransaccionconta.setTitle(titledBorderTransaccionLocal.getTitle() + " -> Transaccion Contablilidad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_contaTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getid_transaccion_conta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_conta = "+this.transaccionlocal.getid_transaccion_conta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteTransaccionLocalActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderTransaccionLocal=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosTransaccionLocal.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderTransaccionLocal=(TitledBorder)this.jScrollPanelDatosTransaccionLocal.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderTransaccionLocal.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteTransaccionLocalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebTransaccionLocal(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTransaccionLocal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTransaccionLocal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.transaccionlocalLogic.getConnexion());

				if(this.transaccionlocal.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.transaccionlocal.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTransaccionLocal=(TitledBorder)this.jScrollPanelDatosTransaccionLocal.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderTransaccionLocal.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.transaccionlocal.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonidentificacionTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getidentificacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where identificacion like '%"+this.transaccionlocal.getidentificacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_comprobanteTransaccionLocalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocomprobante=true;

			idTienePermisotipocomprobante=this.tienePermisosUsuarioEnPaginaWebTransaccionLocal(TipoComprobanteConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocomprobante) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTransaccionLocal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTransaccionLocal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);

				this.tipocomprobanteBeanSwingJInternalFrame=new TipoComprobanteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocomprobanteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocomprobanteBeanSwingJInternalFrame.getTipoComprobanteLogic().setConnexion(this.transaccionlocalLogic.getConnexion());

				if(this.transaccionlocal.getid_tipo_comprobante()!=null) {
					this.tipocomprobanteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocomprobanteBeanSwingJInternalFrame.setIdActual(this.transaccionlocal.getid_tipo_comprobante());
					this.tipocomprobanteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocomprobanteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocomprobanteBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoComprobante();
				}

				JInternalFrameBase jinternalFrame =this.tipocomprobanteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTransaccionLocal=(TitledBorder)this.jScrollPanelDatosTransaccionLocal.getBorder();
				TitledBorder titledBordertipocomprobante=(TitledBorder)this.tipocomprobanteBeanSwingJInternalFrame.jScrollPanelDatosTipoComprobante.getBorder();

				titledBordertipocomprobante.setTitle(titledBorderTransaccionLocal.getTitle() + " -> Tipo Comprobante");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_comprobanteTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getid_tipo_comprobante()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_comprobante = "+this.transaccionlocal.getid_tipo_comprobante().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.transaccionlocal.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_registro_contableTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getfecha_registro_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_registro_contable = '"+Funciones2.getStringPostgresDate(this.transaccionlocal.getfecha_registro_contable())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_secuencialTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getnumero_secuencial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_secuencial like '%"+this.transaccionlocal.getnumero_secuencial()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_serieTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getnumero_serie()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_serie like '%"+this.transaccionlocal.getnumero_serie()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_autorizacionTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getnumero_autorizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_autorizacion like '%"+this.transaccionlocal.getnumero_autorizacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_caducidadTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getfecha_caducidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_caducidad = '"+Funciones2.getStringPostgresDate(this.transaccionlocal.getfecha_caducidad())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_tributarioTransaccionLocalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipotributario=true;

			idTienePermisotipotributario=this.tienePermisosUsuarioEnPaginaWebTransaccionLocal(TipoTributarioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipotributario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTransaccionLocal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTransaccionLocal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);

				this.tipotributarioBeanSwingJInternalFrame=new TipoTributarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipotributarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipotributarioBeanSwingJInternalFrame.getTipoTributarioLogic().setConnexion(this.transaccionlocalLogic.getConnexion());

				if(this.transaccionlocal.getid_tipo_tributario()!=null) {
					this.tipotributarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipotributarioBeanSwingJInternalFrame.setIdActual(this.transaccionlocal.getid_tipo_tributario());
					this.tipotributarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipotributarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipotributarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoTributario();
				}

				JInternalFrameBase jinternalFrame =this.tipotributarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTransaccionLocal=(TitledBorder)this.jScrollPanelDatosTransaccionLocal.getBorder();
				TitledBorder titledBordertipotributario=(TitledBorder)this.tipotributarioBeanSwingJInternalFrame.jScrollPanelDatosTipoTributario.getBorder();

				titledBordertipotributario.setTitle(titledBorderTransaccionLocal.getTitle() + " -> Tipo Tributario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_tributarioTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getid_tipo_tributario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_tributario = "+this.transaccionlocal.getid_tipo_tributario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_documento_contableTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getnumero_documento_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_documento_contable like '%"+this.transaccionlocal.getnumero_documento_contable()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_asiento_contableTransaccionLocalActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="AsientoContable";

			if(!this.sFinalQueryGeneral_asientocontable.equals("")) {
				this.asientocontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_asientocontable);
				this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.asientocontableBeanSwingJInternalFrame.procesarBusqueda(this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingAsientoContable(false);
			}

			if(!this.sFinalQueryComboAsientoContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderTransaccionLocal=null;
			TitledBorder titledBorderasientocontable=null;

			if(!this.jScrollPanelDatosTransaccionLocal.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderTransaccionLocal=(TitledBorder)this.jScrollPanelDatosTransaccionLocal.getBorder();
				titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderTransaccionLocal.getTitle() + " -> Asiento Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_asiento_contableTransaccionLocalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoasientocontable=true;

			idTienePermisoasientocontable=this.tienePermisosUsuarioEnPaginaWebTransaccionLocal(AsientoContableConstantesFunciones.CLASSNAME);

			if(idTienePermisoasientocontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTransaccionLocal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTransaccionLocal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);

				this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.asientocontableBeanSwingJInternalFrame.getAsientoContableLogic().setConnexion(this.transaccionlocalLogic.getConnexion());

				if(this.transaccionlocal.getid_asiento_contable()!=null) {
					this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.asientocontableBeanSwingJInternalFrame.setIdActual(this.transaccionlocal.getid_asiento_contable());
					this.asientocontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsientoContable();
				}

				JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTransaccionLocal=(TitledBorder)this.jScrollPanelDatosTransaccionLocal.getBorder();
				TitledBorder titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderTransaccionLocal.getTitle() + " -> Asiento Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_asiento_contableTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getid_asiento_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_asiento_contable = "+this.transaccionlocal.getid_asiento_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_riseTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getes_rise()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_rise = "+this.transaccionlocal.getes_rise().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonbienes_ivaTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getbienes_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where bienes_iva = "+this.transaccionlocal.getbienes_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonbienes_sin_ivaTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getbienes_sin_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where bienes_sin_iva = "+this.transaccionlocal.getbienes_sin_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_ivaTransaccionLocalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoiva=true;

			idTienePermisotipoiva=this.tienePermisosUsuarioEnPaginaWebTransaccionLocal(TipoIvaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoiva) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTransaccionLocal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTransaccionLocal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);

				this.tipoivaBeanSwingJInternalFrame=new TipoIvaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoivaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoivaBeanSwingJInternalFrame.getTipoIvaLogic().setConnexion(this.transaccionlocalLogic.getConnexion());

				if(this.transaccionlocal.getid_tipo_iva()!=null) {
					this.tipoivaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoivaBeanSwingJInternalFrame.setIdActual(this.transaccionlocal.getid_tipo_iva());
					this.tipoivaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoivaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoivaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoIva();
				}

				JInternalFrameBase jinternalFrame =this.tipoivaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTransaccionLocal=(TitledBorder)this.jScrollPanelDatosTransaccionLocal.getBorder();
				TitledBorder titledBordertipoiva=(TitledBorder)this.tipoivaBeanSwingJInternalFrame.jScrollPanelDatosTipoIva.getBorder();

				titledBordertipoiva.setTitle(titledBorderTransaccionLocal.getTitle() + " -> Tipo Iva");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_ivaTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getid_tipo_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_iva = "+this.transaccionlocal.getid_tipo_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonservicios_ivaTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getservicios_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where servicios_iva = "+this.transaccionlocal.getservicios_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonservicios_sin_ivaTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getservicios_sin_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where servicios_sin_iva = "+this.transaccionlocal.getservicios_sin_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_ivaTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getmonto_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_iva = "+this.transaccionlocal.getmonto_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_ivaTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.gettotal_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_iva = "+this.transaccionlocal.gettotal_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_sin_ivaTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.gettotal_sin_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_sin_iva = "+this.transaccionlocal.gettotal_sin_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_iceTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getmonto_ice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_ice = "+this.transaccionlocal.getmonto_ice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontransfe_iva_retenerTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.gettransfe_iva_retener()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where transfe_iva_retener = "+this.transaccionlocal.gettransfe_iva_retener().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpresta_iva_retenerTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getpresta_iva_retener()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where presta_iva_retener = "+this.transaccionlocal.getpresta_iva_retener().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_retencion_ivaTransaccionLocalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotiporetencioniva=true;

			idTienePermisotiporetencioniva=this.tienePermisosUsuarioEnPaginaWebTransaccionLocal(TipoRetencionIvaConstantesFunciones.CLASSNAME);

			if(idTienePermisotiporetencioniva) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTransaccionLocal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTransaccionLocal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);

				this.tiporetencionivaBeanSwingJInternalFrame=new TipoRetencionIvaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tiporetencionivaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tiporetencionivaBeanSwingJInternalFrame.getTipoRetencionIvaLogic().setConnexion(this.transaccionlocalLogic.getConnexion());

				if(this.transaccionlocal.getid_tipo_retencion_iva()!=null) {
					this.tiporetencionivaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tiporetencionivaBeanSwingJInternalFrame.setIdActual(this.transaccionlocal.getid_tipo_retencion_iva());
					this.tiporetencionivaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tiporetencionivaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tiporetencionivaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoRetencionIva();
				}

				JInternalFrameBase jinternalFrame =this.tiporetencionivaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTransaccionLocal=(TitledBorder)this.jScrollPanelDatosTransaccionLocal.getBorder();
				TitledBorder titledBordertiporetencioniva=(TitledBorder)this.tiporetencionivaBeanSwingJInternalFrame.jScrollPanelDatosTipoRetencionIva.getBorder();

				titledBordertiporetencioniva.setTitle(titledBorderTransaccionLocal.getTitle() + " -> Tipo Retencion Iva");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_retencion_ivaTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getid_tipo_retencion_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_retencion_iva = "+this.transaccionlocal.getid_tipo_retencion_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_retencion_iva_prestaTransaccionLocalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotiporetencionivapresta=true;

			idTienePermisotiporetencionivapresta=this.tienePermisosUsuarioEnPaginaWebTransaccionLocal(TipoRetencionIvaConstantesFunciones.CLASSNAME);

			if(idTienePermisotiporetencionivapresta) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTransaccionLocal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTransaccionLocal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);

				this.tiporetencionivaprestaBeanSwingJInternalFrame=new TipoRetencionIvaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tiporetencionivaprestaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tiporetencionivaprestaBeanSwingJInternalFrame.getTipoRetencionIvaLogic().setConnexion(this.transaccionlocalLogic.getConnexion());

				if(this.transaccionlocal.getid_tipo_retencion_iva_presta()!=null) {
					this.tiporetencionivaprestaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tiporetencionivaprestaBeanSwingJInternalFrame.setIdActual(this.transaccionlocal.getid_tipo_retencion_iva_presta());
					this.tiporetencionivaprestaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tiporetencionivaprestaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tiporetencionivaprestaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoRetencionIva();
				}

				JInternalFrameBase jinternalFrame =this.tiporetencionivaprestaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTransaccionLocal=(TitledBorder)this.jScrollPanelDatosTransaccionLocal.getBorder();
				TitledBorder titledBordertiporetencionivapresta=(TitledBorder)this.tiporetencionivaprestaBeanSwingJInternalFrame.jScrollPanelDatosTipoRetencionIva.getBorder();

				titledBordertiporetencionivapresta.setTitle(titledBorderTransaccionLocal.getTitle() + " -> Tipo Retencion Iva");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_retencion_iva_prestaTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getid_tipo_retencion_iva_presta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_retencion_iva_presta = "+this.transaccionlocal.getid_tipo_retencion_iva_presta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontransfe_iva_retenidoTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.gettransfe_iva_retenido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where transfe_iva_retenido = "+this.transaccionlocal.gettransfe_iva_retenido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpresta_iva_retenidoTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getpresta_iva_retenido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where presta_iva_retenido = "+this.transaccionlocal.getpresta_iva_retenido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpermite_devolucionTransaccionLocalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.gettransaccionlocal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.transaccionlocal==null) {
						this.transaccionlocal = new TransaccionLocal();
					}

					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);
				}

				if(this.transaccionlocal.getpermite_devolucion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where permite_devolucion = "+this.transaccionlocal.getpermite_devolucion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTransaccionLocal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAsientoContableTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTransaccionLocal(false,false);

			this.getTransaccionLocalsFK_IdAsientoContable();

			this.inicializarActualizarBindingTransaccionLocal(false);

			//if(TransaccionLocalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTransaccionLocal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTransaccionLocal(false,false);

			this.getTransaccionLocalsFK_IdCliente();

			this.inicializarActualizarBindingTransaccionLocal(false);

			//if(TransaccionLocalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTransaccionLocal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCompraTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTransaccionLocal(false,false);

			this.getTransaccionLocalsFK_IdCompra();

			this.inicializarActualizarBindingTransaccionLocal(false);

			//if(TransaccionLocalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTransaccionLocal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoDeclaraTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTransaccionLocal(false,false);

			this.getTransaccionLocalsFK_IdPeriodoDeclara();

			this.inicializarActualizarBindingTransaccionLocal(false);

			//if(TransaccionLocalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTransaccionLocal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoComprobanteTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTransaccionLocal(false,false);

			this.getTransaccionLocalsFK_IdTipoComprobante();

			this.inicializarActualizarBindingTransaccionLocal(false);

			//if(TransaccionLocalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTransaccionLocal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoIvaTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTransaccionLocal(false,false);

			this.getTransaccionLocalsFK_IdTipoIva();

			this.inicializarActualizarBindingTransaccionLocal(false);

			//if(TransaccionLocalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTransaccionLocal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoRetencionIvaTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTransaccionLocal(false,false);

			this.getTransaccionLocalsFK_IdTipoRetencionIva();

			this.inicializarActualizarBindingTransaccionLocal(false);

			//if(TransaccionLocalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTransaccionLocal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoRetencionIvaPrestaTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTransaccionLocal(false,false);

			this.getTransaccionLocalsFK_IdTipoRetencionIvaPresta();

			this.inicializarActualizarBindingTransaccionLocal(false);

			//if(TransaccionLocalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTransaccionLocal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoTributarioTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTransaccionLocal(false,false);

			this.getTransaccionLocalsFK_IdTipoTributario();

			this.inicializarActualizarBindingTransaccionLocal(false);

			//if(TransaccionLocalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTransaccionLocal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionContaTransaccionLocalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTransaccionLocal(false,false);

			this.getTransaccionLocalsFK_IdTransaccionConta();

			this.inicializarActualizarBindingTransaccionLocal(false);

			//if(TransaccionLocalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTransaccionLocal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.transaccionlocalLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameTransaccionLocal() {
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
			this.jInternalFrameDetalleFormTransaccionLocal.setVisible(false);	    			
			this.jInternalFrameDetalleFormTransaccionLocal.dispose();
			this.jInternalFrameDetalleFormTransaccionLocal=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoTransaccionLocal!=null) {
			this.jInternalFrameReporteDinamicoTransaccionLocal.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoTransaccionLocal.dispose();
			this.jInternalFrameReporteDinamicoTransaccionLocal=null;
		}
		
		if(this.jInternalFrameImportacionTransaccionLocal!=null) {
			this.jInternalFrameImportacionTransaccionLocal.setVisible(false);	    			
			this.jInternalFrameImportacionTransaccionLocal.dispose();
			this.jInternalFrameImportacionTransaccionLocal=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessTransaccionLocal();
			
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			
			
			if(sTipo.equals("NuevoTransaccionLocal")) {
				jButtonNuevoTransaccionLocalActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarTransaccionLocal")) {
				jButtonDuplicarTransaccionLocalActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarTransaccionLocal")) {
				jButtonCopiarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("VerFormTransaccionLocal")) {
				jButtonVerFormTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarTransaccionLocal")) {
				jButtonNuevoTransaccionLocalActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarTransaccionLocal")) {
				jButtonDuplicarTransaccionLocalActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoTransaccionLocal")) {
				jButtonNuevoTransaccionLocalActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarTransaccionLocal")) {
				jButtonDuplicarTransaccionLocalActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesTransaccionLocal")) {
				jButtonNuevoTransaccionLocalActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarTransaccionLocal")) {
				jButtonNuevoTransaccionLocalActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesTransaccionLocal")) {
				jButtonNuevoTransaccionLocalActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarTransaccionLocal")) {
				jButtonModificarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarTransaccionLocal")) {
				jButtonModificarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarTransaccionLocal")) {
				jButtonModificarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("ActualizarTransaccionLocal")) {
				jButtonActualizarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarTransaccionLocal")) {
				jButtonActualizarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarTransaccionLocal")) {
				jButtonActualizarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("EliminarTransaccionLocal")) {
				jButtonEliminarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarTransaccionLocal")) {
				jButtonEliminarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarTransaccionLocal")) {
				jButtonEliminarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("CancelarTransaccionLocal")) {
				jButtonCancelarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarTransaccionLocal")) {
				jButtonCancelarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarTransaccionLocal")) {
				jButtonCancelarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("CerrarTransaccionLocal")) {
				jButtonCerrarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarTransaccionLocal")) {
				jButtonCerrarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarTransaccionLocal")) {
				jButtonCerrarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarTransaccionLocal")) {
				jButtonMostrarOcultarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarTransaccionLocal")) {
				jButtonCancelarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTransaccionLocal")) {
				jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarTransaccionLocal")) {
				jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarTransaccionLocal")) {
				jButtonCopiarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarTransaccionLocal")) {
				jButtonVerFormTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTransaccionLocal")) {
				jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarTransaccionLocal")) {
				jButtonCopiarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormTransaccionLocal")) {
				jButtonVerFormTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaTransaccionLocal")) {
				jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarTransaccionLocal")) {
				jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaTransaccionLocal")) {
				jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionTransaccionLocal")) {
				jButtonRecargarInformacionTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarTransaccionLocal")) {
				jButtonRecargarInformacionTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionTransaccionLocal")) {
				jButtonRecargarInformacionTransaccionLocalActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresTransaccionLocal")) {
				jButtonAnterioresTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarTransaccionLocal")) {
				jButtonAnterioresTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreTransaccionLocal")) {
				jButtonAnterioresTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("SiguientesTransaccionLocal")) {
				jButtonSiguientesTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarTransaccionLocal")) {
				jButtonSiguientesTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesTransaccionLocal")) {
				jButtonSiguientesTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByTransaccionLocal") || sTipo.equals("MenuItemDetalleAbrirOrderByTransaccionLocal")) {
				jButtonAbrirOrderByTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarTransaccionLocal") || sTipo.equals("MenuItemDetalleMostrarOcultarTransaccionLocal")) {
				jButtonMostrarOcultarTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosTransaccionLocal")) {
				jButtonNuevoGuardarCambiosTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarTransaccionLocal")) {
				jButtonNuevoGuardarCambiosTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosTransaccionLocal")) {
				jButtonNuevoGuardarCambiosTransaccionLocalActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoTransaccionLocal")) {
				jButtonCerrarReporteDinamicoTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoTransaccionLocal")) {
				jButtonGenerarReporteDinamicoTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoTransaccionLocal")) {
				
				jButtonGenerarExcelReporteDinamicoTransaccionLocalActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionTransaccionLocal")) {
				jButtonCerrarImportacionTransaccionLocalActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionTransaccionLocal")) {
				
				jButtonGenerarImportacionTransaccionLocalActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionTransaccionLocal")) {
				
				jButtonAbrirImportacionTransaccionLocalActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesTransaccionLocal")) {
				jComboBoxTiposAccionesTransaccionLocalActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesTransaccionLocal")) {
				jComboBoxTiposRelacionesTransaccionLocalActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioTransaccionLocal")) {
				jComboBoxTiposAccionesTransaccionLocalActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarTransaccionLocal")) {
				
				jComboBoxTiposSeleccionarTransaccionLocalActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralTransaccionLocal")) {
				jTextFieldValorCampoGeneralTransaccionLocalActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByTransaccionLocal")) {
				jButtonAbrirOrderByTransaccionLocalActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarTransaccionLocal")) {
				jButtonAbrirOrderByTransaccionLocalActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByTransaccionLocal")) {
				jButtonCerrarOrderByTransaccionLocalActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idTransaccionLocalBusqueda")) {
				this.jButtonidTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_compraTransaccionLocalUpdate")) {
				this.jButtonid_compraTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_compraTransaccionLocalBusqueda")) {
				this.jButtonid_compraTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucTransaccionLocalBusqueda")) {
				this.jButtonrucTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("razon_socialTransaccionLocalBusqueda")) {
				this.jButtonrazon_socialTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodo_declaraTransaccionLocalUpdate")) {
				this.jButtonid_periodo_declaraTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodo_declaraTransaccionLocalBusqueda")) {
				this.jButtonid_periodo_declaraTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_contaTransaccionLocalUpdate")) {
				this.jButtonid_transaccion_contaTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_contaTransaccionLocalBusqueda")) {
				this.jButtonid_transaccion_contaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteTransaccionLocal")) {
				this.jButtonid_clienteTransaccionLocalActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteTransaccionLocalUpdate")) {
				this.jButtonid_clienteTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteTransaccionLocalBusqueda")) {
				this.jButtonid_clienteTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("identificacionTransaccionLocalBusqueda")) {
				this.jButtonidentificacionTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_comprobanteTransaccionLocalUpdate")) {
				this.jButtonid_tipo_comprobanteTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_comprobanteTransaccionLocalBusqueda")) {
				this.jButtonid_tipo_comprobanteTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionTransaccionLocalBusqueda")) {
				this.jButtonfecha_emisionTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_registro_contableTransaccionLocalBusqueda")) {
				this.jButtonfecha_registro_contableTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_secuencialTransaccionLocalBusqueda")) {
				this.jButtonnumero_secuencialTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_serieTransaccionLocalBusqueda")) {
				this.jButtonnumero_serieTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_autorizacionTransaccionLocalBusqueda")) {
				this.jButtonnumero_autorizacionTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_caducidadTransaccionLocalBusqueda")) {
				this.jButtonfecha_caducidadTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_tributarioTransaccionLocalUpdate")) {
				this.jButtonid_tipo_tributarioTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_tributarioTransaccionLocalBusqueda")) {
				this.jButtonid_tipo_tributarioTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_documento_contableTransaccionLocalBusqueda")) {
				this.jButtonnumero_documento_contableTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableTransaccionLocal")) {
				this.jButtonid_asiento_contableTransaccionLocalActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableTransaccionLocalUpdate")) {
				this.jButtonid_asiento_contableTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableTransaccionLocalBusqueda")) {
				this.jButtonid_asiento_contableTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_riseTransaccionLocalBusqueda")) {
				this.jButtones_riseTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("bienes_ivaTransaccionLocalBusqueda")) {
				this.jButtonbienes_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("bienes_sin_ivaTransaccionLocalBusqueda")) {
				this.jButtonbienes_sin_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_ivaTransaccionLocalUpdate")) {
				this.jButtonid_tipo_ivaTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_ivaTransaccionLocalBusqueda")) {
				this.jButtonid_tipo_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("servicios_ivaTransaccionLocalBusqueda")) {
				this.jButtonservicios_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("servicios_sin_ivaTransaccionLocalBusqueda")) {
				this.jButtonservicios_sin_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_ivaTransaccionLocalBusqueda")) {
				this.jButtonmonto_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_ivaTransaccionLocalBusqueda")) {
				this.jButtontotal_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_sin_ivaTransaccionLocalBusqueda")) {
				this.jButtontotal_sin_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_iceTransaccionLocalBusqueda")) {
				this.jButtonmonto_iceTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("transfe_iva_retenerTransaccionLocalBusqueda")) {
				this.jButtontransfe_iva_retenerTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("presta_iva_retenerTransaccionLocalBusqueda")) {
				this.jButtonpresta_iva_retenerTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencion_ivaTransaccionLocalUpdate")) {
				this.jButtonid_tipo_retencion_ivaTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencion_ivaTransaccionLocalBusqueda")) {
				this.jButtonid_tipo_retencion_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_prestaTransaccionLocalUpdate")) {
				this.jButtonid_tipo_retencion_iva_prestaTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_prestaTransaccionLocalBusqueda")) {
				this.jButtonid_tipo_retencion_iva_prestaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("transfe_iva_retenidoTransaccionLocalBusqueda")) {
				this.jButtontransfe_iva_retenidoTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("presta_iva_retenidoTransaccionLocalBusqueda")) {
				this.jButtonpresta_iva_retenidoTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("permite_devolucionTransaccionLocalBusqueda")) {
				this.jButtonpermite_devolucionTransaccionLocalBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_asiento_contableTransaccionLocal")) {
				this.jButtonid_asiento_contableTransaccionLocalActionPerformed(evt);
			}
			else if(sTipo.equals("id_clienteTransaccionLocal")) {
				this.jButtonid_clienteTransaccionLocalActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdAsientoContableTransaccionLocal")) {
				this.jButtonFK_IdAsientoContableTransaccionLocalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteTransaccionLocal")) {
				this.jButtonFK_IdClienteTransaccionLocalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCompraTransaccionLocal")) {
				this.jButtonFK_IdCompraTransaccionLocalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPeriodoDeclaraTransaccionLocal")) {
				this.jButtonFK_IdPeriodoDeclaraTransaccionLocalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoComprobanteTransaccionLocal")) {
				this.jButtonFK_IdTipoComprobanteTransaccionLocalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoIvaTransaccionLocal")) {
				this.jButtonFK_IdTipoIvaTransaccionLocalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoRetencionIvaTransaccionLocal")) {
				this.jButtonFK_IdTipoRetencionIvaTransaccionLocalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoRetencionIvaPrestaTransaccionLocal")) {
				this.jButtonFK_IdTipoRetencionIvaPrestaTransaccionLocalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoTributarioTransaccionLocal")) {
				this.jButtonFK_IdTipoTributarioTransaccionLocalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionContaTransaccionLocal")) {
				this.jButtonFK_IdTransaccionContaTransaccionLocalActionPerformed(evt);
			}
			
			;
			
			
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessTransaccionLocal();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTransaccionLocalActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
				


			if(sTipo.equals("bienes_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("bienes_sin_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("servicios_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("servicios_sin_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("total_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("transfe_iva_retenerTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("presta_iva_retenerTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TransaccionLocal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TransaccionLocal.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			TransaccionLocal transaccionlocalLocal=null;
			
			if(!this.getEsControlTabla()) {
				transaccionlocalLocal=this.transaccionlocal;
			} else {
				transaccionlocalLocal=this.transaccionlocalAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


				if(sTipo.equals("bienes_ivaTransaccionLocal")) {
					if(transaccionlocalLocal.getbienes_iva()==Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.getText())){existeCambio=false;};
				}
				 else if(sTipo.equals("bienes_sin_ivaTransaccionLocal")) {
					if(transaccionlocalLocal.getbienes_sin_iva()==Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.getText())){existeCambio=false;};
				}
				 else if(sTipo.equals("servicios_ivaTransaccionLocal")) {
					if(transaccionlocalLocal.getservicios_iva()==Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.getText())){existeCambio=false;};
				}
				 else if(sTipo.equals("servicios_sin_ivaTransaccionLocal")) {
					if(transaccionlocalLocal.getservicios_sin_iva()==Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.getText())){existeCambio=false;};
				}
				 else if(sTipo.equals("total_ivaTransaccionLocal")) {
					if(transaccionlocalLocal.gettotal_iva()==Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.getText())){existeCambio=false;};
				}
				 else if(sTipo.equals("transfe_iva_retenerTransaccionLocal")) {
					if(transaccionlocalLocal.gettransfe_iva_retener()==Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.getText())){existeCambio=false;};
				}
				 else if(sTipo.equals("presta_iva_retenerTransaccionLocal")) {
					if(transaccionlocalLocal.getpresta_iva_retener()==Double.parseDouble(this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.getText())){existeCambio=false;};
				}
			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
							
				
				


			if(sTipo.equals("bienes_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("bienes_sin_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("servicios_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("servicios_sin_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("total_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("transfe_iva_retenerTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("presta_iva_retenerTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TransaccionLocal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TransaccionLocal.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTransaccionLocalActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalAnterior =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.transaccionlocalAnterior =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			if(sTipo.equals("bienes_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("bienes_sin_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("servicios_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("servicios_sin_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("total_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("transfe_iva_retenerTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("presta_iva_retenerTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTransaccionLocalActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
								
						
				


				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TransaccionLocal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TransaccionLocal.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
								
				
				


				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TransaccionLocal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TransaccionLocal.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTransaccionLocalActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalAnterior =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.transaccionlocalAnterior =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTransaccionLocalActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalAnterior =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.transaccionlocalAnterior =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTransaccionLocalActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
			
			this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
							
				
				


				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TransaccionLocal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TransaccionLocal.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTransaccionLocalActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocalAnterior =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.transaccionlocalAnterior =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTransaccionLocalActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
			
			this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
								
				
				


			if(sTipo.equals("bienes_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("bienes_sin_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("servicios_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("servicios_sin_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("total_ivaTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("transfe_iva_retenerTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("presta_iva_retenerTransaccionLocal")) {
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TransaccionLocal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TransaccionLocal.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTransaccionLocalActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalAnterior =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.transaccionlocalAnterior =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTransaccionLocalActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
			
			this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTransaccionLocalActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosTransaccionLocal")) {
					jCheckBoxSeleccionarTodosTransaccionLocalItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosTransaccionLocal")) {
					jCheckBoxSeleccionadosTransaccionLocalItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarTransaccionLocal")) {
					
				}
				
				


				
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TransaccionLocal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TransaccionLocal.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
												
				
				


				
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TransaccionLocal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TransaccionLocal.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTransaccionLocalActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.transaccionlocalAnterior =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.transaccionlocalAnterior =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTransaccionLocalActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_tipo_ivaTransaccionLocal")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal;
				}

				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoIva(jComboBoxGenerico,"Formulario");

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal")) {
				this.procesarActionsCombosForeignKeyTipoIva(jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal,"FK_IdTipoIva");
				//recargarFormTransaccionLocalTipoIva(jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal,"FK_IdTipoIva");
			}
			 else if(sTipo.equals("id_tipo_retencion_ivaTransaccionLocal")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal;
				}

				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoRetencionIva(jComboBoxGenerico,"Formulario");

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal")) {
				this.procesarActionsCombosForeignKeyTipoRetencionIva(jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal,"FK_IdTipoRetencionIva");
				//recargarFormTransaccionLocalTipoRetencionIva(jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal,"FK_IdTipoRetencionIva");
			}
			 else if(sTipo.equals("id_tipo_retencion_iva_prestaTransaccionLocal")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal;
				}

				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoRetencionIvaPresta(jComboBoxGenerico,"Formulario");

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal")) {
				this.procesarActionsCombosForeignKeyTipoRetencionIvaPresta(jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal,"FK_IdTipoRetencionIvaPresta");
				//recargarFormTransaccionLocalTipoRetencionIva(jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal,"FK_IdTipoRetencionIvaPresta");
			}
			
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTransaccionLocalActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_tipo_ivaTransaccionLocal")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal;
				}

				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoIva(jComboBoxGenerico,"Formulario");

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal")) {
				this.procesarActionsCombosForeignKeyTipoIva(jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal,"FK_IdTipoIva");
				//recargarFormTransaccionLocalTipoIva(jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal,"FK_IdTipoIva");
			}
			 else if(sTipo.equals("id_tipo_retencion_ivaTransaccionLocal")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal;
				}

				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoRetencionIva(jComboBoxGenerico,"Formulario");

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal")) {
				this.procesarActionsCombosForeignKeyTipoRetencionIva(jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal,"FK_IdTipoRetencionIva");
				//recargarFormTransaccionLocalTipoRetencionIva(jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal,"FK_IdTipoRetencionIva");
			}
			 else if(sTipo.equals("id_tipo_retencion_iva_prestaTransaccionLocal")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal;
				}

				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoRetencionIvaPresta(jComboBoxGenerico,"Formulario");

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal")) {
				this.procesarActionsCombosForeignKeyTipoRetencionIvaPresta(jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal,"FK_IdTipoRetencionIvaPresta");
				//recargarFormTransaccionLocalTipoRetencionIva(jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal,"FK_IdTipoRetencionIvaPresta");
			}
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TransaccionLocal.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TransaccionLocal.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.transaccionlocal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.transaccionlocal);
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_tipo_ivaTransaccionLocal")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal;
				}

				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoIva(jComboBoxGenerico,"Formulario");

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal")) {
				this.procesarActionsCombosForeignKeyTipoIva(jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal,"FK_IdTipoIva");
				//recargarFormTransaccionLocalTipoIva(jComboBoxid_tipo_ivaFK_IdTipoIvaTransaccionLocal,"FK_IdTipoIva");
			}
			 else if(sTipo.equals("id_tipo_retencion_ivaTransaccionLocal")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal;
				}

				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoRetencionIva(jComboBoxGenerico,"Formulario");

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal")) {
				this.procesarActionsCombosForeignKeyTipoRetencionIva(jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal,"FK_IdTipoRetencionIva");
				//recargarFormTransaccionLocalTipoRetencionIva(jComboBoxid_tipo_retencion_ivaFK_IdTipoRetencionIvaTransaccionLocal,"FK_IdTipoRetencionIva");
			}
			 else if(sTipo.equals("id_tipo_retencion_iva_prestaTransaccionLocal")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal;
				}

				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					//classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoRetencionIvaPresta(jComboBoxGenerico,"Formulario");

				this.recargarFormTransaccionLocal(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal")) {
				this.procesarActionsCombosForeignKeyTipoRetencionIvaPresta(jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal,"FK_IdTipoRetencionIvaPresta");
				//recargarFormTransaccionLocalTipoRetencionIva(jComboBoxid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPrestaTransaccionLocal,"FK_IdTipoRetencionIvaPresta");
			}
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TransaccionLocal.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TransaccionLocal.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTransaccionLocalActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.transaccionlocalAnterior =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.transaccionlocalAnterior =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarTransaccionLocal")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosTransaccionLocalListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosTransaccionLocal.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.transaccionlocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.transaccionlocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.transaccionlocal);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarTransaccionLocal")) {
				
				}
				
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarTransaccionLocal")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosTransaccionLocal.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarTransaccionLocal")) {
			
			}
			
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessTransaccionLocal();
			
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			
			if(sTipo.equals("NuevoTransaccionLocal")) {
				jButtonNuevoTransaccionLocalActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarTransaccionLocal")) {
				jButtonDuplicarTransaccionLocalActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarTransaccionLocal")) {
				jButtonCopiarTransaccionLocalActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormTransaccionLocal")) {
				jButtonVerFormTransaccionLocalActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesTransaccionLocal")) {
				jButtonNuevoTransaccionLocalActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarTransaccionLocal")) {
				jButtonModificarTransaccionLocalActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarTransaccionLocal")) {
				jButtonActualizarTransaccionLocalActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarTransaccionLocal")) {
				jButtonEliminarTransaccionLocalActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaTransaccionLocal")) {
				jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarTransaccionLocal")) {
				jButtonCancelarTransaccionLocalActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarTransaccionLocal")) {
				jButtonCerrarTransaccionLocalActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTransaccionLocal")) {
				jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosTransaccionLocal")) {
				jButtonNuevoGuardarCambiosTransaccionLocalActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByTransaccionLocal")) {
				jButtonAbrirOrderByTransaccionLocalActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionTransaccionLocal")) {
				jButtonRecargarInformacionTransaccionLocalActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresTransaccionLocal")) {
				jButtonAnterioresTransaccionLocalActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesTransaccionLocal")) {
				jButtonSiguientesTransaccionLocalActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idTransaccionLocalBusqueda")) {
				this.jButtonidTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_compraTransaccionLocalUpdate")) {
				this.jButtonid_compraTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_compraTransaccionLocalBusqueda")) {
				this.jButtonid_compraTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucTransaccionLocalBusqueda")) {
				this.jButtonrucTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("razon_socialTransaccionLocalBusqueda")) {
				this.jButtonrazon_socialTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodo_declaraTransaccionLocalUpdate")) {
				this.jButtonid_periodo_declaraTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodo_declaraTransaccionLocalBusqueda")) {
				this.jButtonid_periodo_declaraTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_contaTransaccionLocalUpdate")) {
				this.jButtonid_transaccion_contaTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_contaTransaccionLocalBusqueda")) {
				this.jButtonid_transaccion_contaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteTransaccionLocal")) {
				this.jButtonid_clienteTransaccionLocalActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteTransaccionLocalUpdate")) {
				this.jButtonid_clienteTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteTransaccionLocalBusqueda")) {
				this.jButtonid_clienteTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("identificacionTransaccionLocalBusqueda")) {
				this.jButtonidentificacionTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_comprobanteTransaccionLocalUpdate")) {
				this.jButtonid_tipo_comprobanteTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_comprobanteTransaccionLocalBusqueda")) {
				this.jButtonid_tipo_comprobanteTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionTransaccionLocalBusqueda")) {
				this.jButtonfecha_emisionTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_registro_contableTransaccionLocalBusqueda")) {
				this.jButtonfecha_registro_contableTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_secuencialTransaccionLocalBusqueda")) {
				this.jButtonnumero_secuencialTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_serieTransaccionLocalBusqueda")) {
				this.jButtonnumero_serieTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_autorizacionTransaccionLocalBusqueda")) {
				this.jButtonnumero_autorizacionTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_caducidadTransaccionLocalBusqueda")) {
				this.jButtonfecha_caducidadTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_tributarioTransaccionLocalUpdate")) {
				this.jButtonid_tipo_tributarioTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_tributarioTransaccionLocalBusqueda")) {
				this.jButtonid_tipo_tributarioTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_documento_contableTransaccionLocalBusqueda")) {
				this.jButtonnumero_documento_contableTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableTransaccionLocal")) {
				this.jButtonid_asiento_contableTransaccionLocalActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableTransaccionLocalUpdate")) {
				this.jButtonid_asiento_contableTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableTransaccionLocalBusqueda")) {
				this.jButtonid_asiento_contableTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_riseTransaccionLocalBusqueda")) {
				this.jButtones_riseTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("bienes_ivaTransaccionLocalBusqueda")) {
				this.jButtonbienes_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("bienes_sin_ivaTransaccionLocalBusqueda")) {
				this.jButtonbienes_sin_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_ivaTransaccionLocalUpdate")) {
				this.jButtonid_tipo_ivaTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_ivaTransaccionLocalBusqueda")) {
				this.jButtonid_tipo_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("servicios_ivaTransaccionLocalBusqueda")) {
				this.jButtonservicios_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("servicios_sin_ivaTransaccionLocalBusqueda")) {
				this.jButtonservicios_sin_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_ivaTransaccionLocalBusqueda")) {
				this.jButtonmonto_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_ivaTransaccionLocalBusqueda")) {
				this.jButtontotal_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_sin_ivaTransaccionLocalBusqueda")) {
				this.jButtontotal_sin_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_iceTransaccionLocalBusqueda")) {
				this.jButtonmonto_iceTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("transfe_iva_retenerTransaccionLocalBusqueda")) {
				this.jButtontransfe_iva_retenerTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("presta_iva_retenerTransaccionLocalBusqueda")) {
				this.jButtonpresta_iva_retenerTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencion_ivaTransaccionLocalUpdate")) {
				this.jButtonid_tipo_retencion_ivaTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencion_ivaTransaccionLocalBusqueda")) {
				this.jButtonid_tipo_retencion_ivaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_prestaTransaccionLocalUpdate")) {
				this.jButtonid_tipo_retencion_iva_prestaTransaccionLocalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_prestaTransaccionLocalBusqueda")) {
				this.jButtonid_tipo_retencion_iva_prestaTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("transfe_iva_retenidoTransaccionLocalBusqueda")) {
				this.jButtontransfe_iva_retenidoTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("presta_iva_retenidoTransaccionLocalBusqueda")) {
				this.jButtonpresta_iva_retenidoTransaccionLocalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("permite_devolucionTransaccionLocalBusqueda")) {
				this.jButtonpermite_devolucionTransaccionLocalBusquedaActionPerformed(evt);
			}
			
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessTransaccionLocal();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameTransaccionLocal")) {
				closingInternalFrameTransaccionLocal();
				
			} else if(sTipo.equals("jButtonCancelarTransaccionLocal")) {
				JInternalFrameBase jInternalFrameDetalleFormTransaccionLocal = (JInternalFrameBase)evt.getSource();
	            	
	            TransaccionLocalBeanSwingJInternalFrame jInternalFrameParent=(TransaccionLocalBeanSwingJInternalFrame)jInternalFrameDetalleFormTransaccionLocal.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarTransaccionLocalActionPerformed(null);
			}
			
			TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.transaccionlocal,new Object(),this.transaccionlocalParameterGeneral,this.transaccionlocalReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormTransaccionLocal(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormTransaccionLocal(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormTransaccionLocal(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.transaccionlocal)) {
			if(!esControlTabla) {
				if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);			
				}
				
				if(this.transaccionlocalSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualTransaccionLocal(this.transaccionlocal,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.transaccionlocalReturnGeneral=transaccionlocalLogic.procesarEventosTransaccionLocalsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.transaccionlocalLogic.getTransaccionLocals(),this.transaccionlocal,this.transaccionlocalParameterGeneral,this.isEsNuevoTransaccionLocal,classes);//this.transaccionlocalLogic.getTransaccionLocal()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanTransaccionLocal(this.transaccionlocalReturnGeneral,this.transaccionlocalBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.transaccionlocalSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanTransaccionLocal(classes,this.transaccionlocalReturnGeneral,this.transaccionlocalBean,false);
					}
						
					if(this.transaccionlocalReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyTransaccionLocal(this.transaccionlocalReturnGeneral.getTransaccionLocal());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioTransaccionLocal(this.transaccionlocalReturnGeneral.getTransaccionLocal());	
					}
						
					if(this.transaccionlocalReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioTransaccionLocal(this.transaccionlocalReturnGeneral.getTransaccionLocal(),classes);//this.transaccionlocalBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioTransaccionLocal(this.transaccionlocal,classes);//this.transaccionlocalBean);									
				}
			
				if(TransaccionLocalJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualTransaccionLocal(this.transaccionlocal,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysTransaccionLocal(this.transaccionlocal);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.transaccionlocalAnterior!=null) {
						this.transaccionlocal=this.transaccionlocalAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.transaccionlocalReturnGeneral=transaccionlocalLogic.procesarEventosTransaccionLocalsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.transaccionlocalLogic.getTransaccionLocals(),this.transaccionlocal,this.transaccionlocalParameterGeneral,this.isEsNuevoTransaccionLocal,classes);//this.transaccionlocalLogic.getTransaccionLocal()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.transaccionlocalSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.transaccionlocalSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.transaccionlocalReturnGeneral.getTransaccionLocal(),transaccionlocalLogic.getTransaccionLocals());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.transaccionlocalReturnGeneral.getTransaccionLocal(),this.transaccionlocals);
				}
				//ARCHITECTURE
				
				//this.jTableDatosTransaccionLocal.repaint();
				
				//((AbstractTableModel) this.jTableDatosTransaccionLocal.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosTransaccionLocal();
			}
		}
	}
	
	public void actualizarVisualTableDatosTransaccionLocal() throws Exception {
		
		TransaccionLocalModel transaccionlocalModel=(TransaccionLocalModel)this.jTableDatosTransaccionLocal.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			transaccionlocalModel.transaccionlocals=this.transaccionlocalLogic.getTransaccionLocals();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			transaccionlocalModel.transaccionlocals=this.transaccionlocals;
		}
		
		
		((TransaccionLocalModel) this.jTableDatosTransaccionLocal.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaTransaccionLocal() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.gettransaccionlocalAnterior(),this.transaccionlocalLogic.getTransaccionLocals());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.gettransaccionlocalAnterior(),this.transaccionlocals);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosTransaccionLocal();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioTransaccionLocal(TransaccionLocal transaccionlocal,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.transaccionlocal,new Object(),generalEntityParameterGeneral,this.transaccionlocalReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.transaccionlocalSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsOfTransaccionLocal(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=TransaccionLocalConstantesFunciones.getClassesRelationshipsFromStringsOfTransaccionLocal(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormTransaccionLocal(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				TransaccionLocalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.transaccionlocal,new Object(),generalEntityParameterGeneral,this.transaccionlocalReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioTransaccionLocal(TransaccionLocalBean transaccionlocalBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanTransaccionLocal(ArrayList<Classe> classes,TransaccionLocalReturnGeneral transaccionlocalReturnGeneral,TransaccionLocalBean transaccionlocalBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualTransaccionLocal(TransaccionLocal transaccionlocal,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.transaccionlocal)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormTransaccionLocal = new TransaccionLocalDetalleFormJInternalFrame(jDesktopPane,this.transaccionlocalSessionBean.getConGuardarRelaciones(),this.transaccionlocalSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.setVisible(false);
		this.jInternalFrameDetalleFormTransaccionLocal.setSelected(false);						
		
		this.jInternalFrameDetalleFormTransaccionLocal.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormTransaccionLocal.transaccionlocalLogic=this.transaccionlocalLogic;
		
		this.cargarCombosFrameForeignKeyTransaccionLocal("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleTransaccionLocal();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleTransaccionLocal();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyTransaccionLocal("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyTransaccionLocal();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormTransaccionLocal.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarTransaccionLocal"));
		
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonModificarTransaccionLocal.addActionListener(new ButtonActionListener(this,"ModificarTransaccionLocal"));

		
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonModificarToolBarTransaccionLocal.addActionListener(new ButtonActionListener(this,"ModificarToolBarTransaccionLocal"));
					
		this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemModificarTransaccionLocal.addActionListener(new ButtonActionListener(this,"MenuItemModificarTransaccionLocal"));		
		
		
		
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonActualizarTransaccionLocal.addActionListener (new ButtonActionListener(this,"ActualizarTransaccionLocal"));
		
		
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonActualizarToolBarTransaccionLocal.addActionListener(new ButtonActionListener(this,"ActualizarToolBarTransaccionLocal"));
						
		this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemActualizarTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemActualizarTransaccionLocal"));		
		
		
		
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonEliminarTransaccionLocal.addActionListener (new ButtonActionListener(this,"EliminarTransaccionLocal"));
		
		
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonEliminarToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"EliminarToolBarTransaccionLocal"));
								
		this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemEliminarTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemEliminarTransaccionLocal"));		
		
		
		
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonCancelarTransaccionLocal.addActionListener (new ButtonActionListener(this,"CancelarTransaccionLocal"));
		
		
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonCancelarToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"CancelarToolBarTransaccionLocal"));
					
		this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemCancelarTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemCancelarTransaccionLocal"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemDetalleCerrarTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarTransaccionLocal"));		
		
		
		
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonGuardarCambiosToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarTransaccionLocal"));
		
		
		
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonGuardarCambiosToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarTransaccionLocal"));
		
		
		
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioTransaccionLocal"));
		
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.addFocusListener(new TextFieldFocusListener(this,"bienes_ivaTransaccionLocal"));
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.addActionListener(new TextFieldActionListener(this,"bienes_ivaTransaccionLocal"));
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldbienes_ivaTransaccionLocal,"bienes_ivaTransaccionLocal"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.addFocusListener(new TextFieldFocusListener(this,"bienes_sin_ivaTransaccionLocal"));
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.addActionListener(new TextFieldActionListener(this,"bienes_sin_ivaTransaccionLocal"));
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldbienes_sin_ivaTransaccionLocal,"bienes_sin_ivaTransaccionLocal"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.addFocusListener(new TextFieldFocusListener(this,"servicios_ivaTransaccionLocal"));
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.addActionListener(new TextFieldActionListener(this,"servicios_ivaTransaccionLocal"));
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldservicios_ivaTransaccionLocal,"servicios_ivaTransaccionLocal"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.addFocusListener(new TextFieldFocusListener(this,"servicios_sin_ivaTransaccionLocal"));
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.addActionListener(new TextFieldActionListener(this,"servicios_sin_ivaTransaccionLocal"));
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldservicios_sin_ivaTransaccionLocal,"servicios_sin_ivaTransaccionLocal"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.addFocusListener(new TextFieldFocusListener(this,"total_ivaTransaccionLocal"));
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.addActionListener(new TextFieldActionListener(this,"total_ivaTransaccionLocal"));
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldtotal_ivaTransaccionLocal,"total_ivaTransaccionLocal"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.addFocusListener(new TextFieldFocusListener(this,"transfe_iva_retenerTransaccionLocal"));
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.addActionListener(new TextFieldActionListener(this,"transfe_iva_retenerTransaccionLocal"));
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldtransfe_iva_retenerTransaccionLocal,"transfe_iva_retenerTransaccionLocal"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.addFocusListener(new TextFieldFocusListener(this,"presta_iva_retenerTransaccionLocal"));
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.addActionListener(new TextFieldActionListener(this,"presta_iva_retenerTransaccionLocal"));
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldpresta_iva_retenerTransaccionLocal,"presta_iva_retenerTransaccionLocal"));


				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonidTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"idTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_compraTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_compraTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_compraTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_compraTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonrucTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"rucTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonrazon_socialTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"razon_socialTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_periodo_declaraTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_periodo_declaraTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_periodo_declaraTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_periodo_declaraTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_transaccion_contaTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_contaTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_transaccion_contaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_contaTransaccionLocalBusqueda"));
		//jButtonid_clienteTransaccionLocal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteTransaccionLocalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_clienteTransaccionLocal.addActionListener(new ButtonActionListener(this,"id_clienteTransaccionLocal"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_clienteTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_clienteTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_clienteTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonidentificacionTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"identificacionTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_comprobanteTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_comprobanteTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_comprobanteTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_comprobanteTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonfecha_emisionTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonfecha_registro_contableTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"fecha_registro_contableTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonnumero_secuencialTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonnumero_serieTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"numero_serieTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonnumero_autorizacionTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"numero_autorizacionTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonfecha_caducidadTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"fecha_caducidadTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_tributarioTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_tributarioTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_tributarioTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_tributarioTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonnumero_documento_contableTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"numero_documento_contableTransaccionLocalBusqueda"));
		//jButtonid_asiento_contableTransaccionLocal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableTransaccionLocalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_asiento_contableTransaccionLocal.addActionListener(new ButtonActionListener(this,"id_asiento_contableTransaccionLocal"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_asiento_contableTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_asiento_contableTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtones_riseTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"es_riseTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonbienes_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"bienes_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonbienes_sin_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"bienes_sin_ivaTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_ivaTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_ivaTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonservicios_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"servicios_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonservicios_sin_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"servicios_sin_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonmonto_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"monto_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtontotal_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"total_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtontotal_sin_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonmonto_iceTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"monto_iceTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtontransfe_iva_retenerTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"transfe_iva_retenerTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonpresta_iva_retenerTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"presta_iva_retenerTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_retencion_ivaTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_ivaTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_retencion_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_ivaTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_retencion_iva_prestaTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_prestaTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_retencion_iva_prestaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_prestaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtontransfe_iva_retenidoTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"transfe_iva_retenidoTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonpresta_iva_retenidoTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"presta_iva_retenidoTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonpermite_devolucionTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"permite_devolucionTransaccionLocalBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormTransaccionLocal.jTabbedPaneRelacionesTransaccionLocal.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesTransaccionLocal"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameTransaccionLocal"));
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTransaccionLocal.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarTransaccionLocal"));
		}
		
		this.jTableDatosTransaccionLocal.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarTransaccionLocal"));
		
		this.jTableDatosTransaccionLocal.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarTransaccionLocal"));
		
		this.jButtonNuevoTransaccionLocal.addActionListener(new ButtonActionListener(this,"NuevoTransaccionLocal"));
		
		this.jButtonDuplicarTransaccionLocal.addActionListener(new ButtonActionListener(this,"DuplicarTransaccionLocal"));
		
		this.jButtonCopiarTransaccionLocal.addActionListener(new ButtonActionListener(this,"CopiarTransaccionLocal"));
		
		this.jButtonVerFormTransaccionLocal.addActionListener(new ButtonActionListener(this,"VerFormTransaccionLocal"));
		
		
		this.jButtonNuevoToolBarTransaccionLocal.addActionListener(new ButtonActionListener(this,"NuevoToolBarTransaccionLocal"));
			
		this.jButtonDuplicarToolBarTransaccionLocal.addActionListener(new ButtonActionListener(this,"DuplicarToolBarTransaccionLocal"));
			
		this.jMenuItemNuevoTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemNuevoTransaccionLocal"));
			
		this.jMenuItemDuplicarTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarTransaccionLocal"));		
		
		
		this.jButtonNuevoRelacionesTransaccionLocal.addActionListener (new ButtonActionListener(this,"NuevoRelacionesTransaccionLocal"));
		
		
		this.jButtonNuevoRelacionesToolBarTransaccionLocal.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarTransaccionLocal"));
			
		this.jMenuItemNuevoRelacionesTransaccionLocal.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesTransaccionLocal"));		
		
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonModificarTransaccionLocal.addActionListener(new ButtonActionListener(this,"ModificarTransaccionLocal"));
		}
		
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonModificarToolBarTransaccionLocal.addActionListener(new ButtonActionListener(this,"ModificarToolBarTransaccionLocal"));
			
			this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemModificarTransaccionLocal.addActionListener(new ButtonActionListener(this,"MenuItemModificarTransaccionLocal"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonActualizarTransaccionLocal.addActionListener (new ButtonActionListener(this,"ActualizarTransaccionLocal"));
		}
		
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonActualizarToolBarTransaccionLocal.addActionListener(new ButtonActionListener(this,"ActualizarToolBarTransaccionLocal"));
				
			this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemActualizarTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemActualizarTransaccionLocal"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonEliminarTransaccionLocal.addActionListener (new ButtonActionListener(this,"EliminarTransaccionLocal"));
		}
		
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonEliminarToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"EliminarToolBarTransaccionLocal"));
						
			this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemEliminarTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemEliminarTransaccionLocal"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonCancelarTransaccionLocal.addActionListener (new ButtonActionListener(this,"CancelarTransaccionLocal"));
		}
		
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonCancelarToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"CancelarToolBarTransaccionLocal"));
			
			this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemCancelarTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemCancelarTransaccionLocal"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarTransaccionLocal"));		
		
		
		this.jButtonCerrarTransaccionLocal.addActionListener (new ButtonActionListener(this,"CerrarTransaccionLocal"));
		
		
		this.jButtonCerrarToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"CerrarToolBarTransaccionLocal"));
			
		this.jMenuItemCerrarTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemCerrarTransaccionLocal"));
			
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTransaccionLocal.jMenuItemDetalleCerrarTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarTransaccionLocal"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonGuardarCambiosTransaccionLocal.addActionListener (new ButtonActionListener(this,"GuardarCambiosTransaccionLocal"));
		}
		
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonGuardarCambiosToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarTransaccionLocal"));
		}
		
		this.jButtonCopiarToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"CopiarToolBarTransaccionLocal"));
			
		this.jButtonVerFormToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"VerFormToolBarTransaccionLocal"));
		
		this.jMenuItemGuardarCambiosTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosTransaccionLocal"));
			
		this.jMenuItemCopiarTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemCopiarTransaccionLocal"));		
		
		this.jMenuItemVerFormTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemVerFormTransaccionLocal"));		
		
		
		this.jButtonGuardarCambiosTablaTransaccionLocal.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaTransaccionLocal"));
		
		
		this.jButtonGuardarCambiosTablaToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarTransaccionLocal"));
			
		this.jMenuItemGuardarCambiosTablaTransaccionLocal.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaTransaccionLocal"));		
		
		
		
		this.jButtonRecargarInformacionTransaccionLocal.addActionListener (new ButtonActionListener(this,"RecargarInformacionTransaccionLocal"));
					
		this.jButtonRecargarInformacionToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarTransaccionLocal"));
		
		this.jMenuItemRecargarInformacionTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionTransaccionLocal"));		
		
		
		
		this.jButtonAnterioresTransaccionLocal.addActionListener (new ButtonActionListener(this,"AnterioresTransaccionLocal"));
		
		
		this.jButtonAnterioresToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"AnterioresToolBarTransaccionLocal"));
		
		this.jMenuItemAnterioresTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresTransaccionLocal"));		
		
		
		this.jButtonSiguientesTransaccionLocal.addActionListener (new ButtonActionListener(this,"SiguientesTransaccionLocal"));
		
		
		this.jButtonSiguientesToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"SiguientesToolBarTransaccionLocal"));
			
		this.jMenuItemSiguientesTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesTransaccionLocal"));
			
		this.jMenuItemAbrirOrderByTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByTransaccionLocal"));
			
		this.jMenuItemMostrarOcultarTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarTransaccionLocal"));
			
		this.jMenuItemDetalleAbrirOrderByTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByTransaccionLocal"));
			
		this.jMenuItemDetalleMostarOcultarTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarTransaccionLocal"));		
		
		
		this.jButtonNuevoGuardarCambiosTransaccionLocal.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosTransaccionLocal"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarTransaccionLocal"));
			
		this.jMenuItemNuevoGuardarCambiosTransaccionLocal.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosTransaccionLocal"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosTransaccionLocal.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosTransaccionLocal"));

		this.jCheckBoxSeleccionadosTransaccionLocal.addItemListener(new CheckBoxItemListener(this,"SeleccionadosTransaccionLocal"));
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioTransaccionLocal"));
		}
		
		
		this.jComboBoxTiposRelacionesTransaccionLocal.addActionListener (new ButtonActionListener(this,"TiposRelacionesTransaccionLocal"));
			
		this.jComboBoxTiposAccionesTransaccionLocal.addActionListener (new ButtonActionListener(this,"TiposAccionesTransaccionLocal"));
					
		this.jComboBoxTiposSeleccionarTransaccionLocal.addActionListener (new ButtonActionListener(this,"TiposSeleccionarTransaccionLocal"));
			
		this.jTextFieldValorCampoGeneralTransaccionLocal.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralTransaccionLocal"));		
		
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.addFocusListener(new TextFieldFocusListener(this,"bienes_ivaTransaccionLocal"));
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.addActionListener(new TextFieldActionListener(this,"bienes_ivaTransaccionLocal"));
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldbienes_ivaTransaccionLocal,"bienes_ivaTransaccionLocal"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.addFocusListener(new TextFieldFocusListener(this,"bienes_sin_ivaTransaccionLocal"));
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.addActionListener(new TextFieldActionListener(this,"bienes_sin_ivaTransaccionLocal"));
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldbienes_sin_ivaTransaccionLocal,"bienes_sin_ivaTransaccionLocal"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.addFocusListener(new TextFieldFocusListener(this,"servicios_ivaTransaccionLocal"));
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.addActionListener(new TextFieldActionListener(this,"servicios_ivaTransaccionLocal"));
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldservicios_ivaTransaccionLocal,"servicios_ivaTransaccionLocal"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.addFocusListener(new TextFieldFocusListener(this,"servicios_sin_ivaTransaccionLocal"));
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.addActionListener(new TextFieldActionListener(this,"servicios_sin_ivaTransaccionLocal"));
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldservicios_sin_ivaTransaccionLocal,"servicios_sin_ivaTransaccionLocal"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.addFocusListener(new TextFieldFocusListener(this,"total_ivaTransaccionLocal"));
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.addActionListener(new TextFieldActionListener(this,"total_ivaTransaccionLocal"));
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldtotal_ivaTransaccionLocal,"total_ivaTransaccionLocal"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.addFocusListener(new TextFieldFocusListener(this,"transfe_iva_retenerTransaccionLocal"));
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.addActionListener(new TextFieldActionListener(this,"transfe_iva_retenerTransaccionLocal"));
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldtransfe_iva_retenerTransaccionLocal,"transfe_iva_retenerTransaccionLocal"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.addFocusListener(new TextFieldFocusListener(this,"presta_iva_retenerTransaccionLocal"));
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.addActionListener(new TextFieldActionListener(this,"presta_iva_retenerTransaccionLocal"));
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldpresta_iva_retenerTransaccionLocal,"presta_iva_retenerTransaccionLocal"));


		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonidTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"idTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_compraTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_compraTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_compraTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_compraTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonrucTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"rucTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonrazon_socialTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"razon_socialTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_periodo_declaraTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_periodo_declaraTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_periodo_declaraTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_periodo_declaraTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_transaccion_contaTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_contaTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_transaccion_contaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_contaTransaccionLocalBusqueda"));
		//jButtonid_clienteTransaccionLocal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteTransaccionLocalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_clienteTransaccionLocal.addActionListener(new ButtonActionListener(this,"id_clienteTransaccionLocal"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_clienteTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_clienteTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_clienteTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonidentificacionTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"identificacionTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_comprobanteTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_comprobanteTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_comprobanteTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_comprobanteTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonfecha_emisionTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonfecha_registro_contableTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"fecha_registro_contableTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonnumero_secuencialTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonnumero_serieTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"numero_serieTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonnumero_autorizacionTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"numero_autorizacionTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonfecha_caducidadTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"fecha_caducidadTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_tributarioTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_tributarioTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_tributarioTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_tributarioTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonnumero_documento_contableTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"numero_documento_contableTransaccionLocalBusqueda"));
		//jButtonid_asiento_contableTransaccionLocal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableTransaccionLocalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_asiento_contableTransaccionLocal.addActionListener(new ButtonActionListener(this,"id_asiento_contableTransaccionLocal"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_asiento_contableTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_asiento_contableTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtones_riseTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"es_riseTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonbienes_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"bienes_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonbienes_sin_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"bienes_sin_ivaTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_ivaTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_ivaTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonservicios_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"servicios_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonservicios_sin_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"servicios_sin_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonmonto_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"monto_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtontotal_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"total_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtontotal_sin_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonmonto_iceTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"monto_iceTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtontransfe_iva_retenerTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"transfe_iva_retenerTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonpresta_iva_retenerTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"presta_iva_retenerTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_retencion_ivaTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_ivaTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_retencion_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_ivaTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_retencion_iva_prestaTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_prestaTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_retencion_iva_prestaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_prestaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtontransfe_iva_retenidoTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"transfe_iva_retenidoTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonpresta_iva_retenidoTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"presta_iva_retenidoTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonpermite_devolucionTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"permite_devolucionTransaccionLocalBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdAsientoContableTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableTransaccionLocal"));

			this.jButtonBuscarFK_IdAsientoContableid_asiento_contableTransaccionLocal.addActionListener(new ButtonActionListener(this,"id_asiento_contableTransaccionLocal"));

			this.jButtonFK_IdClienteTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdClienteTransaccionLocal"));

			this.jButtonBuscarFK_IdClienteid_clienteTransaccionLocal.addActionListener(new ButtonActionListener(this,"id_clienteTransaccionLocal"));

			this.jButtonFK_IdCompraTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdCompraTransaccionLocal"));

			this.jButtonFK_IdPeriodoDeclaraTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdPeriodoDeclaraTransaccionLocal"));

			this.jButtonFK_IdTipoComprobanteTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdTipoComprobanteTransaccionLocal"));

			this.jButtonFK_IdTipoIvaTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdTipoIvaTransaccionLocal"));

			this.jButtonFK_IdTipoRetencionIvaTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdTipoRetencionIvaTransaccionLocal"));

			this.jButtonFK_IdTipoRetencionIvaPrestaTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdTipoRetencionIvaPrestaTransaccionLocal"));

			this.jButtonFK_IdTipoTributarioTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdTipoTributarioTransaccionLocal"));

			this.jButtonFK_IdTransaccionContaTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionContaTransaccionLocal"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoTransaccionLocal!=null) {
				this.jInternalFrameReporteDinamicoTransaccionLocal.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoTransaccionLocal"));
				this.jInternalFrameReporteDinamicoTransaccionLocal.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoTransaccionLocal"));
				this.jInternalFrameReporteDinamicoTransaccionLocal.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoTransaccionLocal"));
			}
			
			//this.jButtonCerrarReporteDinamicoTransaccionLocal.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoTransaccionLocal"));				
			//this.jButtonGenerarReporteDinamicoTransaccionLocal.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoTransaccionLocal"));
			//this.jButtonGenerarExcelReporteDinamicoTransaccionLocal.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoTransaccionLocal"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionTransaccionLocal!=null) {
				this.jInternalFrameImportacionTransaccionLocal.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionTransaccionLocal"));
				this.jInternalFrameImportacionTransaccionLocal.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionTransaccionLocal"));
				this.jInternalFrameImportacionTransaccionLocal.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionTransaccionLocal"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByTransaccionLocal.addActionListener (new ButtonActionListener(this,"AbrirOrderByTransaccionLocal"));
			
			this.jButtonAbrirOrderByToolBarTransaccionLocal.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarTransaccionLocal"));			
			
			if(this.jInternalFrameOrderByTransaccionLocal!=null) {
				this.jInternalFrameOrderByTransaccionLocal.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByTransaccionLocal"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTransaccionLocal.jTabbedPaneRelacionesTransaccionLocal.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesTransaccionLocal"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameTransaccionLocal();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormTransaccionLocal.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormTransaccionLocal = (JInternalFrameBase)event.getSource();
	            	
	            TransaccionLocalBeanSwingJInternalFrame jInternalFrameParent=(TransaccionLocalBeanSwingJInternalFrame)jInternalFrameDetalleFormTransaccionLocal.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarTransaccionLocalActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosTransaccionLocal.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosTransaccionLocalListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosTransaccionLocal.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosTransaccionLocal.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTransaccionLocalActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTransaccionLocalActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTransaccionLocalActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoTransaccionLocal";
		inputMap = this.jButtonNuevoTransaccionLocal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoTransaccionLocal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoTransaccionLocalActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTransaccionLocalActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTransaccionLocalActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTransaccionLocalActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesTransaccionLocal";
		inputMap = this.jButtonNuevoRelacionesTransaccionLocal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesTransaccionLocal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoTransaccionLocalActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarTransaccionLocal";
		inputMap = this.jButtonModificarTransaccionLocal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarTransaccionLocal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarTransaccionLocalActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarTransaccionLocal";
		inputMap = this.jButtonActualizarTransaccionLocal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarTransaccionLocal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarTransaccionLocalActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarTransaccionLocal";
		inputMap = this.jButtonEliminarTransaccionLocal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarTransaccionLocal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarTransaccionLocalActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarTransaccionLocal";
		inputMap = this.jButtonCancelarTransaccionLocal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarTransaccionLocal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarTransaccionLocalActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarTransaccionLocal";
		inputMap = this.jButtonCerrarTransaccionLocal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarTransaccionLocal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarTransaccionLocalActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonGuardarCambiosTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosTransaccionLocal";
		inputMap = this.jInternalFrameDetalleFormTransaccionLocal.jButtonGuardarCambiosTransaccionLocal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonGuardarCambiosTransaccionLocal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosTransaccionLocalActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosTransaccionLocal.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosTransaccionLocalItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesTransaccionLocal.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesTransaccionLocalActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarTransaccionLocal.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarTransaccionLocalActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralTransaccionLocal.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralTransaccionLocalActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonidTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"idTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_compraTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_compraTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_compraTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_compraTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonrucTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"rucTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonrazon_socialTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"razon_socialTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_periodo_declaraTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_periodo_declaraTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_periodo_declaraTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_periodo_declaraTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_transaccion_contaTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_contaTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_transaccion_contaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_contaTransaccionLocalBusqueda"));
		//jButtonid_clienteTransaccionLocal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteTransaccionLocalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_clienteTransaccionLocal.addActionListener(new ButtonActionListener(this,"id_clienteTransaccionLocal"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_clienteTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_clienteTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_clienteTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonidentificacionTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"identificacionTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_comprobanteTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_comprobanteTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_comprobanteTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_comprobanteTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonfecha_emisionTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonfecha_registro_contableTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"fecha_registro_contableTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonnumero_secuencialTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonnumero_serieTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"numero_serieTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonnumero_autorizacionTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"numero_autorizacionTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonfecha_caducidadTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"fecha_caducidadTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_tributarioTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_tributarioTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_tributarioTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_tributarioTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonnumero_documento_contableTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"numero_documento_contableTransaccionLocalBusqueda"));
		//jButtonid_asiento_contableTransaccionLocal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableTransaccionLocalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_asiento_contableTransaccionLocal.addActionListener(new ButtonActionListener(this,"id_asiento_contableTransaccionLocal"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_asiento_contableTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_asiento_contableTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtones_riseTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"es_riseTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonbienes_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"bienes_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonbienes_sin_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"bienes_sin_ivaTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_ivaTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_ivaTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonservicios_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"servicios_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonservicios_sin_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"servicios_sin_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonmonto_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"monto_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtontotal_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"total_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtontotal_sin_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonmonto_iceTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"monto_iceTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtontransfe_iva_retenerTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"transfe_iva_retenerTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonpresta_iva_retenerTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"presta_iva_retenerTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_retencion_ivaTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_ivaTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_retencion_ivaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_ivaTransaccionLocalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_retencion_iva_prestaTransaccionLocalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_prestaTransaccionLocalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_tipo_retencion_iva_prestaTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_prestaTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtontransfe_iva_retenidoTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"transfe_iva_retenidoTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonpresta_iva_retenidoTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"presta_iva_retenidoTransaccionLocalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTransaccionLocal.jButtonpermite_devolucionTransaccionLocalBusqueda.addActionListener(new ButtonActionListener(this,"permite_devolucionTransaccionLocalBusqueda"));
		
		
		this.jButtonFK_IdAsientoContableTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableTransaccionLocal"));

		this.jButtonBuscarFK_IdAsientoContableid_asiento_contableTransaccionLocal.addActionListener(new ButtonActionListener(this,"id_asiento_contableTransaccionLocal"));

		this.jButtonFK_IdClienteTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdClienteTransaccionLocal"));

		this.jButtonBuscarFK_IdClienteid_clienteTransaccionLocal.addActionListener(new ButtonActionListener(this,"id_clienteTransaccionLocal"));

		this.jButtonFK_IdCompraTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdCompraTransaccionLocal"));

		this.jButtonFK_IdPeriodoDeclaraTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdPeriodoDeclaraTransaccionLocal"));

		this.jButtonFK_IdTipoComprobanteTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdTipoComprobanteTransaccionLocal"));

		this.jButtonFK_IdTipoIvaTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdTipoIvaTransaccionLocal"));

		this.jButtonFK_IdTipoRetencionIvaTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdTipoRetencionIvaTransaccionLocal"));

		this.jButtonFK_IdTipoRetencionIvaPrestaTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdTipoRetencionIvaPrestaTransaccionLocal"));

		this.jButtonFK_IdTipoTributarioTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdTipoTributarioTransaccionLocal"));

		this.jButtonFK_IdTransaccionContaTransaccionLocal.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionContaTransaccionLocal"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionTransaccionLocal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionTransaccionLocalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarTransaccionLocalActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarTransaccionLocal.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosTransaccionLocal(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(TransaccionLocal transaccionlocalAux:this.transaccionlocalLogic.getTransaccionLocals()) {
					transaccionlocalAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TransaccionLocal transaccionlocalAux:transaccionlocals) {
					transaccionlocalAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosTransaccionLocalItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingTransaccionLocal(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(TransaccionLocal transaccionlocalAux:this.transaccionlocalLogic.getTransaccionLocals()) {
						transaccionlocalAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(TransaccionLocal transaccionlocalAux:transaccionlocals) {
						transaccionlocalAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(TransaccionLocal transaccionlocalAux:this.transaccionlocalLogic.getTransaccionLocals()) {
					
						if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_ESRISE)) {
							existe=true;
							transaccionlocalAux.setes_rise(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION)) {
							existe=true;
							transaccionlocalAux.setpermite_devolucion(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(TransaccionLocal transaccionlocalAux:transaccionlocals) {
						
						if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_ESRISE)) {
							existe=true;
							transaccionlocalAux.setes_rise(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION)) {
							existe=true;
							transaccionlocalAux.setpermite_devolucion(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaTransaccionLocal(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosTransaccionLocal.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosTransaccionLocal.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosTransaccionLocalItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingTransaccionLocal(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosTransaccionLocal.getSelectedRows();
			
			TransaccionLocal transaccionlocalLocal=new TransaccionLocal();
			
			//this.seleccionarTodosTransaccionLocal(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionlocalLocal =(TransaccionLocal) this.transaccionlocalLogic.getTransaccionLocals().toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					transaccionlocalLocal =(TransaccionLocal) this.transaccionlocals.toArray()[this.jTableDatosTransaccionLocal.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				transaccionlocalLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(TransaccionLocal transaccionlocalAux:this.transaccionlocalLogic.getTransaccionLocals()) {
						transaccionlocalAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(TransaccionLocal transaccionlocalAux:transaccionlocals) {
						transaccionlocalAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaTransaccionLocal(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosTransaccionLocal.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosTransaccionLocal.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosTransaccionLocal,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualTransaccionLocalItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarTransaccionLocalParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralTransaccionLocalActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingTransaccionLocal(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralTransaccionLocal.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(TransaccionLocal transaccionlocalAux:this.transaccionlocalLogic.getTransaccionLocals()) {
				
						if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_RUC)) {
							existe=true;
							transaccionlocalAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL)) {
							existe=true;
							transaccionlocalAux.setrazon_social(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION)) {
							existe=true;
							transaccionlocalAux.setidentificacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							transaccionlocalAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE)) {
							existe=true;
							transaccionlocalAux.setfecha_registro_contable(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
							existe=true;
							transaccionlocalAux.setnumero_secuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE)) {
							existe=true;
							transaccionlocalAux.setnumero_serie(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION)) {
							existe=true;
							transaccionlocalAux.setnumero_autorizacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD)) {
							existe=true;
							transaccionlocalAux.setfecha_caducidad(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE)) {
							existe=true;
							transaccionlocalAux.setnumero_documento_contable(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_BIENESIVA)) {
							existe=true;
							transaccionlocalAux.setbienes_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA)) {
							existe=true;
							transaccionlocalAux.setbienes_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA)) {
							existe=true;
							transaccionlocalAux.setservicios_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA)) {
							existe=true;
							transaccionlocalAux.setservicios_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_MONTOIVA)) {
							existe=true;
							transaccionlocalAux.setmonto_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_TOTALIVA)) {
							existe=true;
							transaccionlocalAux.settotal_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA)) {
							existe=true;
							transaccionlocalAux.settotal_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_MONTOICE)) {
							existe=true;
							transaccionlocalAux.setmonto_ice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER)) {
							existe=true;
							transaccionlocalAux.settransfe_iva_retener(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER)) {
							existe=true;
							transaccionlocalAux.setpresta_iva_retener(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO)) {
							existe=true;
							transaccionlocalAux.settransfe_iva_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO)) {
							existe=true;
							transaccionlocalAux.setpresta_iva_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TransaccionLocal transaccionlocalAux:transaccionlocals) {
					
						if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_RUC)) {
							existe=true;
							transaccionlocalAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL)) {
							existe=true;
							transaccionlocalAux.setrazon_social(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION)) {
							existe=true;
							transaccionlocalAux.setidentificacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							transaccionlocalAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE)) {
							existe=true;
							transaccionlocalAux.setfecha_registro_contable(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
							existe=true;
							transaccionlocalAux.setnumero_secuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE)) {
							existe=true;
							transaccionlocalAux.setnumero_serie(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION)) {
							existe=true;
							transaccionlocalAux.setnumero_autorizacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD)) {
							existe=true;
							transaccionlocalAux.setfecha_caducidad(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE)) {
							existe=true;
							transaccionlocalAux.setnumero_documento_contable(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_BIENESIVA)) {
							existe=true;
							transaccionlocalAux.setbienes_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA)) {
							existe=true;
							transaccionlocalAux.setbienes_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA)) {
							existe=true;
							transaccionlocalAux.setservicios_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA)) {
							existe=true;
							transaccionlocalAux.setservicios_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_MONTOIVA)) {
							existe=true;
							transaccionlocalAux.setmonto_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_TOTALIVA)) {
							existe=true;
							transaccionlocalAux.settotal_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA)) {
							existe=true;
							transaccionlocalAux.settotal_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_MONTOICE)) {
							existe=true;
							transaccionlocalAux.setmonto_ice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER)) {
							existe=true;
							transaccionlocalAux.settransfe_iva_retener(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER)) {
							existe=true;
							transaccionlocalAux.setpresta_iva_retener(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO)) {
							existe=true;
							transaccionlocalAux.settransfe_iva_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO)) {
							existe=true;
							transaccionlocalAux.setpresta_iva_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaTransaccionLocal(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesTransaccionLocalActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingTransaccionLocal(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioTransaccionLocal=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesTransaccionLocal.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteTransaccionLocal) {				
					conSplash=true;//false;										
					
					//this.startProcessTransaccionLocal(conSplash);
				
					this.generarReporteTransaccionLocalsSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTransaccionLocal.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoTransaccionLocalsSeleccionados();
				//this.jComboBoxTiposAccionesTransaccionLocal.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoTransaccionLocalsSeleccionados(false);
				//this.jComboBoxTiposAccionesTransaccionLocal.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoTransaccionLocalsSeleccionados(true);
				//this.jComboBoxTiposAccionesTransaccionLocal.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessTransaccionLocal();
				
				this.exportarTransaccionLocalsSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTransaccionLocal.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionTransaccionLocals();
				//this.importarTransaccionLocals();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTransaccionLocal.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessTransaccionLocal();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelTransaccionLocalsSeleccionados();
				//this.jComboBoxTiposAccionesTransaccionLocal.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Transaccion Local", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessTransaccionLocal();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoTransaccionLocal)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyTransaccionLocal(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Transaccion Local",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTransaccionLocal.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.setSelectedIndex(0);					
				}	
			} 			
			else if(TransaccionLocalBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteTransaccionLocal) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessTransaccionLocal(conSplash);
					
						//this.actualizarParametrosGeneralTransaccionLocal();
						
						this.generarReporteProcesoAccionTransaccionLocalsSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesTransaccionLocal.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(TransaccionLocalBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Transaccion LocalES SELECCIONADOS?", "MANTENIMIENTO DE Transaccion Local", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessTransaccionLocal();
				
						this.actualizarParametrosGeneralTransaccionLocal();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.transaccionlocalReturnGeneral=transaccionlocalLogic.procesarAccionTransaccionLocalsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.transaccionlocalLogic.getTransaccionLocals(),this.transaccionlocalParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarTransaccionLocalReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesTransaccionLocal.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralTransaccionLocal();
					
					TransaccionLocalBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarTransaccionLocalReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesTransaccionLocal.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxTiposAccionesFormularioTransaccionLocal.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessTransaccionLocal(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesTransaccionLocalActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessTransaccionLocal();
			
			if(this.jInternalFrameDetalleFormTransaccionLocal==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<TransaccionLocal> transaccionlocalsSeleccionados=new ArrayList<TransaccionLocal>();		
			TransaccionLocal transaccionlocal=new TransaccionLocal();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingTransaccionLocal(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesTransaccionLocal.getSelectedItem();
			
			
			
			
			transaccionlocalsSeleccionados=this.getTransaccionLocalsSeleccionados(true);
			//this.sTipoAccion;
			
			if(transaccionlocalsSeleccionados.size()==1) {
				for(TransaccionLocal transaccionlocalAux:transaccionlocalsSeleccionados) {
					transaccionlocal=transaccionlocalAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessTransaccionLocal();
			
      		//this.finishProcessTransaccionLocal(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarTransaccionLocalReturnGeneral() throws Exception {
		if(this.transaccionlocalReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.transaccionlocalReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.transaccionlocalReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.transaccionlocalReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.transaccionlocalReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.transaccionlocalReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingTransaccionLocal(false);
		}
		
		if(this.transaccionlocalReturnGeneral.getConRetornoLista() || this.transaccionlocalReturnGeneral.getConRetornoObjeto()) {
			if(this.transaccionlocalReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.transaccionlocalLogic.setTransaccionLocals(this.transaccionlocalReturnGeneral.getTransaccionLocals());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.transaccionlocalReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.transaccionlocalLogic.setTransaccionLocal(this.transaccionlocalReturnGeneral.getTransaccionLocal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingTransaccionLocal(false);
		}
	}
	
	public void actualizarParametrosGeneralTransaccionLocal() throws Exception {
		
		
	}
	
	public ArrayList<TransaccionLocal> getTransaccionLocalsSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<TransaccionLocal> transaccionlocalsSeleccionados=new ArrayList<TransaccionLocal>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioTransaccionLocal) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(TransaccionLocal transaccionlocalAux:transaccionlocalLogic.getTransaccionLocals()) {
					if(transaccionlocalAux.getIsSelected()) {
						transaccionlocalsSeleccionados.add(transaccionlocalAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TransaccionLocal transaccionlocalAux:this.transaccionlocals) {
					if(transaccionlocalAux.getIsSelected()) {
						transaccionlocalsSeleccionados.add(transaccionlocalAux);				
					}
				}
			}
			
			if(transaccionlocalsSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						transaccionlocalsSeleccionados.addAll(this.transaccionlocalLogic.getTransaccionLocals());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						transaccionlocalsSeleccionados.addAll(this.transaccionlocals);				
					}
				}
			}
		} else {
			transaccionlocalsSeleccionados.add(this.transaccionlocal);
		}
		
		return transaccionlocalsSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteTransaccionLocalsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalTransaccionLocalsSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoTransaccionLocalsSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoTransaccionLocalsSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoTransaccionLocalsSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Transaccion Local",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesTransaccionLocalsSeleccionados() throws Exception {
		ArrayList<TransaccionLocal> transaccionlocalsSeleccionados=new ArrayList<TransaccionLocal>();		
		
		transaccionlocalsSeleccionados=this.getTransaccionLocalsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteTransaccionLocals("Todos",transaccionlocalsSeleccionados);
		
	}	
	
	public void generarReporteNormalTransaccionLocalsSeleccionados() throws Exception {
		ArrayList<TransaccionLocal> transaccionlocalsSeleccionados=new ArrayList<TransaccionLocal>();		
		
		transaccionlocalsSeleccionados=this.getTransaccionLocalsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteTransaccionLocals("Todos",transaccionlocalsSeleccionados);
	}		
	
	public void generarReporteProcesoAccionTransaccionLocalsSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<TransaccionLocal> transaccionlocalsSeleccionados=new ArrayList<TransaccionLocal>();
		
		transaccionlocalsSeleccionados=this.getTransaccionLocalsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteTransaccionLocals("Todos",transaccionlocalsSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoTransaccionLocalsSeleccionados() throws Exception {
		ArrayList<TransaccionLocal> transaccionlocalsSeleccionados=new ArrayList<TransaccionLocal>();		
		
		
		this.abrirInicializarFrameReporteDinamicoTransaccionLocal();
		
		
		transaccionlocalsSeleccionados=this.getTransaccionLocalsSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoTransaccionLocal();
		
		
		//this.generarReporteTransaccionLocals("Todos",transaccionlocalsSeleccionados ,transaccionlocalImplementable,transaccionlocalImplementableHome);
	}
	
	public void mostrarImportacionTransaccionLocals() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionTransaccionLocal();
		
		this.abrirFrameImportacionTransaccionLocal();		
		
			
		//this.generarReporteTransaccionLocals("Todos",transaccionlocalsSeleccionados ,transaccionlocalImplementable,transaccionlocalImplementableHome);
	}
	
	public void importarTransaccionLocals() throws Exception {		
	
	}
	
	public void exportarTransaccionLocalsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelTransaccionLocalsSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoTransaccionLocalsSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlTransaccionLocalsSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Transaccion Local",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoTransaccionLocalsSeleccionados() throws Exception {
		ArrayList<TransaccionLocal> transaccionlocalsSeleccionados=new ArrayList<TransaccionLocal>();		
		
		transaccionlocalsSeleccionados=this.getTransaccionLocalsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"transaccionlocal."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarTransaccionLocal(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(TransaccionLocal transaccionlocalAux:transaccionlocalsSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarTransaccionLocal(transaccionlocalAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//transaccionlocalAux.setsDetalleGeneralEntityReporte(transaccionlocalAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Transaccion Local",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarTransaccionLocal(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_IDCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_RUC;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_IDPERIODODECLARA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_IDTRANSACCIONCONTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_IDTIPOCOMPROBANTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_IDTIPOTRIBUTARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_IDASIENTOCONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_ESRISE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_BIENESIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_IDTIPOIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_MONTOIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_TOTALIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_MONTOICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarTransaccionLocal(TransaccionLocal transaccionlocal,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=transaccionlocal.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getcompra_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getruc();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getrazon_social();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getperiododeclara_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.gettransaccionconta_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getidentificacion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.gettipocomprobante_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getfecha_registro_contable().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getnumero_secuencial();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getnumero_serie();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getnumero_autorizacion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getfecha_caducidad().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.gettipotributario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getnumero_documento_contable();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getasientocontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getes_rise().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getbienes_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getbienes_sin_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.gettipoiva_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getservicios_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getservicios_sin_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getmonto_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.gettotal_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.gettotal_sin_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getmonto_ice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.gettransfe_iva_retener().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getpresta_iva_retener().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.gettiporetencioniva_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.gettiporetencionivapresta_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.gettransfe_iva_retenido().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getpresta_iva_retenido().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=transaccionlocal.getpermite_devolucion().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelTransaccionLocalsSeleccionados() throws Exception {
		ArrayList<TransaccionLocal> transaccionlocalsSeleccionados=new ArrayList<TransaccionLocal>();		
		
		transaccionlocalsSeleccionados=this.getTransaccionLocalsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"transaccionlocal.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("TransaccionLocals");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelTransaccionLocal(row);				
				iRow++;
			}				
			
			for(TransaccionLocal transaccionlocalAux:transaccionlocalsSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelTransaccionLocal(transaccionlocalAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Transaccion Local",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlTransaccionLocalsSeleccionados() throws Exception {
		ArrayList<TransaccionLocal> transaccionlocalsSeleccionados=new ArrayList<TransaccionLocal>();		
		
		transaccionlocalsSeleccionados=this.getTransaccionLocalsSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"transaccionlocal.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("transaccionlocals");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("transaccionlocal");
			//elementRoot.appendChild(element);
		
			for(TransaccionLocal transaccionlocalAux:transaccionlocalsSeleccionados) {
				element = document.createElement("transaccionlocal");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlTransaccionLocal(transaccionlocalAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Transaccion Local",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelTransaccionLocal(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_RUC);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDPERIODODECLARA);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTRANSACCIONCONTA);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPOCOMPROBANTE);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPOTRIBUTARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDASIENTOCONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_ESRISE);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_BIENESIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_BIENESSINIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPOIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_SERVICIOSIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_SERVICIOSSINIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_MONTOIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_TOTALIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_TOTALSINIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_MONTOICE);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENER);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENER);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_TRANSFEIVARETENIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_PRESTAIVARETENIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelTransaccionLocal(TransaccionLocal transaccionlocal,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getcompra_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getruc());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getrazon_social());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getperiododeclara_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.gettransaccionconta_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getidentificacion());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.gettipocomprobante_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getfecha_registro_contable());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getnumero_secuencial());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getnumero_serie());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getnumero_autorizacion());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getfecha_caducidad());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.gettipotributario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getnumero_documento_contable());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getasientocontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getes_rise());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getbienes_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getbienes_sin_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.gettipoiva_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getservicios_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getservicios_sin_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getmonto_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.gettotal_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.gettotal_sin_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getmonto_ice());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.gettransfe_iva_retener());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getpresta_iva_retener());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.gettiporetencioniva_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.gettiporetencionivapresta_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.gettransfe_iva_retenido());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getpresta_iva_retenido());
		cell = row.createCell(iColumn++);cell.setCellValue(transaccionlocal.getpermite_devolucion());				
	}
	
	public void setFilaDatosExportarXmlTransaccionLocal(TransaccionLocal transaccionlocal,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(TransaccionLocalConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(transaccionlocal.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(TransaccionLocalConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(transaccionlocal.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementcompra_descripcion = document.createElement(TransaccionLocalConstantesFunciones.IDCOMPRA);
		elementcompra_descripcion.appendChild(document.createTextNode(transaccionlocal.getcompra_descripcion()));
		element.appendChild(elementcompra_descripcion);

		Element elementruc = document.createElement(TransaccionLocalConstantesFunciones.RUC);
		elementruc.appendChild(document.createTextNode(transaccionlocal.getruc().trim()));
		element.appendChild(elementruc);

		Element elementrazon_social = document.createElement(TransaccionLocalConstantesFunciones.RAZONSOCIAL);
		elementrazon_social.appendChild(document.createTextNode(transaccionlocal.getrazon_social().trim()));
		element.appendChild(elementrazon_social);

		Element elementperiododeclara_descripcion = document.createElement(TransaccionLocalConstantesFunciones.IDPERIODODECLARA);
		elementperiododeclara_descripcion.appendChild(document.createTextNode(transaccionlocal.getperiododeclara_descripcion()));
		element.appendChild(elementperiododeclara_descripcion);

		Element elementtransaccionconta_descripcion = document.createElement(TransaccionLocalConstantesFunciones.IDTRANSACCIONCONTA);
		elementtransaccionconta_descripcion.appendChild(document.createTextNode(transaccionlocal.gettransaccionconta_descripcion()));
		element.appendChild(elementtransaccionconta_descripcion);

		Element elementcliente_descripcion = document.createElement(TransaccionLocalConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(transaccionlocal.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementidentificacion = document.createElement(TransaccionLocalConstantesFunciones.IDENTIFICACION);
		elementidentificacion.appendChild(document.createTextNode(transaccionlocal.getidentificacion().trim()));
		element.appendChild(elementidentificacion);

		Element elementtipocomprobante_descripcion = document.createElement(TransaccionLocalConstantesFunciones.IDTIPOCOMPROBANTE);
		elementtipocomprobante_descripcion.appendChild(document.createTextNode(transaccionlocal.gettipocomprobante_descripcion()));
		element.appendChild(elementtipocomprobante_descripcion);

		Element elementfecha_emision = document.createElement(TransaccionLocalConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(transaccionlocal.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementfecha_registro_contable = document.createElement(TransaccionLocalConstantesFunciones.FECHAREGISTROCONTABLE);
		elementfecha_registro_contable.appendChild(document.createTextNode(transaccionlocal.getfecha_registro_contable().toString().trim()));
		element.appendChild(elementfecha_registro_contable);

		Element elementnumero_secuencial = document.createElement(TransaccionLocalConstantesFunciones.NUMEROSECUENCIAL);
		elementnumero_secuencial.appendChild(document.createTextNode(transaccionlocal.getnumero_secuencial().trim()));
		element.appendChild(elementnumero_secuencial);

		Element elementnumero_serie = document.createElement(TransaccionLocalConstantesFunciones.NUMEROSERIE);
		elementnumero_serie.appendChild(document.createTextNode(transaccionlocal.getnumero_serie().trim()));
		element.appendChild(elementnumero_serie);

		Element elementnumero_autorizacion = document.createElement(TransaccionLocalConstantesFunciones.NUMEROAUTORIZACION);
		elementnumero_autorizacion.appendChild(document.createTextNode(transaccionlocal.getnumero_autorizacion().trim()));
		element.appendChild(elementnumero_autorizacion);

		Element elementfecha_caducidad = document.createElement(TransaccionLocalConstantesFunciones.FECHACADUCIDAD);
		elementfecha_caducidad.appendChild(document.createTextNode(transaccionlocal.getfecha_caducidad().toString().trim()));
		element.appendChild(elementfecha_caducidad);

		Element elementtipotributario_descripcion = document.createElement(TransaccionLocalConstantesFunciones.IDTIPOTRIBUTARIO);
		elementtipotributario_descripcion.appendChild(document.createTextNode(transaccionlocal.gettipotributario_descripcion()));
		element.appendChild(elementtipotributario_descripcion);

		Element elementnumero_documento_contable = document.createElement(TransaccionLocalConstantesFunciones.NUMERODOCUMENTOCONTABLE);
		elementnumero_documento_contable.appendChild(document.createTextNode(transaccionlocal.getnumero_documento_contable().trim()));
		element.appendChild(elementnumero_documento_contable);

		Element elementasientocontable_descripcion = document.createElement(TransaccionLocalConstantesFunciones.IDASIENTOCONTABLE);
		elementasientocontable_descripcion.appendChild(document.createTextNode(transaccionlocal.getasientocontable_descripcion()));
		element.appendChild(elementasientocontable_descripcion);

		Element elementes_rise = document.createElement(TransaccionLocalConstantesFunciones.ESRISE);
		elementes_rise.appendChild(document.createTextNode(transaccionlocal.getes_rise().toString().trim()));
		element.appendChild(elementes_rise);

		Element elementbienes_iva = document.createElement(TransaccionLocalConstantesFunciones.BIENESIVA);
		elementbienes_iva.appendChild(document.createTextNode(transaccionlocal.getbienes_iva().toString().trim()));
		element.appendChild(elementbienes_iva);

		Element elementbienes_sin_iva = document.createElement(TransaccionLocalConstantesFunciones.BIENESSINIVA);
		elementbienes_sin_iva.appendChild(document.createTextNode(transaccionlocal.getbienes_sin_iva().toString().trim()));
		element.appendChild(elementbienes_sin_iva);

		Element elementtipoiva_descripcion = document.createElement(TransaccionLocalConstantesFunciones.IDTIPOIVA);
		elementtipoiva_descripcion.appendChild(document.createTextNode(transaccionlocal.gettipoiva_descripcion()));
		element.appendChild(elementtipoiva_descripcion);

		Element elementservicios_iva = document.createElement(TransaccionLocalConstantesFunciones.SERVICIOSIVA);
		elementservicios_iva.appendChild(document.createTextNode(transaccionlocal.getservicios_iva().toString().trim()));
		element.appendChild(elementservicios_iva);

		Element elementservicios_sin_iva = document.createElement(TransaccionLocalConstantesFunciones.SERVICIOSSINIVA);
		elementservicios_sin_iva.appendChild(document.createTextNode(transaccionlocal.getservicios_sin_iva().toString().trim()));
		element.appendChild(elementservicios_sin_iva);

		Element elementmonto_iva = document.createElement(TransaccionLocalConstantesFunciones.MONTOIVA);
		elementmonto_iva.appendChild(document.createTextNode(transaccionlocal.getmonto_iva().toString().trim()));
		element.appendChild(elementmonto_iva);

		Element elementtotal_iva = document.createElement(TransaccionLocalConstantesFunciones.TOTALIVA);
		elementtotal_iva.appendChild(document.createTextNode(transaccionlocal.gettotal_iva().toString().trim()));
		element.appendChild(elementtotal_iva);

		Element elementtotal_sin_iva = document.createElement(TransaccionLocalConstantesFunciones.TOTALSINIVA);
		elementtotal_sin_iva.appendChild(document.createTextNode(transaccionlocal.gettotal_sin_iva().toString().trim()));
		element.appendChild(elementtotal_sin_iva);

		Element elementmonto_ice = document.createElement(TransaccionLocalConstantesFunciones.MONTOICE);
		elementmonto_ice.appendChild(document.createTextNode(transaccionlocal.getmonto_ice().toString().trim()));
		element.appendChild(elementmonto_ice);

		Element elementtransfe_iva_retener = document.createElement(TransaccionLocalConstantesFunciones.TRANSFEIVARETENER);
		elementtransfe_iva_retener.appendChild(document.createTextNode(transaccionlocal.gettransfe_iva_retener().toString().trim()));
		element.appendChild(elementtransfe_iva_retener);

		Element elementpresta_iva_retener = document.createElement(TransaccionLocalConstantesFunciones.PRESTAIVARETENER);
		elementpresta_iva_retener.appendChild(document.createTextNode(transaccionlocal.getpresta_iva_retener().toString().trim()));
		element.appendChild(elementpresta_iva_retener);

		Element elementtiporetencioniva_descripcion = document.createElement(TransaccionLocalConstantesFunciones.IDTIPORETENCIONIVA);
		elementtiporetencioniva_descripcion.appendChild(document.createTextNode(transaccionlocal.gettiporetencioniva_descripcion()));
		element.appendChild(elementtiporetencioniva_descripcion);

		Element elementtiporetencionivapresta_descripcion = document.createElement(TransaccionLocalConstantesFunciones.IDTIPORETENCIONIVAPRESTA);
		elementtiporetencionivapresta_descripcion.appendChild(document.createTextNode(transaccionlocal.gettiporetencionivapresta_descripcion()));
		element.appendChild(elementtiporetencionivapresta_descripcion);

		Element elementtransfe_iva_retenido = document.createElement(TransaccionLocalConstantesFunciones.TRANSFEIVARETENIDO);
		elementtransfe_iva_retenido.appendChild(document.createTextNode(transaccionlocal.gettransfe_iva_retenido().toString().trim()));
		element.appendChild(elementtransfe_iva_retenido);

		Element elementpresta_iva_retenido = document.createElement(TransaccionLocalConstantesFunciones.PRESTAIVARETENIDO);
		elementpresta_iva_retenido.appendChild(document.createTextNode(transaccionlocal.getpresta_iva_retenido().toString().trim()));
		element.appendChild(elementpresta_iva_retenido);

		Element elementpermite_devolucion = document.createElement(TransaccionLocalConstantesFunciones.PERMITEDEVOLUCION);
		elementpermite_devolucion.appendChild(document.createTextNode(transaccionlocal.getpermite_devolucion().toString().trim()));
		element.appendChild(elementpermite_devolucion);
	}
	
	public void generarReporteGroupGenericoTransaccionLocalsSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<TransaccionLocal> transaccionlocalsSeleccionados=new ArrayList<TransaccionLocal>();
		
		transaccionlocalsSeleccionados=this.getTransaccionLocalsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoTransaccionLocal(transaccionlocalsSeleccionados);
		
		this.generarReporteTransaccionLocals("Todos",transaccionlocalsSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoTransaccionLocal(ArrayList<TransaccionLocal> transaccionlocalsSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(TransaccionLocal transaccionlocalAux:transaccionlocalsSeleccionados) {
				transaccionlocalAux.setsDetalleGeneralEntityReporte(transaccionlocalAux.toString());
			
				if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_IDCOMPRA)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.getcompra_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_RUC)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.getruc());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_RAZONSOCIAL)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.getrazon_social());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_IDPERIODODECLARA)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.getperiododeclara_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_IDTRANSACCIONCONTA)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.gettransaccionconta_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_IDENTIFICACION)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.getidentificacion());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_IDTIPOCOMPROBANTE)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.gettipocomprobante_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(transaccionlocalAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_FECHAREGISTROCONTABLE)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(transaccionlocalAux.getfecha_registro_contable()));
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.getnumero_secuencial());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_NUMEROSERIE)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.getnumero_serie());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_NUMEROAUTORIZACION)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.getnumero_autorizacion());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_FECHACADUCIDAD)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(transaccionlocalAux.getfecha_caducidad()));
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_IDTIPOTRIBUTARIO)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.gettipotributario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_NUMERODOCUMENTOCONTABLE)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.getnumero_documento_contable());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_IDASIENTOCONTABLE)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.getasientocontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_ESRISE)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(transaccionlocalAux.getes_rise()));
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_IDTIPOIVA)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.gettipoiva_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVA)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.gettiporetencioniva_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(transaccionlocalAux.gettiporetencionivapresta_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TransaccionLocalConstantesFunciones.LABEL_PERMITEDEVOLUCION)) {
					existe=true;
					transaccionlocalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(transaccionlocalAux.getpermite_devolucion()));
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TransaccionLocalConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesTransaccionLocal(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoTransaccionLocal=true;
				this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=true;
				this.isVisibilidadCeldaGuardarCambiosTransaccionLocal=true;
			}
			
			this.isVisibilidadCeldaModificarTransaccionLocal=false;
			this.isVisibilidadCeldaActualizarTransaccionLocal=false;
			this.isVisibilidadCeldaEliminarTransaccionLocal=false;
			this.isVisibilidadCeldaCancelarTransaccionLocal=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTransaccionLocal=true;
				} else {
					this.isVisibilidadCeldaGuardarTransaccionLocal=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoTransaccionLocal=false;
			this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=false;
			this.isVisibilidadCeldaGuardarCambiosTransaccionLocal=false;
			this.isVisibilidadCeldaModificarTransaccionLocal=false;
			this.isVisibilidadCeldaActualizarTransaccionLocal=true;
			this.isVisibilidadCeldaEliminarTransaccionLocal=false;
			this.isVisibilidadCeldaCancelarTransaccionLocal=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTransaccionLocal=true;
				} else {
					this.isVisibilidadCeldaGuardarTransaccionLocal=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoTransaccionLocal=false;
			this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=false;
			this.isVisibilidadCeldaGuardarCambiosTransaccionLocal=false;
			this.isVisibilidadCeldaModificarTransaccionLocal=false;
			this.isVisibilidadCeldaActualizarTransaccionLocal=true;
			this.isVisibilidadCeldaEliminarTransaccionLocal=true;
			this.isVisibilidadCeldaCancelarTransaccionLocal=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTransaccionLocal=true;
				} else {
					this.isVisibilidadCeldaGuardarTransaccionLocal=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoTransaccionLocal=false;
			this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=false;
			this.isVisibilidadCeldaGuardarCambiosTransaccionLocal=false;
			this.isVisibilidadCeldaModificarTransaccionLocal=false;
			this.isVisibilidadCeldaActualizarTransaccionLocal=true;
			this.isVisibilidadCeldaEliminarTransaccionLocal=false;
			this.isVisibilidadCeldaCancelarTransaccionLocal=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTransaccionLocal=false;
				} else {
					this.isVisibilidadCeldaGuardarTransaccionLocal=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoTransaccionLocal=true;
			this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=true;
			this.isVisibilidadCeldaGuardarCambiosTransaccionLocal=true;
			this.isVisibilidadCeldaModificarTransaccionLocal=false;
			this.isVisibilidadCeldaActualizarTransaccionLocal=false;
			this.isVisibilidadCeldaEliminarTransaccionLocal=false;
			this.isVisibilidadCeldaCancelarTransaccionLocal=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTransaccionLocal=true;
				} else {
					this.isVisibilidadCeldaGuardarTransaccionLocal=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoTransaccionLocal=false;
			this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=false;
			this.isVisibilidadCeldaGuardarCambiosTransaccionLocal=false;
			this.isVisibilidadCeldaActualizarTransaccionLocal=false;
			this.isVisibilidadCeldaEliminarTransaccionLocal=false;
			this.isVisibilidadCeldaCancelarTransaccionLocal=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTransaccionLocal=false;
				} else {
					this.isVisibilidadCeldaGuardarTransaccionLocal=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoTransaccionLocal=false;
			this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=false;
			this.isVisibilidadCeldaGuardarCambiosTransaccionLocal=false;
			this.isVisibilidadCeldaModificarTransaccionLocal=true;
			this.isVisibilidadCeldaActualizarTransaccionLocal=false;
			this.isVisibilidadCeldaEliminarTransaccionLocal=false;
			this.isVisibilidadCeldaCancelarTransaccionLocal=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTransaccionLocal=false;
				} else {
					this.isVisibilidadCeldaGuardarTransaccionLocal=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(TransaccionLocalJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoTransaccionLocal=true;
			this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=true;
			this.isVisibilidadCeldaGuardarCambiosTransaccionLocal=true;
		} else {
			this.actualizarEstadoPanelsTransaccionLocal(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarTransaccionLocal=false;
			//this.isVisibilidadCeldaVerFormTransaccionLocal=false;
			this.isVisibilidadCeldaDuplicarTransaccionLocal=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!transaccionlocalSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=false;
		} else {
			this.isVisibilidadCeldaNuevoTransaccionLocal=false;
			this.isVisibilidadCeldaGuardarCambiosTransaccionLocal=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(transaccionlocalSessionBean.getEsGuardarRelacionado()) {
			if(!transaccionlocalSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=false;												
			}
			
			this.jButtonCerrarTransaccionLocal.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesTransaccionLocal=false;
		}
		
		if(!this.permiteMantenimiento(this.transaccionlocal)) {
			this.isVisibilidadCeldaActualizarTransaccionLocal=false;
			this.isVisibilidadCeldaEliminarTransaccionLocal=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesTransaccionLocal() {
	}
	
	public void actualizarEstadoPanelsTransaccionLocal(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionTransaccionLocal!=null) {
				this.jScrollPanelDatosEdicionTransaccionLocal.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTransaccionLocal!=null) {
				this.jTabbedPaneBusquedasTransaccionLocal.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTransaccionLocal!=null) {
				this.jScrollPanelDatosTransaccionLocal.setVisible(true);
			}
			
			if(this.jPanelPaginacionTransaccionLocal!=null) {
				this.jPanelPaginacionTransaccionLocal.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTransaccionLocal!=null) {
				this.jPanelParametrosReportesTransaccionLocal.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionTransaccionLocal!=null) {
				this.jScrollPanelDatosEdicionTransaccionLocal.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTransaccionLocal!=null) {
				this.jTabbedPaneBusquedasTransaccionLocal.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosTransaccionLocal!=null) {
				this.jScrollPanelDatosTransaccionLocal.setVisible(false);
			}
			
			if(this.jPanelPaginacionTransaccionLocal!=null) {
				this.jPanelPaginacionTransaccionLocal.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesTransaccionLocal!=null) {
				this.jPanelParametrosReportesTransaccionLocal.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionTransaccionLocal!=null) {
				this.jScrollPanelDatosEdicionTransaccionLocal.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTransaccionLocal!=null) {
				this.jTabbedPaneBusquedasTransaccionLocal.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosTransaccionLocal!=null) {
				this.jScrollPanelDatosTransaccionLocal.setVisible(false);
			}
			
			if(this.jPanelPaginacionTransaccionLocal!=null) {
				this.jPanelPaginacionTransaccionLocal.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesTransaccionLocal!=null) {
				this.jPanelParametrosReportesTransaccionLocal.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionTransaccionLocal!=null) {
				this.jScrollPanelDatosEdicionTransaccionLocal.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTransaccionLocal!=null) {
				this.jTabbedPaneBusquedasTransaccionLocal.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosTransaccionLocal!=null) {
				this.jScrollPanelDatosTransaccionLocal.setVisible(false);
			}
			
			if(this.jPanelPaginacionTransaccionLocal!=null) {
				this.jPanelPaginacionTransaccionLocal.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesTransaccionLocal!=null) {
				this.jPanelParametrosReportesTransaccionLocal.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionTransaccionLocal!=null) {
				this.jScrollPanelDatosEdicionTransaccionLocal.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTransaccionLocal!=null) {
				this.jTabbedPaneBusquedasTransaccionLocal.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTransaccionLocal!=null) {
				this.jScrollPanelDatosTransaccionLocal.setVisible(true);
			}
			
			if(this.jPanelPaginacionTransaccionLocal!=null) {
				this.jPanelPaginacionTransaccionLocal.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTransaccionLocal!=null) {
				this.jPanelParametrosReportesTransaccionLocal.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionTransaccionLocal!=null) {
				this.jScrollPanelDatosEdicionTransaccionLocal.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTransaccionLocal!=null) {
				this.jTabbedPaneBusquedasTransaccionLocal.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTransaccionLocal!=null) {
				this.jScrollPanelDatosTransaccionLocal.setVisible(true);
			}
			
			if(this.jPanelPaginacionTransaccionLocal!=null) {
				this.jPanelPaginacionTransaccionLocal.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTransaccionLocal!=null) {
				this.jPanelParametrosReportesTransaccionLocal.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionTransaccionLocal!=null) {
				this.jScrollPanelDatosEdicionTransaccionLocal.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTransaccionLocal!=null) {
				this.jTabbedPaneBusquedasTransaccionLocal.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTransaccionLocal!=null) {
				this.jScrollPanelDatosTransaccionLocal.setVisible(true);
			}
			
			if(this.jPanelPaginacionTransaccionLocal!=null) {
				this.jPanelPaginacionTransaccionLocal.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTransaccionLocal!=null) {
				this.jPanelParametrosReportesTransaccionLocal.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasTransaccionLocal!=null) {
					this.jTabbedPaneBusquedasTransaccionLocal.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesTransaccionLocal!=null) {
				this.jPanelParametrosReportesTransaccionLocal.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.transaccionlocalSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTransaccionLocal!=null) {
				this.jTabbedPaneBusquedasTransaccionLocal.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesTransaccionLocal!=null) {
				this.jPanelParametrosReportesTransaccionLocal.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaCompra(Boolean isParaCompra){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCompraNegation=!isParaCompra;

			this.isVisibilidadFK_IdAsientoContable=isParaCompraNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdAsientoContableTransaccionLocal);}

			this.isVisibilidadFK_IdCliente=isParaCompraNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdClienteTransaccionLocal);}

			this.isVisibilidadFK_IdCompra=isParaCompra;
			if(!this.isVisibilidadFK_IdCompra) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdCompraTransaccionLocal);}

			this.isVisibilidadFK_IdPeriodoDeclara=isParaCompraNegation;
			if(!this.isVisibilidadFK_IdPeriodoDeclara) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdPeriodoDeclaraTransaccionLocal);}

			this.isVisibilidadFK_IdTipoComprobante=isParaCompraNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoComprobanteTransaccionLocal);}

			this.isVisibilidadFK_IdTipoIva=isParaCompraNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIva=isParaCompraNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIvaPresta=isParaCompraNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaPresta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaPrestaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoTributario=isParaCompraNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoTributarioTransaccionLocal);}

			this.isVisibilidadFK_IdTransaccionConta=isParaCompraNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTransaccionContaTransaccionLocal);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodoDeclara(Boolean isParaPeriodoDeclara){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoDeclaraNegation=!isParaPeriodoDeclara;

			this.isVisibilidadFK_IdAsientoContable=isParaPeriodoDeclaraNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdAsientoContableTransaccionLocal);}

			this.isVisibilidadFK_IdCliente=isParaPeriodoDeclaraNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdClienteTransaccionLocal);}

			this.isVisibilidadFK_IdCompra=isParaPeriodoDeclaraNegation;
			if(!this.isVisibilidadFK_IdCompra) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdCompraTransaccionLocal);}

			this.isVisibilidadFK_IdPeriodoDeclara=isParaPeriodoDeclara;
			if(!this.isVisibilidadFK_IdPeriodoDeclara) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdPeriodoDeclaraTransaccionLocal);}

			this.isVisibilidadFK_IdTipoComprobante=isParaPeriodoDeclaraNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoComprobanteTransaccionLocal);}

			this.isVisibilidadFK_IdTipoIva=isParaPeriodoDeclaraNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIva=isParaPeriodoDeclaraNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIvaPresta=isParaPeriodoDeclaraNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaPresta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaPrestaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoTributario=isParaPeriodoDeclaraNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoTributarioTransaccionLocal);}

			this.isVisibilidadFK_IdTransaccionConta=isParaPeriodoDeclaraNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTransaccionContaTransaccionLocal);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionConta(Boolean isParaTransaccionConta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionContaNegation=!isParaTransaccionConta;

			this.isVisibilidadFK_IdAsientoContable=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdAsientoContableTransaccionLocal);}

			this.isVisibilidadFK_IdCliente=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdClienteTransaccionLocal);}

			this.isVisibilidadFK_IdCompra=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdCompra) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdCompraTransaccionLocal);}

			this.isVisibilidadFK_IdPeriodoDeclara=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdPeriodoDeclara) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdPeriodoDeclaraTransaccionLocal);}

			this.isVisibilidadFK_IdTipoComprobante=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoComprobanteTransaccionLocal);}

			this.isVisibilidadFK_IdTipoIva=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIva=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIvaPresta=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaPresta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaPrestaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoTributario=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoTributarioTransaccionLocal);}

			this.isVisibilidadFK_IdTransaccionConta=isParaTransaccionConta;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTransaccionContaTransaccionLocal);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdAsientoContable=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdAsientoContableTransaccionLocal);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdClienteTransaccionLocal);}

			this.isVisibilidadFK_IdCompra=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdCompra) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdCompraTransaccionLocal);}

			this.isVisibilidadFK_IdPeriodoDeclara=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdPeriodoDeclara) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdPeriodoDeclaraTransaccionLocal);}

			this.isVisibilidadFK_IdTipoComprobante=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoComprobanteTransaccionLocal);}

			this.isVisibilidadFK_IdTipoIva=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIva=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIvaPresta=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaPresta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaPrestaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoTributario=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoTributarioTransaccionLocal);}

			this.isVisibilidadFK_IdTransaccionConta=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTransaccionContaTransaccionLocal);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoComprobante(Boolean isParaTipoComprobante){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoComprobanteNegation=!isParaTipoComprobante;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdAsientoContableTransaccionLocal);}

			this.isVisibilidadFK_IdCliente=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdClienteTransaccionLocal);}

			this.isVisibilidadFK_IdCompra=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdCompra) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdCompraTransaccionLocal);}

			this.isVisibilidadFK_IdPeriodoDeclara=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdPeriodoDeclara) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdPeriodoDeclaraTransaccionLocal);}

			this.isVisibilidadFK_IdTipoComprobante=isParaTipoComprobante;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoComprobanteTransaccionLocal);}

			this.isVisibilidadFK_IdTipoIva=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIva=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIvaPresta=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaPresta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaPrestaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoTributario=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoTributarioTransaccionLocal);}

			this.isVisibilidadFK_IdTransaccionConta=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTransaccionContaTransaccionLocal);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoTributario(Boolean isParaTipoTributario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoTributarioNegation=!isParaTipoTributario;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdAsientoContableTransaccionLocal);}

			this.isVisibilidadFK_IdCliente=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdClienteTransaccionLocal);}

			this.isVisibilidadFK_IdCompra=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdCompra) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdCompraTransaccionLocal);}

			this.isVisibilidadFK_IdPeriodoDeclara=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdPeriodoDeclara) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdPeriodoDeclaraTransaccionLocal);}

			this.isVisibilidadFK_IdTipoComprobante=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoComprobanteTransaccionLocal);}

			this.isVisibilidadFK_IdTipoIva=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIva=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIvaPresta=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaPresta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaPrestaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoTributario=isParaTipoTributario;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoTributarioTransaccionLocal);}

			this.isVisibilidadFK_IdTransaccionConta=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTransaccionContaTransaccionLocal);}
		}
		
	}

	public void setVisibilidadBusquedasParaAsientoContable(Boolean isParaAsientoContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAsientoContableNegation=!isParaAsientoContable;

			this.isVisibilidadFK_IdAsientoContable=isParaAsientoContable;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdAsientoContableTransaccionLocal);}

			this.isVisibilidadFK_IdCliente=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdClienteTransaccionLocal);}

			this.isVisibilidadFK_IdCompra=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCompra) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdCompraTransaccionLocal);}

			this.isVisibilidadFK_IdPeriodoDeclara=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdPeriodoDeclara) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdPeriodoDeclaraTransaccionLocal);}

			this.isVisibilidadFK_IdTipoComprobante=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoComprobanteTransaccionLocal);}

			this.isVisibilidadFK_IdTipoIva=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIva=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIvaPresta=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaPresta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaPrestaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoTributario=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoTributarioTransaccionLocal);}

			this.isVisibilidadFK_IdTransaccionConta=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTransaccionContaTransaccionLocal);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoIva(Boolean isParaTipoIva){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoIvaNegation=!isParaTipoIva;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdAsientoContableTransaccionLocal);}

			this.isVisibilidadFK_IdCliente=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdClienteTransaccionLocal);}

			this.isVisibilidadFK_IdCompra=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdCompra) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdCompraTransaccionLocal);}

			this.isVisibilidadFK_IdPeriodoDeclara=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdPeriodoDeclara) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdPeriodoDeclaraTransaccionLocal);}

			this.isVisibilidadFK_IdTipoComprobante=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoComprobanteTransaccionLocal);}

			this.isVisibilidadFK_IdTipoIva=isParaTipoIva;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIva=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIvaPresta=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaPresta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaPrestaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoTributario=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoTributarioTransaccionLocal);}

			this.isVisibilidadFK_IdTransaccionConta=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTransaccionContaTransaccionLocal);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoRetencionIva(Boolean isParaTipoRetencionIva){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoRetencionIvaNegation=!isParaTipoRetencionIva;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoRetencionIvaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdAsientoContableTransaccionLocal);}

			this.isVisibilidadFK_IdCliente=isParaTipoRetencionIvaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdClienteTransaccionLocal);}

			this.isVisibilidadFK_IdCompra=isParaTipoRetencionIvaNegation;
			if(!this.isVisibilidadFK_IdCompra) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdCompraTransaccionLocal);}

			this.isVisibilidadFK_IdPeriodoDeclara=isParaTipoRetencionIvaNegation;
			if(!this.isVisibilidadFK_IdPeriodoDeclara) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdPeriodoDeclaraTransaccionLocal);}

			this.isVisibilidadFK_IdTipoComprobante=isParaTipoRetencionIvaNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoComprobanteTransaccionLocal);}

			this.isVisibilidadFK_IdTipoIva=isParaTipoRetencionIvaNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIva=isParaTipoRetencionIva;
			if(!this.isVisibilidadFK_IdTipoRetencionIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIvaPresta=isParaTipoRetencionIvaNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaPresta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaPrestaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoTributario=isParaTipoRetencionIvaNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoTributarioTransaccionLocal);}

			this.isVisibilidadFK_IdTransaccionConta=isParaTipoRetencionIvaNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTransaccionContaTransaccionLocal);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoRetencionIvaPresta(Boolean isParaTipoRetencionIvaPresta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoRetencionIvaPrestaNegation=!isParaTipoRetencionIvaPresta;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoRetencionIvaPrestaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdAsientoContableTransaccionLocal);}

			this.isVisibilidadFK_IdCliente=isParaTipoRetencionIvaPrestaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdClienteTransaccionLocal);}

			this.isVisibilidadFK_IdCompra=isParaTipoRetencionIvaPrestaNegation;
			if(!this.isVisibilidadFK_IdCompra) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdCompraTransaccionLocal);}

			this.isVisibilidadFK_IdPeriodoDeclara=isParaTipoRetencionIvaPrestaNegation;
			if(!this.isVisibilidadFK_IdPeriodoDeclara) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdPeriodoDeclaraTransaccionLocal);}

			this.isVisibilidadFK_IdTipoComprobante=isParaTipoRetencionIvaPrestaNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoComprobanteTransaccionLocal);}

			this.isVisibilidadFK_IdTipoIva=isParaTipoRetencionIvaPrestaNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIva=isParaTipoRetencionIvaPrestaNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIva) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoRetencionIvaPresta=isParaTipoRetencionIvaPresta;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaPresta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoRetencionIvaPrestaTransaccionLocal);}

			this.isVisibilidadFK_IdTipoTributario=isParaTipoRetencionIvaPrestaNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTipoTributarioTransaccionLocal);}

			this.isVisibilidadFK_IdTransaccionConta=isParaTipoRetencionIvaPrestaNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasTransaccionLocal.remove(jPanelFK_IdTransaccionContaTransaccionLocal);}
		}
		
	}
	
	
	
	

	public String registrarSesionTransaccionLocalParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(transaccionlocalSessionBean==null) {
				transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(transaccionlocalSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.transaccionlocalFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(TransaccionLocalConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionTransaccionLocal(true);
			//clienteSessionBean.setlidTransaccionLocalActual(this.idTransaccionLocalActual);

			transaccionlocalSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTransaccionLocal(true);
			transaccionlocalSessionBean.setlIdTransaccionLocalActualForeignKey(this.idTransaccionLocalActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionTransaccionLocalParaBusquedaAsientoContables() throws Exception {
		Boolean isPaginaPopupAsientoContable=false;

		try {

			if(transaccionlocalSessionBean==null) {
				transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}

			if(asientocontableSessionBean==null) {
				asientocontableSessionBean=new AsientoContableSessionBean();
			}

			asientocontableSessionBean.setsPathNavegacionActual(transaccionlocalSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+AsientoContableConstantesFunciones.SCLASSWEBTITULO);
			asientocontableSessionBean.setisPermiteRecargarInformacion(false);
			asientocontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupAsientoContable=asientocontableSessionBean.getisPaginaPopup();
			asientocontableSessionBean.setisPaginaPopup(false);
			asientocontableSessionBean.setEstaModoBusqueda(true);
			asientocontableSessionBean.setsFuncionBusquedaRapida("window.opener.transaccionlocalFuncionGeneral.setCombosCodigoDesdeBusquedaid_asiento_contable(TO_REPLACE);");
			asientocontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeAsientoContable(true);
			asientocontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeAsientoContable(TransaccionLocalConstantesFunciones.SNOMBREOPCION);
			//asientocontableSessionBean.setisBusquedaDesdeForeignKeySesionTransaccionLocal(true);
			//asientocontableSessionBean.setlidTransaccionLocalActual(this.idTransaccionLocalActual);

			transaccionlocalSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTransaccionLocal(true);
			transaccionlocalSessionBean.setlIdTransaccionLocalActualForeignKey(this.idTransaccionLocalActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//TransaccionLocalSessionBean transaccionlocalSessionBean=new TransaccionLocalSessionBean();
		
		if(this.transaccionlocalSessionBean==null) {
			this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
		}
		
		this.transaccionlocalSessionBean.setsUltimaBusquedaTransaccionLocal(this.getsAccionBusqueda());
		this.transaccionlocalSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.transaccionlocalSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
			transaccionlocalSessionBean.setid_asiento_contable(this.getid_asiento_contableFK_IdAsientoContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			transaccionlocalSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCompra")) {
			transaccionlocalSessionBean.setid_compra(this.getid_compraFK_IdCompra());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodoDeclara")) {
			transaccionlocalSessionBean.setid_periodo_declara(this.getid_periodo_declaraFK_IdPeriodoDeclara());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoComprobante")) {
			transaccionlocalSessionBean.setid_tipo_comprobante(this.getid_tipo_comprobanteFK_IdTipoComprobante());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoIva")) {
			transaccionlocalSessionBean.setid_tipo_iva(this.getid_tipo_ivaFK_IdTipoIva());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoRetencionIva")) {
			transaccionlocalSessionBean.setid_tipo_retencion_iva(this.getid_tipo_retencion_ivaFK_IdTipoRetencionIva());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoRetencionIvaPresta")) {
			transaccionlocalSessionBean.setid_tipo_retencion_iva_presta(this.getid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoTributario")) {
			transaccionlocalSessionBean.setid_tipo_tributario(this.getid_tipo_tributarioFK_IdTipoTributario());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionConta")) {
			transaccionlocalSessionBean.setid_transaccion_conta(this.getid_transaccion_contaFK_IdTransaccionConta());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//TransaccionLocalSessionBean transaccionlocalSessionBean=new TransaccionLocalSessionBean();
		
		if(this.transaccionlocalSessionBean==null) {
			this.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
		}
		
		if(this.transaccionlocalSessionBean.getsUltimaBusquedaTransaccionLocal()!=null&&!this.transaccionlocalSessionBean.getsUltimaBusquedaTransaccionLocal().equals("")) {
			this.setsAccionBusqueda(transaccionlocalSessionBean.getsUltimaBusquedaTransaccionLocal());
			this.setiNumeroPaginacion(transaccionlocalSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(transaccionlocalSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
				this.setid_asiento_contableFK_IdAsientoContable(transaccionlocalSessionBean.getid_asiento_contable());
				transaccionlocalSessionBean.setid_asiento_contable(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(transaccionlocalSessionBean.getid_cliente());
				transaccionlocalSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCompra")) {
				this.setid_compraFK_IdCompra(transaccionlocalSessionBean.getid_compra());
				transaccionlocalSessionBean.setid_compra(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodoDeclara")) {
				this.setid_periodo_declaraFK_IdPeriodoDeclara(transaccionlocalSessionBean.getid_periodo_declara());
				transaccionlocalSessionBean.setid_periodo_declara(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoComprobante")) {
				this.setid_tipo_comprobanteFK_IdTipoComprobante(transaccionlocalSessionBean.getid_tipo_comprobante());
				transaccionlocalSessionBean.setid_tipo_comprobante(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoIva")) {
				this.setid_tipo_ivaFK_IdTipoIva(transaccionlocalSessionBean.getid_tipo_iva());
				transaccionlocalSessionBean.setid_tipo_iva(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoRetencionIva")) {
				this.setid_tipo_retencion_ivaFK_IdTipoRetencionIva(transaccionlocalSessionBean.getid_tipo_retencion_iva());
				transaccionlocalSessionBean.setid_tipo_retencion_iva(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoRetencionIvaPresta")) {
				this.setid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta(transaccionlocalSessionBean.getid_tipo_retencion_iva_presta());
				transaccionlocalSessionBean.setid_tipo_retencion_iva_presta(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoTributario")) {
				this.setid_tipo_tributarioFK_IdTipoTributario(transaccionlocalSessionBean.getid_tipo_tributario());
				transaccionlocalSessionBean.setid_tipo_tributario(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionConta")) {
				this.setid_transaccion_contaFK_IdTransaccionConta(transaccionlocalSessionBean.getid_transaccion_conta());
				transaccionlocalSessionBean.setid_transaccion_conta(-1L);
			}
		}
		
		this.transaccionlocalSessionBean.setsUltimaBusquedaTransaccionLocal("");
		this.transaccionlocalSessionBean.setiNumeroPaginacion(TransaccionLocalConstantesFunciones.INUMEROPAGINACION);
		this.transaccionlocalSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaTransaccionLocal(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioTransaccionLocal() {
		this.updateBorderResaltarBusquedasFormularioTransaccionLocal();
		this.updateVisibilidadBusquedasFormularioTransaccionLocal();
		this.updateHabilitarBusquedasFormularioTransaccionLocal();
	}
	
	public void updateBorderResaltarBusquedasFormularioTransaccionLocal() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasTransaccionLocal.getComponents().length>0) {
	

		if(this.transaccionlocalConstantesFunciones.resaltarFK_IdAsientoContableTransaccionLocal!=null) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdAsientoContableTransaccionLocal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdAsientoContableTransaccionLocal);
			}
		}

		if(this.transaccionlocalConstantesFunciones.resaltarFK_IdClienteTransaccionLocal!=null) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdClienteTransaccionLocal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdClienteTransaccionLocal);
			}
		}

		if(this.transaccionlocalConstantesFunciones.resaltarFK_IdCompraTransaccionLocal!=null) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdCompraTransaccionLocal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdCompraTransaccionLocal);
			}
		}

		if(this.transaccionlocalConstantesFunciones.resaltarFK_IdPeriodoDeclaraTransaccionLocal!=null) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdPeriodoDeclaraTransaccionLocal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdPeriodoDeclaraTransaccionLocal);
			}
		}

		if(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoComprobanteTransaccionLocal!=null) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoComprobanteTransaccionLocal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoComprobanteTransaccionLocal);
			}
		}

		if(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoIvaTransaccionLocal!=null) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoIvaTransaccionLocal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoIvaTransaccionLocal);
			}
		}

		if(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoRetencionIvaTransaccionLocal!=null) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaTransaccionLocal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoRetencionIvaTransaccionLocal);
			}
		}

		if(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoRetencionIvaPrestaTransaccionLocal!=null) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaPrestaTransaccionLocal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoRetencionIvaPrestaTransaccionLocal);
			}
		}

		if(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoTributarioTransaccionLocal!=null) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoTributarioTransaccionLocal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoTributarioTransaccionLocal);
			}
		}

		if(this.transaccionlocalConstantesFunciones.resaltarFK_IdTransaccionContaTransaccionLocal!=null) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTransaccionContaTransaccionLocal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdTransaccionContaTransaccionLocal);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioTransaccionLocal() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasTransaccionLocal.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdAsientoContableTransaccionLocal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.transaccionlocalConstantesFunciones.mostrarFK_IdAsientoContableTransaccionLocal);
			if(!this.transaccionlocalConstantesFunciones.mostrarFK_IdAsientoContableTransaccionLocal && index>-1) {
				this.jTabbedPaneBusquedasTransaccionLocal.remove(index);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdClienteTransaccionLocal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.transaccionlocalConstantesFunciones.mostrarFK_IdClienteTransaccionLocal);
			if(!this.transaccionlocalConstantesFunciones.mostrarFK_IdClienteTransaccionLocal && index>-1) {
				this.jTabbedPaneBusquedasTransaccionLocal.remove(index);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdCompraTransaccionLocal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.transaccionlocalConstantesFunciones.mostrarFK_IdCompraTransaccionLocal);
			if(!this.transaccionlocalConstantesFunciones.mostrarFK_IdCompraTransaccionLocal && index>-1) {
				this.jTabbedPaneBusquedasTransaccionLocal.remove(index);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdPeriodoDeclaraTransaccionLocal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.transaccionlocalConstantesFunciones.mostrarFK_IdPeriodoDeclaraTransaccionLocal);
			if(!this.transaccionlocalConstantesFunciones.mostrarFK_IdPeriodoDeclaraTransaccionLocal && index>-1) {
				this.jTabbedPaneBusquedasTransaccionLocal.remove(index);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoComprobanteTransaccionLocal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.transaccionlocalConstantesFunciones.mostrarFK_IdTipoComprobanteTransaccionLocal);
			if(!this.transaccionlocalConstantesFunciones.mostrarFK_IdTipoComprobanteTransaccionLocal && index>-1) {
				this.jTabbedPaneBusquedasTransaccionLocal.remove(index);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoIvaTransaccionLocal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.transaccionlocalConstantesFunciones.mostrarFK_IdTipoIvaTransaccionLocal);
			if(!this.transaccionlocalConstantesFunciones.mostrarFK_IdTipoIvaTransaccionLocal && index>-1) {
				this.jTabbedPaneBusquedasTransaccionLocal.remove(index);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaTransaccionLocal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.transaccionlocalConstantesFunciones.mostrarFK_IdTipoRetencionIvaTransaccionLocal);
			if(!this.transaccionlocalConstantesFunciones.mostrarFK_IdTipoRetencionIvaTransaccionLocal && index>-1) {
				this.jTabbedPaneBusquedasTransaccionLocal.remove(index);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaPrestaTransaccionLocal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.transaccionlocalConstantesFunciones.mostrarFK_IdTipoRetencionIvaPrestaTransaccionLocal);
			if(!this.transaccionlocalConstantesFunciones.mostrarFK_IdTipoRetencionIvaPrestaTransaccionLocal && index>-1) {
				this.jTabbedPaneBusquedasTransaccionLocal.remove(index);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoTributarioTransaccionLocal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.transaccionlocalConstantesFunciones.mostrarFK_IdTipoTributarioTransaccionLocal);
			if(!this.transaccionlocalConstantesFunciones.mostrarFK_IdTipoTributarioTransaccionLocal && index>-1) {
				this.jTabbedPaneBusquedasTransaccionLocal.remove(index);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTransaccionContaTransaccionLocal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.transaccionlocalConstantesFunciones.mostrarFK_IdTransaccionContaTransaccionLocal);
			if(!this.transaccionlocalConstantesFunciones.mostrarFK_IdTransaccionContaTransaccionLocal && index>-1) {
				this.jTabbedPaneBusquedasTransaccionLocal.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioTransaccionLocal() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasTransaccionLocal.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdAsientoContableTransaccionLocal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.transaccionlocalConstantesFunciones.activarFK_IdAsientoContableTransaccionLocal);
				this.jTabbedPaneBusquedasTransaccionLocal.setEnabledAt(index,this.transaccionlocalConstantesFunciones.activarFK_IdAsientoContableTransaccionLocal);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdClienteTransaccionLocal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.transaccionlocalConstantesFunciones.activarFK_IdClienteTransaccionLocal);
				this.jTabbedPaneBusquedasTransaccionLocal.setEnabledAt(index,this.transaccionlocalConstantesFunciones.activarFK_IdClienteTransaccionLocal);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdCompraTransaccionLocal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.transaccionlocalConstantesFunciones.activarFK_IdCompraTransaccionLocal);
				this.jTabbedPaneBusquedasTransaccionLocal.setEnabledAt(index,this.transaccionlocalConstantesFunciones.activarFK_IdCompraTransaccionLocal);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdPeriodoDeclaraTransaccionLocal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.transaccionlocalConstantesFunciones.activarFK_IdPeriodoDeclaraTransaccionLocal);
				this.jTabbedPaneBusquedasTransaccionLocal.setEnabledAt(index,this.transaccionlocalConstantesFunciones.activarFK_IdPeriodoDeclaraTransaccionLocal);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoComprobanteTransaccionLocal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.transaccionlocalConstantesFunciones.activarFK_IdTipoComprobanteTransaccionLocal);
				this.jTabbedPaneBusquedasTransaccionLocal.setEnabledAt(index,this.transaccionlocalConstantesFunciones.activarFK_IdTipoComprobanteTransaccionLocal);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoIvaTransaccionLocal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.transaccionlocalConstantesFunciones.activarFK_IdTipoIvaTransaccionLocal);
				this.jTabbedPaneBusquedasTransaccionLocal.setEnabledAt(index,this.transaccionlocalConstantesFunciones.activarFK_IdTipoIvaTransaccionLocal);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaTransaccionLocal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.transaccionlocalConstantesFunciones.activarFK_IdTipoRetencionIvaTransaccionLocal);
				this.jTabbedPaneBusquedasTransaccionLocal.setEnabledAt(index,this.transaccionlocalConstantesFunciones.activarFK_IdTipoRetencionIvaTransaccionLocal);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaPrestaTransaccionLocal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.transaccionlocalConstantesFunciones.activarFK_IdTipoRetencionIvaPrestaTransaccionLocal);
				this.jTabbedPaneBusquedasTransaccionLocal.setEnabledAt(index,this.transaccionlocalConstantesFunciones.activarFK_IdTipoRetencionIvaPrestaTransaccionLocal);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoTributarioTransaccionLocal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.transaccionlocalConstantesFunciones.activarFK_IdTipoTributarioTransaccionLocal);
				this.jTabbedPaneBusquedasTransaccionLocal.setEnabledAt(index,this.transaccionlocalConstantesFunciones.activarFK_IdTipoTributarioTransaccionLocal);
			}

			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTransaccionContaTransaccionLocal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.transaccionlocalConstantesFunciones.activarFK_IdTransaccionContaTransaccionLocal);
				this.jTabbedPaneBusquedasTransaccionLocal.setEnabledAt(index,this.transaccionlocalConstantesFunciones.activarFK_IdTransaccionContaTransaccionLocal);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaTransaccionLocal(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdAsientoContable")) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdAsientoContableTransaccionLocal);

			this.jTabbedPaneBusquedasTransaccionLocal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);

			this.transaccionlocalConstantesFunciones.setResaltarFK_IdAsientoContableTransaccionLocal(resaltar);

			jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdAsientoContableTransaccionLocal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdClienteTransaccionLocal);

			this.jTabbedPaneBusquedasTransaccionLocal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);

			this.transaccionlocalConstantesFunciones.setResaltarFK_IdClienteTransaccionLocal(resaltar);

			jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdClienteTransaccionLocal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCompra")) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdCompraTransaccionLocal);

			this.jTabbedPaneBusquedasTransaccionLocal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);

			this.transaccionlocalConstantesFunciones.setResaltarFK_IdCompraTransaccionLocal(resaltar);

			jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdCompraTransaccionLocal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPeriodoDeclara")) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdPeriodoDeclaraTransaccionLocal);

			this.jTabbedPaneBusquedasTransaccionLocal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);

			this.transaccionlocalConstantesFunciones.setResaltarFK_IdPeriodoDeclaraTransaccionLocal(resaltar);

			jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdPeriodoDeclaraTransaccionLocal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoComprobante")) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoComprobanteTransaccionLocal);

			this.jTabbedPaneBusquedasTransaccionLocal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);

			this.transaccionlocalConstantesFunciones.setResaltarFK_IdTipoComprobanteTransaccionLocal(resaltar);

			jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoComprobanteTransaccionLocal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoIva")) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoIvaTransaccionLocal);

			this.jTabbedPaneBusquedasTransaccionLocal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);

			this.transaccionlocalConstantesFunciones.setResaltarFK_IdTipoIvaTransaccionLocal(resaltar);

			jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoIvaTransaccionLocal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoRetencionIva")) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaTransaccionLocal);

			this.jTabbedPaneBusquedasTransaccionLocal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);

			this.transaccionlocalConstantesFunciones.setResaltarFK_IdTipoRetencionIvaTransaccionLocal(resaltar);

			jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoRetencionIvaTransaccionLocal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoRetencionIvaPresta")) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaPrestaTransaccionLocal);

			this.jTabbedPaneBusquedasTransaccionLocal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);

			this.transaccionlocalConstantesFunciones.setResaltarFK_IdTipoRetencionIvaPrestaTransaccionLocal(resaltar);

			jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoRetencionIvaPrestaTransaccionLocal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoTributario")) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTipoTributarioTransaccionLocal);

			this.jTabbedPaneBusquedasTransaccionLocal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);

			this.transaccionlocalConstantesFunciones.setResaltarFK_IdTipoTributarioTransaccionLocal(resaltar);

			jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdTipoTributarioTransaccionLocal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionConta")) {
			index= this.jTabbedPaneBusquedasTransaccionLocal.indexOfComponent(this.jPanelFK_IdTransaccionContaTransaccionLocal);

			this.jTabbedPaneBusquedasTransaccionLocal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTransaccionLocal.getComponent(index);

			this.transaccionlocalConstantesFunciones.setResaltarFK_IdTransaccionContaTransaccionLocal(resaltar);

			jPanel.setBorder(this.transaccionlocalConstantesFunciones.resaltarFK_IdTransaccionContaTransaccionLocal);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarTransaccionLocal.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioTransaccionLocal() throws Exception {

		if(this.jInternalFrameDetalleFormTransaccionLocal==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioTransaccionLocal();
		this.updateVisibilidadResaltarControlesFormularioTransaccionLocal();
		this.updateHabilitarResaltarControlesFormularioTransaccionLocal();
		
	}
	
	public void updateBorderResaltarControlesFormularioTransaccionLocal() throws Exception {
		if(this.jInternalFrameDetalleFormTransaccionLocal==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.transaccionlocalConstantesFunciones.resaltaridTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jLabelidTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltaridTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarid_compraTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarid_compraTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarrucTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldrucTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarrucTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarrazon_socialTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextArearazon_socialTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarrazon_socialTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarid_periodo_declaraTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarid_periodo_declaraTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarid_transaccion_contaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarid_transaccion_contaTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarid_clienteTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarid_clienteTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltaridentificacionTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldidentificacionTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltaridentificacionTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarid_tipo_comprobanteTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarid_tipo_comprobanteTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarfecha_emisionTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_emisionTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarfecha_emisionTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarfecha_registro_contableTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_registro_contableTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarfecha_registro_contableTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarnumero_secuencialTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_secuencialTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarnumero_secuencialTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarnumero_serieTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_serieTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarnumero_serieTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarnumero_autorizacionTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_autorizacionTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarnumero_autorizacionTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarfecha_caducidadTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_caducidadTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarfecha_caducidadTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarid_tipo_tributarioTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarid_tipo_tributarioTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarnumero_documento_contableTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_documento_contableTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarnumero_documento_contableTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarid_asiento_contableTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarid_asiento_contableTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltares_riseTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxes_riseTransaccionLocal.setBorderPainted(true);this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxes_riseTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltares_riseTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarbienes_ivaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarbienes_ivaTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarbienes_sin_ivaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarbienes_sin_ivaTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarid_tipo_ivaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarid_tipo_ivaTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarservicios_ivaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarservicios_ivaTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarservicios_sin_ivaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarservicios_sin_ivaTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarmonto_ivaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_ivaTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarmonto_ivaTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltartotal_ivaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltartotal_ivaTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltartotal_sin_ivaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_sin_ivaTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltartotal_sin_ivaTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarmonto_iceTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_iceTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarmonto_iceTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltartransfe_iva_retenerTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltartransfe_iva_retenerTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarpresta_iva_retenerTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarpresta_iva_retenerTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarid_tipo_retencion_ivaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarid_tipo_retencion_ivaTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarid_tipo_retencion_iva_prestaTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarid_tipo_retencion_iva_prestaTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltartransfe_iva_retenidoTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenidoTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltartransfe_iva_retenidoTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarpresta_iva_retenidoTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenidoTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarpresta_iva_retenidoTransaccionLocal);}
		if(this.transaccionlocalConstantesFunciones.resaltarpermite_devolucionTransaccionLocal!=null && this.jInternalFrameDetalleFormTransaccionLocal!=null) {this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxpermite_devolucionTransaccionLocal.setBorderPainted(true);this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxpermite_devolucionTransaccionLocal.setBorder(this.transaccionlocalConstantesFunciones.resaltarpermite_devolucionTransaccionLocal);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioTransaccionLocal() throws Exception {		
		if(this.jInternalFrameDetalleFormTransaccionLocal==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
	
		//this.jInternalFrameDetalleFormTransaccionLocal.jLabelidTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostraridTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelidTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostraridTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_compraTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelid_compraTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_compraTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldrucTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarrucTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelrucTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarrucTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextArearazon_socialTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarrazon_socialTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelrazon_socialTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarrazon_socialTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_periodo_declaraTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelid_periodo_declaraTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_periodo_declaraTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_transaccion_contaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelid_transaccion_contaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_transaccion_contaTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_clienteTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelid_clienteTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_clienteTransaccionLocal);
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_clienteTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_clienteTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldidentificacionTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostraridentificacionTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelidentificacionTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostraridentificacionTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_tipo_comprobanteTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelid_tipo_comprobanteTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_tipo_comprobanteTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_emisionTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarfecha_emisionTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelfecha_emisionTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarfecha_emisionTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_registro_contableTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarfecha_registro_contableTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelfecha_registro_contableTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarfecha_registro_contableTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_secuencialTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarnumero_secuencialTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelnumero_secuencialTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarnumero_secuencialTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_serieTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarnumero_serieTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelnumero_serieTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarnumero_serieTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_autorizacionTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarnumero_autorizacionTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelnumero_autorizacionTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarnumero_autorizacionTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_caducidadTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarfecha_caducidadTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelfecha_caducidadTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarfecha_caducidadTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_tipo_tributarioTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelid_tipo_tributarioTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_tipo_tributarioTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_documento_contableTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarnumero_documento_contableTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelnumero_documento_contableTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarnumero_documento_contableTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_asiento_contableTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelid_asiento_contableTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_asiento_contableTransaccionLocal);
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_asiento_contableTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_asiento_contableTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxes_riseTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrares_riseTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPaneles_riseTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrares_riseTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarbienes_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelbienes_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarbienes_ivaTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarbienes_sin_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelbienes_sin_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarbienes_sin_ivaTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_tipo_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelid_tipo_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_tipo_ivaTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarservicios_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelservicios_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarservicios_ivaTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarservicios_sin_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelservicios_sin_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarservicios_sin_ivaTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarmonto_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelmonto_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarmonto_ivaTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrartotal_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPaneltotal_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrartotal_ivaTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_sin_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrartotal_sin_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPaneltotal_sin_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrartotal_sin_ivaTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_iceTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarmonto_iceTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelmonto_iceTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarmonto_iceTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrartransfe_iva_retenerTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPaneltransfe_iva_retenerTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrartransfe_iva_retenerTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarpresta_iva_retenerTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelpresta_iva_retenerTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarpresta_iva_retenerTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_tipo_retencion_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelid_tipo_retencion_ivaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_tipo_retencion_ivaTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_tipo_retencion_iva_prestaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelid_tipo_retencion_iva_prestaTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarid_tipo_retencion_iva_prestaTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenidoTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrartransfe_iva_retenidoTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPaneltransfe_iva_retenidoTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrartransfe_iva_retenidoTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenidoTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarpresta_iva_retenidoTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelpresta_iva_retenidoTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarpresta_iva_retenidoTransaccionLocal);
		//this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxpermite_devolucionTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarpermite_devolucionTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jPanelpermite_devolucionTransaccionLocal.setVisible(this.transaccionlocalConstantesFunciones.mostrarpermite_devolucionTransaccionLocal);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioTransaccionLocal() throws Exception {
		if(this.jInternalFrameDetalleFormTransaccionLocal==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormTransaccionLocal!=null) {
	
		this.jInternalFrameDetalleFormTransaccionLocal.jLabelidTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activaridTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_compraTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarid_compraTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldrucTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarrucTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextArearazon_socialTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarrazon_socialTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_periodo_declaraTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarid_periodo_declaraTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_transaccion_contaTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarid_transaccion_contaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_clienteTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarid_clienteTransaccionLocal);
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_clienteTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarid_clienteTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldidentificacionTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activaridentificacionTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_comprobanteTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarid_tipo_comprobanteTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_emisionTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarfecha_emisionTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_registro_contableTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarfecha_registro_contableTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_secuencialTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarnumero_secuencialTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_serieTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarnumero_serieTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_autorizacionTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarnumero_autorizacionTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jDateChooserfecha_caducidadTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarfecha_caducidadTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_tributarioTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarid_tipo_tributarioTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldnumero_documento_contableTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarnumero_documento_contableTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_asiento_contableTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarid_asiento_contableTransaccionLocal);
			this.jInternalFrameDetalleFormTransaccionLocal.jButtonid_asiento_contableTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarid_asiento_contableTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxes_riseTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activares_riseTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_ivaTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarbienes_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldbienes_sin_ivaTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarbienes_sin_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_ivaTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarid_tipo_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_ivaTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarservicios_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldservicios_sin_ivaTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarservicios_sin_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_ivaTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarmonto_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_ivaTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activartotal_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtotal_sin_ivaTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activartotal_sin_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldmonto_iceTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarmonto_iceTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenerTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activartransfe_iva_retenerTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenerTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarpresta_iva_retenerTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_ivaTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarid_tipo_retencion_ivaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jComboBoxid_tipo_retencion_iva_prestaTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarid_tipo_retencion_iva_prestaTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldtransfe_iva_retenidoTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activartransfe_iva_retenidoTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jTextFieldpresta_iva_retenidoTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarpresta_iva_retenidoTransaccionLocal);
		this.jInternalFrameDetalleFormTransaccionLocal.jCheckBoxpermite_devolucionTransaccionLocal.setEnabled(this.transaccionlocalConstantesFunciones.activarpermite_devolucionTransaccionLocal);
		}
	}
	
		
}