/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.sris.presentation.swing.jinternalframes.report;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

//import com.bydan.erp.sris.util.SriFacturasProveedoresIva012ConstantesFunciones;
import com.bydan.erp.sris.util.report.SriFacturasProveedoresIva012ParameterReturnGeneral;
//import com.bydan.erp.sris.util.report.SriFacturasProveedoresIva012ParameterGeneral;
//import com.bydan.erp.sris.presentation.report.source.report.SriFacturasProveedoresIva012Bean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.sris.presentation.swing.jinternalframes.auxiliar.report.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.sris.resources.reportes.report.AuxiliarReportes;

import com.bydan.erp.sris.util.*;

import com.bydan.erp.sris.util.report.*;
import com.bydan.erp.sris.business.logic.report.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.sris.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.sris.business.entity.*;
import com.bydan.erp.sris.business.entity.report.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.sris.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.sris.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

//import org.hibernate.collection.PersistentBag;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.sris.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.sris.presentation.web.jsf.sessionbean.report.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.sris.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.sris.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.sris.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class SriFacturasProveedoresIva012BeanSwingJInternalFrame extends SriFacturasProveedoresIva012JInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(SriFacturasProveedoresIva012BeanSwingJInternalFrame.class);  
	
	public static ClassValidator<SriFacturasProveedoresIva012> srifacturasproveedoresiva012Validator = new ClassValidator<SriFacturasProveedoresIva012>(SriFacturasProveedoresIva012.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public SriFacturasProveedoresIva012 srifacturasproveedoresiva012;	
	public SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux;
	public SriFacturasProveedoresIva012 srifacturasproveedoresiva012Anterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public SriFacturasProveedoresIva012 srifacturasproveedoresiva012Totales;
	public Long idSriFacturasProveedoresIva012Actual;
	public Long iIdNuevoSriFacturasProveedoresIva012=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboPeriodoDeclara="";

	public List<PeriodoDeclara> periododeclarasForeignKey;

	public List<PeriodoDeclara> getperiododeclarasForeignKey() {
		return periododeclarasForeignKey;
	}

	public void setperiododeclarasForeignKey(List<PeriodoDeclara> periododeclarasForeignKey) {
		this.periododeclarasForeignKey = periododeclarasForeignKey;
	}

	//OBJETO FK ACTUAL
	public PeriodoDeclara periododeclaraForeignKey;

	public PeriodoDeclara getperiododeclaraForeignKey() {
		return periododeclaraForeignKey;
	}

	public void setperiododeclaraForeignKey(PeriodoDeclara periododeclaraForeignKey) {
		this.periododeclaraForeignKey = periododeclaraForeignKey;
	}

	public String sFinalQueryComboTipoIva="";

	public List<TipoIva> tipoivasForeignKey;

	public List<TipoIva> gettipoivasForeignKey() {
		return tipoivasForeignKey;
	}

	public void settipoivasForeignKey(List<TipoIva> tipoivasForeignKey) {
		this.tipoivasForeignKey = tipoivasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoIva tipoivaForeignKey;

	public TipoIva gettipoivaForeignKey() {
		return tipoivaForeignKey;
	}

	public void settipoivaForeignKey(TipoIva tipoivaForeignKey) {
		this.tipoivaForeignKey = tipoivaForeignKey;
	}

	public String sFinalQueryComboTipoRetencionIva="";

	public List<TipoRetencion> tiporetencionivasForeignKey;

	public List<TipoRetencion> gettiporetencionivasForeignKey() {
		return tiporetencionivasForeignKey;
	}

	public void settiporetencionivasForeignKey(List<TipoRetencion> tiporetencionivasForeignKey) {
		this.tiporetencionivasForeignKey = tiporetencionivasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoRetencion tiporetencionivaForeignKey;

	public TipoRetencion gettiporetencionivaForeignKey() {
		return tiporetencionivaForeignKey;
	}

	public void settiporetencionivaForeignKey(TipoRetencion tiporetencionivaForeignKey) {
		this.tiporetencionivaForeignKey = tiporetencionivaForeignKey;
	}

	public String sFinalQueryComboTipoRetencionIvaPresta="";

	public List<TipoRetencion> tiporetencionivaprestasForeignKey;

	public List<TipoRetencion> gettiporetencionivaprestasForeignKey() {
		return tiporetencionivaprestasForeignKey;
	}

	public void settiporetencionivaprestasForeignKey(List<TipoRetencion> tiporetencionivaprestasForeignKey) {
		this.tiporetencionivaprestasForeignKey = tiporetencionivaprestasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoRetencion tiporetencionivaprestaForeignKey;

	public TipoRetencion gettiporetencionivaprestaForeignKey() {
		return tiporetencionivaprestaForeignKey;
	}

	public void settiporetencionivaprestaForeignKey(TipoRetencion tiporetencionivaprestaForeignKey) {
		this.tiporetencionivaprestaForeignKey = tiporetencionivaprestaForeignKey;
	}

		
	
	
	
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoSriFacturasProveedoresIva012;
	public Boolean isPermisoNuevoSriFacturasProveedoresIva012;
	public Boolean isPermisoActualizarSriFacturasProveedoresIva012;
	public Boolean isPermisoActualizarOriginalSriFacturasProveedoresIva012;
	public Boolean isPermisoEliminarSriFacturasProveedoresIva012;
	public Boolean isPermisoGuardarCambiosSriFacturasProveedoresIva012;
	public Boolean isPermisoConsultaSriFacturasProveedoresIva012;
	public Boolean isPermisoBusquedaSriFacturasProveedoresIva012;
	public Boolean isPermisoReporteSriFacturasProveedoresIva012;
	public Boolean isPermisoPaginacionMedioSriFacturasProveedoresIva012;
	public Boolean isPermisoPaginacionAltoSriFacturasProveedoresIva012;
	public Boolean isPermisoPaginacionTodoSriFacturasProveedoresIva012;
	public Boolean isPermisoCopiarSriFacturasProveedoresIva012;
	public Boolean isPermisoVerFormSriFacturasProveedoresIva012;
	public Boolean isPermisoDuplicarSriFacturasProveedoresIva012;
	public Boolean isPermisoOrdenSriFacturasProveedoresIva012;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public SriFacturasProveedoresIva012ParameterReturnGeneral srifacturasproveedoresiva012ReturnGeneral;
	public SriFacturasProveedoresIva012ParameterReturnGeneral srifacturasproveedoresiva012ParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoSriFacturasProveedoresIva012=false;
	public Boolean esParaAccionDesdeFormularioSriFacturasProveedoresIva012=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected SriFacturasProveedoresIva012SessionBeanAdditional srifacturasproveedoresiva012SessionBeanAdditional=null;
	
	public SriFacturasProveedoresIva012SessionBeanAdditional getSriFacturasProveedoresIva012SessionBeanAdditional() {
		return this.srifacturasproveedoresiva012SessionBeanAdditional;
	}
	
	public void setSriFacturasProveedoresIva012SessionBeanAdditional(SriFacturasProveedoresIva012SessionBeanAdditional srifacturasproveedoresiva012SessionBeanAdditional) {
		try {
			this.srifacturasproveedoresiva012SessionBeanAdditional=srifacturasproveedoresiva012SessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional srifacturasproveedoresiva012BeanSwingJInternalFrameAdditional=null;
	//public class SriFacturasProveedoresIva012BeanSwingJInternalFrame
	
	public SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional getSriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional() {
		return this.srifacturasproveedoresiva012BeanSwingJInternalFrameAdditional;
	}
	
	public void setSriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional(SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional srifacturasproveedoresiva012BeanSwingJInternalFrameAdditional) {
		try {
			this.srifacturasproveedoresiva012BeanSwingJInternalFrameAdditional=srifacturasproveedoresiva012BeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public SriFacturasProveedoresIva012Logic srifacturasproveedoresiva012Logic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public SriFacturasProveedoresIva012 srifacturasproveedoresiva012Bean;
	public SriFacturasProveedoresIva012ConstantesFunciones srifacturasproveedoresiva012ConstantesFunciones;
	//public SriFacturasProveedoresIva012ParameterReturnGeneral srifacturasproveedoresiva012ReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public PeriodoDeclaraLogic periododeclaraLogic;
	public TipoIvaLogic tipoivaLogic;
	public TipoRetencionLogic tiporetencionivaLogic;
	public TipoRetencionLogic tiporetencionivaprestaLogic;
	
	//PARAMETROS
	
	
	//public List<SriFacturasProveedoresIva012> srifacturasproveedoresiva012s;	
	//public List<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sEliminados;
	//public List<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=false;
	public Boolean isVisibilidadCeldaDuplicarSriFacturasProveedoresIva012=true;
	public Boolean isVisibilidadCeldaCopiarSriFacturasProveedoresIva012=true;
	public Boolean isVisibilidadCeldaVerFormSriFacturasProveedoresIva012=true;
	public Boolean isVisibilidadCeldaOrdenSriFacturasProveedoresIva012=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=false;
	public Boolean isVisibilidadCeldaModificarSriFacturasProveedoresIva012=false;
	public Boolean isVisibilidadCeldaActualizarSriFacturasProveedoresIva012=false;
	public Boolean isVisibilidadCeldaEliminarSriFacturasProveedoresIva012=false;
	public Boolean isVisibilidadCeldaCancelarSriFacturasProveedoresIva012=false;
	public Boolean isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=false;	
	
	
	public Boolean isVisibilidadBusquedaSriFacturasProveedoresIva012=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdPeriodoDeclara=false;
	public Boolean isVisibilidadFK_IdTipoIva=false;
	public Boolean isVisibilidadFK_IdTipoRetencionIva=false;
	public Boolean isVisibilidadFK_IdTipoRetencionIvaPresta=false;
	
	public Long getiIdNuevoSriFacturasProveedoresIva012() {
		return this.iIdNuevoSriFacturasProveedoresIva012;
	}

	public void setiIdNuevoSriFacturasProveedoresIva012(Long iIdNuevoSriFacturasProveedoresIva012) {
		this.iIdNuevoSriFacturasProveedoresIva012 = iIdNuevoSriFacturasProveedoresIva012;
	}
	
	public Long getidSriFacturasProveedoresIva012Actual() {
		return this.idSriFacturasProveedoresIva012Actual;
	}

	public void setidSriFacturasProveedoresIva012Actual(Long idSriFacturasProveedoresIva012Actual) {
		this.idSriFacturasProveedoresIva012Actual = idSriFacturasProveedoresIva012Actual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public SriFacturasProveedoresIva012 getsrifacturasproveedoresiva012() {
		return this.srifacturasproveedoresiva012;
	}

	public void setsrifacturasproveedoresiva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012) {
		this.srifacturasproveedoresiva012 = srifacturasproveedoresiva012;
	}
	
	public SriFacturasProveedoresIva012 getsrifacturasproveedoresiva012Aux() {
		return this.srifacturasproveedoresiva012Aux;
	}

	public void setsrifacturasproveedoresiva012Aux(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux) {
		this.srifacturasproveedoresiva012Aux = srifacturasproveedoresiva012Aux;
	}				
	
	public SriFacturasProveedoresIva012 getsrifacturasproveedoresiva012Anterior() {
		return this.srifacturasproveedoresiva012Anterior;
	}

	public void setsrifacturasproveedoresiva012Anterior(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Anterior) {
		this.srifacturasproveedoresiva012Anterior = srifacturasproveedoresiva012Anterior;
	}	
	
	public SriFacturasProveedoresIva012 getsrifacturasproveedoresiva012Totales() {
		return this.srifacturasproveedoresiva012Totales;
	}

	public void setsrifacturasproveedoresiva012Totales(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Totales) {
		this.srifacturasproveedoresiva012Totales = srifacturasproveedoresiva012Totales;
	}	
	
	public SriFacturasProveedoresIva012 getsrifacturasproveedoresiva012Bean() {
		return this.srifacturasproveedoresiva012Bean;
	}

	public void setsrifacturasproveedoresiva012Bean(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Bean) {
		this.srifacturasproveedoresiva012Bean = srifacturasproveedoresiva012Bean;
	}	
	
	public SriFacturasProveedoresIva012ParameterReturnGeneral getsrifacturasproveedoresiva012ReturnGeneral() {
		return this.srifacturasproveedoresiva012ReturnGeneral;
	}

	public void setsrifacturasproveedoresiva012ReturnGeneral(SriFacturasProveedoresIva012ParameterReturnGeneral srifacturasproveedoresiva012ReturnGeneral) {
		this.srifacturasproveedoresiva012ReturnGeneral = srifacturasproveedoresiva012ReturnGeneral;
	}	
	
	
	public Long id_periodo_declaraBusquedaSriFacturasProveedoresIva012=-1L;

	public Long getid_periodo_declaraBusquedaSriFacturasProveedoresIva012() {
		return this.id_periodo_declaraBusquedaSriFacturasProveedoresIva012;
	}

	public void setid_periodo_declaraBusquedaSriFacturasProveedoresIva012(Long id_periodo_declaraBusquedaSriFacturasProveedoresIva012) {
		this.id_periodo_declaraBusquedaSriFacturasProveedoresIva012 = id_periodo_declaraBusquedaSriFacturasProveedoresIva012;
	}

;
	public String rucBusquedaSriFacturasProveedoresIva012="";

	public String getrucBusquedaSriFacturasProveedoresIva012() {
		return this.rucBusquedaSriFacturasProveedoresIva012;
	}

	public void setrucBusquedaSriFacturasProveedoresIva012(String rucBusquedaSriFacturasProveedoresIva012) {
		this.rucBusquedaSriFacturasProveedoresIva012 = rucBusquedaSriFacturasProveedoresIva012;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_periodo_declaraFK_IdPeriodoDeclara=-1L;

	public Long getid_periodo_declaraFK_IdPeriodoDeclara() {
		return this.id_periodo_declaraFK_IdPeriodoDeclara;
	}

	public void setid_periodo_declaraFK_IdPeriodoDeclara(Long id_periodo_declaraFK_IdPeriodoDeclara) {
		this.id_periodo_declaraFK_IdPeriodoDeclara = id_periodo_declaraFK_IdPeriodoDeclara;
	}

	public Long id_tipo_ivaFK_IdTipoIva=-1L;

	public Long getid_tipo_ivaFK_IdTipoIva() {
		return this.id_tipo_ivaFK_IdTipoIva;
	}

	public void setid_tipo_ivaFK_IdTipoIva(Long id_tipo_ivaFK_IdTipoIva) {
		this.id_tipo_ivaFK_IdTipoIva = id_tipo_ivaFK_IdTipoIva;
	}

	public Long id_tipo_retencion_ivaFK_IdTipoRetencionIva=-1L;

	public Long getid_tipo_retencion_ivaFK_IdTipoRetencionIva() {
		return this.id_tipo_retencion_ivaFK_IdTipoRetencionIva;
	}

	public void setid_tipo_retencion_ivaFK_IdTipoRetencionIva(Long id_tipo_retencion_ivaFK_IdTipoRetencionIva) {
		this.id_tipo_retencion_ivaFK_IdTipoRetencionIva = id_tipo_retencion_ivaFK_IdTipoRetencionIva;
	}

	public Long id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta=-1L;

	public Long getid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta() {
		return this.id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta;
	}

	public void setid_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta(Long id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta) {
		this.id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta = id_tipo_retencion_iva_prestaFK_IdTipoRetencionIvaPresta;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public SriFacturasProveedoresIva012Logic getSriFacturasProveedoresIva012Logic()	{		
		return srifacturasproveedoresiva012Logic;
	}

	public void setSriFacturasProveedoresIva012Logic(SriFacturasProveedoresIva012Logic srifacturasproveedoresiva012Logic) {
		this.srifacturasproveedoresiva012Logic = srifacturasproveedoresiva012Logic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoSriFacturasProveedoresIva012() {
		return isEsNuevoSriFacturasProveedoresIva012;
	}

	public void setIsEsNuevoSriFacturasProveedoresIva012(Boolean isEsNuevoSriFacturasProveedoresIva012) {
		this.isEsNuevoSriFacturasProveedoresIva012 = isEsNuevoSriFacturasProveedoresIva012;
	}

	public Boolean getEsParaAccionDesdeFormularioSriFacturasProveedoresIva012() {
		return esParaAccionDesdeFormularioSriFacturasProveedoresIva012;
	}
	
	public void setEsParaAccionDesdeFormularioSriFacturasProveedoresIva012(Boolean esParaAccionDesdeFormularioSriFacturasProveedoresIva012) {
		this.esParaAccionDesdeFormularioSriFacturasProveedoresIva012 = esParaAccionDesdeFormularioSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.srifacturasproveedoresiva012SessionBean==null) {
				this.srifacturasproveedoresiva012SessionBean=new SriFacturasProveedoresIva012SessionBean();
			}

			if(!this.srifacturasproveedoresiva012SessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(srifacturasproveedoresiva012SessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodoDeclarasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periododeclarasForeignKey=new ArrayList<PeriodoDeclara>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoDeclaraLogic periododeclaraLogic=new PeriodoDeclaraLogic();

			//periododeclaraLogic.getPeriodoDeclaraDataAccess().setIsForForeingKeyData(true);

			if(this.srifacturasproveedoresiva012SessionBean==null) {
				this.srifacturasproveedoresiva012SessionBean=new SriFacturasProveedoresIva012SessionBean();
			}

			if(!this.srifacturasproveedoresiva012SessionBean.getisBusquedaDesdeForeignKeySesionPeriodoDeclara()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periododeclaraLogic.getPeriodoDeclaraDataAccess().setIsForForeingKeyData(true);

					periododeclaraLogic.getTodosPeriodoDeclarasWithConnection(sFinalQuery,new Pagination());

					this.periododeclarasForeignKey=periododeclaraLogic.getPeriodoDeclaras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodoDeclara(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periododeclaraLogic.getEntityWithConnection(srifacturasproveedoresiva012SessionBean.getlidPeriodoDeclaraActual());
					this.periododeclarasForeignKey.add(periododeclaraLogic.getPeriodoDeclara());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoIvasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoivasForeignKey=new ArrayList<TipoIva>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoIvaLogic tipoivaLogic=new TipoIvaLogic();

			//tipoivaLogic.getTipoIvaDataAccess().setIsForForeingKeyData(true);

			if(this.srifacturasproveedoresiva012SessionBean==null) {
				this.srifacturasproveedoresiva012SessionBean=new SriFacturasProveedoresIva012SessionBean();
			}

			if(!this.srifacturasproveedoresiva012SessionBean.getisBusquedaDesdeForeignKeySesionTipoIva()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoivaLogic.getTipoIvaDataAccess().setIsForForeingKeyData(true);

					tipoivaLogic.getTodosTipoIvasWithConnection(sFinalQuery,new Pagination());

					this.tipoivasForeignKey=tipoivaLogic.getTipoIvas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoIva(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoivaLogic.getEntityWithConnection(srifacturasproveedoresiva012SessionBean.getlidTipoIvaActual());
					this.tipoivasForeignKey.add(tipoivaLogic.getTipoIva());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoRetencionIvasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tiporetencionivasForeignKey=new ArrayList<TipoRetencion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoRetencionLogic tiporetencionLogic=new TipoRetencionLogic();

			//tiporetencionLogic.getTipoRetencionDataAccess().setIsForForeingKeyData(true);

			if(this.srifacturasproveedoresiva012SessionBean==null) {
				this.srifacturasproveedoresiva012SessionBean=new SriFacturasProveedoresIva012SessionBean();
			}

			if(!this.srifacturasproveedoresiva012SessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIva()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tiporetencionivaLogic.getTipoRetencionDataAccess().setIsForForeingKeyData(true);

					tiporetencionLogic.getTodosTipoRetencionsWithConnection(sFinalQuery,new Pagination());

					this.tiporetencionivasForeignKey=tiporetencionLogic.getTipoRetencions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoRetencionIva(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporetencionLogic.getEntityWithConnection(srifacturasproveedoresiva012SessionBean.getlidTipoRetencionIvaActual());
					this.tiporetencionivasForeignKey.add(tiporetencionLogic.getTipoRetencion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoRetencionIvaPrestasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tiporetencionivaprestasForeignKey=new ArrayList<TipoRetencion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoRetencionLogic tiporetencionLogic=new TipoRetencionLogic();

			//tiporetencionLogic.getTipoRetencionDataAccess().setIsForForeingKeyData(true);

			if(this.srifacturasproveedoresiva012SessionBean==null) {
				this.srifacturasproveedoresiva012SessionBean=new SriFacturasProveedoresIva012SessionBean();
			}

			if(!this.srifacturasproveedoresiva012SessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIvaPresta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tiporetencionivaprestaLogic.getTipoRetencionDataAccess().setIsForForeingKeyData(true);

					tiporetencionLogic.getTodosTipoRetencionsWithConnection(sFinalQuery,new Pagination());

					this.tiporetencionivaprestasForeignKey=tiporetencionLogic.getTipoRetencions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoRetencionIvaPresta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporetencionLogic.getEntityWithConnection(srifacturasproveedoresiva012SessionBean.getlidTipoRetencionIvaPrestaActual());
					this.tiporetencionivaprestasForeignKey.add(tiporetencionLogic.getTipoRetencion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.srifacturasproveedoresiva012!=null) {
						this.srifacturasproveedoresiva012.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
						this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaSriFacturasProveedoresIva012.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012.getItemCount()>0) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaSriFacturasProveedoresIva012Generico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaSriFacturasProveedoresIva012Generico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaSriFacturasProveedoresIva012Generico!=null && jComboBoxid_empresaSriFacturasProveedoresIva012Generico.getItemCount()>0) {
					jComboBoxid_empresaSriFacturasProveedoresIva012Generico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoDeclaraForeignKey(Long idPeriodoDeclaraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			PeriodoDeclara  periododeclaraTemp=null;

			for(PeriodoDeclara periododeclaraAux:periododeclarasForeignKey) {
				if(periododeclaraAux.getId()!=null && periododeclaraAux.getId().equals(idPeriodoDeclaraSeleccionado)) {
					periododeclaraTemp=periododeclaraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periododeclaraTemp!=null) {

					if(this.srifacturasproveedoresiva012!=null) {
						this.srifacturasproveedoresiva012.setPeriodoDeclara(periododeclaraTemp);
					}

					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
						this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.setSelectedItem(periododeclaraTemp);
					}
				} else {
					//jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.setSelectedItem(periododeclaraTemp);
					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.getItemCount()>0) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("BusquedaSriFacturasProveedoresIva012") || sFormularioTipoBusqueda.equals("Todos")){
					if(periododeclaraTemp!=null && jComboBoxid_periodo_declaraBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012!=null) {
						jComboBoxid_periodo_declaraBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012.setSelectedItem(periododeclaraTemp);
					} else {
						if(jComboBoxid_periodo_declaraBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012!=null) {
							//jComboBoxid_periodo_declaraBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012.setSelectedItem(periododeclaraTemp);
							if(jComboBoxid_periodo_declaraBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012.getItemCount()>0) {
								jComboBoxid_periodo_declaraBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoDeclaraForeignKeyDescripcion(Long idPeriodoDeclaraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			PeriodoDeclara  periododeclaraTemp=null;

			for(PeriodoDeclara periododeclaraAux:periododeclarasForeignKey) {
				if(periododeclaraAux.getId()!=null && periododeclaraAux.getId().equals(idPeriodoDeclaraSeleccionado)) {
					periododeclaraTemp=periododeclaraAux;
					break;
				}
			}


			sDescripcion=PeriodoDeclaraConstantesFunciones.getPeriodoDeclaraDescripcion(periododeclaraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoDeclaraForeignKeyGenerico(Long idPeriodoDeclaraSeleccionado,JComboBox jComboBoxid_periodo_declaraSriFacturasProveedoresIva012Generico)throws Exception
	{
		try
		{
			PeriodoDeclara  periododeclaraTemp=null;

			for(PeriodoDeclara periododeclaraAux:periododeclarasForeignKey) {
				if(periododeclaraAux.getId()!=null && periododeclaraAux.getId().equals(idPeriodoDeclaraSeleccionado)) {
					periododeclaraTemp=periododeclaraAux;
					break;
				}
			}

			if(periododeclaraTemp!=null) {
				jComboBoxid_periodo_declaraSriFacturasProveedoresIva012Generico.setSelectedItem(periododeclaraTemp);
			} else {
				if(jComboBoxid_periodo_declaraSriFacturasProveedoresIva012Generico!=null && jComboBoxid_periodo_declaraSriFacturasProveedoresIva012Generico.getItemCount()>0) {
					jComboBoxid_periodo_declaraSriFacturasProveedoresIva012Generico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoIvaForeignKey(Long idTipoIvaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoIva  tipoivaTemp=null;

			for(TipoIva tipoivaAux:tipoivasForeignKey) {
				if(tipoivaAux.getId()!=null && tipoivaAux.getId().equals(idTipoIvaSeleccionado)) {
					tipoivaTemp=tipoivaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoivaTemp!=null) {

					if(this.srifacturasproveedoresiva012!=null) {
						this.srifacturasproveedoresiva012.setTipoIva(tipoivaTemp);
					}

					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
						this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.setSelectedItem(tipoivaTemp);
					}
				} else {
					//jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.setSelectedItem(tipoivaTemp);
					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.getItemCount()>0) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoIvaForeignKeyDescripcion(Long idTipoIvaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoIva  tipoivaTemp=null;

			for(TipoIva tipoivaAux:tipoivasForeignKey) {
				if(tipoivaAux.getId()!=null && tipoivaAux.getId().equals(idTipoIvaSeleccionado)) {
					tipoivaTemp=tipoivaAux;
					break;
				}
			}


			sDescripcion=TipoIvaConstantesFunciones.getTipoIvaDescripcion(tipoivaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoIvaForeignKeyGenerico(Long idTipoIvaSeleccionado,JComboBox jComboBoxid_tipo_ivaSriFacturasProveedoresIva012Generico)throws Exception
	{
		try
		{
			TipoIva  tipoivaTemp=null;

			for(TipoIva tipoivaAux:tipoivasForeignKey) {
				if(tipoivaAux.getId()!=null && tipoivaAux.getId().equals(idTipoIvaSeleccionado)) {
					tipoivaTemp=tipoivaAux;
					break;
				}
			}

			if(tipoivaTemp!=null) {
				jComboBoxid_tipo_ivaSriFacturasProveedoresIva012Generico.setSelectedItem(tipoivaTemp);
			} else {
				if(jComboBoxid_tipo_ivaSriFacturasProveedoresIva012Generico!=null && jComboBoxid_tipo_ivaSriFacturasProveedoresIva012Generico.getItemCount()>0) {
					jComboBoxid_tipo_ivaSriFacturasProveedoresIva012Generico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoRetencionIvaForeignKey(Long idTipoRetencionIvaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoRetencion  tiporetencionivaTemp=null;

			for(TipoRetencion tiporetencionivaAux:tiporetencionivasForeignKey) {
				if(tiporetencionivaAux.getId()!=null && tiporetencionivaAux.getId().equals(idTipoRetencionIvaSeleccionado)) {
					tiporetencionivaTemp=tiporetencionivaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tiporetencionivaTemp!=null) {

					if(this.srifacturasproveedoresiva012!=null) {
						this.srifacturasproveedoresiva012.setTipoRetencionIva(tiporetencionivaTemp);
					}

					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
						this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.setSelectedItem(tiporetencionivaTemp);
					}
				} else {
					//jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.setSelectedItem(tiporetencionivaTemp);
					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.getItemCount()>0) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoRetencionIvaForeignKeyDescripcion(Long idTipoRetencionIvaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoRetencion  tiporetencionivaTemp=null;

			for(TipoRetencion tiporetencionivaAux:tiporetencionivasForeignKey) {
				if(tiporetencionivaAux.getId()!=null && tiporetencionivaAux.getId().equals(idTipoRetencionIvaSeleccionado)) {
					tiporetencionivaTemp=tiporetencionivaAux;
					break;
				}
			}


			sDescripcion=TipoRetencionConstantesFunciones.getTipoRetencionDescripcion(tiporetencionivaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoRetencionIvaForeignKeyGenerico(Long idTipoRetencionIvaSeleccionado,JComboBox jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012Generico)throws Exception
	{
		try
		{
			TipoRetencion  tiporetencionivaTemp=null;

			for(TipoRetencion tiporetencionivaAux:tiporetencionivasForeignKey) {
				if(tiporetencionivaAux.getId()!=null && tiporetencionivaAux.getId().equals(idTipoRetencionIvaSeleccionado)) {
					tiporetencionivaTemp=tiporetencionivaAux;
					break;
				}
			}

			if(tiporetencionivaTemp!=null) {
				jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012Generico.setSelectedItem(tiporetencionivaTemp);
			} else {
				if(jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012Generico!=null && jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012Generico.getItemCount()>0) {
					jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012Generico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoRetencionIvaPrestaForeignKey(Long idTipoRetencionIvaPrestaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoRetencion  tiporetencionivaprestaTemp=null;

			for(TipoRetencion tiporetencionivaprestaAux:tiporetencionivaprestasForeignKey) {
				if(tiporetencionivaprestaAux.getId()!=null && tiporetencionivaprestaAux.getId().equals(idTipoRetencionIvaPrestaSeleccionado)) {
					tiporetencionivaprestaTemp=tiporetencionivaprestaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tiporetencionivaprestaTemp!=null) {

					if(this.srifacturasproveedoresiva012!=null) {
						this.srifacturasproveedoresiva012.setTipoRetencionIvaPresta(tiporetencionivaprestaTemp);
					}

					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
						this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.setSelectedItem(tiporetencionivaprestaTemp);
					}
				} else {
					//jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.setSelectedItem(tiporetencionivaprestaTemp);
					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.getItemCount()>0) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoRetencionIvaPrestaForeignKeyDescripcion(Long idTipoRetencionIvaPrestaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoRetencion  tiporetencionivaprestaTemp=null;

			for(TipoRetencion tiporetencionivaprestaAux:tiporetencionivaprestasForeignKey) {
				if(tiporetencionivaprestaAux.getId()!=null && tiporetencionivaprestaAux.getId().equals(idTipoRetencionIvaPrestaSeleccionado)) {
					tiporetencionivaprestaTemp=tiporetencionivaprestaAux;
					break;
				}
			}


			sDescripcion=TipoRetencionConstantesFunciones.getTipoRetencionDescripcion(tiporetencionivaprestaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoRetencionIvaPrestaForeignKeyGenerico(Long idTipoRetencionIvaPrestaSeleccionado,JComboBox jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Generico)throws Exception
	{
		try
		{
			TipoRetencion  tiporetencionivaprestaTemp=null;

			for(TipoRetencion tiporetencionivaprestaAux:tiporetencionivaprestasForeignKey) {
				if(tiporetencionivaprestaAux.getId()!=null && tiporetencionivaprestaAux.getId().equals(idTipoRetencionIvaPrestaSeleccionado)) {
					tiporetencionivaprestaTemp=tiporetencionivaprestaAux;
					break;
				}
			}

			if(tiporetencionivaprestaTemp!=null) {
				jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Generico.setSelectedItem(tiporetencionivaprestaTemp);
			} else {
				if(jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Generico!=null && jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Generico.getItemCount()>0) {
					jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Generico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,JComboBox jComboBoxid_empresaSriFacturasProveedoresIva012Generico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaSriFacturasProveedoresIva012Generico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaSriFacturasProveedoresIva012Generico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				srifacturasproveedoresiva012.setid_empresa(empresaAux.getId());
				srifacturasproveedoresiva012.setempresa_descripcion(SriFacturasProveedoresIva012ConstantesFunciones.getEmpresaDescripcion(empresaAux));
				srifacturasproveedoresiva012.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoDeclaraForeignKey(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,JComboBox jComboBoxid_periodo_declaraSriFacturasProveedoresIva012Generico)throws Exception
	{
		try
		{
			PeriodoDeclara  periododeclaraAux=new PeriodoDeclara();

			if(jComboBoxid_periodo_declaraSriFacturasProveedoresIva012Generico==null) {
				periododeclaraAux=(PeriodoDeclara)this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.getSelectedItem();
			} else {
				periododeclaraAux=(PeriodoDeclara)jComboBoxid_periodo_declaraSriFacturasProveedoresIva012Generico.getSelectedItem();
			}

			if(periododeclaraAux!=null && periododeclaraAux.getId()!=null) {
				srifacturasproveedoresiva012.setid_periodo_declara(periododeclaraAux.getId());
				srifacturasproveedoresiva012.setperiododeclara_descripcion(SriFacturasProveedoresIva012ConstantesFunciones.getPeriodoDeclaraDescripcion(periododeclaraAux));
				srifacturasproveedoresiva012.setPeriodoDeclara(periododeclaraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoIvaForeignKey(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,JComboBox jComboBoxid_tipo_ivaSriFacturasProveedoresIva012Generico)throws Exception
	{
		try
		{
			TipoIva  tipoivaAux=new TipoIva();

			if(jComboBoxid_tipo_ivaSriFacturasProveedoresIva012Generico==null) {
				tipoivaAux=(TipoIva)this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.getSelectedItem();
			} else {
				tipoivaAux=(TipoIva)jComboBoxid_tipo_ivaSriFacturasProveedoresIva012Generico.getSelectedItem();
			}

			if(tipoivaAux!=null && tipoivaAux.getId()!=null) {
				srifacturasproveedoresiva012.setid_tipo_iva(tipoivaAux.getId());
				srifacturasproveedoresiva012.settipoiva_descripcion(SriFacturasProveedoresIva012ConstantesFunciones.getTipoIvaDescripcion(tipoivaAux));
				srifacturasproveedoresiva012.setTipoIva(tipoivaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoRetencionIvaForeignKey(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,JComboBox jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012Generico)throws Exception
	{
		try
		{
			TipoRetencion  tiporetencionAux=new TipoRetencion();

			if(jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012Generico==null) {
				tiporetencionAux=(TipoRetencion)this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.getSelectedItem();
			} else {
				tiporetencionAux=(TipoRetencion)jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012Generico.getSelectedItem();
			}

			if(tiporetencionAux!=null && tiporetencionAux.getId()!=null) {
				srifacturasproveedoresiva012.setid_tipo_retencion_iva(tiporetencionAux.getId());
				srifacturasproveedoresiva012.settiporetencioniva_descripcion(SriFacturasProveedoresIva012ConstantesFunciones.getTipoRetencionIvaDescripcion(tiporetencionAux));
				srifacturasproveedoresiva012.setTipoRetencionIva(tiporetencionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoRetencionIvaPrestaForeignKey(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,JComboBox jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Generico)throws Exception
	{
		try
		{
			TipoRetencion  tiporetencionAux=new TipoRetencion();

			if(jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Generico==null) {
				tiporetencionAux=(TipoRetencion)this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.getSelectedItem();
			} else {
				tiporetencionAux=(TipoRetencion)jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Generico.getSelectedItem();
			}

			if(tiporetencionAux!=null && tiporetencionAux.getId()!=null) {
				srifacturasproveedoresiva012.setid_tipo_retencion_iva_presta(tiporetencionAux.getId());
				srifacturasproveedoresiva012.settiporetencionivapresta_descripcion(SriFacturasProveedoresIva012ConstantesFunciones.getTipoRetencionIvaPrestaDescripcion(tiporetencionAux));
				srifacturasproveedoresiva012.setTipoRetencionIvaPresta(tiporetencionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { 
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { 
					}

					if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodoDeclarasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodoDeclara=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { 
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.removeAllItems();

							for(PeriodoDeclara periododeclara:this.periododeclarasForeignKey) {
								this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.addItem(periododeclara);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { 
					}

					if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("BusquedaSriFacturasProveedoresIva012") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_periodo_declaraBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012.removeAllItems();

							for(PeriodoDeclara periododeclara:this.periododeclarasForeignKey) {
								this.jComboBoxid_periodo_declaraBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012.addItem(periododeclara);
							}
						}

						if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoIvasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoIva=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { 
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.removeAllItems();

							for(TipoIva tipoiva:this.tipoivasForeignKey) {
								this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.addItem(tipoiva);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { 
					}

					if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoRetencionIvasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoRetencion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { 
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.removeAllItems();

							for(TipoRetencion tiporetencioniva:this.tiporetencionivasForeignKey) {
								this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.addItem(tiporetencioniva);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { 
					}

					if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoRetencionIvaPrestasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoRetencion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { 
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.removeAllItems();

							for(TipoRetencion tiporetencionivapresta:this.tiporetencionivaprestasForeignKey) {
								this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.addItem(tiporetencionivapresta);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { 
					}

					if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoDeclaraForeignKey(PeriodoDeclara periododeclara,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.setSelectedItem(periododeclara);
						}
					} else {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_periodo_declaraBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012.setSelectedItem(periododeclara);
						} else {
							this.jComboBoxid_periodo_declaraBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoIvaForeignKey(TipoIva tipoiva,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.setSelectedItem(tipoiva);
						}
					} else {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoRetencionIvaForeignKey(TipoRetencion tiporetencioniva,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.setSelectedItem(tiporetencioniva);
						}
					} else {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoRetencionIvaPrestaForeignKey(TipoRetencion tiporetencionivapresta,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.setSelectedItem(tiporetencionivapresta);
						}
					} else {
						if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesSriFacturasProveedoresIva012() throws Exception {
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public SriFacturasProveedoresIva012ParameterReturnGeneral getSriFacturasProveedoresIva012ParameterGeneral() {
		return this.srifacturasproveedoresiva012ParameterGeneral;
	}
	
	public void setSriFacturasProveedoresIva012ParameterGeneral(SriFacturasProveedoresIva012ParameterReturnGeneral srifacturasproveedoresiva012ParameterGeneral) {
		this.srifacturasproveedoresiva012ParameterGeneral = srifacturasproveedoresiva012ParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoSriFacturasProveedoresIva012() {
		return isPermisoTodoSriFacturasProveedoresIva012;
	}

	public void setIsPermisoTodoSriFacturasProveedoresIva012(Boolean isPermisoTodoSriFacturasProveedoresIva012) {
		this.isPermisoTodoSriFacturasProveedoresIva012 = isPermisoTodoSriFacturasProveedoresIva012;
	}

	public Boolean getIsPermisoNuevoSriFacturasProveedoresIva012() {
		return isPermisoNuevoSriFacturasProveedoresIva012;
	}

	public void setIsPermisoNuevoSriFacturasProveedoresIva012(Boolean isPermisoNuevoSriFacturasProveedoresIva012) {
		this.isPermisoNuevoSriFacturasProveedoresIva012 = isPermisoNuevoSriFacturasProveedoresIva012;
	}

	public Boolean getIsPermisoActualizarSriFacturasProveedoresIva012() {
		return isPermisoActualizarSriFacturasProveedoresIva012;
	}

	public void setIsPermisoActualizarSriFacturasProveedoresIva012(Boolean isPermisoActualizarSriFacturasProveedoresIva012) {
		this.isPermisoActualizarSriFacturasProveedoresIva012 = isPermisoActualizarSriFacturasProveedoresIva012;
	}

	public Boolean getIsPermisoEliminarSriFacturasProveedoresIva012() {
		return isPermisoEliminarSriFacturasProveedoresIva012;
	}

	public void setIsPermisoEliminarSriFacturasProveedoresIva012(Boolean isPermisoEliminarSriFacturasProveedoresIva012) {
		this.isPermisoEliminarSriFacturasProveedoresIva012 = isPermisoEliminarSriFacturasProveedoresIva012;
	}

	public Boolean getIsPermisoGuardarCambiosSriFacturasProveedoresIva012() {
		return isPermisoGuardarCambiosSriFacturasProveedoresIva012;
	}

	public void setIsPermisoGuardarCambiosSriFacturasProveedoresIva012(Boolean isPermisoGuardarCambiosSriFacturasProveedoresIva012) {
		this.isPermisoGuardarCambiosSriFacturasProveedoresIva012 = isPermisoGuardarCambiosSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsPermisoConsultaSriFacturasProveedoresIva012() {
		return isPermisoConsultaSriFacturasProveedoresIva012;
	}

	public void setIsPermisoConsultaSriFacturasProveedoresIva012(Boolean isPermisoConsultaSriFacturasProveedoresIva012) {
		this.isPermisoConsultaSriFacturasProveedoresIva012 = isPermisoConsultaSriFacturasProveedoresIva012;
	}

	public Boolean getIsPermisoBusquedaSriFacturasProveedoresIva012() {
		return isPermisoBusquedaSriFacturasProveedoresIva012;
	}

	public void setIsPermisoBusquedaSriFacturasProveedoresIva012(Boolean isPermisoBusquedaSriFacturasProveedoresIva012) {
		this.isPermisoBusquedaSriFacturasProveedoresIva012 = isPermisoBusquedaSriFacturasProveedoresIva012;
	}

	public Boolean getIsPermisoReporteSriFacturasProveedoresIva012() {
		return isPermisoReporteSriFacturasProveedoresIva012;
	}

	public void setIsPermisoReporteSriFacturasProveedoresIva012(Boolean isPermisoReporteSriFacturasProveedoresIva012) {
		this.isPermisoReporteSriFacturasProveedoresIva012 = isPermisoReporteSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsPermisoPaginacionMedioSriFacturasProveedoresIva012() {
		return isPermisoPaginacionMedioSriFacturasProveedoresIva012;
	}

	public void setIsPermisoPaginacionMedioSriFacturasProveedoresIva012(Boolean isPermisoPaginacionMedioSriFacturasProveedoresIva012) {
		this.isPermisoPaginacionMedioSriFacturasProveedoresIva012 = isPermisoPaginacionMedioSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsPermisoPaginacionTodoSriFacturasProveedoresIva012() {
		return isPermisoPaginacionTodoSriFacturasProveedoresIva012;
	}

	public void setIsPermisoPaginacionTodoSriFacturasProveedoresIva012(Boolean isPermisoPaginacionTodoSriFacturasProveedoresIva012) {
		this.isPermisoPaginacionTodoSriFacturasProveedoresIva012 = isPermisoPaginacionTodoSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsPermisoPaginacionAltoSriFacturasProveedoresIva012() {
		return isPermisoPaginacionAltoSriFacturasProveedoresIva012;
	}

	public void setIsPermisoPaginacionAltoSriFacturasProveedoresIva012(Boolean isPermisoPaginacionAltoSriFacturasProveedoresIva012) {
		this.isPermisoPaginacionAltoSriFacturasProveedoresIva012 = isPermisoPaginacionAltoSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsPermisoCopiarSriFacturasProveedoresIva012() {
		return isPermisoCopiarSriFacturasProveedoresIva012;
	}

	public void setIsPermisoCopiarSriFacturasProveedoresIva012(Boolean isPermisoCopiarSriFacturasProveedoresIva012) {
		this.isPermisoCopiarSriFacturasProveedoresIva012 = isPermisoCopiarSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsPermisoVerFormSriFacturasProveedoresIva012() {
		return isPermisoVerFormSriFacturasProveedoresIva012;
	}

	public void setIsPermisoVerFormSriFacturasProveedoresIva012(Boolean isPermisoVerFormSriFacturasProveedoresIva012) {
		this.isPermisoVerFormSriFacturasProveedoresIva012 = isPermisoVerFormSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsPermisoDuplicarSriFacturasProveedoresIva012() {
		return isPermisoDuplicarSriFacturasProveedoresIva012;
	}

	public void setIsPermisoDuplicarSriFacturasProveedoresIva012(Boolean isPermisoDuplicarSriFacturasProveedoresIva012) {
		this.isPermisoDuplicarSriFacturasProveedoresIva012 = isPermisoDuplicarSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsPermisoOrdenSriFacturasProveedoresIva012() {
		return isPermisoOrdenSriFacturasProveedoresIva012;
	}

	public void setIsPermisoOrdenSriFacturasProveedoresIva012(Boolean isPermisoOrdenSriFacturasProveedoresIva012) {
		this.isPermisoOrdenSriFacturasProveedoresIva012 = isPermisoOrdenSriFacturasProveedoresIva012;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoSriFacturasProveedoresIva012() {
		return isVisibilidadCeldaNuevoSriFacturasProveedoresIva012;
	}

	public void setIsVisibilidadCeldaNuevoSriFacturasProveedoresIva012(Boolean isVisibilidadCeldaNuevoSriFacturasProveedoresIva012) {
		this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012 = isVisibilidadCeldaNuevoSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarSriFacturasProveedoresIva012() {
		return isVisibilidadCeldaDuplicarSriFacturasProveedoresIva012;
	}

	public void setIsVisibilidadCeldaDuplicarSriFacturasProveedoresIva012(Boolean isVisibilidadCeldaDuplicarSriFacturasProveedoresIva012) {
		this.isVisibilidadCeldaDuplicarSriFacturasProveedoresIva012 = isVisibilidadCeldaDuplicarSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarSriFacturasProveedoresIva012() {
		return isVisibilidadCeldaCopiarSriFacturasProveedoresIva012;
	}

	public void setIsVisibilidadCeldaCopiarSriFacturasProveedoresIva012(Boolean isVisibilidadCeldaCopiarSriFacturasProveedoresIva012) {
		this.isVisibilidadCeldaCopiarSriFacturasProveedoresIva012 = isVisibilidadCeldaCopiarSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormSriFacturasProveedoresIva012() {
		return isVisibilidadCeldaVerFormSriFacturasProveedoresIva012;
	}

	public void setIsVisibilidadCeldaVerFormSriFacturasProveedoresIva012(Boolean isVisibilidadCeldaVerFormSriFacturasProveedoresIva012) {
		this.isVisibilidadCeldaVerFormSriFacturasProveedoresIva012 = isVisibilidadCeldaVerFormSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenSriFacturasProveedoresIva012() {
		return isVisibilidadCeldaOrdenSriFacturasProveedoresIva012;
	}

	public void setIsVisibilidadCeldaOrdenSriFacturasProveedoresIva012(Boolean isVisibilidadCeldaOrdenSriFacturasProveedoresIva012) {
		this.isVisibilidadCeldaOrdenSriFacturasProveedoresIva012 = isVisibilidadCeldaOrdenSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012() {
		return isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012(Boolean isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012) {
		this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012 = isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsVisibilidadCeldaModificarSriFacturasProveedoresIva012() {
		return isVisibilidadCeldaModificarSriFacturasProveedoresIva012;
	}

	public void setIsVisibilidadCeldaModificarSriFacturasProveedoresIva012(Boolean isVisibilidadCeldaModificarSriFacturasProveedoresIva012) {
		this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012 = isVisibilidadCeldaModificarSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarSriFacturasProveedoresIva012() {
		return isVisibilidadCeldaActualizarSriFacturasProveedoresIva012;
	}

	public void setIsVisibilidadCeldaActualizarSriFacturasProveedoresIva012(Boolean isVisibilidadCeldaActualizarSriFacturasProveedoresIva012) {
		this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012 = isVisibilidadCeldaActualizarSriFacturasProveedoresIva012;
	}

	public Boolean getIsVisibilidadCeldaEliminarSriFacturasProveedoresIva012() {
		return isVisibilidadCeldaEliminarSriFacturasProveedoresIva012;
	}

	public void setIsVisibilidadCeldaEliminarSriFacturasProveedoresIva012(Boolean isVisibilidadCeldaEliminarSriFacturasProveedoresIva012) {
		this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012 = isVisibilidadCeldaEliminarSriFacturasProveedoresIva012;
	}

	public Boolean getIsVisibilidadCeldaCancelarSriFacturasProveedoresIva012() {
		return isVisibilidadCeldaCancelarSriFacturasProveedoresIva012;
	}

	public void setIsVisibilidadCeldaCancelarSriFacturasProveedoresIva012(Boolean isVisibilidadCeldaCancelarSriFacturasProveedoresIva012) {
		this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012 = isVisibilidadCeldaCancelarSriFacturasProveedoresIva012;
	}

	public Boolean getIsVisibilidadCeldaGuardarSriFacturasProveedoresIva012() {
		return isVisibilidadCeldaGuardarSriFacturasProveedoresIva012;
	}

	public void setIsVisibilidadCeldaGuardarSriFacturasProveedoresIva012(Boolean isVisibilidadCeldaGuardarSriFacturasProveedoresIva012) {
		this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012 = isVisibilidadCeldaGuardarSriFacturasProveedoresIva012;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012() {
		return isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012;
	}

	public void setIsVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012(Boolean isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012) {
		this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012 = isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012;
	}
		
	public SriFacturasProveedoresIva012SessionBean getsrifacturasproveedoresiva012SessionBean() {
		return this.srifacturasproveedoresiva012SessionBean;
	}
	
	public void setsrifacturasproveedoresiva012SessionBean(SriFacturasProveedoresIva012SessionBean srifacturasproveedoresiva012SessionBean) {
		this.srifacturasproveedoresiva012SessionBean=srifacturasproveedoresiva012SessionBean;
	}
	
	
	public Boolean getisVisibilidadBusquedaSriFacturasProveedoresIva012() {
		return this.isVisibilidadBusquedaSriFacturasProveedoresIva012;
	}

	public void setisVisibilidadBusquedaSriFacturasProveedoresIva012(Boolean isVisibilidadBusquedaSriFacturasProveedoresIva012) {
		this.isVisibilidadBusquedaSriFacturasProveedoresIva012=isVisibilidadBusquedaSriFacturasProveedoresIva012;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdPeriodoDeclara() {
		return this.isVisibilidadFK_IdPeriodoDeclara;
	}

	public void setisVisibilidadFK_IdPeriodoDeclara(Boolean isVisibilidadFK_IdPeriodoDeclara) {
		this.isVisibilidadFK_IdPeriodoDeclara=isVisibilidadFK_IdPeriodoDeclara;
	}

	public Boolean getisVisibilidadFK_IdTipoIva() {
		return this.isVisibilidadFK_IdTipoIva;
	}

	public void setisVisibilidadFK_IdTipoIva(Boolean isVisibilidadFK_IdTipoIva) {
		this.isVisibilidadFK_IdTipoIva=isVisibilidadFK_IdTipoIva;
	}

	public Boolean getisVisibilidadFK_IdTipoRetencionIva() {
		return this.isVisibilidadFK_IdTipoRetencionIva;
	}

	public void setisVisibilidadFK_IdTipoRetencionIva(Boolean isVisibilidadFK_IdTipoRetencionIva) {
		this.isVisibilidadFK_IdTipoRetencionIva=isVisibilidadFK_IdTipoRetencionIva;
	}

	public Boolean getisVisibilidadFK_IdTipoRetencionIvaPresta() {
		return this.isVisibilidadFK_IdTipoRetencionIvaPresta;
	}

	public void setisVisibilidadFK_IdTipoRetencionIvaPresta(Boolean isVisibilidadFK_IdTipoRetencionIvaPresta) {
		this.isVisibilidadFK_IdTipoRetencionIvaPresta=isVisibilidadFK_IdTipoRetencionIvaPresta;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(srifacturasproveedoresiva012,null);
				this.setActualParaGuardarPeriodoDeclaraForeignKey(srifacturasproveedoresiva012,null);
				this.setActualParaGuardarTipoIvaForeignKey(srifacturasproveedoresiva012,null);
				this.setActualParaGuardarTipoRetencionIvaForeignKey(srifacturasproveedoresiva012,null);
				this.setActualParaGuardarTipoRetencionIvaPrestaForeignKey(srifacturasproveedoresiva012,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalSriFacturasProveedoresIva012(srifacturasproveedoresiva012);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		srifacturasproveedoresiva012Aux.setId(srifacturasproveedoresiva012.getId());
		srifacturasproveedoresiva012Aux.setVersionRow(srifacturasproveedoresiva012.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
	}	
	
	public void actualizarRelaciones(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Local) throws Exception {
		
		if(this.srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Local) throws Exception {	
		if(this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				srifacturasproveedoresiva012Local.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDeclaraDetalleFormJInternalFrame.class)) {
				PeriodoDeclaraBeanSwingJInternalFrame periododeclaraBeanSwingJInternalFrameLocal=(PeriodoDeclaraBeanSwingJInternalFrame) ((PeriodoDeclaraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periododeclaraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodoDeclara(periododeclaraBeanSwingJInternalFrameLocal.getperiododeclara(),true);
				periododeclaraBeanSwingJInternalFrameLocal.actualizarLista(periododeclaraBeanSwingJInternalFrameLocal.periododeclara,this.periododeclarasForeignKey);

				periododeclaraBeanSwingJInternalFrameLocal.actualizarRelaciones(periododeclaraBeanSwingJInternalFrameLocal.periododeclara);

				srifacturasproveedoresiva012Local.setPeriodoDeclara(periododeclaraBeanSwingJInternalFrameLocal.periododeclara);

				this.addItemDefectoCombosForeignKeyPeriodoDeclara();
				this.cargarCombosFramePeriodoDeclarasForeignKey("Formulario");
				this.setActualPeriodoDeclaraForeignKey(periododeclaraBeanSwingJInternalFrameLocal.periododeclara.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoIvaDetalleFormJInternalFrame.class)) {
				TipoIvaBeanSwingJInternalFrame tipoivaBeanSwingJInternalFrameLocal=(TipoIvaBeanSwingJInternalFrame) ((TipoIvaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoivaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoIva(tipoivaBeanSwingJInternalFrameLocal.gettipoiva(),true);
				tipoivaBeanSwingJInternalFrameLocal.actualizarLista(tipoivaBeanSwingJInternalFrameLocal.tipoiva,this.tipoivasForeignKey);

				tipoivaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoivaBeanSwingJInternalFrameLocal.tipoiva);

				srifacturasproveedoresiva012Local.setTipoIva(tipoivaBeanSwingJInternalFrameLocal.tipoiva);

				this.addItemDefectoCombosForeignKeyTipoIva();
				this.cargarCombosFrameTipoIvasForeignKey("Formulario");
				this.setActualTipoIvaForeignKey(tipoivaBeanSwingJInternalFrameLocal.tipoiva.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoRetencionDetalleFormJInternalFrame.class)) {
				TipoRetencionBeanSwingJInternalFrame tiporetencionivaBeanSwingJInternalFrameLocal=(TipoRetencionBeanSwingJInternalFrame) ((TipoRetencionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tiporetencionivaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoRetencion(tiporetencionivaBeanSwingJInternalFrameLocal.gettiporetencion(),true);
				tiporetencionivaBeanSwingJInternalFrameLocal.actualizarLista(tiporetencionivaBeanSwingJInternalFrameLocal.tiporetencion,this.tiporetencionivasForeignKey);

				tiporetencionivaBeanSwingJInternalFrameLocal.actualizarRelaciones(tiporetencionivaBeanSwingJInternalFrameLocal.tiporetencion);

				srifacturasproveedoresiva012Local.setTipoRetencionIva(tiporetencionivaBeanSwingJInternalFrameLocal.tiporetencion);

				this.addItemDefectoCombosForeignKeyTipoRetencionIva();
				this.cargarCombosFrameTipoRetencionIvasForeignKey("Formulario");
				this.setActualTipoRetencionIvaForeignKey(tiporetencionivaBeanSwingJInternalFrameLocal.tiporetencion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoRetencionDetalleFormJInternalFrame.class)) {
				TipoRetencionBeanSwingJInternalFrame tiporetencionivaprestaBeanSwingJInternalFrameLocal=(TipoRetencionBeanSwingJInternalFrame) ((TipoRetencionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tiporetencionivaprestaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoRetencion(tiporetencionivaprestaBeanSwingJInternalFrameLocal.gettiporetencion(),true);
				tiporetencionivaprestaBeanSwingJInternalFrameLocal.actualizarLista(tiporetencionivaprestaBeanSwingJInternalFrameLocal.tiporetencion,this.tiporetencionivaprestasForeignKey);

				tiporetencionivaprestaBeanSwingJInternalFrameLocal.actualizarRelaciones(tiporetencionivaprestaBeanSwingJInternalFrameLocal.tiporetencion);

				srifacturasproveedoresiva012Local.setTipoRetencionIvaPresta(tiporetencionivaprestaBeanSwingJInternalFrameLocal.tiporetencion);

				this.addItemDefectoCombosForeignKeyTipoRetencionIvaPresta();
				this.cargarCombosFrameTipoRetencionIvaPrestasForeignKey("Formulario");
				this.setActualTipoRetencionIvaPrestaForeignKey(tiporetencionivaprestaBeanSwingJInternalFrameLocal.tiporetencion.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarSriFacturasProveedoresIva012Actual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = srifacturasproveedoresiva012Validator.getInvalidValues(this.srifacturasproveedoresiva012);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,List<SriFacturasProveedoresIva012> srifacturasproveedoresiva012s) throws Exception {
	}		
	
	public void actualizarSelectedLista(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,List<SriFacturasProveedoresIva012> srifacturasproveedoresiva012s) throws Exception {
		try	{			
			SriFacturasProveedoresIva012ConstantesFunciones.actualizarSelectedLista(srifacturasproveedoresiva012,srifacturasproveedoresiva012s);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				srifacturasproveedoresiva012sLocal=this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				srifacturasproveedoresiva012sLocal=this.srifacturasproveedoresiva012s;
			}
			//ARCHITECTURE
		
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Local:srifacturasproveedoresiva012sLocal) {
				if(this.permiteMantenimiento(srifacturasproveedoresiva012Local) && srifacturasproveedoresiva012Local.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.getSriFacturasProveedoresIva012LabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.NOMBRETIPOCOMPROBANTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_comprobanteSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.NOMBRECOMPLETOCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_completo_clienteSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.RUCDATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelruc_datoSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.NUMERODOCUMENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnumero_documentoSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelfecha_emisionSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.FECHAREGISTROCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelfecha_registro_contableSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.NUMEROSERIE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnumero_serieSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.TOTALIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabeltotal_ivaSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.TOTALSINIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabeltotal_sin_ivaSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.IDTIPOIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelid_tipo_ivaSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.IDTIPORETENCIONIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelid_tipo_retencion_ivaSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.TRANSFEIVARETENIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabeltransfe_iva_retenidoSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.IDTIPORETENCIONIVAPRESTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.PRESTAIVARETENIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelpresta_iva_retenidoSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.NOMBRETIPORETENCIONFUENTE1)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.RETFUENTE1PORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_fuente1_porcentajeSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.RETFUENTE1RETENIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_fuente1_retenidoSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.NOMBRETIPORETENCIONFUENTE2)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.RETFUENTE2PORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_fuente2_porcentajeSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.RETFUENTE2RETENIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_fuente2_retenidoSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.NOMBRETIPORETENCIONIVA1)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_retencion_iva1SriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.RETIVABIENPORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_iva_bien_porcentajeSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.RETIVABIENRETENIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_iva_bien_retenidoSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.NOMBRETIPORETENCIONIVA2)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_retencion_iva2SriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.RETIVASERVICIOPORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_iva_servicio_porcentajeSriFacturasProveedoresIva012,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriFacturasProveedoresIva012ConstantesFunciones.RETIVASERVICIORETENIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_iva_servicio_retenidoSriFacturasProveedoresIva012,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_comprobanteSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_completo_clienteSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelruc_datoSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnumero_documentoSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelfecha_emisionSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelfecha_registro_contableSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnumero_serieSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabeltotal_ivaSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabeltotal_sin_ivaSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelid_tipo_ivaSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelid_tipo_retencion_ivaSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabeltransfe_iva_retenidoSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelpresta_iva_retenidoSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_fuente1_porcentajeSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_fuente1_retenidoSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_fuente2_porcentajeSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_fuente2_retenidoSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_retencion_iva1SriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_iva_bien_porcentajeSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_iva_bien_retenidoSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_retencion_iva2SriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_iva_servicio_porcentajeSriFacturasProveedoresIva012,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_iva_servicio_retenidoSriFacturasProveedoresIva012,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoSriFacturasProveedoresIva012--;	
		
		
		this.srifacturasproveedoresiva012Aux=new SriFacturasProveedoresIva012();
		
		this.srifacturasproveedoresiva012Aux.setId(this.iIdNuevoSriFacturasProveedoresIva012);
		this.srifacturasproveedoresiva012Aux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().add(this.srifacturasproveedoresiva012Aux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.srifacturasproveedoresiva012s.add(this.srifacturasproveedoresiva012Aux);
		}
		//ARCHITECTURE
		
		this.srifacturasproveedoresiva012=this.srifacturasproveedoresiva012Aux;
		
		if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
			this.setVariablesObjetoActualToFormularioForeignKeySriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
		}
				
		//this.setDefaultControlesSriFacturasProveedoresIva012();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeySriFacturasProveedoresIva012();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeySriFacturasProveedoresIva012();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeySriFacturasProveedoresIva012();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012Bean,this.srifacturasproveedoresiva012,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012ReturnGeneral,this.srifacturasproveedoresiva012Bean,false);
		
		if(this.srifacturasproveedoresiva012ReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeySriFacturasProveedoresIva012(this.srifacturasproveedoresiva012ReturnGeneral.getSriFacturasProveedoresIva012());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012ReturnGeneral.getSriFacturasProveedoresIva012());
		}
		
		if(this.srifacturasproveedoresiva012ReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012ReturnGeneral.getSriFacturasProveedoresIva012(),classes);//this.srifacturasproveedoresiva012Bean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeySriFacturasProveedoresIva012();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeySriFacturasProveedoresIva012();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.RecargarFormSriFacturasProveedoresIva012(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
						
			if(srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualSriFacturasProveedoresIva012();
			}
			
			this.actualizarVisualTableDatosSriFacturasProveedoresIva012();
			
			this.jTableDatosSriFacturasProveedoresIva012.setRowSelectionInterval(this.getIndiceNuevoSriFacturasProveedoresIva012(), this.getIndiceNuevoSriFacturasProveedoresIva012());
			
			this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
						
			this.actualizarEstadoCeldasBotonesSriFacturasProveedoresIva012("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesSriFacturasProveedoresIva012(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldrucSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarrucSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_comprobanteSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_comprobanteSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_completo_clienteSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_completo_clienteSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldruc_datoSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarruc_datoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_documentoSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarnumero_documentoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_emisionSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarfecha_emisionSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_registro_contableSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarfecha_registro_contableSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_serieSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarnumero_serieSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_ivaSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activartotal_ivaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_sin_ivaSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activartotal_sin_ivaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtransfe_iva_retenidoSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activartransfe_iva_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldpresta_iva_retenidoSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarpresta_iva_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente1SriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_porcentajeSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente1_porcentajeSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_retenidoSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente1_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente2SriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_porcentajeSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente2_porcentajeSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_retenidoSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente2_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva1SriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_iva1SriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_porcentajeSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_bien_porcentajeSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_retenidoSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_bien_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva2SriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_iva2SriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_porcentajeSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_servicio_porcentajeSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_retenidoSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_servicio_retenidoSriFacturasProveedoresIva012);	
		//
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarid_empresaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarid_periodo_declaraSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarid_tipo_ivaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarid_tipo_retencion_ivaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.setEnabled(isHabilitar && this.srifacturasproveedoresiva012ConstantesFunciones.activarid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012);
	};
	
	public void setDefaultControlesSriFacturasProveedoresIva012() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoSriFacturasProveedoresIva012(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.srifacturasproveedoresiva012SessionBean.setConGuardarRelaciones(true);			
			this.srifacturasproveedoresiva012SessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTabbedPaneRelacionesSriFacturasProveedoresIva012.setVisible(true);
			
					
		} else {
			//this.srifacturasproveedoresiva012SessionBean.setConGuardarRelaciones(false);			
			this.srifacturasproveedoresiva012SessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTabbedPaneRelacionesSriFacturasProveedoresIva012.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoSriFacturasProveedoresIva012() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s()) {
				if(srifacturasproveedoresiva012Aux.getId().equals(this.iIdNuevoSriFacturasProveedoresIva012)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:this.srifacturasproveedoresiva012s) {
				if(srifacturasproveedoresiva012Aux.getId().equals(this.iIdNuevoSriFacturasProveedoresIva012)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s()) {
				if(srifacturasproveedoresiva012Aux.getId().equals(srifacturasproveedoresiva012.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:this.srifacturasproveedoresiva012s) {
				if(srifacturasproveedoresiva012Aux.getId().equals(srifacturasproveedoresiva012.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Original) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s()) {
				if(srifacturasproveedoresiva012Aux.getSriFacturasProveedoresIva012Original().getId().equals(srifacturasproveedoresiva012Original.getId())) {
					existe=true;
					srifacturasproveedoresiva012Original.setId(srifacturasproveedoresiva012Aux.getId());
					srifacturasproveedoresiva012Original.setVersionRow(srifacturasproveedoresiva012Aux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:this.srifacturasproveedoresiva012s) {
				if(srifacturasproveedoresiva012Aux.getSriFacturasProveedoresIva012Original().getId().equals(srifacturasproveedoresiva012Original.getId())) {
					existe=true;
					srifacturasproveedoresiva012Original.setId(srifacturasproveedoresiva012Aux.getId());
					srifacturasproveedoresiva012Original.setVersionRow(srifacturasproveedoresiva012Aux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosSriFacturasProveedoresIva012(Boolean esParaCancelar) throws Exception {
		srifacturasproveedoresiva012sAux=new ArrayList<SriFacturasProveedoresIva012>();
		srifacturasproveedoresiva012Aux=new SriFacturasProveedoresIva012();
		
		if(!this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s()) {
					if(srifacturasproveedoresiva012Aux.getId()<0) {
						srifacturasproveedoresiva012sAux.add(srifacturasproveedoresiva012Aux);
					}		
				}
				this.iIdNuevoSriFacturasProveedoresIva012=0L;
				this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().removeAll(srifacturasproveedoresiva012sAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:this.srifacturasproveedoresiva012s) {
					if(srifacturasproveedoresiva012Aux.getId()<0) {
						srifacturasproveedoresiva012sAux.add(srifacturasproveedoresiva012Aux);
					}		
				}
				this.iIdNuevoSriFacturasProveedoresIva012=0L;
				this.srifacturasproveedoresiva012s.removeAll(srifacturasproveedoresiva012sAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoSriFacturasProveedoresIva012 
					&& this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().size()>0
					) {
					srifacturasproveedoresiva012Aux=this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().get(this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().size() - 1);
				
					if(srifacturasproveedoresiva012Aux.getId()<0) {
						this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().remove(srifacturasproveedoresiva012Aux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoSriFacturasProveedoresIva012 && this.srifacturasproveedoresiva012s.size()>0) {
					srifacturasproveedoresiva012Aux=this.srifacturasproveedoresiva012s.get(this.srifacturasproveedoresiva012s.size() - 1);
				
					if(srifacturasproveedoresiva012Aux.getId()<0) {
						this.srifacturasproveedoresiva012s.remove(srifacturasproveedoresiva012Aux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoSriFacturasProveedoresIva012(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(srifacturasproveedoresiva012.getId()<0) {
				this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().remove(this.srifacturasproveedoresiva012);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(srifacturasproveedoresiva012.getId()<0) {
				this.srifacturasproveedoresiva012s.remove(this.srifacturasproveedoresiva012);
			}
		}			
	}
	
	public void setEstadosInicialesSriFacturasProveedoresIva012(List<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sAux) throws Exception {
		SriFacturasProveedoresIva012ConstantesFunciones.setEstadosInicialesSriFacturasProveedoresIva012(srifacturasproveedoresiva012sAux);
	}
	
	public void setEstadosInicialesSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux) throws Exception {
		SriFacturasProveedoresIva012ConstantesFunciones.setEstadosInicialesSriFacturasProveedoresIva012(srifacturasproveedoresiva012Aux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarSriFacturasProveedoresIva012Actual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesSriFacturasProveedoresIva012("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarSriFacturasProveedoresIva012Actual()) {
				if(!this.isEsNuevoSriFacturasProveedoresIva012) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesSriFacturasProveedoresIva012("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoSriFacturasProveedoresIva012=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarSriFacturasProveedoresIva012Actual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Sri Facturas Proveedores Iva012 ?", "MANTENIMIENTO DE Sri Facturas Proveedores Iva012", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesSriFacturasProveedoresIva012("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(SriFacturasProveedoresIva012 srifacturasproveedoresiva012) throws Exception {
		SriFacturasProveedoresIva012ConstantesFunciones.seleccionarAsignar(this.srifacturasproveedoresiva012,srifacturasproveedoresiva012);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarSriFacturasProveedoresIva012=this.isPermisoActualizarOriginalSriFacturasProveedoresIva012;
			
			
			this.seleccionarAsignar(srifacturasproveedoresiva012);
			
			
			
			
			
			this.actualizarEstadoCeldasBotonesSriFacturasProveedoresIva012("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.srifacturasproveedoresiva012SessionBean.setsFuncionBusquedaRapida(this.srifacturasproveedoresiva012SessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoSriFacturasProveedoresIva012) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosSriFacturasProveedoresIva012(esParaCancelar);				
				this.cancelarNuevoSriFacturasProveedoresIva012(esParaCancelar);								
			}
			
			this.srifacturasproveedoresiva012=new SriFacturasProveedoresIva012();
			
			this.inicializarSriFacturasProveedoresIva012();
			
			this.actualizarEstadoCeldasBotonesSriFacturasProveedoresIva012("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarSriFacturasProveedoresIva012() throws Exception {
		try {
			SriFacturasProveedoresIva012ConstantesFunciones.inicializarSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteSriFacturasProveedoresIva012s(String sAccionBusqueda,List<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="SriFacturasProveedoresIva012"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="SriFacturasProveedoresIva012MasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("SriFacturasProveedoresIva012MasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="SriFacturasProveedoresIva012"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Sri Facturas Proveedores Iva012es");		
		parameters.put("busquedapor", SriFacturasProveedoresIva012ConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceSriFacturasProveedoresIva012=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			SriFacturasProveedoresIva012ConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			SriFacturasProveedoresIva012ConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceSriFacturasProveedoresIva012=new JRBeanArrayDataSource(SriFacturasProveedoresIva012JInternalFrame.TraerSriFacturasProveedoresIva012Beans(srifacturasproveedoresiva012sParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceSriFacturasProveedoresIva012);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+SriFacturasProveedoresIva012ConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(SriFacturasProveedoresIva012Bean.TraerSriFacturasProveedoresIva012Beans(srifacturasproveedoresiva012sParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteSriFacturasProveedoresIva012s(sAccionBusqueda,sTipoArchivoReporte,srifacturasproveedoresiva012sParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalSriFacturasProveedoresIva012s(sAccionBusqueda,sTipoArchivoReporte,srifacturasproveedoresiva012sParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoSriFacturasProveedoresIva012ActionPerformed(null);
					//this.generarExcelReporteSriFacturasProveedoresIva012s(sAccionBusqueda,sTipoArchivoReporte,srifacturasproveedoresiva012sParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalSriFacturasProveedoresIva012s(sAccionBusqueda,sTipoArchivoReporte,srifacturasproveedoresiva012sParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesSriFacturasProveedoresIva012s(sAccionBusqueda,sTipoArchivoReporte,srifacturasproveedoresiva012sParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesSriFacturasProveedoresIva012s(sAccionBusqueda,sTipoArchivoReporte,srifacturasproveedoresiva012sParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteSriFacturasProveedoresIva012s(String sAccionBusqueda,String sTipoArchivoReporte,List<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"srifacturasproveedoresiva012";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("SriFacturasProveedoresIva012s");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderSriFacturasProveedoresIva012("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012 : srifacturasproveedoresiva012sParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			SriFacturasProveedoresIva012ConstantesFunciones.generarExcelReporteDataSriFacturasProveedoresIva012("NORMAL",row,workbook,srifacturasproveedoresiva012,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri Facturas Proveedores Iva012",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderSriFacturasProveedoresIva012(String sTipo,Row row,Workbook workbook) {
		
		SriFacturasProveedoresIva012ConstantesFunciones.generarExcelReporteHeaderSriFacturasProveedoresIva012(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalSriFacturasProveedoresIva012s(String sAccionBusqueda,String sTipoArchivoReporte,List<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"srifacturasproveedoresiva012_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("SriFacturasProveedoresIva012s");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012 : srifacturasproveedoresiva012sParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.getSriFacturasProveedoresIva012Descripcion(srifacturasproveedoresiva012));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDPERIODODECLARA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDPERIODODECLARA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getperiododeclara_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUC))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUC);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getruc());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_comprobante());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getnombre_completo_cliente());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getruc_dato());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getnumero_documento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getfecha_registro_contable());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getnumero_serie());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.gettotal_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.gettotal_sin_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPOIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPOIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.gettipoiva_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.gettiporetencioniva_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.gettransfe_iva_retenido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.gettiporetencionivapresta_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getpresta_iva_retenido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente1());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getret_fuente1_porcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getret_fuente1_retenido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente2());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getret_fuente2_porcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getret_fuente2_retenido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_retencion_iva1());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getret_iva_bien_porcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getret_iva_bien_retenido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_retencion_iva2());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getret_iva_servicio_porcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(srifacturasproveedoresiva012.getret_iva_servicio_retenido());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri Facturas Proveedores Iva012",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesSriFacturasProveedoresIva012s(String sAccionBusqueda,String sTipoArchivoReporte,List<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sRespaldo=null;
		
		classes=SriFacturasProveedoresIva012ConstantesFunciones.getClassesRelationshipsOfSriFacturasProveedoresIva012(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.srifacturasproveedoresiva012Logic.setDatosCliente(this.datosCliente);
		this.srifacturasproveedoresiva012Logic.setDatosDeep(this.datosDeep);
		this.srifacturasproveedoresiva012Logic.setIsConDeep(true);
		
		srifacturasproveedoresiva012sRespaldo=this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s();
		
		this.srifacturasproveedoresiva012Logic.setSriFacturasProveedoresIva012s(srifacturasproveedoresiva012sParaReportes);	
		this.srifacturasproveedoresiva012Logic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		srifacturasproveedoresiva012sParaReportes=this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s();
		this.srifacturasproveedoresiva012Logic.setSriFacturasProveedoresIva012s(srifacturasproveedoresiva012sRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"srifacturasproveedoresiva012_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("SriFacturasProveedoresIva012s");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderSriFacturasProveedoresIva012("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012 : srifacturasproveedoresiva012sParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderSriFacturasProveedoresIva012("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			SriFacturasProveedoresIva012ConstantesFunciones.generarExcelReporteDataSriFacturasProveedoresIva012("NORMAL",row,workbook,srifacturasproveedoresiva012,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.getSriFacturasProveedoresIva012Descripcion(srifacturasproveedoresiva012));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri Facturas Proveedores Iva012",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessSriFacturasProveedoresIva012() throws Exception {		
		this.startProcessSriFacturasProveedoresIva012(true);
	}
	
	public void startProcessSriFacturasProveedoresIva012(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasSriFacturasProveedoresIva012 ,this.jPanelParametrosReportesSriFacturasProveedoresIva012, this.jScrollPanelDatosSriFacturasProveedoresIva012,this.jPanelPaginacionSriFacturasProveedoresIva012, this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012, this.jPanelAccionesSriFacturasProveedoresIva012,this.jPanelAccionesFormularioSriFacturasProveedoresIva012,this.jmenuBarSriFacturasProveedoresIva012,this.jmenuBarDetalleSriFacturasProveedoresIva012,this.jTtoolBarSriFacturasProveedoresIva012,this.jTtoolBarDetalleSriFacturasProveedoresIva012);		
		
		final JTabbedPane jTabbedPaneBusquedasSriFacturasProveedoresIva012=this.jTabbedPaneBusquedasSriFacturasProveedoresIva012; 
		
		final JPanel jPanelParametrosReportesSriFacturasProveedoresIva012=this.jPanelParametrosReportesSriFacturasProveedoresIva012;
		//final JScrollPane jScrollPanelDatosSriFacturasProveedoresIva012=this.jScrollPanelDatosSriFacturasProveedoresIva012;
		final JTable jTableDatosSriFacturasProveedoresIva012=this.jTableDatosSriFacturasProveedoresIva012;		
		final JPanel jPanelPaginacionSriFacturasProveedoresIva012=this.jPanelPaginacionSriFacturasProveedoresIva012;
		//final JScrollPane jScrollPanelDatosEdicionSriFacturasProveedoresIva012=this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012;
		final JPanel jPanelAccionesSriFacturasProveedoresIva012=this.jPanelAccionesSriFacturasProveedoresIva012;
		
		JPanel jPanelCamposAuxiliarSriFacturasProveedoresIva012=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarSriFacturasProveedoresIva012=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
			jPanelCamposAuxiliarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelCamposSriFacturasProveedoresIva012;
			jPanelAccionesFormularioAuxiliarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelAccionesFormularioSriFacturasProveedoresIva012;
		}
		
		final JPanel jPanelCamposSriFacturasProveedoresIva012=jPanelCamposAuxiliarSriFacturasProveedoresIva012;
		final JPanel jPanelAccionesFormularioSriFacturasProveedoresIva012=jPanelAccionesFormularioAuxiliarSriFacturasProveedoresIva012;
		
		
		final JMenuBar jmenuBarSriFacturasProveedoresIva012=this.jmenuBarSriFacturasProveedoresIva012;
		final JToolBar jTtoolBarSriFacturasProveedoresIva012=this.jTtoolBarSriFacturasProveedoresIva012;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarSriFacturasProveedoresIva012=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarSriFacturasProveedoresIva012=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
			jmenuBarDetalleAuxiliarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jmenuBarDetalleSriFacturasProveedoresIva012;
			jTtoolBarDetalleAuxiliarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTtoolBarDetalleSriFacturasProveedoresIva012;
		}
		
		final JMenuBar jmenuBarDetalleSriFacturasProveedoresIva012=jmenuBarDetalleAuxiliarSriFacturasProveedoresIva012;
		final JToolBar jTtoolBarDetalleSriFacturasProveedoresIva012=jTtoolBarDetalleAuxiliarSriFacturasProveedoresIva012;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasSriFacturasProveedoresIva012;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesSriFacturasProveedoresIva012;
			processRunnable.jTableDatos=jTableDatosSriFacturasProveedoresIva012;
			processRunnable.jPanelCampos=jPanelCamposSriFacturasProveedoresIva012;
			processRunnable.jPanelPaginacion=jPanelPaginacionSriFacturasProveedoresIva012;
			processRunnable.jPanelAcciones=jPanelAccionesSriFacturasProveedoresIva012;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioSriFacturasProveedoresIva012;
			
			
			processRunnable.jmenuBar=jmenuBarSriFacturasProveedoresIva012;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleSriFacturasProveedoresIva012;
			processRunnable.jTtoolBar=jTtoolBarSriFacturasProveedoresIva012;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleSriFacturasProveedoresIva012;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasSriFacturasProveedoresIva012 ,jPanelParametrosReportesSriFacturasProveedoresIva012,jTableDatosSriFacturasProveedoresIva012, /*jScrollPanelDatosSriFacturasProveedoresIva012,*/jPanelCamposSriFacturasProveedoresIva012,jPanelPaginacionSriFacturasProveedoresIva012, /*jScrollPanelDatosEdicionSriFacturasProveedoresIva012,*/ jPanelAccionesSriFacturasProveedoresIva012,jPanelAccionesFormularioSriFacturasProveedoresIva012,jmenuBarSriFacturasProveedoresIva012,jmenuBarDetalleSriFacturasProveedoresIva012,jTtoolBarSriFacturasProveedoresIva012,jTtoolBarDetalleSriFacturasProveedoresIva012);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasSriFacturasProveedoresIva012 ,jPanelParametrosReportesSriFacturasProveedoresIva012, jScrollPanelDatosSriFacturasProveedoresIva012,jPanelPaginacionSriFacturasProveedoresIva012, jScrollPanelDatosEdicionSriFacturasProveedoresIva012, jPanelAccionesSriFacturasProveedoresIva012,jPanelAccionesFormularioSriFacturasProveedoresIva012,jmenuBarSriFacturasProveedoresIva012,jmenuBarDetalleSriFacturasProveedoresIva012,jTtoolBarSriFacturasProveedoresIva012,jTtoolBarDetalleSriFacturasProveedoresIva012);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessSriFacturasProveedoresIva012() {// throws Exception 
		this.finishProcessSriFacturasProveedoresIva012(true);
	}
	
	public void finishProcessSriFacturasProveedoresIva012(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasSriFacturasProveedoresIva012 ,this.jPanelParametrosReportesSriFacturasProveedoresIva012, this.jScrollPanelDatosSriFacturasProveedoresIva012,this.jPanelPaginacionSriFacturasProveedoresIva012, this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012, this.jPanelAccionesSriFacturasProveedoresIva012,this.jPanelAccionesFormularioSriFacturasProveedoresIva012,this.jmenuBarSriFacturasProveedoresIva012,this.jmenuBarDetalleSriFacturasProveedoresIva012,this.jTtoolBarSriFacturasProveedoresIva012,this.jTtoolBarDetalleSriFacturasProveedoresIva012);		
		
		final JTabbedPane jTabbedPaneBusquedasSriFacturasProveedoresIva012=this.jTabbedPaneBusquedasSriFacturasProveedoresIva012; 
		
		final JPanel jPanelParametrosReportesSriFacturasProveedoresIva012=this.jPanelParametrosReportesSriFacturasProveedoresIva012;
		//final JScrollPane jScrollPanelDatosSriFacturasProveedoresIva012=this.jScrollPanelDatosSriFacturasProveedoresIva012;
		final JTable jTableDatosSriFacturasProveedoresIva012=this.jTableDatosSriFacturasProveedoresIva012;		
		final JPanel jPanelPaginacionSriFacturasProveedoresIva012=this.jPanelPaginacionSriFacturasProveedoresIva012;
		//final JScrollPane jScrollPanelDatosEdicionSriFacturasProveedoresIva012=this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012;
		final JPanel jPanelAccionesSriFacturasProveedoresIva012=this.jPanelAccionesSriFacturasProveedoresIva012;
		
		JPanel jPanelCamposAuxiliarSriFacturasProveedoresIva012=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarSriFacturasProveedoresIva012=new JPanel();
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
			jPanelCamposAuxiliarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelCamposSriFacturasProveedoresIva012;
			jPanelAccionesFormularioAuxiliarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelAccionesFormularioSriFacturasProveedoresIva012;
		}
		
		final JPanel jPanelCamposSriFacturasProveedoresIva012=jPanelCamposAuxiliarSriFacturasProveedoresIva012;
		final JPanel jPanelAccionesFormularioSriFacturasProveedoresIva012=jPanelAccionesFormularioAuxiliarSriFacturasProveedoresIva012;
		
		
		final JMenuBar jmenuBarSriFacturasProveedoresIva012=this.jmenuBarSriFacturasProveedoresIva012;		
		final JToolBar jTtoolBarSriFacturasProveedoresIva012=this.jTtoolBarSriFacturasProveedoresIva012;
				
		JMenuBar jmenuBarDetalleAuxiliarSriFacturasProveedoresIva012=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarSriFacturasProveedoresIva012=new JToolBar();
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
			jmenuBarDetalleAuxiliarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jmenuBarDetalleSriFacturasProveedoresIva012;
			jTtoolBarDetalleAuxiliarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTtoolBarDetalleSriFacturasProveedoresIva012;		
		}
		
		final JMenuBar jmenuBarDetalleSriFacturasProveedoresIva012=jmenuBarDetalleAuxiliarSriFacturasProveedoresIva012;
		final JToolBar jTtoolBarDetalleSriFacturasProveedoresIva012=jTtoolBarDetalleAuxiliarSriFacturasProveedoresIva012;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasSriFacturasProveedoresIva012;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesSriFacturasProveedoresIva012;
			processRunnable.jTableDatos=jTableDatosSriFacturasProveedoresIva012;
			processRunnable.jPanelCampos=jPanelCamposSriFacturasProveedoresIva012;
			processRunnable.jPanelPaginacion=jPanelPaginacionSriFacturasProveedoresIva012;
			processRunnable.jPanelAcciones=jPanelAccionesSriFacturasProveedoresIva012;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioSriFacturasProveedoresIva012;
			
			
			processRunnable.jmenuBar=jmenuBarSriFacturasProveedoresIva012;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleSriFacturasProveedoresIva012;
			processRunnable.jTtoolBar=jTtoolBarSriFacturasProveedoresIva012;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleSriFacturasProveedoresIva012;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasSriFacturasProveedoresIva012 ,jPanelParametrosReportesSriFacturasProveedoresIva012, jTableDatosSriFacturasProveedoresIva012,/*jScrollPanelDatosSriFacturasProveedoresIva012,*/jPanelCamposSriFacturasProveedoresIva012,jPanelPaginacionSriFacturasProveedoresIva012, /*jScrollPanelDatosEdicionSriFacturasProveedoresIva012,*/ jPanelAccionesSriFacturasProveedoresIva012,jPanelAccionesFormularioSriFacturasProveedoresIva012,jmenuBarSriFacturasProveedoresIva012,jmenuBarDetalleSriFacturasProveedoresIva012,jTtoolBarSriFacturasProveedoresIva012,jTtoolBarDetalleSriFacturasProveedoresIva012));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesSriFacturasProveedoresIva012(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarSriFacturasProveedoresIva012(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuSriFacturasProveedoresIva012(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarSriFacturasProveedoresIva012(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarSriFacturasProveedoresIva012,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleSriFacturasProveedoresIva012,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuSriFacturasProveedoresIva012(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarSriFacturasProveedoresIva012,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleSriFacturasProveedoresIva012,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.srifacturasproveedoresiva012ConstantesFunciones.getsFinalQuerySriFacturasProveedoresIva012();
		String  finalQueryPaginacionTodos=this.srifacturasproveedoresiva012ConstantesFunciones.getsFinalQuerySriFacturasProveedoresIva012();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=SriFacturasProveedoresIva012ConstantesFunciones.getArrayColumnasGlobalesNoSriFacturasProveedoresIva012(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=SriFacturasProveedoresIva012ConstantesFunciones.getArrayColumnasGlobalesSriFacturasProveedoresIva012(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,SriFacturasProveedoresIva012ConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.srifacturasproveedoresiva012sEliminados= new ArrayList<SriFacturasProveedoresIva012>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessSriFacturasProveedoresIva012();
		
				///*SriFacturasProveedoresIva012SessionBean*/this.srifacturasproveedoresiva012SessionBean=new SriFacturasProveedoresIva012SessionBean();
			
			if(this.srifacturasproveedoresiva012SessionBean==null) {
				this.srifacturasproveedoresiva012SessionBean=new SriFacturasProveedoresIva012SessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=SriFacturasProveedoresIva012ConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=SriFacturasProveedoresIva012ConstantesFunciones.getClassesForeignKeysOfSriFacturasProveedoresIva012(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/srifacturasproveedoresiva012."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			srifacturasproveedoresiva012sAux= new ArrayList<SriFacturasProveedoresIva012>();
			
				
			srifacturasproveedoresiva012Logic.setDatosCliente(this.datosCliente);
			srifacturasproveedoresiva012Logic.setDatosDeep(this.datosDeep);
			srifacturasproveedoresiva012Logic.setIsConDeep(true);
			
			
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
			}
			
		
			else if(sAccionBusqueda.equals("BusquedaSriFacturasProveedoresIva012")) {
				this.sDetalleReporte=SriFacturasProveedoresIva012ConstantesFunciones.getDetalleIndiceBusquedaSriFacturasProveedoresIva012(id_periodo_declaraBusquedaSriFacturasProveedoresIva012,rucBusquedaSriFacturasProveedoresIva012);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012sBusquedaSriFacturasProveedoresIva012(finalQueryGlobal,pagination,this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,id_periodo_declaraBusquedaSriFacturasProveedoresIva012,rucBusquedaSriFacturasProveedoresIva012);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriFacturasProveedoresIva012ConstantesFunciones.getDetalleIndiceBusquedaSriFacturasProveedoresIva012(id_periodo_declaraBusquedaSriFacturasProveedoresIva012,rucBusquedaSriFacturasProveedoresIva012);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriFacturasProveedoresIva012ConstantesFunciones.getDetalleIndiceBusquedaSriFacturasProveedoresIva012(id_periodo_declaraBusquedaSriFacturasProveedoresIva012,rucBusquedaSriFacturasProveedoresIva012);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s()==null||srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=srifacturasproveedoresiva012s==null|| srifacturasproveedoresiva012s.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						srifacturasproveedoresiva012sAux=new ArrayList<SriFacturasProveedoresIva012>();
						srifacturasproveedoresiva012sAux.addAll(srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							srifacturasproveedoresiva012sAux=new ArrayList<SriFacturasProveedoresIva012>();
							srifacturasproveedoresiva012sAux.addAll(srifacturasproveedoresiva012s);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012sBusquedaSriFacturasProveedoresIva012(finalQueryGlobal,pagination,this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,id_periodo_declaraBusquedaSriFacturasProveedoresIva012,rucBusquedaSriFacturasProveedoresIva012);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriFacturasProveedoresIva012ConstantesFunciones.getDetalleIndiceBusquedaSriFacturasProveedoresIva012(id_periodo_declaraBusquedaSriFacturasProveedoresIva012,rucBusquedaSriFacturasProveedoresIva012);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriFacturasProveedoresIva012ConstantesFunciones.getDetalleIndiceBusquedaSriFacturasProveedoresIva012(id_periodo_declaraBusquedaSriFacturasProveedoresIva012,rucBusquedaSriFacturasProveedoresIva012);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSriFacturasProveedoresIva012s("BusquedaSriFacturasProveedoresIva012",srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSriFacturasProveedoresIva012s("BusquedaSriFacturasProveedoresIva012",srifacturasproveedoresiva012s);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						srifacturasproveedoresiva012Logic.setSriFacturasProveedoresIva012s(new ArrayList<SriFacturasProveedoresIva012>());
						srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().addAll(srifacturasproveedoresiva012sAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							srifacturasproveedoresiva012s=new ArrayList<SriFacturasProveedoresIva012>();
							srifacturasproveedoresiva012s.addAll(srifacturasproveedoresiva012sAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesSriFacturasProveedoresIva012();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessSriFacturasProveedoresIva012();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=srifacturasproveedoresiva012s.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=srifacturasproveedoresiva012s.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(SriFacturasProveedoresIva012 srifacturasproveedoresiva012) {
		Boolean permite=true;
		
		if(this.srifacturasproveedoresiva012.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=SriFacturasProveedoresIva012ConstantesFunciones.getOrderByListaSriFacturasProveedoresIva012();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=SriFacturasProveedoresIva012ConstantesFunciones.getOrderByListaSriFacturasProveedoresIva012();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s()) {
				if(srifacturasproveedoresiva012.getsType().equals(Constantes2.S_TOTALES)) {
					srifacturasproveedoresiva012Totales=srifacturasproveedoresiva012;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:this.srifacturasproveedoresiva012s) {
				if(srifacturasproveedoresiva012.getsType().equals(Constantes2.S_TOTALES)) {
					srifacturasproveedoresiva012Totales=srifacturasproveedoresiva012;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.srifacturasproveedoresiva012Aux=new SriFacturasProveedoresIva012();
			this.srifacturasproveedoresiva012Aux.setsType(Constantes2.S_TOTALES);
			this.srifacturasproveedoresiva012Aux.setIsNew(false);
			this.srifacturasproveedoresiva012Aux.setIsChanged(false);
			this.srifacturasproveedoresiva012Aux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				//SriFacturasProveedoresIva012ConstantesFunciones.TotalizarValoresFilaSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s(),this.srifacturasproveedoresiva012Aux);
				
				//this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().add(this.srifacturasproveedoresiva012Aux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				SriFacturasProveedoresIva012ConstantesFunciones.TotalizarValoresFilaSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012s,this.srifacturasproveedoresiva012Aux);
				
				this.srifacturasproveedoresiva012s.add(this.srifacturasproveedoresiva012Aux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		srifacturasproveedoresiva012Totales=new SriFacturasProveedoresIva012();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().remove(srifacturasproveedoresiva012Totales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.srifacturasproveedoresiva012s.remove(srifacturasproveedoresiva012Totales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		srifacturasproveedoresiva012Totales=new SriFacturasProveedoresIva012();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s()) {
				if(srifacturasproveedoresiva012.getsType().equals(Constantes2.S_TOTALES)) {
					srifacturasproveedoresiva012Totales=srifacturasproveedoresiva012;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				SriFacturasProveedoresIva012ConstantesFunciones.TotalizarValoresFilaSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s(),srifacturasproveedoresiva012Totales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:this.srifacturasproveedoresiva012s) {
				if(srifacturasproveedoresiva012.getsType().equals(Constantes2.S_TOTALES)) {
					srifacturasproveedoresiva012Totales=srifacturasproveedoresiva012;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				SriFacturasProveedoresIva012ConstantesFunciones.TotalizarValoresFilaSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012s,srifacturasproveedoresiva012Totales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getSriFacturasProveedoresIva012sBusquedaSriFacturasProveedoresIva012()throws Exception {
		try {
			sAccionBusqueda="BusquedaSriFacturasProveedoresIva012";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSriFacturasProveedoresIva012sFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSriFacturasProveedoresIva012sFK_IdPeriodoDeclara()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodoDeclara";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSriFacturasProveedoresIva012sFK_IdTipoIva()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoIva";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSriFacturasProveedoresIva012sFK_IdTipoRetencionIva()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoRetencionIva";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSriFacturasProveedoresIva012sFK_IdTipoRetencionIvaPresta()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoRetencionIvaPresta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getSriFacturasProveedoresIva012sBusquedaSriFacturasProveedoresIva012(String sFinalQuery,Long id_periodo_declara,String ruc)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012sBusquedaSriFacturasProveedoresIva012(sFinalQuery,this.pagination,id_periodo_declara,ruc);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSriFacturasProveedoresIva012sFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012sFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSriFacturasProveedoresIva012sFK_IdPeriodoDeclara(String sFinalQuery,Long id_periodo_declara)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012sFK_IdPeriodoDeclara(sFinalQuery,this.pagination,id_periodo_declara);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSriFacturasProveedoresIva012sFK_IdTipoIva(String sFinalQuery,Long id_tipo_iva)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012sFK_IdTipoIva(sFinalQuery,this.pagination,id_tipo_iva);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSriFacturasProveedoresIva012sFK_IdTipoRetencionIva(String sFinalQuery,Long id_tipo_retencion_iva)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012sFK_IdTipoRetencionIva(sFinalQuery,this.pagination,id_tipo_retencion_iva);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSriFacturasProveedoresIva012sFK_IdTipoRetencionIvaPresta(String sFinalQuery,Long id_tipo_retencion_iva_presta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012sFK_IdTipoRetencionIvaPresta(sFinalQuery,this.pagination,id_tipo_retencion_iva_presta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			//this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosSriFacturasProveedoresIva012() {
		this.isPermisoTodoSriFacturasProveedoresIva012=false;
		this.isPermisoNuevoSriFacturasProveedoresIva012=false;
		this.isPermisoActualizarSriFacturasProveedoresIva012=false;
		this.isPermisoActualizarOriginalSriFacturasProveedoresIva012=false;
		this.isPermisoEliminarSriFacturasProveedoresIva012=false;
		this.isPermisoGuardarCambiosSriFacturasProveedoresIva012=false;
		this.isPermisoConsultaSriFacturasProveedoresIva012=true;
		this.isPermisoBusquedaSriFacturasProveedoresIva012=true;
		this.isPermisoReporteSriFacturasProveedoresIva012=true;
		this.isPermisoOrdenSriFacturasProveedoresIva012=false;		
		this.isPermisoPaginacionMedioSriFacturasProveedoresIva012=false;		
		this.isPermisoPaginacionAltoSriFacturasProveedoresIva012=false;		
		this.isPermisoPaginacionTodoSriFacturasProveedoresIva012=false;		
		this.isPermisoCopiarSriFacturasProveedoresIva012=false;		
		this.isPermisoVerFormSriFacturasProveedoresIva012=false;		
		this.isPermisoDuplicarSriFacturasProveedoresIva012=false;
		this.isPermisoOrdenSriFacturasProveedoresIva012=false;
	}
	
	public void setPermisosUsuarioSriFacturasProveedoresIva012(Boolean isPermiso) {
		this.isPermisoTodoSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoNuevoSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoActualizarSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoActualizarOriginalSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoEliminarSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoGuardarCambiosSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoConsultaSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoBusquedaSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoReporteSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoOrdenSriFacturasProveedoresIva012=isPermiso;		
		this.isPermisoPaginacionMedioSriFacturasProveedoresIva012=isPermiso;		
		this.isPermisoPaginacionAltoSriFacturasProveedoresIva012=isPermiso;		
		this.isPermisoPaginacionTodoSriFacturasProveedoresIva012=isPermiso;		
		this.isPermisoCopiarSriFacturasProveedoresIva012=isPermiso;		
		this.isPermisoVerFormSriFacturasProveedoresIva012=isPermiso;		
		this.isPermisoDuplicarSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoOrdenSriFacturasProveedoresIva012=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioSriFacturasProveedoresIva012(Boolean isPermiso) {
		//this.isPermisoTodoSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoNuevoSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoActualizarSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoActualizarOriginalSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoEliminarSriFacturasProveedoresIva012=isPermiso;
		this.isPermisoGuardarCambiosSriFacturasProveedoresIva012=isPermiso;
		//this.isPermisoConsultaSriFacturasProveedoresIva012=isPermiso;
		//this.isPermisoBusquedaSriFacturasProveedoresIva012=isPermiso;
		//this.isPermisoReporteSriFacturasProveedoresIva012=isPermiso;
		//this.isPermisoOrdenSriFacturasProveedoresIva012=isPermiso;		
		//this.isPermisoPaginacionMedioSriFacturasProveedoresIva012=isPermiso;		
		//this.isPermisoPaginacionAltoSriFacturasProveedoresIva012=isPermiso;		
		//this.isPermisoPaginacionTodoSriFacturasProveedoresIva012=isPermiso;		
		//this.isPermisoCopiarSriFacturasProveedoresIva012=isPermiso;		
		//this.isPermisoDuplicarSriFacturasProveedoresIva012=isPermiso;
		//this.isPermisoOrdenSriFacturasProveedoresIva012=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioSriFacturasProveedoresIva012ClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(SriFacturasProveedoresIva012JInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebSriFacturasProveedoresIva012(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioSriFacturasProveedoresIva012ClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioSriFacturasProveedoresIva012ClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionSriFacturasProveedoresIva012ClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioSriFacturasProveedoresIva012ClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioSriFacturasProveedoresIva012() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(SriFacturasProveedoresIva012JInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, SriFacturasProveedoresIva012ConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoSriFacturasProveedoresIva012=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarSriFacturasProveedoresIva012=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalSriFacturasProveedoresIva012=this.isPermisoActualizarSriFacturasProveedoresIva012;
			this.isPermisoEliminarSriFacturasProveedoresIva012=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosSriFacturasProveedoresIva012=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaSriFacturasProveedoresIva012=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaSriFacturasProveedoresIva012=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoSriFacturasProveedoresIva012=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteSriFacturasProveedoresIva012=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenSriFacturasProveedoresIva012=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioSriFacturasProveedoresIva012=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoSriFacturasProveedoresIva012=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoSriFacturasProveedoresIva012=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarSriFacturasProveedoresIva012=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormSriFacturasProveedoresIva012=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarSriFacturasProveedoresIva012=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenSriFacturasProveedoresIva012=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosSriFacturasProveedoresIva012.setToolTipText(this.jTableDatosSriFacturasProveedoresIva012.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioSriFacturasProveedoresIva012(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioSriFacturasProveedoresIva012(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(SriFacturasProveedoresIva012JInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(SriFacturasProveedoresIva012JInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioSriFacturasProveedoresIva012() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeySriFacturasProveedoresIva012Listas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.periododeclarasForeignKey=new ArrayList();
				this.tipoivasForeignKey=new ArrayList();
				this.tiporetencionivasForeignKey=new ArrayList();
				this.tiporetencionivaprestasForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeySriFacturasProveedoresIva012Listas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(SriFacturasProveedoresIva012JInternalFrame.ISLOAD_FKLOTE) {
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoDeclaraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoIvaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoRetencionIvaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoRetencionIvaPrestaListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoDeclaraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periododeclarasForeignKey==null||this.periododeclarasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoDeclaraConstantesFunciones.getArrayColumnasGlobalesPeriodoDeclara(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoDeclaraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoDeclaraConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodoDeclarasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoIvaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoivasForeignKey==null||this.tipoivasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoIvaConstantesFunciones.getArrayColumnasGlobalesTipoIva(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoIvaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoIvaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoIvasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencionIvaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tiporetencionivasForeignKey==null||this.tiporetencionivasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoRetencionConstantesFunciones.getArrayColumnasGlobalesTipoRetencion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRetencionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoRetencionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoRetencionIvasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencionIvaPrestaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tiporetencionivaprestasForeignKey==null||this.tiporetencionivaprestasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoRetencionConstantesFunciones.getArrayColumnasGlobalesTipoRetencion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRetencionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoRetencionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoRetencionIvaPrestasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	
	public void addItemDefectoCombosTodosForeignKeySriFacturasProveedoresIva012()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeyPeriodoDeclara();
			this.addItemDefectoCombosForeignKeyTipoIva();
			this.addItemDefectoCombosForeignKeyTipoRetencionIva();
			this.addItemDefectoCombosForeignKeyTipoRetencionIvaPresta();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.srifacturasproveedoresiva012SessionBean==null) {
				this.srifacturasproveedoresiva012SessionBean=new SriFacturasProveedoresIva012SessionBean();
			}

			if(!this.srifacturasproveedoresiva012SessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodoDeclara()throws Exception {
		try {

			if(!this.srifacturasproveedoresiva012SessionBean.getisBusquedaDesdeForeignKeySesionPeriodoDeclara()) {
				PeriodoDeclara periododeclara=new PeriodoDeclara();
				PeriodoDeclaraConstantesFunciones.setPeriodoDeclaraDescripcion(periododeclara,Constantes.SMENSAJE_ESCOJA_OPCION);
				periododeclara.setId(null);

				if(!PeriodoDeclaraConstantesFunciones.ExisteEnLista(this.periododeclarasForeignKey,periododeclara,true)) {

					this.periododeclarasForeignKey.add(0,periododeclara);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoIva()throws Exception {
		try {

			if(!this.srifacturasproveedoresiva012SessionBean.getisBusquedaDesdeForeignKeySesionTipoIva()) {
				TipoIva tipoiva=new TipoIva();
				TipoIvaConstantesFunciones.setTipoIvaDescripcion(tipoiva,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoiva.setId(null);

				if(!TipoIvaConstantesFunciones.ExisteEnLista(this.tipoivasForeignKey,tipoiva,true)) {

					this.tipoivasForeignKey.add(0,tipoiva);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoRetencionIva()throws Exception {
		try {

			if(!this.srifacturasproveedoresiva012SessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIva()) {
				TipoRetencion tiporetencioniva=new TipoRetencion();
				TipoRetencionConstantesFunciones.setTipoRetencionDescripcion(tiporetencioniva,Constantes.SMENSAJE_ESCOJA_OPCION);
				tiporetencioniva.setId(null);

				if(!TipoRetencionConstantesFunciones.ExisteEnLista(this.tiporetencionivasForeignKey,tiporetencioniva,true)) {

					this.tiporetencionivasForeignKey.add(0,tiporetencioniva);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoRetencionIvaPresta()throws Exception {
		try {

			if(!this.srifacturasproveedoresiva012SessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIvaPresta()) {
				TipoRetencion tiporetencionivapresta=new TipoRetencion();
				TipoRetencionConstantesFunciones.setTipoRetencionDescripcion(tiporetencionivapresta,Constantes.SMENSAJE_ESCOJA_OPCION);
				tiporetencionivapresta.setId(null);

				if(!TipoRetencionConstantesFunciones.ExisteEnLista(this.tiporetencionivaprestasForeignKey,tiporetencionivapresta,true)) {

					this.tiporetencionivaprestasForeignKey.add(0,tiporetencionivapresta);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeySriFacturasProveedoresIva012()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeySriFacturasProveedoresIva012(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeySriFacturasProveedoresIva012()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeySriFacturasProveedoresIva012();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeySriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012)throws Exception {	
		try {
			
			this.setActualTipoIvaForeignKey(srifacturasproveedoresiva012.getid_tipo_iva(),false,"Formulario");
			this.setActualTipoRetencionIvaForeignKey(srifacturasproveedoresiva012.getid_tipo_retencion_iva(),false,"Formulario");
			this.setActualTipoRetencionIvaPrestaForeignKey(srifacturasproveedoresiva012.getid_tipo_retencion_iva_presta(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeySriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,String sTipoEvento)throws Exception {	
		try {
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeySriFacturasProveedoresIva012()throws Exception {	
		try {
			
			this.setActualTipoIvaForeignKey(this.srifacturasproveedoresiva012ConstantesFunciones.getid_tipo_iva(),false,"Formulario");
			this.setActualTipoRetencionIvaForeignKey(this.srifacturasproveedoresiva012ConstantesFunciones.getid_tipo_retencion_iva(),false,"Formulario");
			this.setActualTipoRetencionIvaPrestaForeignKey(this.srifacturasproveedoresiva012ConstantesFunciones.getid_tipo_retencion_iva_presta(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeySriFacturasProveedoresIva012()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeySriFacturasProveedoresIva012()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeySriFacturasProveedoresIva012()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroSriFacturasProveedoresIva012()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeySriFacturasProveedoresIva012()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFramePeriodoDeclarasForeignKey("Todos");
			this.cargarCombosFrameTipoIvasForeignKey("Todos");
			this.cargarCombosFrameTipoRetencionIvasForeignKey("Todos");
			this.cargarCombosFrameTipoRetencionIvaPrestasForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeySriFacturasProveedoresIva012(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodoDeclarasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoIvasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoRetencionIvasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoRetencionIvaPrestasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeySriFacturasProveedoresIva012()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012.getItemCount()>0) {
				this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.getItemCount()>0) {
				this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.getItemCount()>0) {
				this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.getItemCount()>0) {
				this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.getItemCount()>0) {
				this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	










	
	

	public SriFacturasProveedoresIva012BeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public SriFacturasProveedoresIva012BeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public SriFacturasProveedoresIva012BeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.srifacturasproveedoresiva012SessionBean=new SriFacturasProveedoresIva012SessionBean(); 
		this.srifacturasproveedoresiva012ConstantesFunciones=new SriFacturasProveedoresIva012ConstantesFunciones(); 
		this.srifacturasproveedoresiva012Bean=new SriFacturasProveedoresIva012();//(this.srifacturasproveedoresiva012ConstantesFunciones); 		
		this.srifacturasproveedoresiva012ReturnGeneral=new SriFacturasProveedoresIva012ParameterReturnGeneral(); 
		
		this.srifacturasproveedoresiva012SessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.srifacturasproveedoresiva012SessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public SriFacturasProveedoresIva012BeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public SriFacturasProveedoresIva012BeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public SriFacturasProveedoresIva012BeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessSriFacturasProveedoresIva012(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.srifacturasproveedoresiva012ConstantesFunciones=new SriFacturasProveedoresIva012ConstantesFunciones(); 
			this.srifacturasproveedoresiva012Bean=new SriFacturasProveedoresIva012();//this.srifacturasproveedoresiva012ConstantesFunciones); 			
			this.srifacturasproveedoresiva012ReturnGeneral=new SriFacturasProveedoresIva012ParameterReturnGeneral(); 
		
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Sri Facturas Proveedores Iva012 Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.srifacturasproveedoresiva012=new SriFacturasProveedoresIva012();
			this.srifacturasproveedoresiva012s = new ArrayList<SriFacturasProveedoresIva012>();
			this.srifacturasproveedoresiva012sAux = new ArrayList<SriFacturasProveedoresIva012>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic=new SriFacturasProveedoresIva012Logic();
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}
			
			//this.srifacturasproveedoresiva012SessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.srifacturasproveedoresiva012SessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012);	
					}
					
					if(this.jInternalFrameImportacionSriFacturasProveedoresIva012!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionSriFacturasProveedoresIva012);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderBySriFacturasProveedoresIva012!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderBySriFacturasProveedoresIva012);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012);
				this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setVisible(false);
				this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012);
					this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.setVisible(false);
					this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionSriFacturasProveedoresIva012!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionSriFacturasProveedoresIva012);
					this.jInternalFrameImportacionSriFacturasProveedoresIva012.setVisible(false);
					this.jInternalFrameImportacionSriFacturasProveedoresIva012.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderBySriFacturasProveedoresIva012!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderBySriFacturasProveedoresIva012);
					this.jInternalFrameOrderBySriFacturasProveedoresIva012.setVisible(false);
					this.jInternalFrameOrderBySriFacturasProveedoresIva012.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idSriFacturasProveedoresIva012Actual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=SriFacturasProveedoresIva012ConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.srifacturasproveedoresiva012ReturnGeneral=new SriFacturasProveedoresIva012ParameterReturnGeneral();
			
			this.srifacturasproveedoresiva012ParameterGeneral=new SriFacturasProveedoresIva012ParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.srifacturasproveedoresiva012Logic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(SriFacturasProveedoresIva012JInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,SriFacturasProveedoresIva012ConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado(),this.srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,SriFacturasProveedoresIva012ConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado(),this.srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaDuplicarSriFacturasProveedoresIva012=true;
			this.isVisibilidadCeldaCopiarSriFacturasProveedoresIva012=true;
			this.isVisibilidadCeldaVerFormSriFacturasProveedoresIva012=true;
			this.isVisibilidadCeldaOrdenSriFacturasProveedoresIva012=true;
			this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=false;
			
			
			this.isVisibilidadBusquedaSriFacturasProveedoresIva012=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdPeriodoDeclara=true;
			this.isVisibilidadFK_IdTipoIva=true;
			this.isVisibilidadFK_IdTipoRetencionIva=true;
			this.isVisibilidadFK_IdTipoRetencionIvaPresta=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesSriFacturasProveedoresIva012("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosSriFacturasProveedoresIva012();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioSriFacturasProveedoresIva012(false);
			
			this.setPermisosUsuarioSriFacturasProveedoresIva012();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado() 
				|| (this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado() && this.srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioSriFacturasProveedoresIva012ClasesRelacionadas();
			}
			
			if(this.srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioSriFacturasProveedoresIva012ClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosSriFacturasProveedoresIva012();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualSriFacturasProveedoresIva012();
			}
			
			if(!this.isPermisoBusquedaSriFacturasProveedoresIva012) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(true,true,true);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(SriFacturasProveedoresIva012ConstantesFunciones.getTiposSeleccionarSriFacturasProveedoresIva012());
				
				this.tiposColumnasSelect=SriFacturasProveedoresIva012ConstantesFunciones.getTiposSeleccionarSriFacturasProveedoresIva012(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioSriFacturasProveedoresIva012();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,false);
				this.setAccionesUsuarioSriFacturasProveedoresIva012(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,false);							
				this.setAccionesUsuarioSriFacturasProveedoresIva012(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesSriFacturasProveedoresIva012() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.periododeclaraLogic=new PeriodoDeclaraLogic();
			this.tipoivaLogic=new TipoIvaLogic();
			this.tiporetencionivaLogic=new TipoRetencionLogic();
			this.tiporetencionivaprestaLogic=new TipoRetencionLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				srifacturasproveedoresiva012Implementable= (SriFacturasProveedoresIva012Implementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SriFacturasProveedoresIva012ConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				srifacturasproveedoresiva012ImplementableHome= (SriFacturasProveedoresIva012ImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SriFacturasProveedoresIva012ConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.srifacturasproveedoresiva012s= new ArrayList<SriFacturasProveedoresIva012>();
			this.srifacturasproveedoresiva012sEliminados= new ArrayList<SriFacturasProveedoresIva012>();
						
			this.isEsNuevoSriFacturasProveedoresIva012=false;
			this.esParaAccionDesdeFormularioSriFacturasProveedoresIva012=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.periododeclarasForeignKey=new ArrayList<PeriodoDeclara>() ;
			this.tipoivasForeignKey=new ArrayList<TipoIva>() ;
			this.tiporetencionivasForeignKey=new ArrayList<TipoRetencion>() ;
			this.tiporetencionivaprestasForeignKey=new ArrayList<TipoRetencion>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeySriFacturasProveedoresIva012(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroSriFacturasProveedoresIva012();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=SriFacturasProveedoresIva012ConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesSriFacturasProveedoresIva012("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioSriFacturasProveedoresIva012();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioSriFacturasProveedoresIva012();
			}
			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.getTabCount(); i++) {
					this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessSriFacturasProveedoresIva012(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga SriFacturasProveedoresIva012: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectSriFacturasProveedoresIva012() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesSriFacturasProveedoresIva012")) {
				iIndex=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTabbedPaneRelacionesSriFacturasProveedoresIva012.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTabbedPaneRelacionesSriFacturasProveedoresIva012.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessSriFacturasProveedoresIva012();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeySriFacturasProveedoresIva012(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeySriFacturasProveedoresIva012(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeySriFacturasProveedoresIva012(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeySriFacturasProveedoresIva012Listas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeySriFacturasProveedoresIva012();
		
		this.cargarCombosFrameForeignKeySriFacturasProveedoresIva012();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeySriFacturasProveedoresIva012();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeySriFacturasProveedoresIva012();
		}
	}
	
	

	public void cargarCombosForeignKeyPeriodoDeclara(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPeriodoDeclaraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPeriodoDeclara();
				this.cargarCombosFramePeriodoDeclarasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaPeriodoDeclara(this.periododeclarasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoIva(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoIvaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoIva();
				this.cargarCombosFrameTipoIvasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoIva(this.tipoivasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencionIva(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoRetencionIvaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoRetencionIva();
				this.cargarCombosFrameTipoRetencionIvasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoRetencionIva(this.tiporetencionivasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencionIvaPresta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoRetencionIvaPrestaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoRetencionIvaPresta();
				this.cargarCombosFrameTipoRetencionIvaPrestasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoRetencionIvaPresta(this.tiporetencionivaprestasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			
			
			if(jTableDatosSriFacturasProveedoresIva012.getRowCount()>=1) {
				jTableDatosSriFacturasProveedoresIva012.removeRowSelectionInterval(0, jTableDatosSriFacturasProveedoresIva012.getRowCount()-1);						
			}
			
			this.isEsNuevoSriFacturasProveedoresIva012=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoSriFacturasProveedoresIva012(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesSriFacturasProveedoresIva012(true);			
			//this.srifacturasproveedoresiva012=new SriFacturasProveedoresIva012();
			//this.srifacturasproveedoresiva012.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesSriFacturasProveedoresIva012(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualSriFacturasProveedoresIva012() ;
			
			if(SriFacturasProveedoresIva012JInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleSriFacturasProveedoresIva012(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.srifacturasproveedoresiva012);	
			this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);				
			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			
			if(this.srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar SriFacturasProveedoresIva012: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados=new ArrayList<SriFacturasProveedoresIva012>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosSriFacturasProveedoresIva012.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosSriFacturasProveedoresIva012.getSelectedRows().length;			
			}
			
			srifacturasproveedoresiva012sSeleccionados=this.getSriFacturasProveedoresIva012sSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoSriFacturasProveedoresIva012--;			
				//SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux= new SriFacturasProveedoresIva012();			
				//srifacturasproveedoresiva012Aux.setId(this.iIdNuevoSriFacturasProveedoresIva012);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//SriFacturasProveedoresIva012 srifacturasproveedoresiva012Origen=new SriFacturasProveedoresIva012();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Origen : srifacturasproveedoresiva012sSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							srifacturasproveedoresiva012Origen =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							srifacturasproveedoresiva012Origen =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaSriFacturasProveedoresIva012();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.srifacturasproveedoresiva012.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosSriFacturasProveedoresIva012(srifacturasproveedoresiva012Origen,this.srifacturasproveedoresiva012,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().add(this.srifacturasproveedoresiva012Aux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012s.add(this.srifacturasproveedoresiva012Aux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);
				
				this.jTableDatosSriFacturasProveedoresIva012.setRowSelectionInterval(this.getIndiceNuevoSriFacturasProveedoresIva012(), this.getIndiceNuevoSriFacturasProveedoresIva012());
				
				int iLastRow =  this.jTableDatosSriFacturasProveedoresIva012.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosSriFacturasProveedoresIva012.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosSriFacturasProveedoresIva012.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados=new ArrayList<SriFacturasProveedoresIva012>();									
		
			SriFacturasProveedoresIva012 srifacturasproveedoresiva012Origen=new SriFacturasProveedoresIva012();
			SriFacturasProveedoresIva012 srifacturasproveedoresiva012Destino=new SriFacturasProveedoresIva012();
				
			srifacturasproveedoresiva012sSeleccionados=this.getSriFacturasProveedoresIva012sSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosSriFacturasProveedoresIva012.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || srifacturasproveedoresiva012sSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosSriFacturasProveedoresIva012.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						srifacturasproveedoresiva012Origen =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						srifacturasproveedoresiva012Origen =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						srifacturasproveedoresiva012Destino =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						srifacturasproveedoresiva012Destino =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				srifacturasproveedoresiva012Origen =srifacturasproveedoresiva012sSeleccionados.get(0);
				srifacturasproveedoresiva012Destino =srifacturasproveedoresiva012sSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosSriFacturasProveedoresIva012(srifacturasproveedoresiva012Origen,srifacturasproveedoresiva012Destino,true,false);
				
				srifacturasproveedoresiva012Destino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(srifacturasproveedoresiva012Destino,srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(srifacturasproveedoresiva012Destino,srifacturasproveedoresiva012s);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);
				
				//this.jTableDatosSriFacturasProveedoresIva012.setRowSelectionInterval(this.getIndiceNuevoSriFacturasProveedoresIva012(), this.getIndiceNuevoSriFacturasProveedoresIva012());
				
				int iLastRow =  this.jTableDatosSriFacturasProveedoresIva012.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosSriFacturasProveedoresIva012.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosSriFacturasProveedoresIva012.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesSriFacturasProveedoresIva012.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesSriFacturasProveedoresIva012.setVisible(!isVisible);
			this.jPanelPaginacionSriFacturasProveedoresIva012.setVisible(!isVisible);
			this.jPanelAccionesSriFacturasProveedoresIva012.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameSriFacturasProveedoresIva012();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoSriFacturasProveedoresIva012();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionSriFacturasProveedoresIva012();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderBySriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderBySriFacturasProveedoresIva012();
			
			this.abrirFrameOrderBySriFacturasProveedoresIva012();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderBySriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderBySriFacturasProveedoresIva012();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleSriFacturasProveedoresIva012(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormSriFacturasProveedoresIva012);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.isMaximum()) {
					this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setSize(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.iWidthFormulario,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.isMaximum()) {
						this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jContentPaneDetalleSriFacturasProveedoresIva012.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTabbedPaneRelacionesSriFacturasProveedoresIva012.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jContentPaneDetalleSriFacturasProveedoresIva012.getWidth(),SriFacturasProveedoresIva012ConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTabbedPaneRelacionesSriFacturasProveedoresIva012.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jContentPaneDetalleSriFacturasProveedoresIva012.getWidth(),SriFacturasProveedoresIva012ConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTabbedPaneRelacionesSriFacturasProveedoresIva012.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jContentPaneDetalleSriFacturasProveedoresIva012.getWidth(),SriFacturasProveedoresIva012ConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setVisible(true);
	        this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderBySriFacturasProveedoresIva012() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderBySriFacturasProveedoresIva012==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderBySriFacturasProveedoresIva012=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderBySriFacturasProveedoresIva012,false,this);
				} else {
					this.jInternalFrameOrderBySriFacturasProveedoresIva012=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderBySriFacturasProveedoresIva012,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderBySriFacturasProveedoresIva012);
				this.jInternalFrameOrderBySriFacturasProveedoresIva012.setVisible(false);
				this.jInternalFrameOrderBySriFacturasProveedoresIva012.setSelected(false);
				
				this.jInternalFrameOrderBySriFacturasProveedoresIva012.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderBySriFacturasProveedoresIva012"));
				
				this.inicializarActualizarBindingTablaOrderBySriFacturasProveedoresIva012();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionSriFacturasProveedoresIva012() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionSriFacturasProveedoresIva012==null) {
				
				this.jInternalFrameImportacionSriFacturasProveedoresIva012=new ImportacionJInternalFrame(SriFacturasProveedoresIva012ConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionSriFacturasProveedoresIva012);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionSriFacturasProveedoresIva012);
				this.jInternalFrameImportacionSriFacturasProveedoresIva012.setVisible(false);
				this.jInternalFrameImportacionSriFacturasProveedoresIva012.setSelected(false);


				this.jInternalFrameImportacionSriFacturasProveedoresIva012.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionSriFacturasProveedoresIva012"));
				this.jInternalFrameImportacionSriFacturasProveedoresIva012.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionSriFacturasProveedoresIva012"));
				this.jInternalFrameImportacionSriFacturasProveedoresIva012.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionSriFacturasProveedoresIva012"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoSriFacturasProveedoresIva012() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012==null) {
				this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012=new ReporteDinamicoJInternalFrame(SriFacturasProveedoresIva012ConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012);
				this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.setVisible(false);
				this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoSriFacturasProveedoresIva012"));
				this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoSriFacturasProveedoresIva012"));
				this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoSriFacturasProveedoresIva012"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualSriFacturasProveedoresIva012();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleSriFacturasProveedoresIva012() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormSriFacturasProveedoresIva012);
			
	       	this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setVisible(false);
	        this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setSelected(false);
			
			//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.dispose();
			//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoSriFacturasProveedoresIva012() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.setVisible(true);
	        this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionSriFacturasProveedoresIva012() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionSriFacturasProveedoresIva012.setVisible(true);
	        this.jInternalFrameImportacionSriFacturasProveedoresIva012.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderBySriFacturasProveedoresIva012() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderBySriFacturasProveedoresIva012.setVisible(true);
	        this.jInternalFrameOrderBySriFacturasProveedoresIva012.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderBySriFacturasProveedoresIva012() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderBySriFacturasProveedoresIva012.setVisible(false);
	        this.jInternalFrameOrderBySriFacturasProveedoresIva012.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoSriFacturasProveedoresIva012() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.setVisible(false);
	        this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionSriFacturasProveedoresIva012() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionSriFacturasProveedoresIva012.setVisible(false);
	        this.jInternalFrameImportacionSriFacturasProveedoresIva012.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarSriFacturasProveedoresIva012(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarSriFacturasProveedoresIva012(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesSriFacturasProveedoresIva012(true);
			//this.isEsNuevoSriFacturasProveedoresIva012=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesSriFacturasProveedoresIva012("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesSriFacturasProveedoresIva012(false) ;
			
			if(srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(SriFacturasProveedoresIva012JInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleSriFacturasProveedoresIva012(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualSriFacturasProveedoresIva012(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaSriFacturasProveedoresIva012Actual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarSriFacturasProveedoresIva012(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesSriFacturasProveedoresIva012(true);
			//this.isEsNuevoSriFacturasProveedoresIva012=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.srifacturasproveedoresiva012.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesSriFacturasProveedoresIva012("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesSriFacturasProveedoresIva012(false) ;
			
			if(SriFacturasProveedoresIva012JInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleSriFacturasProveedoresIva012(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualSriFacturasProveedoresIva012(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
		} catch(Exception e) {
			throw e;
		}
	}
	
		
	
	public void recargarComboTablaPeriodoDeclara(List<PeriodoDeclara> periododeclarasForeignKey)throws Exception{
		TableColumn tableColumnPeriodoDeclara=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDPERIODODECLARA));
		TableCellEditor tableCellEditorPeriodoDeclara =tableColumnPeriodoDeclara.getCellEditor();

		PeriodoDeclaraTableCell periododeclaraTableCellFk=(PeriodoDeclaraTableCell)tableCellEditorPeriodoDeclara;

		if(periododeclaraTableCellFk!=null) {
			periododeclaraTableCellFk.setperiododeclarasForeignKey(periododeclarasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

		//if(intSelectedRow<=0) {
			//periododeclaraTableCellFk.setRowActual(intSelectedRow);
			//periododeclaraTableCellFk.setperiododeclarasForeignKeyActual(periododeclarasForeignKey);
		//}


		if(periododeclaraTableCellFk!=null) {
			periododeclaraTableCellFk.RecargarPeriodoDeclarasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoIva(List<TipoIva> tipoivasForeignKey)throws Exception{
		TableColumn tableColumnTipoIva=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPOIVA));
		TableCellEditor tableCellEditorTipoIva =tableColumnTipoIva.getCellEditor();

		TipoIvaTableCell tipoivaTableCellFk=(TipoIvaTableCell)tableCellEditorTipoIva;

		if(tipoivaTableCellFk!=null) {
			tipoivaTableCellFk.settipoivasForeignKey(tipoivasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoivaTableCellFk.setRowActual(intSelectedRow);
			//tipoivaTableCellFk.settipoivasForeignKeyActual(tipoivasForeignKey);
		//}


		if(tipoivaTableCellFk!=null) {
			tipoivaTableCellFk.RecargarTipoIvasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoRetencionIva(List<TipoRetencion> tiporetencionivasForeignKey)throws Exception{
		TableColumn tableColumnTipoRetencionIva=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVA));
		TableCellEditor tableCellEditorTipoRetencionIva =tableColumnTipoRetencionIva.getCellEditor();

		TipoRetencionTableCell tiporetencionTableCellFk=(TipoRetencionTableCell)tableCellEditorTipoRetencionIva;

		if(tiporetencionTableCellFk!=null) {
			tiporetencionTableCellFk.settiporetencionsForeignKey(tiporetencionivasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tiporetencionTableCellFk.setRowActual(intSelectedRow);
			//tiporetencionTableCellFk.settiporetencionsForeignKeyActual(tiporetencionivasForeignKey);
		//}


		if(tiporetencionTableCellFk!=null) {
			tiporetencionTableCellFk.RecargarTipoRetencionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoRetencionIvaPresta(List<TipoRetencion> tiporetencionivaprestasForeignKey)throws Exception{
		TableColumn tableColumnTipoRetencionIvaPresta=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA));
		TableCellEditor tableCellEditorTipoRetencionIvaPresta =tableColumnTipoRetencionIvaPresta.getCellEditor();

		TipoRetencionTableCell tiporetencionTableCellFk=(TipoRetencionTableCell)tableCellEditorTipoRetencionIvaPresta;

		if(tiporetencionTableCellFk!=null) {
			tiporetencionTableCellFk.settiporetencionsForeignKey(tiporetencionivaprestasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tiporetencionTableCellFk.setRowActual(intSelectedRow);
			//tiporetencionTableCellFk.settiporetencionsForeignKeyActual(tiporetencionivaprestasForeignKey);
		//}


		if(tiporetencionTableCellFk!=null) {
			tiporetencionTableCellFk.RecargarTipoRetencionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	
	public void jButtonActualizarSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesSriFacturasProveedoresIva012(false);
			
			//if(!this.isEsNuevoSriFacturasProveedoresIva012) {								
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
				this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				
			}
			
			if(this.permiteMantenimiento(this.srifacturasproveedoresiva012)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoSriFacturasProveedoresIva012=true;
					this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);
					this.isEsNuevoSriFacturasProveedoresIva012=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoSriFacturasProveedoresIva012=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoSriFacturasProveedoresIva012=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesSriFacturasProveedoresIva012(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualSriFacturasProveedoresIva012(false);
				
				this.habilitarDeshabilitarControlesSriFacturasProveedoresIva012(false);
			
												
				
				if(SriFacturasProveedoresIva012JInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleSriFacturasProveedoresIva012();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosSriFacturasProveedoresIva012.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.srifacturasproveedoresiva012.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(SriFacturasProveedoresIva012.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SriFacturasProveedoresIva012.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				this.srifacturasproveedoresiva012.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				this.srifacturasproveedoresiva012.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.srifacturasproveedoresiva012)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((SriFacturasProveedoresIva012Model) this.jTableDatosSriFacturasProveedoresIva012.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoSriFacturasProveedoresIva012=true;
				this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);
				this.isEsNuevoSriFacturasProveedoresIva012=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesSriFacturasProveedoresIva012(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualSriFacturasProveedoresIva012(false);
				
				this.habilitarDeshabilitarControlesSriFacturasProveedoresIva012(false);
				
				
				
				if(SriFacturasProveedoresIva012JInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleSriFacturasProveedoresIva012();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosSriFacturasProveedoresIva012.getRowCount()>=1) {
				jTableDatosSriFacturasProveedoresIva012.removeRowSelectionInterval(0, jTableDatosSriFacturasProveedoresIva012.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesSriFacturasProveedoresIva012(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesSriFacturasProveedoresIva012(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualSriFacturasProveedoresIva012(false) ;
			
			this.isEsNuevoSriFacturasProveedoresIva012=false;
			
			if(SriFacturasProveedoresIva012JInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleSriFacturasProveedoresIva012();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				
				//SI ES MANUAL
				if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualSriFacturasProveedoresIva012();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoSriFacturasProveedoresIva012--;			
			//SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux= new SriFacturasProveedoresIva012();			
			//srifacturasproveedoresiva012Aux.setId(this.iIdNuevoSriFacturasProveedoresIva012);
			
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaSriFacturasProveedoresIva012();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
			
			this.srifacturasproveedoresiva012.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().add(this.srifacturasproveedoresiva012Aux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.srifacturasproveedoresiva012s.add(this.srifacturasproveedoresiva012Aux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);
			
			this.jTableDatosSriFacturasProveedoresIva012.setRowSelectionInterval(this.getIndiceNuevoSriFacturasProveedoresIva012(), this.getIndiceNuevoSriFacturasProveedoresIva012());
			
			int iLastRow =  this.jTableDatosSriFacturasProveedoresIva012.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosSriFacturasProveedoresIva012.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosSriFacturasProveedoresIva012.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
			
			//SI ES MANUAL
			if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualSriFacturasProveedoresIva012();
			}
			
			//this.abrirFrameTreeSriFacturasProveedoresIva012();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionSriFacturasProveedoresIva012.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionSriFacturasProveedoresIva012.setFileImportacion(this.jInternalFrameImportacionSriFacturasProveedoresIva012.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionSriFacturasProveedoresIva012.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionSriFacturasProveedoresIva012.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionSriFacturasProveedoresIva012.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionSriFacturasProveedoresIva012.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados=new ArrayList<SriFacturasProveedoresIva012>();		

		srifacturasproveedoresiva012sSeleccionados=this.getSriFacturasProveedoresIva012sSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("SriFacturasProveedoresIva012BaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"SriFacturasProveedoresIva012BaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteSriFacturasProveedoresIva012s("Todos",srifacturasproveedoresiva012sSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri Facturas Proveedores Iva012",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreTipoComprobante_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreTipoComprobante_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreTipoComprobante_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreTipoComprobante_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreCompletoCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreCompletoCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreCompletoCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreCompletoCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cDato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cDato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cDato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cDato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroDocumento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroDocumento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroDocumento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroDocumento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaRegistroContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaRegistroContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaRegistroContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaRegistroContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroSerie_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroSerie_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroSerie_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroSerie_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talSinIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talSinIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talSinIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talSinIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPOIVA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoRetencionIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoRetencionIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoRetencionIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoRetencionIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ansfeIvaRetenido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ansfeIvaRetenido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ansfeIvaRetenido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ansfeIvaRetenido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoRetencionIvaPresta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoRetencionIvaPresta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoRetencionIvaPresta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoRetencionIvaPresta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_estaIvaRetenido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_estaIvaRetenido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_estaIvaRetenido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_estaIvaRetenido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreTipoRetencionFuente1_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreTipoRetencionFuente1_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreTipoRetencionFuente1_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreTipoRetencionFuente1_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tFuente1Porcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tFuente1Porcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tFuente1Porcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tFuente1Porcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tFuente1Retenido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tFuente1Retenido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tFuente1Retenido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tFuente1Retenido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreTipoRetencionFuente2_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreTipoRetencionFuente2_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreTipoRetencionFuente2_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreTipoRetencionFuente2_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tFuente2Porcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tFuente2Porcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tFuente2Porcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tFuente2Porcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tFuente2Retenido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tFuente2Retenido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tFuente2Retenido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tFuente2Retenido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreTipoRetencionIva1_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreTipoRetencionIva1_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreTipoRetencionIva1_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreTipoRetencionIva1_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tIvaBienPorcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tIvaBienPorcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tIvaBienPorcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tIvaBienPorcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tIvaBienRetenido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tIvaBienRetenido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tIvaBienRetenido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tIvaBienRetenido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreTipoRetencionIva2_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreTipoRetencionIva2_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreTipoRetencionIva2_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreTipoRetencionIva2_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tIvaServicioPorcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tIvaServicioPorcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tIvaServicioPorcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tIvaServicioPorcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tIvaServicioRetenido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tIvaServicioRetenido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tIvaServicioRetenido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tIvaServicioRetenido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE:
					sNombreCampoCategoria="nombre_tipo_comprobante";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE:
					sNombreCampoCategoria="nombre_completo_cliente";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO:
					sNombreCampoCategoria="ruc_dato";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO:
					sNombreCampoCategoria="numero_documento";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					sNombreCampoCategoria="fecha_registro_contable";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE:
					sNombreCampoCategoria="numero_serie";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA:
					sNombreCampoCategoria="total_iva";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA:
					sNombreCampoCategoria="total_sin_iva";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPOIVA:
					sNombreCampoCategoria="id_tipo_iva";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVA:
					sNombreCampoCategoria="id_tipo_retencion_iva";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO:
					sNombreCampoCategoria="transfe_iva_retenido";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA:
					sNombreCampoCategoria="id_tipo_retencion_iva_presta";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO:
					sNombreCampoCategoria="presta_iva_retenido";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1:
					sNombreCampoCategoria="nombre_tipo_retencion_fuente1";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE:
					sNombreCampoCategoria="ret_fuente1_porcentaje";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO:
					sNombreCampoCategoria="ret_fuente1_retenido";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2:
					sNombreCampoCategoria="nombre_tipo_retencion_fuente2";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE:
					sNombreCampoCategoria="ret_fuente2_porcentaje";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO:
					sNombreCampoCategoria="ret_fuente2_retenido";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1:
					sNombreCampoCategoria="nombre_tipo_retencion_iva1";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE:
					sNombreCampoCategoria="ret_iva_bien_porcentaje";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO:
					sNombreCampoCategoria="ret_iva_bien_retenido";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2:
					sNombreCampoCategoria="nombre_tipo_retencion_iva2";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE:
					sNombreCampoCategoria="ret_iva_servicio_porcentaje";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO:
					sNombreCampoCategoria="ret_iva_servicio_retenido";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE:
					sNombreCampoCategoriaValor="nombre_tipo_comprobante";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE:
					sNombreCampoCategoriaValor="nombre_completo_cliente";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO:
					sNombreCampoCategoriaValor="ruc_dato";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO:
					sNombreCampoCategoriaValor="numero_documento";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					sNombreCampoCategoriaValor="fecha_registro_contable";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE:
					sNombreCampoCategoriaValor="numero_serie";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA:
					sNombreCampoCategoriaValor="total_iva";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA:
					sNombreCampoCategoriaValor="total_sin_iva";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPOIVA:
					sNombreCampoCategoriaValor="id_tipo_iva";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVA:
					sNombreCampoCategoriaValor="id_tipo_retencion_iva";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO:
					sNombreCampoCategoriaValor="transfe_iva_retenido";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA:
					sNombreCampoCategoriaValor="id_tipo_retencion_iva_presta";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO:
					sNombreCampoCategoriaValor="presta_iva_retenido";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1:
					sNombreCampoCategoriaValor="nombre_tipo_retencion_fuente1";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE:
					sNombreCampoCategoriaValor="ret_fuente1_porcentaje";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO:
					sNombreCampoCategoriaValor="ret_fuente1_retenido";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2:
					sNombreCampoCategoriaValor="nombre_tipo_retencion_fuente2";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE:
					sNombreCampoCategoriaValor="ret_fuente2_porcentaje";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO:
					sNombreCampoCategoriaValor="ret_fuente2_retenido";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1:
					sNombreCampoCategoriaValor="nombre_tipo_retencion_iva1";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE:
					sNombreCampoCategoriaValor="ret_iva_bien_porcentaje";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO:
					sNombreCampoCategoriaValor="ret_iva_bien_retenido";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2:
					sNombreCampoCategoriaValor="nombre_tipo_retencion_iva2";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE:
					sNombreCampoCategoriaValor="ret_iva_servicio_porcentaje";
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO:
					sNombreCampoCategoriaValor="ret_iva_servicio_retenido";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Tipo Comprobante",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_tipo_comprobante");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Completo Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_completo_cliente");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruc Dato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ruc_dato");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Documento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_documento");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Registro Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_registro_contable");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Serie",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_serie");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_iva");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Sin Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_sin_iva");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPOIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_iva");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Retencion Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_retencion_iva");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transfe Iva Reteno",sNombreCampoCategoria,sNombreCampoCategoriaValor,"transfe_iva_retenido");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Retencion Iva Presta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_retencion_iva_presta");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Presta Iva Reteno",sNombreCampoCategoria,sNombreCampoCategoriaValor,"presta_iva_retenido");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Tipo Retencion Fuente1",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_tipo_retencion_fuente1");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ret Fuente1 Porcentaje",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ret_fuente1_porcentaje");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ret Fuente1 Reteno",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ret_fuente1_retenido");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Tipo Retencion Fuente2",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_tipo_retencion_fuente2");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ret Fuente2 Porcentaje",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ret_fuente2_porcentaje");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ret Fuente2 Reteno",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ret_fuente2_retenido");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Tipo Retencion Iva1",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_tipo_retencion_iva1");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ret Iva Bien Porcentaje",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ret_iva_bien_porcentaje");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ret Iva Bien Reteno",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ret_iva_bien_retenido");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Tipo Retencion Iva2",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_tipo_retencion_iva2");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ret Iva Servicio Porcentaje",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ret_iva_servicio_porcentaje");
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ret Iva Servicio Reteno",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ret_iva_servicio_retenido");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados=new ArrayList<SriFacturasProveedoresIva012>();		
		
		srifacturasproveedoresiva012sSeleccionados=this.getSriFacturasProveedoresIva012sSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"srifacturasproveedoresiva012";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("SriFacturasProveedoresIva012s");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDPERIODODECLARA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDPERIODODECLARA);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getperiododeclara_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUC:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUC);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getruc());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_comprobante());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getnombre_completo_cliente());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getruc_dato());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getnumero_documento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getfecha_registro_contable());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getnumero_serie());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.gettotal_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.gettotal_sin_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPOIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPOIVA);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.gettipoiva_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVA);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.gettiporetencioniva_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.gettransfe_iva_retenido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.gettiporetencionivapresta_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getpresta_iva_retenido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente1());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getret_fuente1_porcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getret_fuente1_retenido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente2());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getret_fuente2_porcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getret_fuente2_retenido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_retencion_iva1());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getret_iva_bien_porcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getret_iva_bien_retenido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_retencion_iva2());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getret_iva_servicio_porcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO);
					iRow++;

					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012:srifacturasproveedoresiva012sSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(srifacturasproveedoresiva012.getret_iva_servicio_retenido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelSriFacturasProveedoresIva012(row);				
			//	iRow++;
			//}				
			
			//for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:srifacturasproveedoresiva012sSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelSriFacturasProveedoresIva012(srifacturasproveedoresiva012Aux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri Facturas Proveedores Iva012",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
			
			//SI ES MANUAL
			if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualSriFacturasProveedoresIva012();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
			
			//SI ES MANUAL
			if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualSriFacturasProveedoresIva012();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
			
			//SI ES MANUAL
			if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualSriFacturasProveedoresIva012();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaSriFacturasProveedoresIva012() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosSriFacturasProveedoresIva012.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosSriFacturasProveedoresIva012.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosSriFacturasProveedoresIva012.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosSriFacturasProveedoresIva012.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosSriFacturasProveedoresIva012.setMinimumSize(dimensionMinimum);
		this.jTableDatosSriFacturasProveedoresIva012.setMaximumSize(dimensionMaximum);
		this.jTableDatosSriFacturasProveedoresIva012.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingSriFacturasProveedoresIva012(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingSriFacturasProveedoresIva012(esInicializar,true);
	}
	
	public void inicializarActualizarBindingSriFacturasProveedoresIva012(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesSriFacturasProveedoresIva012(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasSriFacturasProveedoresIva012(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesSriFacturasProveedoresIva012(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesSriFacturasProveedoresIva012(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualSriFacturasProveedoresIva012() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012();
		
		this.inicializarActualizarBindingBotonesManualSriFacturasProveedoresIva012(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualSriFacturasProveedoresIva012();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesSriFacturasProveedoresIva012() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualSriFacturasProveedoresIva012(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualSriFacturasProveedoresIva012(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosSriFacturasProveedoresIva012.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosSriFacturasProveedoresIva012.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteSriFacturasProveedoresIva012.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jCheckBoxPostAccionNuevoSriFacturasProveedoresIva012.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jCheckBoxPostAccionSinCerrarSriFacturasProveedoresIva012.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jCheckBoxPostAccionSinMensajeSriFacturasProveedoresIva012.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosSriFacturasProveedoresIva012.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosSriFacturasProveedoresIva012.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteSriFacturasProveedoresIva012.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
				this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jCheckBoxPostAccionNuevoSriFacturasProveedoresIva012.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jCheckBoxPostAccionSinCerrarSriFacturasProveedoresIva012.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jCheckBoxPostAccionSinMensajeSriFacturasProveedoresIva012.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionSriFacturasProveedoresIva012.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionSriFacturasProveedoresIva012.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesSriFacturasProveedoresIva012.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesSriFacturasProveedoresIva012.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarSriFacturasProveedoresIva012.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesSriFacturasProveedoresIva012.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesSriFacturasProveedoresIva012.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralSriFacturasProveedoresIva012.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesSriFacturasProveedoresIva012(Boolean esInicializar) throws Exception {
		try	{	
			if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualSriFacturasProveedoresIva012(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesSriFacturasProveedoresIva012() throws Exception {
		try	{
			if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualSriFacturasProveedoresIva012();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleSriFacturasProveedoresIva012() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualSriFacturasProveedoresIva012() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesSriFacturasProveedoresIva012.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesSriFacturasProveedoresIva012.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesSriFacturasProveedoresIva012.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesSriFacturasProveedoresIva012.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesSriFacturasProveedoresIva012.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesSriFacturasProveedoresIva012.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionSriFacturasProveedoresIva012.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionSriFacturasProveedoresIva012.addItem(reporte);
			}
			
			
			if(!this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionSriFacturasProveedoresIva012.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionSriFacturasProveedoresIva012.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesSriFacturasProveedoresIva012.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesSriFacturasProveedoresIva012.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarSriFacturasProveedoresIva012.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarSriFacturasProveedoresIva012.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarSriFacturasProveedoresIva012.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualSriFacturasProveedoresIva012();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualSriFacturasProveedoresIva012() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012!=null) {
				this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012!=null) {
				this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012!=null) {
				
				if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=SriFacturasProveedoresIva012ConstantesFunciones.getTiposSeleccionarSriFacturasProveedoresIva012(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=SriFacturasProveedoresIva012ConstantesFunciones.getTiposSeleccionarSriFacturasProveedoresIva012(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=SriFacturasProveedoresIva012ConstantesFunciones.getTiposSeleccionarSriFacturasProveedoresIva012(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualSriFacturasProveedoresIva012()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_periodo_declaraBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012.getSelectedItem()!=null){this.id_periodo_declaraBusquedaSriFacturasProveedoresIva012=((PeriodoDeclara)this.jComboBoxid_periodo_declaraBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012.getSelectedItem()).getId();}
		this.rucBusquedaSriFacturasProveedoresIva012=this.jTextFieldrucBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012.getText();
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasSriFacturasProveedoresIva012(Boolean esInicializar) throws Exception {				
		if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualSriFacturasProveedoresIva012();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaSriFacturasProveedoresIva012() throws Exception {
		this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderBySriFacturasProveedoresIva012() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderBySriFacturasProveedoresIva012.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderBySriFacturasProveedoresIva012.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderBySriFacturasProveedoresIva012.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderBySriFacturasProveedoresIva012.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderBySriFacturasProveedoresIva012.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosSriFacturasProveedoresIva012OrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012OrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderBySriFacturasProveedoresIva012.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderBySriFacturasProveedoresIva012.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderBySriFacturasProveedoresIva012.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaSriFacturasProveedoresIva012(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=srifacturasproveedoresiva012s.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosSriFacturasProveedoresIva012.setModel(new SriFacturasProveedoresIva012Model(this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosSriFacturasProveedoresIva012.setModel(new SriFacturasProveedoresIva012Model(this.srifacturasproveedoresiva012s,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderBySriFacturasProveedoresIva012!=null && this.jInternalFrameOrderBySriFacturasProveedoresIva012.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderBySriFacturasProveedoresIva012();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+SriFacturasProveedoresIva012ConstantesFunciones.SCLASSWEBTITULO,srifacturasproveedoresiva012ConstantesFunciones.resaltarSeleccionarSriFacturasProveedoresIva012,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+SriFacturasProveedoresIva012ConstantesFunciones.SCLASSWEBTITULO,srifacturasproveedoresiva012ConstantesFunciones.resaltarSeleccionarSriFacturasProveedoresIva012,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_ID));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostraridSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltaridSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activaridSriFacturasProveedoresIva012,iSizeTabla,this,true,"idSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltaridSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activaridSriFacturasProveedoresIva012,this,true,"idSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_comprobanteSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_comprobanteSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_comprobanteSriFacturasProveedoresIva012,iSizeTabla,this,true,"nombre_tipo_comprobanteSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_comprobanteSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_comprobanteSriFacturasProveedoresIva012,this,true,"nombre_tipo_comprobanteSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_completo_clienteSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_completo_clienteSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_completo_clienteSriFacturasProveedoresIva012,iSizeTabla,this,true,"nombre_completo_clienteSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_completo_clienteSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_completo_clienteSriFacturasProveedoresIva012,this,true,"nombre_completo_clienteSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarruc_datoSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarruc_datoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarruc_datoSriFacturasProveedoresIva012,iSizeTabla,this,true,"ruc_datoSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarruc_datoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarruc_datoSriFacturasProveedoresIva012,this,true,"ruc_datoSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnumero_documentoSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnumero_documentoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnumero_documentoSriFacturasProveedoresIva012,iSizeTabla,this,true,"numero_documentoSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnumero_documentoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnumero_documentoSriFacturasProveedoresIva012,this,true,"numero_documentoSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarfecha_emisionSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarfecha_emisionSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarfecha_emisionSriFacturasProveedoresIva012,iSizeTabla,this,true,"fecha_emisionSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarfecha_emisionSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarfecha_emisionSriFacturasProveedoresIva012,this,true,"fecha_emisionSriFacturasProveedoresIva012","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarfecha_registro_contableSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarfecha_registro_contableSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarfecha_registro_contableSriFacturasProveedoresIva012,iSizeTabla,this,true,"fecha_registro_contableSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarfecha_registro_contableSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarfecha_registro_contableSriFacturasProveedoresIva012,this,true,"fecha_registro_contableSriFacturasProveedoresIva012","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnumero_serieSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnumero_serieSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnumero_serieSriFacturasProveedoresIva012,iSizeTabla,this,true,"numero_serieSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnumero_serieSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnumero_serieSriFacturasProveedoresIva012,this,true,"numero_serieSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrartotal_ivaSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltartotal_ivaSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activartotal_ivaSriFacturasProveedoresIva012,iSizeTabla,this,true,"total_ivaSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltartotal_ivaSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activartotal_ivaSriFacturasProveedoresIva012,this,true,"total_ivaSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrartotal_sin_ivaSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltartotal_sin_ivaSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activartotal_sin_ivaSriFacturasProveedoresIva012,iSizeTabla,this,true,"total_sin_ivaSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltartotal_sin_ivaSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activartotal_sin_ivaSriFacturasProveedoresIva012,this,true,"total_sin_ivaSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPOIVA));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarid_tipo_ivaSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPOIVA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoIvaTableCell(this.tipoivasForeignKey,this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_tipo_ivaSriFacturasProveedoresIva012,this,this.srifacturasproveedoresiva012ConstantesFunciones.activarid_tipo_ivaSriFacturasProveedoresIva012,iSizeTabla));
			tableColumn.setCellEditor(new TipoIvaTableCell(this.tipoivasForeignKey,this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_tipo_ivaSriFacturasProveedoresIva012,this,this.srifacturasproveedoresiva012ConstantesFunciones.activarid_tipo_ivaSriFacturasProveedoresIva012,true,"id_tipo_ivaSriFacturasProveedoresIva012","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVA));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarid_tipo_retencion_ivaSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoRetencionTableCell(this.tiporetencionivasForeignKey,this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_tipo_retencion_ivaSriFacturasProveedoresIva012,this,this.srifacturasproveedoresiva012ConstantesFunciones.activarid_tipo_retencion_ivaSriFacturasProveedoresIva012,iSizeTabla));
			tableColumn.setCellEditor(new TipoRetencionTableCell(this.tiporetencionivasForeignKey,this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_tipo_retencion_ivaSriFacturasProveedoresIva012,this,this.srifacturasproveedoresiva012ConstantesFunciones.activarid_tipo_retencion_ivaSriFacturasProveedoresIva012,true,"id_tipo_retencion_ivaSriFacturasProveedoresIva012","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrartransfe_iva_retenidoSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltartransfe_iva_retenidoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activartransfe_iva_retenidoSriFacturasProveedoresIva012,iSizeTabla,this,true,"transfe_iva_retenidoSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltartransfe_iva_retenidoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activartransfe_iva_retenidoSriFacturasProveedoresIva012,this,true,"transfe_iva_retenidoSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoRetencionTableCell(this.tiporetencionivaprestasForeignKey,this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012,this,this.srifacturasproveedoresiva012ConstantesFunciones.activarid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012,iSizeTabla));
			tableColumn.setCellEditor(new TipoRetencionTableCell(this.tiporetencionivaprestasForeignKey,this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012,this,this.srifacturasproveedoresiva012ConstantesFunciones.activarid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012,true,"id_tipo_retencion_iva_prestaSriFacturasProveedoresIva012","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarpresta_iva_retenidoSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarpresta_iva_retenidoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarpresta_iva_retenidoSriFacturasProveedoresIva012,iSizeTabla,this,true,"presta_iva_retenidoSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarpresta_iva_retenidoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarpresta_iva_retenidoSriFacturasProveedoresIva012,this,true,"presta_iva_retenidoSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012,iSizeTabla,this,true,"nombre_tipo_retencion_fuente1SriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012,this,true,"nombre_tipo_retencion_fuente1SriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_fuente1_porcentajeSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente1_porcentajeSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente1_porcentajeSriFacturasProveedoresIva012,iSizeTabla,this,true,"ret_fuente1_porcentajeSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente1_porcentajeSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente1_porcentajeSriFacturasProveedoresIva012,this,true,"ret_fuente1_porcentajeSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_fuente1_retenidoSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente1_retenidoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente1_retenidoSriFacturasProveedoresIva012,iSizeTabla,this,true,"ret_fuente1_retenidoSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente1_retenidoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente1_retenidoSriFacturasProveedoresIva012,this,true,"ret_fuente1_retenidoSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012,iSizeTabla,this,true,"nombre_tipo_retencion_fuente2SriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012,this,true,"nombre_tipo_retencion_fuente2SriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_fuente2_porcentajeSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente2_porcentajeSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente2_porcentajeSriFacturasProveedoresIva012,iSizeTabla,this,true,"ret_fuente2_porcentajeSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente2_porcentajeSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente2_porcentajeSriFacturasProveedoresIva012,this,true,"ret_fuente2_porcentajeSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_fuente2_retenidoSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente2_retenidoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente2_retenidoSriFacturasProveedoresIva012,iSizeTabla,this,true,"ret_fuente2_retenidoSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente2_retenidoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente2_retenidoSriFacturasProveedoresIva012,this,true,"ret_fuente2_retenidoSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_retencion_iva1SriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_iva1SriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_iva1SriFacturasProveedoresIva012,iSizeTabla,this,true,"nombre_tipo_retencion_iva1SriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_iva1SriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_iva1SriFacturasProveedoresIva012,this,true,"nombre_tipo_retencion_iva1SriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_iva_bien_porcentajeSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_bien_porcentajeSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_bien_porcentajeSriFacturasProveedoresIva012,iSizeTabla,this,true,"ret_iva_bien_porcentajeSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_bien_porcentajeSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_bien_porcentajeSriFacturasProveedoresIva012,this,true,"ret_iva_bien_porcentajeSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_iva_bien_retenidoSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_bien_retenidoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_bien_retenidoSriFacturasProveedoresIva012,iSizeTabla,this,true,"ret_iva_bien_retenidoSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_bien_retenidoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_bien_retenidoSriFacturasProveedoresIva012,this,true,"ret_iva_bien_retenidoSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_retencion_iva2SriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_iva2SriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_iva2SriFacturasProveedoresIva012,iSizeTabla,this,true,"nombre_tipo_retencion_iva2SriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_iva2SriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_iva2SriFacturasProveedoresIva012,this,true,"nombre_tipo_retencion_iva2SriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_iva_servicio_porcentajeSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_servicio_porcentajeSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_servicio_porcentajeSriFacturasProveedoresIva012,iSizeTabla,this,true,"ret_iva_servicio_porcentajeSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_servicio_porcentajeSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_servicio_porcentajeSriFacturasProveedoresIva012,this,true,"ret_iva_servicio_porcentajeSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO));

		if(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_iva_servicio_retenidoSriFacturasProveedoresIva012 && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_servicio_retenidoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_servicio_retenidoSriFacturasProveedoresIva012,iSizeTabla,this,true,"ret_iva_servicio_retenidoSriFacturasProveedoresIva012","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_servicio_retenidoSriFacturasProveedoresIva012,this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_servicio_retenidoSriFacturasProveedoresIva012,this,true,"ret_iva_servicio_retenidoSriFacturasProveedoresIva012","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriFacturasProveedoresIva012PropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosSriFacturasProveedoresIva012.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosSriFacturasProveedoresIva012.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarSriFacturasProveedoresIva012 && this.isPermisoGuardarCambiosSriFacturasProveedoresIva012) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosSriFacturasProveedoresIva012.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosSriFacturasProveedoresIva012.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarSriFacturasProveedoresIva012 && this.isPermisoGuardarCambiosSriFacturasProveedoresIva012) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarSriFacturasProveedoresIva012 && this.isPermisoGuardarCambiosSriFacturasProveedoresIva012) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosSriFacturasProveedoresIva012.moveColumn(this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosSriFacturasProveedoresIva012.moveColumn(this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosSriFacturasProveedoresIva012.moveColumn(this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosSriFacturasProveedoresIva012.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosSriFacturasProveedoresIva012.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosSriFacturasProveedoresIva012,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosSriFacturasProveedoresIva012.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosSriFacturasProveedoresIva012.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosSriFacturasProveedoresIva012.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							//iSize=srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=srifacturasproveedoresiva012s.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosSriFacturasProveedoresIva012.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosSriFacturasProveedoresIva012.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosSriFacturasProveedoresIva012();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoSriFacturasProveedoresIva012=false;
					
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			
				if(this.srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosSriFacturasProveedoresIva012.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.srifacturasproveedoresiva012.getsType().equals("DUPLICADO")
				   || this.srifacturasproveedoresiva012.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoSriFacturasProveedoresIva012=true;
				
				} else {
					this.isEsNuevoSriFacturasProveedoresIva012=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
					if(this.srifacturasproveedoresiva012.getId()>=0 && !this.srifacturasproveedoresiva012.getIsNew()) {						
						this.isEsNuevoSriFacturasProveedoresIva012=false;
						
					} else {
						this.isEsNuevoSriFacturasProveedoresIva012=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoSriFacturasProveedoresIva012(esRelaciones);						
				
				this.seleccionarSriFacturasProveedoresIva012(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.srifacturasproveedoresiva012.getId()<0) {
					this.isEsNuevoSriFacturasProveedoresIva012=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarSriFacturasProveedoresIva012(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarSriFacturasProveedoresIva012(evt,rowIndex);
				}	
				
				if(this.srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion SriFacturasProveedoresIva012: " + this.dDif); 
					}
				}								
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarSriFacturasProveedoresIva012(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.srifacturasproveedoresiva012)) {
					if(this.srifacturasproveedoresiva012.getId()>0) {
						this.srifacturasproveedoresiva012.setIsDeleted(true);
						
						this.srifacturasproveedoresiva012sEliminados.add(this.srifacturasproveedoresiva012);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().remove(this.srifacturasproveedoresiva012);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012s.remove(this.srifacturasproveedoresiva012);				
					}
					
					
					((SriFacturasProveedoresIva012Model) this.jTableDatosSriFacturasProveedoresIva012.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarSriFacturasProveedoresIva012(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoSriFacturasProveedoresIva012) {
			
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosSriFacturasProveedoresIva012.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}
				
				//ARCHITECTURE
				try {
					

					//TipoIva
					if(!this.srifacturasproveedoresiva012ConstantesFunciones.cargarid_tipo_ivaSriFacturasProveedoresIva012 || this.srifacturasproveedoresiva012ConstantesFunciones.event_dependid_tipo_ivaSriFacturasProveedoresIva012) {
						//this.cargarCombosTipoIvasForeignKeyLista(" where id="+this.srifacturasproveedoresiva012.getid_tipo_iva());
									//this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
						this.tipoivasForeignKey=new ArrayList<TipoIva>();

						if(srifacturasproveedoresiva012.getTipoIva()!=null) {
							this.tipoivasForeignKey.add(srifacturasproveedoresiva012.getTipoIva());
						}

						this.addItemDefectoCombosForeignKeyTipoIva();
						this.cargarCombosFrameTipoIvasForeignKey("Todos");
					}
					this.setActualTipoIvaForeignKey(this.srifacturasproveedoresiva012.getid_tipo_iva(),false,"Formulario");

					//TipoRetencionIva
					if(!this.srifacturasproveedoresiva012ConstantesFunciones.cargarid_tipo_retencion_ivaSriFacturasProveedoresIva012 || this.srifacturasproveedoresiva012ConstantesFunciones.event_dependid_tipo_retencion_ivaSriFacturasProveedoresIva012) {
						//this.cargarCombosTipoRetencionIvasForeignKeyLista(" where id="+this.srifacturasproveedoresiva012.getid_tipo_retencion_iva());
									//this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
						this.tiporetencionivasForeignKey=new ArrayList<TipoRetencion>();

						if(srifacturasproveedoresiva012.getTipoRetencionIva()!=null) {
							this.tiporetencionivasForeignKey.add(srifacturasproveedoresiva012.getTipoRetencionIva());
						}

						this.addItemDefectoCombosForeignKeyTipoRetencionIva();
						this.cargarCombosFrameTipoRetencionIvasForeignKey("Todos");
					}
					this.setActualTipoRetencionIvaForeignKey(this.srifacturasproveedoresiva012.getid_tipo_retencion_iva(),false,"Formulario");

					//TipoRetencionIvaPresta
					if(!this.srifacturasproveedoresiva012ConstantesFunciones.cargarid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012 || this.srifacturasproveedoresiva012ConstantesFunciones.event_dependid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012) {
						//this.cargarCombosTipoRetencionIvaPrestasForeignKeyLista(" where id="+this.srifacturasproveedoresiva012.getid_tipo_retencion_iva_presta());
									//this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
						this.tiporetencionivaprestasForeignKey=new ArrayList<TipoRetencion>();

						if(srifacturasproveedoresiva012.getTipoRetencionIvaPresta()!=null) {
							this.tiporetencionivaprestasForeignKey.add(srifacturasproveedoresiva012.getTipoRetencionIvaPresta());
						}

						this.addItemDefectoCombosForeignKeyTipoRetencionIvaPresta();
						this.cargarCombosFrameTipoRetencionIvaPrestasForeignKey("Todos");
					}
					this.setActualTipoRetencionIvaPrestaForeignKey(this.srifacturasproveedoresiva012.getid_tipo_retencion_iva_presta(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesSriFacturasProveedoresIva012("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesSriFacturasProveedoresIva012(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualSriFacturasProveedoresIva012() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoSriFacturasProveedoresIva012(srifacturasproveedoresiva012,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioSriFacturasProveedoresIva012(srifacturasproveedoresiva012);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeySriFacturasProveedoresIva012(srifacturasproveedoresiva012,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeySriFacturasProveedoresIva012(srifacturasproveedoresiva012);
	}
	
	public void setVariablesObjetoActualToFormularioSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelidSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getId().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_comprobanteSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnombre_tipo_comprobante());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_completo_clienteSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnombre_completo_cliente());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldruc_datoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getruc_dato());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_documentoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnumero_documento());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_emisionSriFacturasProveedoresIva012.setDate(srifacturasproveedoresiva012.getfecha_emision());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_registro_contableSriFacturasProveedoresIva012.setDate(srifacturasproveedoresiva012.getfecha_registro_contable());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_serieSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnumero_serie());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_ivaSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.gettotal_iva().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_sin_ivaSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtransfe_iva_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.gettransfe_iva_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldpresta_iva_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getpresta_iva_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente1SriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente1());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_porcentajeSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_fuente1_porcentaje().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_fuente1_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente2SriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente2());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_porcentajeSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_fuente2_porcentaje().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_fuente2_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva1SriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnombre_tipo_retencion_iva1());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_porcentajeSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_iva_bien_porcentaje().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_iva_bien_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva2SriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnombre_tipo_retencion_iva2());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_porcentajeSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_iva_servicio_porcentaje().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_iva_servicio_retenido().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,SriFacturasProveedoresIva012 srifacturasproveedoresiva012Local) throws Exception {
		this.actualizarInformacion(sTipo,false,srifacturasproveedoresiva012Local);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,SriFacturasProveedoresIva012 srifacturasproveedoresiva012Local) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				srifacturasproveedoresiva012Local=this.srifacturasproveedoresiva012;
			} else {
				srifacturasproveedoresiva012Local=this.srifacturasproveedoresiva012Anterior;
			}
		}
		
		if(this.permiteMantenimiento(srifacturasproveedoresiva012Local)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoSriFacturasProveedoresIva012(srifacturasproveedoresiva012Local,true);
					
					if(srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(srifacturasproveedoresiva012Local);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(srifacturasproveedoresiva012Local);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(srifacturasproveedoresiva012,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(srifacturasproveedoresiva012);
	}
	
	public void setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(srifacturasproveedoresiva012,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelidSriFacturasProveedoresIva012.getText()==null || this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelidSriFacturasProveedoresIva012.getText()=="" || this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelidSriFacturasProveedoresIva012.getText()=="Id") {
				this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelidSriFacturasProveedoresIva012.setText("0");
			}

			if(conColumnasBase) {srifacturasproveedoresiva012.setId(Long.parseLong(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelidSriFacturasProveedoresIva012.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelIdSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setnombre_tipo_comprobante(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_comprobanteSriFacturasProveedoresIva012.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_comprobanteSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setnombre_completo_cliente(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_completo_clienteSriFacturasProveedoresIva012.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_completo_clienteSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setruc_dato(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldruc_datoSriFacturasProveedoresIva012.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelruc_datoSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setnumero_documento(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_documentoSriFacturasProveedoresIva012.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnumero_documentoSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setfecha_emision(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_emisionSriFacturasProveedoresIva012.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelfecha_emisionSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setfecha_registro_contable(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_registro_contableSriFacturasProveedoresIva012.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelfecha_registro_contableSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setnumero_serie(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_serieSriFacturasProveedoresIva012.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnumero_serieSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.settotal_iva(Double.parseDouble(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_ivaSriFacturasProveedoresIva012.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabeltotal_ivaSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.settotal_sin_iva(Double.parseDouble(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_sin_ivaSriFacturasProveedoresIva012.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabeltotal_sin_ivaSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.settransfe_iva_retenido(Double.parseDouble(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtransfe_iva_retenidoSriFacturasProveedoresIva012.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabeltransfe_iva_retenidoSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setpresta_iva_retenido(Double.parseDouble(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldpresta_iva_retenidoSriFacturasProveedoresIva012.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelpresta_iva_retenidoSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setnombre_tipo_retencion_fuente1(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente1SriFacturasProveedoresIva012.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setret_fuente1_porcentaje(Double.parseDouble(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_porcentajeSriFacturasProveedoresIva012.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_fuente1_porcentajeSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setret_fuente1_retenido(Double.parseDouble(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_retenidoSriFacturasProveedoresIva012.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_fuente1_retenidoSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setnombre_tipo_retencion_fuente2(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente2SriFacturasProveedoresIva012.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setret_fuente2_porcentaje(Double.parseDouble(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_porcentajeSriFacturasProveedoresIva012.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_fuente2_porcentajeSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setret_fuente2_retenido(Double.parseDouble(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_retenidoSriFacturasProveedoresIva012.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_fuente2_retenidoSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setnombre_tipo_retencion_iva1(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva1SriFacturasProveedoresIva012.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_retencion_iva1SriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setret_iva_bien_porcentaje(Double.parseDouble(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_porcentajeSriFacturasProveedoresIva012.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_iva_bien_porcentajeSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setret_iva_bien_retenido(Double.parseDouble(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_retenidoSriFacturasProveedoresIva012.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_iva_bien_retenidoSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setnombre_tipo_retencion_iva2(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva2SriFacturasProveedoresIva012.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelnombre_tipo_retencion_iva2SriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setret_iva_servicio_porcentaje(Double.parseDouble(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_porcentajeSriFacturasProveedoresIva012.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_iva_servicio_porcentajeSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			srifacturasproveedoresiva012.setret_iva_servicio_retenido(Double.parseDouble(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_retenidoSriFacturasProveedoresIva012.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelret_iva_servicio_retenidoSriFacturasProveedoresIva012,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Bean,SriFacturasProveedoresIva012 srifacturasproveedoresiva012,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Bean.getid_tipo_iva()!=null && !srifacturasproveedoresiva012Bean.getid_tipo_iva().equals(-1L))) {srifacturasproveedoresiva012.setid_tipo_iva(srifacturasproveedoresiva012Bean.getid_tipo_iva());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Bean.getid_tipo_retencion_iva()!=null && !srifacturasproveedoresiva012Bean.getid_tipo_retencion_iva().equals(-1L))) {srifacturasproveedoresiva012.setid_tipo_retencion_iva(srifacturasproveedoresiva012Bean.getid_tipo_retencion_iva());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Bean.getid_tipo_retencion_iva_presta()!=null && !srifacturasproveedoresiva012Bean.getid_tipo_retencion_iva_presta().equals(-1L))) {srifacturasproveedoresiva012.setid_tipo_retencion_iva_presta(srifacturasproveedoresiva012Bean.getid_tipo_retencion_iva_presta());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Origen,SriFacturasProveedoresIva012 srifacturasproveedoresiva012,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getId()!=null && !srifacturasproveedoresiva012Origen.getId().equals(0L))) {srifacturasproveedoresiva012.setId(srifacturasproveedoresiva012Origen.getId());}}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getruc()!=null && !srifacturasproveedoresiva012Origen.getruc().equals(""))) {srifacturasproveedoresiva012.setruc(srifacturasproveedoresiva012Origen.getruc());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getnombre_tipo_comprobante()!=null && !srifacturasproveedoresiva012Origen.getnombre_tipo_comprobante().equals(""))) {srifacturasproveedoresiva012.setnombre_tipo_comprobante(srifacturasproveedoresiva012Origen.getnombre_tipo_comprobante());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getnombre_completo_cliente()!=null && !srifacturasproveedoresiva012Origen.getnombre_completo_cliente().equals(""))) {srifacturasproveedoresiva012.setnombre_completo_cliente(srifacturasproveedoresiva012Origen.getnombre_completo_cliente());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getruc_dato()!=null && !srifacturasproveedoresiva012Origen.getruc_dato().equals(""))) {srifacturasproveedoresiva012.setruc_dato(srifacturasproveedoresiva012Origen.getruc_dato());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getnumero_documento()!=null && !srifacturasproveedoresiva012Origen.getnumero_documento().equals(""))) {srifacturasproveedoresiva012.setnumero_documento(srifacturasproveedoresiva012Origen.getnumero_documento());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getfecha_emision()!=null && !srifacturasproveedoresiva012Origen.getfecha_emision().equals(new Date()))) {srifacturasproveedoresiva012.setfecha_emision(srifacturasproveedoresiva012Origen.getfecha_emision());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getfecha_registro_contable()!=null && !srifacturasproveedoresiva012Origen.getfecha_registro_contable().equals(new Date()))) {srifacturasproveedoresiva012.setfecha_registro_contable(srifacturasproveedoresiva012Origen.getfecha_registro_contable());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getnumero_serie()!=null && !srifacturasproveedoresiva012Origen.getnumero_serie().equals(""))) {srifacturasproveedoresiva012.setnumero_serie(srifacturasproveedoresiva012Origen.getnumero_serie());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.gettotal_iva()!=null && !srifacturasproveedoresiva012Origen.gettotal_iva().equals(0.0))) {srifacturasproveedoresiva012.settotal_iva(srifacturasproveedoresiva012Origen.gettotal_iva());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.gettotal_sin_iva()!=null && !srifacturasproveedoresiva012Origen.gettotal_sin_iva().equals(0.0))) {srifacturasproveedoresiva012.settotal_sin_iva(srifacturasproveedoresiva012Origen.gettotal_sin_iva());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getid_tipo_iva()!=null && !srifacturasproveedoresiva012Origen.getid_tipo_iva().equals(-1L))) {srifacturasproveedoresiva012.setid_tipo_iva(srifacturasproveedoresiva012Origen.getid_tipo_iva());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getid_tipo_retencion_iva()!=null && !srifacturasproveedoresiva012Origen.getid_tipo_retencion_iva().equals(-1L))) {srifacturasproveedoresiva012.setid_tipo_retencion_iva(srifacturasproveedoresiva012Origen.getid_tipo_retencion_iva());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.gettransfe_iva_retenido()!=null && !srifacturasproveedoresiva012Origen.gettransfe_iva_retenido().equals(0.0))) {srifacturasproveedoresiva012.settransfe_iva_retenido(srifacturasproveedoresiva012Origen.gettransfe_iva_retenido());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getid_tipo_retencion_iva_presta()!=null && !srifacturasproveedoresiva012Origen.getid_tipo_retencion_iva_presta().equals(-1L))) {srifacturasproveedoresiva012.setid_tipo_retencion_iva_presta(srifacturasproveedoresiva012Origen.getid_tipo_retencion_iva_presta());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getpresta_iva_retenido()!=null && !srifacturasproveedoresiva012Origen.getpresta_iva_retenido().equals(0.0))) {srifacturasproveedoresiva012.setpresta_iva_retenido(srifacturasproveedoresiva012Origen.getpresta_iva_retenido());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getnombre_tipo_retencion_fuente1()!=null && !srifacturasproveedoresiva012Origen.getnombre_tipo_retencion_fuente1().equals(""))) {srifacturasproveedoresiva012.setnombre_tipo_retencion_fuente1(srifacturasproveedoresiva012Origen.getnombre_tipo_retencion_fuente1());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getret_fuente1_porcentaje()!=null && !srifacturasproveedoresiva012Origen.getret_fuente1_porcentaje().equals(0.0))) {srifacturasproveedoresiva012.setret_fuente1_porcentaje(srifacturasproveedoresiva012Origen.getret_fuente1_porcentaje());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getret_fuente1_retenido()!=null && !srifacturasproveedoresiva012Origen.getret_fuente1_retenido().equals(0.0))) {srifacturasproveedoresiva012.setret_fuente1_retenido(srifacturasproveedoresiva012Origen.getret_fuente1_retenido());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getnombre_tipo_retencion_fuente2()!=null && !srifacturasproveedoresiva012Origen.getnombre_tipo_retencion_fuente2().equals(""))) {srifacturasproveedoresiva012.setnombre_tipo_retencion_fuente2(srifacturasproveedoresiva012Origen.getnombre_tipo_retencion_fuente2());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getret_fuente2_porcentaje()!=null && !srifacturasproveedoresiva012Origen.getret_fuente2_porcentaje().equals(0.0))) {srifacturasproveedoresiva012.setret_fuente2_porcentaje(srifacturasproveedoresiva012Origen.getret_fuente2_porcentaje());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getret_fuente2_retenido()!=null && !srifacturasproveedoresiva012Origen.getret_fuente2_retenido().equals(0.0))) {srifacturasproveedoresiva012.setret_fuente2_retenido(srifacturasproveedoresiva012Origen.getret_fuente2_retenido());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getnombre_tipo_retencion_iva1()!=null && !srifacturasproveedoresiva012Origen.getnombre_tipo_retencion_iva1().equals(""))) {srifacturasproveedoresiva012.setnombre_tipo_retencion_iva1(srifacturasproveedoresiva012Origen.getnombre_tipo_retencion_iva1());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getret_iva_bien_porcentaje()!=null && !srifacturasproveedoresiva012Origen.getret_iva_bien_porcentaje().equals(0.0))) {srifacturasproveedoresiva012.setret_iva_bien_porcentaje(srifacturasproveedoresiva012Origen.getret_iva_bien_porcentaje());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getret_iva_bien_retenido()!=null && !srifacturasproveedoresiva012Origen.getret_iva_bien_retenido().equals(0.0))) {srifacturasproveedoresiva012.setret_iva_bien_retenido(srifacturasproveedoresiva012Origen.getret_iva_bien_retenido());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getnombre_tipo_retencion_iva2()!=null && !srifacturasproveedoresiva012Origen.getnombre_tipo_retencion_iva2().equals(""))) {srifacturasproveedoresiva012.setnombre_tipo_retencion_iva2(srifacturasproveedoresiva012Origen.getnombre_tipo_retencion_iva2());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getret_iva_servicio_porcentaje()!=null && !srifacturasproveedoresiva012Origen.getret_iva_servicio_porcentaje().equals(0.0))) {srifacturasproveedoresiva012.setret_iva_servicio_porcentaje(srifacturasproveedoresiva012Origen.getret_iva_servicio_porcentaje());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Origen.getret_iva_servicio_retenido()!=null && !srifacturasproveedoresiva012Origen.getret_iva_servicio_retenido().equals(0.0))) {srifacturasproveedoresiva012.setret_iva_servicio_retenido(srifacturasproveedoresiva012Origen.getret_iva_servicio_retenido());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelidSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getId().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_comprobanteSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnombre_tipo_comprobante());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_completo_clienteSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnombre_completo_cliente());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldruc_datoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getruc_dato());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_documentoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnumero_documento());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_emisionSriFacturasProveedoresIva012.setDate(srifacturasproveedoresiva012.getfecha_emision());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_registro_contableSriFacturasProveedoresIva012.setDate(srifacturasproveedoresiva012.getfecha_registro_contable());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_serieSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnumero_serie());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_ivaSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.gettotal_iva().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_sin_ivaSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtransfe_iva_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.gettransfe_iva_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldpresta_iva_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getpresta_iva_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente1SriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente1());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_porcentajeSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_fuente1_porcentaje().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_fuente1_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente2SriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente2());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_porcentajeSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_fuente2_porcentaje().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_fuente2_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva1SriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnombre_tipo_retencion_iva1());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_porcentajeSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_iva_bien_porcentaje().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_iva_bien_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva2SriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getnombre_tipo_retencion_iva2());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_porcentajeSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_iva_servicio_porcentaje().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012.getret_iva_servicio_retenido().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioSriFacturasProveedoresIva012(SriFacturasProveedoresIva012Bean srifacturasproveedoresiva012Bean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelidSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getId().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_comprobanteSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getnombre_tipo_comprobante());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_completo_clienteSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getnombre_completo_cliente());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldruc_datoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getruc_dato());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_documentoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getnumero_documento());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_emisionSriFacturasProveedoresIva012.setDate(srifacturasproveedoresiva012Bean.getfecha_emision());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_registro_contableSriFacturasProveedoresIva012.setDate(srifacturasproveedoresiva012Bean.getfecha_registro_contable());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_serieSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getnumero_serie());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_ivaSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.gettotal_iva().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_sin_ivaSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtransfe_iva_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.gettransfe_iva_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldpresta_iva_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getpresta_iva_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente1SriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getnombre_tipo_retencion_fuente1());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_porcentajeSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getret_fuente1_porcentaje().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getret_fuente1_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente2SriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getnombre_tipo_retencion_fuente2());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_porcentajeSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getret_fuente2_porcentaje().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getret_fuente2_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva1SriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getnombre_tipo_retencion_iva1());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_porcentajeSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getret_iva_bien_porcentaje().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getret_iva_bien_retenido().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva2SriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getnombre_tipo_retencion_iva2());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_porcentajeSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getret_iva_servicio_porcentaje().toString());
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_retenidoSriFacturasProveedoresIva012.setText(srifacturasproveedoresiva012Bean.getret_iva_servicio_retenido().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanSriFacturasProveedoresIva012(SriFacturasProveedoresIva012ParameterReturnGeneral srifacturasproveedoresiva012ReturnGeneral,SriFacturasProveedoresIva012Bean srifacturasproveedoresiva012Bean,Boolean conDefault) throws Exception { 
		try {
			SriFacturasProveedoresIva012 srifacturasproveedoresiva012Local=new SriFacturasProveedoresIva012();
			
			srifacturasproveedoresiva012Local=srifacturasproveedoresiva012ReturnGeneral.getSriFacturasProveedoresIva012();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getId()!=null && !srifacturasproveedoresiva012Local.getId().equals(0L))) {srifacturasproveedoresiva012Bean.setId(srifacturasproveedoresiva012Local.getId());}}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getnombre_tipo_comprobante()!=null && !srifacturasproveedoresiva012Local.getnombre_tipo_comprobante().equals(""))) {srifacturasproveedoresiva012Bean.setnombre_tipo_comprobante(srifacturasproveedoresiva012Local.getnombre_tipo_comprobante());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getnombre_completo_cliente()!=null && !srifacturasproveedoresiva012Local.getnombre_completo_cliente().equals(""))) {srifacturasproveedoresiva012Bean.setnombre_completo_cliente(srifacturasproveedoresiva012Local.getnombre_completo_cliente());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getruc_dato()!=null && !srifacturasproveedoresiva012Local.getruc_dato().equals(""))) {srifacturasproveedoresiva012Bean.setruc_dato(srifacturasproveedoresiva012Local.getruc_dato());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getnumero_documento()!=null && !srifacturasproveedoresiva012Local.getnumero_documento().equals(""))) {srifacturasproveedoresiva012Bean.setnumero_documento(srifacturasproveedoresiva012Local.getnumero_documento());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getfecha_emision()!=null && !srifacturasproveedoresiva012Local.getfecha_emision().equals(new Date()))) {srifacturasproveedoresiva012Bean.setfecha_emision(srifacturasproveedoresiva012Local.getfecha_emision());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getfecha_registro_contable()!=null && !srifacturasproveedoresiva012Local.getfecha_registro_contable().equals(new Date()))) {srifacturasproveedoresiva012Bean.setfecha_registro_contable(srifacturasproveedoresiva012Local.getfecha_registro_contable());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getnumero_serie()!=null && !srifacturasproveedoresiva012Local.getnumero_serie().equals(""))) {srifacturasproveedoresiva012Bean.setnumero_serie(srifacturasproveedoresiva012Local.getnumero_serie());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.gettotal_iva()!=null && !srifacturasproveedoresiva012Local.gettotal_iva().equals(0.0))) {srifacturasproveedoresiva012Bean.settotal_iva(srifacturasproveedoresiva012Local.gettotal_iva());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.gettotal_sin_iva()!=null && !srifacturasproveedoresiva012Local.gettotal_sin_iva().equals(0.0))) {srifacturasproveedoresiva012Bean.settotal_sin_iva(srifacturasproveedoresiva012Local.gettotal_sin_iva());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getid_tipo_iva()!=null && !srifacturasproveedoresiva012Local.getid_tipo_iva().equals(-1L))) {srifacturasproveedoresiva012Bean.setid_tipo_iva(srifacturasproveedoresiva012Local.getid_tipo_iva());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getid_tipo_retencion_iva()!=null && !srifacturasproveedoresiva012Local.getid_tipo_retencion_iva().equals(-1L))) {srifacturasproveedoresiva012Bean.setid_tipo_retencion_iva(srifacturasproveedoresiva012Local.getid_tipo_retencion_iva());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.gettransfe_iva_retenido()!=null && !srifacturasproveedoresiva012Local.gettransfe_iva_retenido().equals(0.0))) {srifacturasproveedoresiva012Bean.settransfe_iva_retenido(srifacturasproveedoresiva012Local.gettransfe_iva_retenido());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getid_tipo_retencion_iva_presta()!=null && !srifacturasproveedoresiva012Local.getid_tipo_retencion_iva_presta().equals(-1L))) {srifacturasproveedoresiva012Bean.setid_tipo_retencion_iva_presta(srifacturasproveedoresiva012Local.getid_tipo_retencion_iva_presta());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getpresta_iva_retenido()!=null && !srifacturasproveedoresiva012Local.getpresta_iva_retenido().equals(0.0))) {srifacturasproveedoresiva012Bean.setpresta_iva_retenido(srifacturasproveedoresiva012Local.getpresta_iva_retenido());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getnombre_tipo_retencion_fuente1()!=null && !srifacturasproveedoresiva012Local.getnombre_tipo_retencion_fuente1().equals(""))) {srifacturasproveedoresiva012Bean.setnombre_tipo_retencion_fuente1(srifacturasproveedoresiva012Local.getnombre_tipo_retencion_fuente1());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getret_fuente1_porcentaje()!=null && !srifacturasproveedoresiva012Local.getret_fuente1_porcentaje().equals(0.0))) {srifacturasproveedoresiva012Bean.setret_fuente1_porcentaje(srifacturasproveedoresiva012Local.getret_fuente1_porcentaje());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getret_fuente1_retenido()!=null && !srifacturasproveedoresiva012Local.getret_fuente1_retenido().equals(0.0))) {srifacturasproveedoresiva012Bean.setret_fuente1_retenido(srifacturasproveedoresiva012Local.getret_fuente1_retenido());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getnombre_tipo_retencion_fuente2()!=null && !srifacturasproveedoresiva012Local.getnombre_tipo_retencion_fuente2().equals(""))) {srifacturasproveedoresiva012Bean.setnombre_tipo_retencion_fuente2(srifacturasproveedoresiva012Local.getnombre_tipo_retencion_fuente2());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getret_fuente2_porcentaje()!=null && !srifacturasproveedoresiva012Local.getret_fuente2_porcentaje().equals(0.0))) {srifacturasproveedoresiva012Bean.setret_fuente2_porcentaje(srifacturasproveedoresiva012Local.getret_fuente2_porcentaje());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getret_fuente2_retenido()!=null && !srifacturasproveedoresiva012Local.getret_fuente2_retenido().equals(0.0))) {srifacturasproveedoresiva012Bean.setret_fuente2_retenido(srifacturasproveedoresiva012Local.getret_fuente2_retenido());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getnombre_tipo_retencion_iva1()!=null && !srifacturasproveedoresiva012Local.getnombre_tipo_retencion_iva1().equals(""))) {srifacturasproveedoresiva012Bean.setnombre_tipo_retencion_iva1(srifacturasproveedoresiva012Local.getnombre_tipo_retencion_iva1());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getret_iva_bien_porcentaje()!=null && !srifacturasproveedoresiva012Local.getret_iva_bien_porcentaje().equals(0.0))) {srifacturasproveedoresiva012Bean.setret_iva_bien_porcentaje(srifacturasproveedoresiva012Local.getret_iva_bien_porcentaje());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getret_iva_bien_retenido()!=null && !srifacturasproveedoresiva012Local.getret_iva_bien_retenido().equals(0.0))) {srifacturasproveedoresiva012Bean.setret_iva_bien_retenido(srifacturasproveedoresiva012Local.getret_iva_bien_retenido());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getnombre_tipo_retencion_iva2()!=null && !srifacturasproveedoresiva012Local.getnombre_tipo_retencion_iva2().equals(""))) {srifacturasproveedoresiva012Bean.setnombre_tipo_retencion_iva2(srifacturasproveedoresiva012Local.getnombre_tipo_retencion_iva2());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getret_iva_servicio_porcentaje()!=null && !srifacturasproveedoresiva012Local.getret_iva_servicio_porcentaje().equals(0.0))) {srifacturasproveedoresiva012Bean.setret_iva_servicio_porcentaje(srifacturasproveedoresiva012Local.getret_iva_servicio_porcentaje());}
			if(conDefault || (!conDefault && srifacturasproveedoresiva012Local.getret_iva_servicio_retenido()!=null && !srifacturasproveedoresiva012Local.getret_iva_servicio_retenido().equals(0.0))) {srifacturasproveedoresiva012Bean.setret_iva_servicio_retenido(srifacturasproveedoresiva012Local.getret_iva_servicio_retenido());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxSriFacturasProveedoresIva012Generico(Long idSriFacturasProveedoresIva012Seleccionado,JComboBox jComboBoxSriFacturasProveedoresIva012,List<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sLocal)throws Exception {
		try {
			SriFacturasProveedoresIva012  srifacturasproveedoresiva012Temp=null;

			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:srifacturasproveedoresiva012sLocal) {
				if(srifacturasproveedoresiva012Aux.getId()!=null && srifacturasproveedoresiva012Aux.getId().equals(idSriFacturasProveedoresIva012Seleccionado)) {
					srifacturasproveedoresiva012Temp=srifacturasproveedoresiva012Aux;
					break;
				}
			}

			jComboBoxSriFacturasProveedoresIva012.setSelectedItem(srifacturasproveedoresiva012Temp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxSriFacturasProveedoresIva012Generico(JComboBox jComboBoxSriFacturasProveedoresIva012,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxSriFacturasProveedoresIva012.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxSriFacturasProveedoresIva012.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxSriFacturasProveedoresIva012.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxSriFacturasProveedoresIva012.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxSriFacturasProveedoresIva012.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxSriFacturasProveedoresIva012.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxSriFacturasProveedoresIva012.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxSriFacturasProveedoresIva012.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxSriFacturasProveedoresIva012.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxSriFacturasProveedoresIva012.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			srifacturasproveedoresiva012=(SriFacturasProveedoresIva012) srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) srifacturasproveedoresiva012s.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!srifacturasproveedoresiva012.getIsNew() && !srifacturasproveedoresiva012.getIsChanged() && !srifacturasproveedoresiva012.getIsDeleted()) {
				sDescripcion=srifacturasproveedoresiva012.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=srifacturasproveedoresiva012.getempresa_descripcion();
			}
		}

		if(sTipo.equals("PeriodoDeclara")) {
			//sDescripcion=this.getActualPeriodoDeclaraForeignKeyDescripcion((Long)value);
			if(!srifacturasproveedoresiva012.getIsNew() && !srifacturasproveedoresiva012.getIsChanged() && !srifacturasproveedoresiva012.getIsDeleted()) {
				sDescripcion=srifacturasproveedoresiva012.getperiododeclara_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoDeclaraForeignKeyDescripcion((Long)value);
				sDescripcion=srifacturasproveedoresiva012.getperiododeclara_descripcion();
			}
		}

		if(sTipo.equals("TipoIva")) {
			//sDescripcion=this.getActualTipoIvaForeignKeyDescripcion((Long)value);
			if(!srifacturasproveedoresiva012.getIsNew() && !srifacturasproveedoresiva012.getIsChanged() && !srifacturasproveedoresiva012.getIsDeleted()) {
				sDescripcion=srifacturasproveedoresiva012.gettipoiva_descripcion();
			} else {
				//sDescripcion=this.getActualTipoIvaForeignKeyDescripcion((Long)value);
				sDescripcion=srifacturasproveedoresiva012.gettipoiva_descripcion();
			}
		}

		if(sTipo.equals("TipoRetencionIva")) {
			//sDescripcion=this.getActualTipoRetencionIvaForeignKeyDescripcion((Long)value);
			if(!srifacturasproveedoresiva012.getIsNew() && !srifacturasproveedoresiva012.getIsChanged() && !srifacturasproveedoresiva012.getIsDeleted()) {
				sDescripcion=srifacturasproveedoresiva012.gettiporetencioniva_descripcion();
			} else {
				//sDescripcion=this.getActualTipoRetencionIvaForeignKeyDescripcion((Long)value);
				sDescripcion=srifacturasproveedoresiva012.gettiporetencioniva_descripcion();
			}
		}

		if(sTipo.equals("TipoRetencionIvaPresta")) {
			//sDescripcion=this.getActualTipoRetencionIvaPrestaForeignKeyDescripcion((Long)value);
			if(!srifacturasproveedoresiva012.getIsNew() && !srifacturasproveedoresiva012.getIsChanged() && !srifacturasproveedoresiva012.getIsDeleted()) {
				sDescripcion=srifacturasproveedoresiva012.gettiporetencionivapresta_descripcion();
			} else {
				//sDescripcion=this.getActualTipoRetencionIvaPrestaForeignKeyDescripcion((Long)value);
				sDescripcion=srifacturasproveedoresiva012.gettiporetencionivapresta_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		SriFacturasProveedoresIva012 srifacturasproveedoresiva012Row=new SriFacturasProveedoresIva012();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			srifacturasproveedoresiva012Row=(SriFacturasProveedoresIva012) srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			srifacturasproveedoresiva012Row=(SriFacturasProveedoresIva012) srifacturasproveedoresiva012s.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualSriFacturasProveedoresIva012(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012 && this.isPermisoNuevoSriFacturasProveedoresIva012));			
			this.jButtonDuplicarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaDuplicarSriFacturasProveedoresIva012 && this.isPermisoDuplicarSriFacturasProveedoresIva012));			
			this.jButtonCopiarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaCopiarSriFacturasProveedoresIva012 && this.isPermisoCopiarSriFacturasProveedoresIva012));
			this.jButtonVerFormSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaVerFormSriFacturasProveedoresIva012 && this.isPermisoVerFormSriFacturasProveedoresIva012));
			
			this.jButtonAbrirOrderBySriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaOrdenSriFacturasProveedoresIva012 && this.isPermisoOrdenSriFacturasProveedoresIva012));			
			
			this.jButtonNuevoRelacionesSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012 && this.isPermisoNuevoSriFacturasProveedoresIva012));			
			this.jButtonNuevoGuardarCambiosSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012 && this.isPermisoNuevoSriFacturasProveedoresIva012 && this.isPermisoGuardarCambiosSriFacturasProveedoresIva012));
			
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonModificarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012 && this.isPermisoActualizarSriFacturasProveedoresIva012));	
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonActualizarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012 && this.isPermisoActualizarSriFacturasProveedoresIva012));	
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonEliminarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012 && this.isPermisoEliminarSriFacturasProveedoresIva012));
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonCancelarSriFacturasProveedoresIva012.setVisible(this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012);							
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonGuardarCambiosSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012 && this.isPermisoGuardarCambiosSriFacturasProveedoresIva012));			
			
			}
						
			this.jButtonGuardarCambiosTablaSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012 && this.isPermisoGuardarCambiosSriFacturasProveedoresIva012));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012 && this.isPermisoNuevoSriFacturasProveedoresIva012));						
			this.jButtonDuplicarToolBarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaDuplicarSriFacturasProveedoresIva012 && this.isPermisoDuplicarSriFacturasProveedoresIva012));						
			this.jButtonCopiarToolBarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaCopiarSriFacturasProveedoresIva012 && this.isPermisoCopiarSriFacturasProveedoresIva012));			
			this.jButtonVerFormToolBarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaVerFormSriFacturasProveedoresIva012 && this.isPermisoVerFormSriFacturasProveedoresIva012));			
			this.jButtonAbrirOrderByToolBarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaOrdenSriFacturasProveedoresIva012 && this.isPermisoOrdenSriFacturasProveedoresIva012));
			this.jButtonNuevoRelacionesToolBarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012 && this.isPermisoNuevoSriFacturasProveedoresIva012));			
			this.jButtonNuevoGuardarCambiosToolBarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012 && this.isPermisoNuevoSriFacturasProveedoresIva012 && this.isPermisoGuardarCambiosSriFacturasProveedoresIva012));			
			
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonModificarToolBarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012 && this.isPermisoActualizarSriFacturasProveedoresIva012));	
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonActualizarToolBarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012  && this.isPermisoActualizarSriFacturasProveedoresIva012));	
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonEliminarToolBarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012 && this.isPermisoEliminarSriFacturasProveedoresIva012));
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonCancelarToolBarSriFacturasProveedoresIva012.setVisible(this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012);				
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonGuardarCambiosToolBarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012 && this.isPermisoGuardarCambiosSriFacturasProveedoresIva012));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012 && this.isPermisoGuardarCambiosSriFacturasProveedoresIva012));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012 && this.isPermisoNuevoSriFacturasProveedoresIva012));			
			this.jMenuItemDuplicarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaDuplicarSriFacturasProveedoresIva012 && this.isPermisoDuplicarSriFacturasProveedoresIva012));			
			this.jMenuItemCopiarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaCopiarSriFacturasProveedoresIva012 && this.isPermisoCopiarSriFacturasProveedoresIva012));			
			this.jMenuItemVerFormSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaVerFormSriFacturasProveedoresIva012 && this.isPermisoVerFormSriFacturasProveedoresIva012));			
			this.jMenuItemAbrirOrderBySriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaOrdenSriFacturasProveedoresIva012 && this.isPermisoOrdenSriFacturasProveedoresIva012));			
			//this.jMenuItemMostrarOcultarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaOrdenSriFacturasProveedoresIva012 && this.isPermisoOrdenSriFacturasProveedoresIva012));
			this.jMenuItemDetalleAbrirOrderBySriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaOrdenSriFacturasProveedoresIva012 && this.isPermisoOrdenSriFacturasProveedoresIva012));			
			//this.jMenuItemDetalleMostrarOcultarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaOrdenSriFacturasProveedoresIva012 && this.isPermisoOrdenSriFacturasProveedoresIva012));			
			this.jMenuItemNuevoRelacionesSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012 && this.isPermisoNuevoSriFacturasProveedoresIva012));			
			this.jMenuItemNuevoGuardarCambiosSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012 && this.isPermisoNuevoSriFacturasProveedoresIva012 && this.isPermisoGuardarCambiosSriFacturasProveedoresIva012));									
			
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemModificarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012 && this.isPermisoActualizarSriFacturasProveedoresIva012));	
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemActualizarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012 && this.isPermisoActualizarSriFacturasProveedoresIva012));	
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemEliminarSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012 && this.isPermisoEliminarSriFacturasProveedoresIva012));
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemCancelarSriFacturasProveedoresIva012.setVisible(this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012);				
			}
			
			this.jMenuItemGuardarCambiosSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012 && this.isPermisoGuardarCambiosSriFacturasProveedoresIva012));						
			this.jMenuItemGuardarCambiosTablaSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012 && this.isPermisoGuardarCambiosSriFacturasProveedoresIva012));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=this.jButtonNuevoSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaDuplicarSriFacturasProveedoresIva012=this.jButtonDuplicarSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaCopiarSriFacturasProveedoresIva012=this.jButtonCopiarSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaVerFormSriFacturasProveedoresIva012=this.jButtonVerFormSriFacturasProveedoresIva012.isVisible();
			
			this.isVisibilidadCeldaOrdenSriFacturasProveedoresIva012=this.jButtonAbrirOrderBySriFacturasProveedoresIva012.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=this.jButtonNuevoRelacionesSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012=this.jButtonModificarSriFacturasProveedoresIva012.isVisible();
			
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
			this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonActualizarSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonEliminarSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonCancelarSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonGuardarCambiosSriFacturasProveedoresIva012.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=this.jButtonGuardarCambiosTablaSriFacturasProveedoresIva012.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=this.jButtonNuevoToolBarSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=this.jButtonNuevoRelacionesToolBarSriFacturasProveedoresIva012.isVisible();
			
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
			this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonModificarToolBarSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonActualizarToolBarSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonEliminarToolBarSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonCancelarToolBarSriFacturasProveedoresIva012.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=this.jButtonGuardarCambiosToolBarSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=this.jButtonGuardarCambiosTablaToolBarSriFacturasProveedoresIva012.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=this.jMenuItemNuevoSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=this.jMenuItemNuevoRelacionesSriFacturasProveedoresIva012.isVisible();
			
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
			this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemModificarSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemActualizarSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemEliminarSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012=this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemCancelarSriFacturasProveedoresIva012.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=this.jMenuItemGuardarCambiosSriFacturasProveedoresIva012.isVisible();
			this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=this.jMenuItemGuardarCambiosTablaSriFacturasProveedoresIva012.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesSriFacturasProveedoresIva012(Boolean esInicializar) {
		if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {			
			if(this.srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones()) {
				//if(this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesSriFacturasProveedoresIva012();
			}
			
			this.inicializarActualizarBindingBotonesManualSriFacturasProveedoresIva012(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualSriFacturasProveedoresIva012() {
		this.jButtonNuevoSriFacturasProveedoresIva012.setVisible(this.isPermisoNuevoSriFacturasProveedoresIva012);			
		this.jButtonDuplicarSriFacturasProveedoresIva012.setVisible(this.isPermisoDuplicarSriFacturasProveedoresIva012);			
		this.jButtonCopiarSriFacturasProveedoresIva012.setVisible(this.isPermisoCopiarSriFacturasProveedoresIva012);			
		this.jButtonVerFormSriFacturasProveedoresIva012.setVisible(this.isPermisoVerFormSriFacturasProveedoresIva012);			
		
		this.jButtonAbrirOrderBySriFacturasProveedoresIva012.setVisible(this.isPermisoOrdenSriFacturasProveedoresIva012);					
		
		this.jButtonNuevoRelacionesSriFacturasProveedoresIva012.setVisible(this.isPermisoNuevoSriFacturasProveedoresIva012);			
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonModificarSriFacturasProveedoresIva012.setVisible(this.isPermisoActualizarSriFacturasProveedoresIva012);	
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonActualizarSriFacturasProveedoresIva012.setVisible(this.isPermisoActualizarSriFacturasProveedoresIva012);	
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonEliminarSriFacturasProveedoresIva012.setVisible(this.isPermisoEliminarSriFacturasProveedoresIva012);
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonCancelarSriFacturasProveedoresIva012.setVisible(this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012);						
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonGuardarCambiosSriFacturasProveedoresIva012.setVisible(this.isPermisoGuardarCambiosSriFacturasProveedoresIva012);							
		}
		
		this.jButtonGuardarCambiosTablaSriFacturasProveedoresIva012.setVisible(this.isPermisoActualizarSriFacturasProveedoresIva012);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleSriFacturasProveedoresIva012() {
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonModificarSriFacturasProveedoresIva012.setVisible(this.isPermisoActualizarSriFacturasProveedoresIva012);	
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonActualizarSriFacturasProveedoresIva012.setVisible(this.isPermisoActualizarSriFacturasProveedoresIva012);	
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonEliminarSriFacturasProveedoresIva012.setVisible(this.isPermisoEliminarSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonCancelarSriFacturasProveedoresIva012.setVisible(this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012);							
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonGuardarCambiosSriFacturasProveedoresIva012.setVisible((this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012 && this.isPermisoGuardarCambiosSriFacturasProveedoresIva012));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosSriFacturasProveedoresIva012() {
		if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualSriFacturasProveedoresIva012();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesSriFacturasProveedoresIva012() {
	}
	
	public void jTableDatosSriFacturasProveedoresIva012ListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarSriFacturasProveedoresIva012(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.srifacturasproveedoresiva012.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaSriFacturasProveedoresIva012UpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebSriFacturasProveedoresIva012(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSriFacturasProveedoresIva012.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSriFacturasProveedoresIva012.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.srifacturasproveedoresiva012Logic.getConnexion());

				if(this.srifacturasproveedoresiva012.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.srifacturasproveedoresiva012.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSriFacturasProveedoresIva012=(TitledBorder)this.jScrollPanelDatosSriFacturasProveedoresIva012.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderSriFacturasProveedoresIva012.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.srifacturasproveedoresiva012.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodo_declaraSriFacturasProveedoresIva012UpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiododeclara=true;

			idTienePermisoperiododeclara=this.tienePermisosUsuarioEnPaginaWebSriFacturasProveedoresIva012(PeriodoDeclaraConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiododeclara) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSriFacturasProveedoresIva012.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSriFacturasProveedoresIva012.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);

				this.periododeclaraBeanSwingJInternalFrame=new PeriodoDeclaraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periododeclaraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periododeclaraBeanSwingJInternalFrame.getPeriodoDeclaraLogic().setConnexion(this.srifacturasproveedoresiva012Logic.getConnexion());

				if(this.srifacturasproveedoresiva012.getid_periodo_declara()!=null) {
					this.periododeclaraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periododeclaraBeanSwingJInternalFrame.setIdActual(this.srifacturasproveedoresiva012.getid_periodo_declara());
					this.periododeclaraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periododeclaraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periododeclaraBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodoDeclara();
				}

				JInternalFrameBase jinternalFrame =this.periododeclaraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSriFacturasProveedoresIva012=(TitledBorder)this.jScrollPanelDatosSriFacturasProveedoresIva012.getBorder();
				TitledBorder titledBorderperiododeclara=(TitledBorder)this.periododeclaraBeanSwingJInternalFrame.jScrollPanelDatosPeriodoDeclara.getBorder();

				titledBorderperiododeclara.setTitle(titledBorderSriFacturasProveedoresIva012.getTitle() + " -> Periodo Declara");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodo_declaraSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getid_periodo_declara()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo_declara = "+this.srifacturasproveedoresiva012.getid_periodo_declara().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonrucSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getruc()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ruc like '%"+this.srifacturasproveedoresiva012.getruc()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_tipo_comprobanteSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getnombre_tipo_comprobante()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_tipo_comprobante like '%"+this.srifacturasproveedoresiva012.getnombre_tipo_comprobante()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_completo_clienteSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getnombre_completo_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_completo_cliente like '%"+this.srifacturasproveedoresiva012.getnombre_completo_cliente()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonruc_datoSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getruc_dato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ruc_dato like '%"+this.srifacturasproveedoresiva012.getruc_dato()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_documentoSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getnumero_documento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_documento like '%"+this.srifacturasproveedoresiva012.getnumero_documento()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.srifacturasproveedoresiva012.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_registro_contableSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getfecha_registro_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_registro_contable = '"+Funciones2.getStringPostgresDate(this.srifacturasproveedoresiva012.getfecha_registro_contable())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_serieSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getnumero_serie()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_serie like '%"+this.srifacturasproveedoresiva012.getnumero_serie()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_ivaSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.gettotal_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_iva = "+this.srifacturasproveedoresiva012.gettotal_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_sin_ivaSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.gettotal_sin_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_sin_iva = "+this.srifacturasproveedoresiva012.gettotal_sin_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_ivaSriFacturasProveedoresIva012UpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoiva=true;

			idTienePermisotipoiva=this.tienePermisosUsuarioEnPaginaWebSriFacturasProveedoresIva012(TipoIvaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoiva) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSriFacturasProveedoresIva012.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSriFacturasProveedoresIva012.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);

				this.tipoivaBeanSwingJInternalFrame=new TipoIvaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoivaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoivaBeanSwingJInternalFrame.getTipoIvaLogic().setConnexion(this.srifacturasproveedoresiva012Logic.getConnexion());

				if(this.srifacturasproveedoresiva012.getid_tipo_iva()!=null) {
					this.tipoivaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoivaBeanSwingJInternalFrame.setIdActual(this.srifacturasproveedoresiva012.getid_tipo_iva());
					this.tipoivaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoivaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoivaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoIva();
				}

				JInternalFrameBase jinternalFrame =this.tipoivaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSriFacturasProveedoresIva012=(TitledBorder)this.jScrollPanelDatosSriFacturasProveedoresIva012.getBorder();
				TitledBorder titledBordertipoiva=(TitledBorder)this.tipoivaBeanSwingJInternalFrame.jScrollPanelDatosTipoIva.getBorder();

				titledBordertipoiva.setTitle(titledBorderSriFacturasProveedoresIva012.getTitle() + " -> Tipo Iva");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_ivaSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getid_tipo_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_iva = "+this.srifacturasproveedoresiva012.getid_tipo_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_retencion_ivaSriFacturasProveedoresIva012UpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotiporetencioniva=true;

			idTienePermisotiporetencioniva=this.tienePermisosUsuarioEnPaginaWebSriFacturasProveedoresIva012(TipoRetencionConstantesFunciones.CLASSNAME);

			if(idTienePermisotiporetencioniva) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSriFacturasProveedoresIva012.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSriFacturasProveedoresIva012.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);

				this.tiporetencionivaBeanSwingJInternalFrame=new TipoRetencionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tiporetencionivaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tiporetencionivaBeanSwingJInternalFrame.getTipoRetencionLogic().setConnexion(this.srifacturasproveedoresiva012Logic.getConnexion());

				if(this.srifacturasproveedoresiva012.getid_tipo_retencion_iva()!=null) {
					this.tiporetencionivaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tiporetencionivaBeanSwingJInternalFrame.setIdActual(this.srifacturasproveedoresiva012.getid_tipo_retencion_iva());
					this.tiporetencionivaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tiporetencionivaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tiporetencionivaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoRetencion();
				}

				JInternalFrameBase jinternalFrame =this.tiporetencionivaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSriFacturasProveedoresIva012=(TitledBorder)this.jScrollPanelDatosSriFacturasProveedoresIva012.getBorder();
				TitledBorder titledBordertiporetencioniva=(TitledBorder)this.tiporetencionivaBeanSwingJInternalFrame.jScrollPanelDatosTipoRetencion.getBorder();

				titledBordertiporetencioniva.setTitle(titledBorderSriFacturasProveedoresIva012.getTitle() + " -> Tipo Retencion ");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_retencion_ivaSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getid_tipo_retencion_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_retencion_iva = "+this.srifacturasproveedoresiva012.getid_tipo_retencion_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontransfe_iva_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.gettransfe_iva_retenido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where transfe_iva_retenido = "+this.srifacturasproveedoresiva012.gettransfe_iva_retenido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012UpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotiporetencionivapresta=true;

			idTienePermisotiporetencionivapresta=this.tienePermisosUsuarioEnPaginaWebSriFacturasProveedoresIva012(TipoRetencionConstantesFunciones.CLASSNAME);

			if(idTienePermisotiporetencionivapresta) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSriFacturasProveedoresIva012.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSriFacturasProveedoresIva012.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);

				this.tiporetencionivaprestaBeanSwingJInternalFrame=new TipoRetencionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tiporetencionivaprestaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tiporetencionivaprestaBeanSwingJInternalFrame.getTipoRetencionLogic().setConnexion(this.srifacturasproveedoresiva012Logic.getConnexion());

				if(this.srifacturasproveedoresiva012.getid_tipo_retencion_iva_presta()!=null) {
					this.tiporetencionivaprestaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tiporetencionivaprestaBeanSwingJInternalFrame.setIdActual(this.srifacturasproveedoresiva012.getid_tipo_retencion_iva_presta());
					this.tiporetencionivaprestaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tiporetencionivaprestaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tiporetencionivaprestaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoRetencion();
				}

				JInternalFrameBase jinternalFrame =this.tiporetencionivaprestaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSriFacturasProveedoresIva012=(TitledBorder)this.jScrollPanelDatosSriFacturasProveedoresIva012.getBorder();
				TitledBorder titledBordertiporetencionivapresta=(TitledBorder)this.tiporetencionivaprestaBeanSwingJInternalFrame.jScrollPanelDatosTipoRetencion.getBorder();

				titledBordertiporetencionivapresta.setTitle(titledBorderSriFacturasProveedoresIva012.getTitle() + " -> Tipo Retencion ");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getid_tipo_retencion_iva_presta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_retencion_iva_presta = "+this.srifacturasproveedoresiva012.getid_tipo_retencion_iva_presta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpresta_iva_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getpresta_iva_retenido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where presta_iva_retenido = "+this.srifacturasproveedoresiva012.getpresta_iva_retenido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente1()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_tipo_retencion_fuente1 like '%"+this.srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente1()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonret_fuente1_porcentajeSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getret_fuente1_porcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ret_fuente1_porcentaje = "+this.srifacturasproveedoresiva012.getret_fuente1_porcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonret_fuente1_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getret_fuente1_retenido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ret_fuente1_retenido = "+this.srifacturasproveedoresiva012.getret_fuente1_retenido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente2()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_tipo_retencion_fuente2 like '%"+this.srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente2()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonret_fuente2_porcentajeSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getret_fuente2_porcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ret_fuente2_porcentaje = "+this.srifacturasproveedoresiva012.getret_fuente2_porcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonret_fuente2_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getret_fuente2_retenido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ret_fuente2_retenido = "+this.srifacturasproveedoresiva012.getret_fuente2_retenido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_tipo_retencion_iva1SriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getnombre_tipo_retencion_iva1()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_tipo_retencion_iva1 like '%"+this.srifacturasproveedoresiva012.getnombre_tipo_retencion_iva1()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonret_iva_bien_porcentajeSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getret_iva_bien_porcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ret_iva_bien_porcentaje = "+this.srifacturasproveedoresiva012.getret_iva_bien_porcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonret_iva_bien_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getret_iva_bien_retenido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ret_iva_bien_retenido = "+this.srifacturasproveedoresiva012.getret_iva_bien_retenido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_tipo_retencion_iva2SriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getnombre_tipo_retencion_iva2()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_tipo_retencion_iva2 like '%"+this.srifacturasproveedoresiva012.getnombre_tipo_retencion_iva2()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonret_iva_servicio_porcentajeSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getret_iva_servicio_porcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ret_iva_servicio_porcentaje = "+this.srifacturasproveedoresiva012.getret_iva_servicio_porcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonret_iva_servicio_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.getsrifacturasproveedoresiva012(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.srifacturasproveedoresiva012==null) {
						this.srifacturasproveedoresiva012 = new SriFacturasProveedoresIva012();
					}

					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);
				}

				if(this.srifacturasproveedoresiva012.getret_iva_servicio_retenido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ret_iva_servicio_retenido = "+this.srifacturasproveedoresiva012.getret_iva_servicio_retenido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);

			this.getSriFacturasProveedoresIva012sBusquedaSriFacturasProveedoresIva012();

			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);

			//if(SriFacturasProveedoresIva012BeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);

			this.getSriFacturasProveedoresIva012sFK_IdEmpresa();

			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);

			//if(SriFacturasProveedoresIva012BeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoDeclaraSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);

			this.getSriFacturasProveedoresIva012sFK_IdPeriodoDeclara();

			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);

			//if(SriFacturasProveedoresIva012BeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoIvaSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);

			this.getSriFacturasProveedoresIva012sFK_IdTipoIva();

			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);

			//if(SriFacturasProveedoresIva012BeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoRetencionIvaSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);

			this.getSriFacturasProveedoresIva012sFK_IdTipoRetencionIva();

			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);

			//if(SriFacturasProveedoresIva012BeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoRetencionIvaPrestaSriFacturasProveedoresIva012ActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);

			this.getSriFacturasProveedoresIva012sFK_IdTipoRetencionIvaPresta();

			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);

			//if(SriFacturasProveedoresIva012BeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.srifacturasproveedoresiva012Logic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameSriFacturasProveedoresIva012() {
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setVisible(false);	    			
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.dispose();
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012!=null) {
			this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.dispose();
			this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012=null;
		}
		
		if(this.jInternalFrameImportacionSriFacturasProveedoresIva012!=null) {
			this.jInternalFrameImportacionSriFacturasProveedoresIva012.setVisible(false);	    			
			this.jInternalFrameImportacionSriFacturasProveedoresIva012.dispose();
			this.jInternalFrameImportacionSriFacturasProveedoresIva012=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessSriFacturasProveedoresIva012();
			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			
			
			if(sTipo.equals("NuevoSriFacturasProveedoresIva012")) {
				jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarSriFacturasProveedoresIva012")) {
				jButtonDuplicarSriFacturasProveedoresIva012ActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarSriFacturasProveedoresIva012")) {
				jButtonCopiarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("VerFormSriFacturasProveedoresIva012")) {
				jButtonVerFormSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarSriFacturasProveedoresIva012")) {
				jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarSriFacturasProveedoresIva012")) {
				jButtonDuplicarSriFacturasProveedoresIva012ActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoSriFacturasProveedoresIva012")) {
				jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarSriFacturasProveedoresIva012")) {
				jButtonDuplicarSriFacturasProveedoresIva012ActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesSriFacturasProveedoresIva012")) {
				jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarSriFacturasProveedoresIva012")) {
				jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesSriFacturasProveedoresIva012")) {
				jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarSriFacturasProveedoresIva012")) {
				jButtonModificarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarSriFacturasProveedoresIva012")) {
				jButtonModificarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarSriFacturasProveedoresIva012")) {
				jButtonModificarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("ActualizarSriFacturasProveedoresIva012")) {
				jButtonActualizarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarSriFacturasProveedoresIva012")) {
				jButtonActualizarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarSriFacturasProveedoresIva012")) {
				jButtonActualizarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("EliminarSriFacturasProveedoresIva012")) {
				jButtonEliminarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarSriFacturasProveedoresIva012")) {
				jButtonEliminarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarSriFacturasProveedoresIva012")) {
				jButtonEliminarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("CancelarSriFacturasProveedoresIva012")) {
				jButtonCancelarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarSriFacturasProveedoresIva012")) {
				jButtonCancelarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarSriFacturasProveedoresIva012")) {
				jButtonCancelarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("CerrarSriFacturasProveedoresIva012")) {
				jButtonCerrarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarSriFacturasProveedoresIva012")) {
				jButtonCerrarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarSriFacturasProveedoresIva012")) {
				jButtonCerrarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarSriFacturasProveedoresIva012")) {
				jButtonMostrarOcultarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarSriFacturasProveedoresIva012")) {
				jButtonCancelarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosSriFacturasProveedoresIva012")) {
				jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarSriFacturasProveedoresIva012")) {
				jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarSriFacturasProveedoresIva012")) {
				jButtonCopiarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarSriFacturasProveedoresIva012")) {
				jButtonVerFormSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosSriFacturasProveedoresIva012")) {
				jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarSriFacturasProveedoresIva012")) {
				jButtonCopiarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormSriFacturasProveedoresIva012")) {
				jButtonVerFormSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaSriFacturasProveedoresIva012")) {
				jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarSriFacturasProveedoresIva012")) {
				jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaSriFacturasProveedoresIva012")) {
				jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionSriFacturasProveedoresIva012")) {
				jButtonRecargarInformacionSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarSriFacturasProveedoresIva012")) {
				jButtonRecargarInformacionSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionSriFacturasProveedoresIva012")) {
				jButtonRecargarInformacionSriFacturasProveedoresIva012ActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresSriFacturasProveedoresIva012")) {
				jButtonAnterioresSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarSriFacturasProveedoresIva012")) {
				jButtonAnterioresSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreSriFacturasProveedoresIva012")) {
				jButtonAnterioresSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("SiguientesSriFacturasProveedoresIva012")) {
				jButtonSiguientesSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarSriFacturasProveedoresIva012")) {
				jButtonSiguientesSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesSriFacturasProveedoresIva012")) {
				jButtonSiguientesSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderBySriFacturasProveedoresIva012") || sTipo.equals("MenuItemDetalleAbrirOrderBySriFacturasProveedoresIva012")) {
				jButtonAbrirOrderBySriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarSriFacturasProveedoresIva012") || sTipo.equals("MenuItemDetalleMostrarOcultarSriFacturasProveedoresIva012")) {
				jButtonMostrarOcultarSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosSriFacturasProveedoresIva012")) {
				jButtonNuevoGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarSriFacturasProveedoresIva012")) {
				jButtonNuevoGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosSriFacturasProveedoresIva012")) {
				jButtonNuevoGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoSriFacturasProveedoresIva012")) {
				jButtonCerrarReporteDinamicoSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoSriFacturasProveedoresIva012")) {
				jButtonGenerarReporteDinamicoSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoSriFacturasProveedoresIva012")) {
				
				jButtonGenerarExcelReporteDinamicoSriFacturasProveedoresIva012ActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionSriFacturasProveedoresIva012")) {
				jButtonCerrarImportacionSriFacturasProveedoresIva012ActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionSriFacturasProveedoresIva012")) {
				
				jButtonGenerarImportacionSriFacturasProveedoresIva012ActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionSriFacturasProveedoresIva012")) {
				
				jButtonAbrirImportacionSriFacturasProveedoresIva012ActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesSriFacturasProveedoresIva012")) {
				jComboBoxTiposAccionesSriFacturasProveedoresIva012ActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesSriFacturasProveedoresIva012")) {
				jComboBoxTiposRelacionesSriFacturasProveedoresIva012ActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioSriFacturasProveedoresIva012")) {
				jComboBoxTiposAccionesSriFacturasProveedoresIva012ActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarSriFacturasProveedoresIva012")) {
				
				jComboBoxTiposSeleccionarSriFacturasProveedoresIva012ActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralSriFacturasProveedoresIva012")) {
				jTextFieldValorCampoGeneralSriFacturasProveedoresIva012ActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderBySriFacturasProveedoresIva012")) {
				jButtonAbrirOrderBySriFacturasProveedoresIva012ActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarSriFacturasProveedoresIva012")) {
				jButtonAbrirOrderBySriFacturasProveedoresIva012ActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderBySriFacturasProveedoresIva012")) {
				jButtonCerrarOrderBySriFacturasProveedoresIva012ActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonidSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaSriFacturasProveedoresIva012Update")) {
				this.jButtonid_empresaSriFacturasProveedoresIva012UpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonid_empresaSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodo_declaraSriFacturasProveedoresIva012Update")) {
				this.jButtonid_periodo_declaraSriFacturasProveedoresIva012UpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodo_declaraSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonid_periodo_declaraSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonrucSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_tipo_comprobanteSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnombre_tipo_comprobanteSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_completo_clienteSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnombre_completo_clienteSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ruc_datoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonruc_datoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_documentoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnumero_documentoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonfecha_emisionSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_registro_contableSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonfecha_registro_contableSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_serieSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnumero_serieSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_ivaSriFacturasProveedoresIva012Busqueda")) {
				this.jButtontotal_ivaSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_sin_ivaSriFacturasProveedoresIva012Busqueda")) {
				this.jButtontotal_sin_ivaSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_ivaSriFacturasProveedoresIva012Update")) {
				this.jButtonid_tipo_ivaSriFacturasProveedoresIva012UpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_ivaSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonid_tipo_ivaSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencion_ivaSriFacturasProveedoresIva012Update")) {
				this.jButtonid_tipo_retencion_ivaSriFacturasProveedoresIva012UpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencion_ivaSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonid_tipo_retencion_ivaSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("transfe_iva_retenidoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtontransfe_iva_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Update")) {
				this.jButtonid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012UpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("presta_iva_retenidoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonpresta_iva_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_tipo_retencion_fuente1SriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_fuente1_porcentajeSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_fuente1_porcentajeSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_fuente1_retenidoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_fuente1_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_tipo_retencion_fuente2SriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_fuente2_porcentajeSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_fuente2_porcentajeSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_fuente2_retenidoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_fuente2_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_tipo_retencion_iva1SriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnombre_tipo_retencion_iva1SriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_iva_bien_porcentajeSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_iva_bien_porcentajeSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_iva_bien_retenidoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_iva_bien_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_tipo_retencion_iva2SriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnombre_tipo_retencion_iva2SriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_iva_servicio_porcentajeSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_iva_servicio_porcentajeSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_iva_servicio_retenidoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_iva_servicio_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			
			
			
			
			else if(sTipo.equals("BusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012")) {
				this.jButtonBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012ActionPerformed(evt);
			}
			
			;
			
			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessSriFacturasProveedoresIva012();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
				
				this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				


				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SriFacturasProveedoresIva012.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SriFacturasProveedoresIva012.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			SriFacturasProveedoresIva012 srifacturasproveedoresiva012Local=null;
			
			if(!this.getEsControlTabla()) {
				srifacturasproveedoresiva012Local=this.srifacturasproveedoresiva012;
			} else {
				srifacturasproveedoresiva012Local=this.srifacturasproveedoresiva012Anterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
				
				this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
							
				
				


				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SriFacturasProveedoresIva012.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SriFacturasProveedoresIva012.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Anterior =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.srifacturasproveedoresiva012Anterior =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
				
				this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
								
						
				


				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SriFacturasProveedoresIva012.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SriFacturasProveedoresIva012.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
				
				this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
								
				
				


				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SriFacturasProveedoresIva012.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SriFacturasProveedoresIva012.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Anterior =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.srifacturasproveedoresiva012Anterior =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
				
				this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Anterior =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.srifacturasproveedoresiva012Anterior =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
			
			this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
				
				this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
							
				
				


				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SriFacturasProveedoresIva012.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SriFacturasProveedoresIva012.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012Anterior =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.srifacturasproveedoresiva012Anterior =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
			
			this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
				
				this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
								
				
				


				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SriFacturasProveedoresIva012.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SriFacturasProveedoresIva012.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Anterior =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.srifacturasproveedoresiva012Anterior =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
			
			this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
				
				this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosSriFacturasProveedoresIva012")) {
					jCheckBoxSeleccionarTodosSriFacturasProveedoresIva012ItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosSriFacturasProveedoresIva012")) {
					jCheckBoxSeleccionadosSriFacturasProveedoresIva012ItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarSriFacturasProveedoresIva012")) {
					
				}
				
				


				
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SriFacturasProveedoresIva012.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SriFacturasProveedoresIva012.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
												
				
				


				
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SriFacturasProveedoresIva012.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SriFacturasProveedoresIva012.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.srifacturasproveedoresiva012Anterior =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.srifacturasproveedoresiva012Anterior =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
				
				this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
				
				this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SriFacturasProveedoresIva012.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SriFacturasProveedoresIva012.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.srifacturasproveedoresiva012);
				
				this.actualizarInformacion("INFO_PADRE",false,this.srifacturasproveedoresiva012);
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SriFacturasProveedoresIva012.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SriFacturasProveedoresIva012.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriFacturasProveedoresIva012Actual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.srifacturasproveedoresiva012Anterior =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.srifacturasproveedoresiva012Anterior =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarSriFacturasProveedoresIva012")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosSriFacturasProveedoresIva012ListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosSriFacturasProveedoresIva012.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.srifacturasproveedoresiva012 =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.srifacturasproveedoresiva012);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarSriFacturasProveedoresIva012")) {
				
				}
				
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarSriFacturasProveedoresIva012")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosSriFacturasProveedoresIva012.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarSriFacturasProveedoresIva012")) {
			
			}
			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessSriFacturasProveedoresIva012();
			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			
			if(sTipo.equals("NuevoSriFacturasProveedoresIva012")) {
				jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarSriFacturasProveedoresIva012")) {
				jButtonDuplicarSriFacturasProveedoresIva012ActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarSriFacturasProveedoresIva012")) {
				jButtonCopiarSriFacturasProveedoresIva012ActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormSriFacturasProveedoresIva012")) {
				jButtonVerFormSriFacturasProveedoresIva012ActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesSriFacturasProveedoresIva012")) {
				jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarSriFacturasProveedoresIva012")) {
				jButtonModificarSriFacturasProveedoresIva012ActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarSriFacturasProveedoresIva012")) {
				jButtonActualizarSriFacturasProveedoresIva012ActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarSriFacturasProveedoresIva012")) {
				jButtonEliminarSriFacturasProveedoresIva012ActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaSriFacturasProveedoresIva012")) {
				jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarSriFacturasProveedoresIva012")) {
				jButtonCancelarSriFacturasProveedoresIva012ActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarSriFacturasProveedoresIva012")) {
				jButtonCerrarSriFacturasProveedoresIva012ActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosSriFacturasProveedoresIva012")) {
				jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosSriFacturasProveedoresIva012")) {
				jButtonNuevoGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderBySriFacturasProveedoresIva012")) {
				jButtonAbrirOrderBySriFacturasProveedoresIva012ActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionSriFacturasProveedoresIva012")) {
				jButtonRecargarInformacionSriFacturasProveedoresIva012ActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresSriFacturasProveedoresIva012")) {
				jButtonAnterioresSriFacturasProveedoresIva012ActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesSriFacturasProveedoresIva012")) {
				jButtonSiguientesSriFacturasProveedoresIva012ActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonidSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaSriFacturasProveedoresIva012Update")) {
				this.jButtonid_empresaSriFacturasProveedoresIva012UpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonid_empresaSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodo_declaraSriFacturasProveedoresIva012Update")) {
				this.jButtonid_periodo_declaraSriFacturasProveedoresIva012UpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodo_declaraSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonid_periodo_declaraSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonrucSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_tipo_comprobanteSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnombre_tipo_comprobanteSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_completo_clienteSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnombre_completo_clienteSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ruc_datoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonruc_datoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_documentoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnumero_documentoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonfecha_emisionSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_registro_contableSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonfecha_registro_contableSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_serieSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnumero_serieSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_ivaSriFacturasProveedoresIva012Busqueda")) {
				this.jButtontotal_ivaSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_sin_ivaSriFacturasProveedoresIva012Busqueda")) {
				this.jButtontotal_sin_ivaSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_ivaSriFacturasProveedoresIva012Update")) {
				this.jButtonid_tipo_ivaSriFacturasProveedoresIva012UpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_ivaSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonid_tipo_ivaSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencion_ivaSriFacturasProveedoresIva012Update")) {
				this.jButtonid_tipo_retencion_ivaSriFacturasProveedoresIva012UpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencion_ivaSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonid_tipo_retencion_ivaSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("transfe_iva_retenidoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtontransfe_iva_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Update")) {
				this.jButtonid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012UpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("presta_iva_retenidoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonpresta_iva_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_tipo_retencion_fuente1SriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_fuente1_porcentajeSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_fuente1_porcentajeSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_fuente1_retenidoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_fuente1_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_tipo_retencion_fuente2SriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_fuente2_porcentajeSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_fuente2_porcentajeSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_fuente2_retenidoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_fuente2_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_tipo_retencion_iva1SriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnombre_tipo_retencion_iva1SriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_iva_bien_porcentajeSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_iva_bien_porcentajeSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_iva_bien_retenidoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_iva_bien_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_tipo_retencion_iva2SriFacturasProveedoresIva012Busqueda")) {
				this.jButtonnombre_tipo_retencion_iva2SriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_iva_servicio_porcentajeSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_iva_servicio_porcentajeSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ret_iva_servicio_retenidoSriFacturasProveedoresIva012Busqueda")) {
				this.jButtonret_iva_servicio_retenidoSriFacturasProveedoresIva012BusquedaActionPerformed(evt);
			}
			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessSriFacturasProveedoresIva012();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameSriFacturasProveedoresIva012")) {
				closingInternalFrameSriFacturasProveedoresIva012();
				
			} else if(sTipo.equals("jButtonCancelarSriFacturasProveedoresIva012")) {
				JInternalFrameBase jInternalFrameDetalleFormSriFacturasProveedoresIva012 = (JInternalFrameBase)evt.getSource();
	            	
	            SriFacturasProveedoresIva012BeanSwingJInternalFrame jInternalFrameParent=(SriFacturasProveedoresIva012BeanSwingJInternalFrame)jInternalFrameDetalleFormSriFacturasProveedoresIva012.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarSriFacturasProveedoresIva012ActionPerformed(null);
			}
			
			SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.srifacturasproveedoresiva012,new Object(),this.srifacturasproveedoresiva012ParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormSriFacturasProveedoresIva012(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormSriFacturasProveedoresIva012(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormSriFacturasProveedoresIva012(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.srifacturasproveedoresiva012)) {
			if(!esControlTabla) {
				if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);			
				}
				
				if(this.srifacturasproveedoresiva012SessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,classes);				
				}
			
				if(conIrServidorAplicacion) {
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012ReturnGeneral,this.srifacturasproveedoresiva012Bean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.srifacturasproveedoresiva012SessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanSriFacturasProveedoresIva012(classes,this.srifacturasproveedoresiva012ReturnGeneral,this.srifacturasproveedoresiva012Bean,false);
					}
						
					if(this.srifacturasproveedoresiva012ReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeySriFacturasProveedoresIva012(this.srifacturasproveedoresiva012ReturnGeneral.getSriFacturasProveedoresIva012());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012ReturnGeneral.getSriFacturasProveedoresIva012());	
					}
						
					if(this.srifacturasproveedoresiva012ReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012ReturnGeneral.getSriFacturasProveedoresIva012(),classes);//this.srifacturasproveedoresiva012Bean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,classes);//this.srifacturasproveedoresiva012Bean);									
				}
			
				if(SriFacturasProveedoresIva012JInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysSriFacturasProveedoresIva012(this.srifacturasproveedoresiva012);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.srifacturasproveedoresiva012Anterior!=null) {
						this.srifacturasproveedoresiva012=this.srifacturasproveedoresiva012Anterior;
					}
				}
				
				if(conIrServidorAplicacion) {
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.srifacturasproveedoresiva012SessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.srifacturasproveedoresiva012ReturnGeneral.getSriFacturasProveedoresIva012(),srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.srifacturasproveedoresiva012ReturnGeneral.getSriFacturasProveedoresIva012(),this.srifacturasproveedoresiva012s);
				}
				//ARCHITECTURE
				
				//this.jTableDatosSriFacturasProveedoresIva012.repaint();
				
				//((AbstractTableModel) this.jTableDatosSriFacturasProveedoresIva012.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosSriFacturasProveedoresIva012();
			}
		}
	}
	
	public void actualizarVisualTableDatosSriFacturasProveedoresIva012() throws Exception {
		
		SriFacturasProveedoresIva012Model srifacturasproveedoresiva012Model=(SriFacturasProveedoresIva012Model)this.jTableDatosSriFacturasProveedoresIva012.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			srifacturasproveedoresiva012Model.srifacturasproveedoresiva012s=this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			srifacturasproveedoresiva012Model.srifacturasproveedoresiva012s=this.srifacturasproveedoresiva012s;
		}
		
		
		((SriFacturasProveedoresIva012Model) this.jTableDatosSriFacturasProveedoresIva012.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaSriFacturasProveedoresIva012() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getsrifacturasproveedoresiva012Anterior(),this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getsrifacturasproveedoresiva012Anterior(),this.srifacturasproveedoresiva012s);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosSriFacturasProveedoresIva012();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.srifacturasproveedoresiva012,new Object(),generalEntityParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=SriFacturasProveedoresIva012ConstantesFunciones.getClassesRelationshipsOfSriFacturasProveedoresIva012(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=SriFacturasProveedoresIva012ConstantesFunciones.getClassesRelationshipsFromStringsOfSriFacturasProveedoresIva012(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormSriFacturasProveedoresIva012(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.srifacturasproveedoresiva012,new Object(),generalEntityParameterGeneral,this.srifacturasproveedoresiva012ReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioSriFacturasProveedoresIva012(SriFacturasProveedoresIva012Bean srifacturasproveedoresiva012Bean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanSriFacturasProveedoresIva012(ArrayList<Classe> classes,SriFacturasProveedoresIva012ReturnGeneral srifacturasproveedoresiva012ReturnGeneral,SriFacturasProveedoresIva012Bean srifacturasproveedoresiva012Bean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.srifacturasproveedoresiva012)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012 = new SriFacturasProveedoresIva012DetalleFormJInternalFrame(jDesktopPane,this.srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones(),this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setVisible(false);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setSelected(false);						
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.srifacturasproveedoresiva012Logic=this.srifacturasproveedoresiva012Logic;
		
		this.cargarCombosFrameForeignKeySriFacturasProveedoresIva012("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleSriFacturasProveedoresIva012();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleSriFacturasProveedoresIva012();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeySriFacturasProveedoresIva012("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeySriFacturasProveedoresIva012();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarSriFacturasProveedoresIva012"));
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonModificarSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"ModificarSriFacturasProveedoresIva012"));

		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonModificarToolBarSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"ModificarToolBarSriFacturasProveedoresIva012"));
					
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemModificarSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"MenuItemModificarSriFacturasProveedoresIva012"));		
		
		
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonActualizarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"ActualizarSriFacturasProveedoresIva012"));
		
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonActualizarToolBarSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"ActualizarToolBarSriFacturasProveedoresIva012"));
						
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemActualizarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemActualizarSriFacturasProveedoresIva012"));		
		
		
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonEliminarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"EliminarSriFacturasProveedoresIva012"));
		
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonEliminarToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"EliminarToolBarSriFacturasProveedoresIva012"));
								
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemEliminarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemEliminarSriFacturasProveedoresIva012"));		
		
		
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonCancelarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"CancelarSriFacturasProveedoresIva012"));
		
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonCancelarToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"CancelarToolBarSriFacturasProveedoresIva012"));
					
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemCancelarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemCancelarSriFacturasProveedoresIva012"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemDetalleCerrarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarSriFacturasProveedoresIva012"));		
		
		
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonGuardarCambiosToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarSriFacturasProveedoresIva012"));
		
		
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonGuardarCambiosToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarSriFacturasProveedoresIva012"));
		
		
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioSriFacturasProveedoresIva012"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonidSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"idSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_empresaSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_empresaSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_empresaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_empresaSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_periodo_declaraSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_periodo_declaraSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_periodo_declaraSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_periodo_declaraSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonrucSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"rucSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_comprobanteSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_comprobanteSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_completo_clienteSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_completo_clienteSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonruc_datoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ruc_datoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnumero_documentoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"numero_documentoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonfecha_emisionSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonfecha_registro_contableSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"fecha_registro_contableSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnumero_serieSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"numero_serieSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtontotal_ivaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"total_ivaSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtontotal_sin_ivaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_ivaSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_tipo_ivaSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_ivaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ivaSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_retencion_ivaSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_ivaSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_retencion_ivaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_ivaSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtontransfe_iva_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"transfe_iva_retenidoSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonpresta_iva_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"presta_iva_retenidoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_retencion_fuente1SriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_fuente1_porcentajeSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_fuente1_porcentajeSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_fuente1_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_fuente1_retenidoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_retencion_fuente2SriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_fuente2_porcentajeSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_fuente2_porcentajeSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_fuente2_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_fuente2_retenidoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_retencion_iva1SriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_retencion_iva1SriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_iva_bien_porcentajeSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_iva_bien_porcentajeSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_iva_bien_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_iva_bien_retenidoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_retencion_iva2SriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_retencion_iva2SriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_iva_servicio_porcentajeSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_iva_servicio_porcentajeSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_iva_servicio_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_iva_servicio_retenidoSriFacturasProveedoresIva012Busqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTabbedPaneRelacionesSriFacturasProveedoresIva012.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesSriFacturasProveedoresIva012"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameSriFacturasProveedoresIva012"));
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarSriFacturasProveedoresIva012"));
		}
		
		this.jTableDatosSriFacturasProveedoresIva012.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarSriFacturasProveedoresIva012"));
		
		this.jTableDatosSriFacturasProveedoresIva012.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarSriFacturasProveedoresIva012"));
		
		this.jButtonNuevoSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"NuevoSriFacturasProveedoresIva012"));
		
		this.jButtonDuplicarSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"DuplicarSriFacturasProveedoresIva012"));
		
		this.jButtonCopiarSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"CopiarSriFacturasProveedoresIva012"));
		
		this.jButtonVerFormSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"VerFormSriFacturasProveedoresIva012"));
		
		
		this.jButtonNuevoToolBarSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"NuevoToolBarSriFacturasProveedoresIva012"));
			
		this.jButtonDuplicarToolBarSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"DuplicarToolBarSriFacturasProveedoresIva012"));
			
		this.jMenuItemNuevoSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemNuevoSriFacturasProveedoresIva012"));
			
		this.jMenuItemDuplicarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarSriFacturasProveedoresIva012"));		
		
		
		this.jButtonNuevoRelacionesSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"NuevoRelacionesSriFacturasProveedoresIva012"));
		
		
		this.jButtonNuevoRelacionesToolBarSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarSriFacturasProveedoresIva012"));
			
		this.jMenuItemNuevoRelacionesSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesSriFacturasProveedoresIva012"));		
		
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonModificarSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"ModificarSriFacturasProveedoresIva012"));
		}
		
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonModificarToolBarSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"ModificarToolBarSriFacturasProveedoresIva012"));
			
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemModificarSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"MenuItemModificarSriFacturasProveedoresIva012"));		
		}
		
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonActualizarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"ActualizarSriFacturasProveedoresIva012"));
		}
		
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonActualizarToolBarSriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"ActualizarToolBarSriFacturasProveedoresIva012"));
				
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemActualizarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemActualizarSriFacturasProveedoresIva012"));		
		}
		
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonEliminarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"EliminarSriFacturasProveedoresIva012"));
		}
		
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonEliminarToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"EliminarToolBarSriFacturasProveedoresIva012"));
						
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemEliminarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemEliminarSriFacturasProveedoresIva012"));		
		}
		
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonCancelarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"CancelarSriFacturasProveedoresIva012"));
		}
		
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonCancelarToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"CancelarToolBarSriFacturasProveedoresIva012"));
			
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemCancelarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemCancelarSriFacturasProveedoresIva012"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarSriFacturasProveedoresIva012"));		
		
		
		this.jButtonCerrarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"CerrarSriFacturasProveedoresIva012"));
		
		
		this.jButtonCerrarToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"CerrarToolBarSriFacturasProveedoresIva012"));
			
		this.jMenuItemCerrarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemCerrarSriFacturasProveedoresIva012"));
			
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jMenuItemDetalleCerrarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarSriFacturasProveedoresIva012"));		
		}
		
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonGuardarCambiosSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"GuardarCambiosSriFacturasProveedoresIva012"));
		}
		
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonGuardarCambiosToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarSriFacturasProveedoresIva012"));
		}
		
		this.jButtonCopiarToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"CopiarToolBarSriFacturasProveedoresIva012"));
			
		this.jButtonVerFormToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"VerFormToolBarSriFacturasProveedoresIva012"));
		
		this.jMenuItemGuardarCambiosSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosSriFacturasProveedoresIva012"));
			
		this.jMenuItemCopiarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemCopiarSriFacturasProveedoresIva012"));		
		
		this.jMenuItemVerFormSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemVerFormSriFacturasProveedoresIva012"));		
		
		
		this.jButtonGuardarCambiosTablaSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaSriFacturasProveedoresIva012"));
		
		
		this.jButtonGuardarCambiosTablaToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarSriFacturasProveedoresIva012"));
			
		this.jMenuItemGuardarCambiosTablaSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaSriFacturasProveedoresIva012"));		
		
		
		
		this.jButtonRecargarInformacionSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"RecargarInformacionSriFacturasProveedoresIva012"));
					
		this.jButtonRecargarInformacionToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarSriFacturasProveedoresIva012"));
		
		this.jMenuItemRecargarInformacionSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionSriFacturasProveedoresIva012"));		
		
		
		
		this.jButtonAnterioresSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"AnterioresSriFacturasProveedoresIva012"));
		
		
		this.jButtonAnterioresToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"AnterioresToolBarSriFacturasProveedoresIva012"));
		
		this.jMenuItemAnterioresSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresSriFacturasProveedoresIva012"));		
		
		
		this.jButtonSiguientesSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"SiguientesSriFacturasProveedoresIva012"));
		
		
		this.jButtonSiguientesToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"SiguientesToolBarSriFacturasProveedoresIva012"));
			
		this.jMenuItemSiguientesSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesSriFacturasProveedoresIva012"));
			
		this.jMenuItemAbrirOrderBySriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderBySriFacturasProveedoresIva012"));
			
		this.jMenuItemMostrarOcultarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarSriFacturasProveedoresIva012"));
			
		this.jMenuItemDetalleAbrirOrderBySriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderBySriFacturasProveedoresIva012"));
			
		this.jMenuItemDetalleMostarOcultarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarSriFacturasProveedoresIva012"));		
		
		
		this.jButtonNuevoGuardarCambiosSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosSriFacturasProveedoresIva012"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarSriFacturasProveedoresIva012"));
			
		this.jMenuItemNuevoGuardarCambiosSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosSriFacturasProveedoresIva012"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosSriFacturasProveedoresIva012.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosSriFacturasProveedoresIva012"));

		this.jCheckBoxSeleccionadosSriFacturasProveedoresIva012.addItemListener(new CheckBoxItemListener(this,"SeleccionadosSriFacturasProveedoresIva012"));
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioSriFacturasProveedoresIva012"));
		}
		
		
		this.jComboBoxTiposRelacionesSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"TiposRelacionesSriFacturasProveedoresIva012"));
			
		this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"TiposAccionesSriFacturasProveedoresIva012"));
					
		this.jComboBoxTiposSeleccionarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"TiposSeleccionarSriFacturasProveedoresIva012"));
			
		this.jTextFieldValorCampoGeneralSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralSriFacturasProveedoresIva012"));		
		
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonidSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"idSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_empresaSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_empresaSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_empresaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_empresaSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_periodo_declaraSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_periodo_declaraSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_periodo_declaraSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_periodo_declaraSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonrucSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"rucSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_comprobanteSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_comprobanteSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_completo_clienteSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_completo_clienteSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonruc_datoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ruc_datoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnumero_documentoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"numero_documentoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonfecha_emisionSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonfecha_registro_contableSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"fecha_registro_contableSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnumero_serieSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"numero_serieSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtontotal_ivaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"total_ivaSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtontotal_sin_ivaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_ivaSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_tipo_ivaSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_ivaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ivaSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_retencion_ivaSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_ivaSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_retencion_ivaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_ivaSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtontransfe_iva_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"transfe_iva_retenidoSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonpresta_iva_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"presta_iva_retenidoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_retencion_fuente1SriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_fuente1_porcentajeSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_fuente1_porcentajeSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_fuente1_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_fuente1_retenidoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_retencion_fuente2SriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_fuente2_porcentajeSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_fuente2_porcentajeSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_fuente2_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_fuente2_retenidoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_retencion_iva1SriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_retencion_iva1SriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_iva_bien_porcentajeSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_iva_bien_porcentajeSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_iva_bien_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_iva_bien_retenidoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_retencion_iva2SriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_retencion_iva2SriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_iva_servicio_porcentajeSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_iva_servicio_porcentajeSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_iva_servicio_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_iva_servicio_retenidoSriFacturasProveedoresIva012Busqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"BusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012!=null) {
				this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoSriFacturasProveedoresIva012"));
				this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoSriFacturasProveedoresIva012"));
				this.jInternalFrameReporteDinamicoSriFacturasProveedoresIva012.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoSriFacturasProveedoresIva012"));
			}
			
			//this.jButtonCerrarReporteDinamicoSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoSriFacturasProveedoresIva012"));				
			//this.jButtonGenerarReporteDinamicoSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoSriFacturasProveedoresIva012"));
			//this.jButtonGenerarExcelReporteDinamicoSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoSriFacturasProveedoresIva012"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionSriFacturasProveedoresIva012!=null) {
				this.jInternalFrameImportacionSriFacturasProveedoresIva012.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionSriFacturasProveedoresIva012"));
				this.jInternalFrameImportacionSriFacturasProveedoresIva012.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionSriFacturasProveedoresIva012"));
				this.jInternalFrameImportacionSriFacturasProveedoresIva012.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionSriFacturasProveedoresIva012"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderBySriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"AbrirOrderBySriFacturasProveedoresIva012"));
			
			this.jButtonAbrirOrderByToolBarSriFacturasProveedoresIva012.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarSriFacturasProveedoresIva012"));			
			
			if(this.jInternalFrameOrderBySriFacturasProveedoresIva012!=null) {
				this.jInternalFrameOrderBySriFacturasProveedoresIva012.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderBySriFacturasProveedoresIva012"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTabbedPaneRelacionesSriFacturasProveedoresIva012.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesSriFacturasProveedoresIva012"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameSriFacturasProveedoresIva012();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormSriFacturasProveedoresIva012 = (JInternalFrameBase)event.getSource();
	            	
	            SriFacturasProveedoresIva012BeanSwingJInternalFrame jInternalFrameParent=(SriFacturasProveedoresIva012BeanSwingJInternalFrame)jInternalFrameDetalleFormSriFacturasProveedoresIva012.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarSriFacturasProveedoresIva012ActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosSriFacturasProveedoresIva012.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosSriFacturasProveedoresIva012ListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosSriFacturasProveedoresIva012.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosSriFacturasProveedoresIva012.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoSriFacturasProveedoresIva012";
		inputMap = this.jButtonNuevoSriFacturasProveedoresIva012.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoSriFacturasProveedoresIva012.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesSriFacturasProveedoresIva012";
		inputMap = this.jButtonNuevoRelacionesSriFacturasProveedoresIva012.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesSriFacturasProveedoresIva012.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoSriFacturasProveedoresIva012ActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarSriFacturasProveedoresIva012";
		inputMap = this.jButtonModificarSriFacturasProveedoresIva012.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarSriFacturasProveedoresIva012.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarSriFacturasProveedoresIva012ActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarSriFacturasProveedoresIva012";
		inputMap = this.jButtonActualizarSriFacturasProveedoresIva012.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarSriFacturasProveedoresIva012.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarSriFacturasProveedoresIva012ActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarSriFacturasProveedoresIva012";
		inputMap = this.jButtonEliminarSriFacturasProveedoresIva012.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarSriFacturasProveedoresIva012.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarSriFacturasProveedoresIva012ActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarSriFacturasProveedoresIva012";
		inputMap = this.jButtonCancelarSriFacturasProveedoresIva012.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarSriFacturasProveedoresIva012.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarSriFacturasProveedoresIva012ActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarSriFacturasProveedoresIva012";
		inputMap = this.jButtonCerrarSriFacturasProveedoresIva012.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarSriFacturasProveedoresIva012.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarSriFacturasProveedoresIva012ActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonGuardarCambiosSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosSriFacturasProveedoresIva012";
		inputMap = this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonGuardarCambiosSriFacturasProveedoresIva012.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonGuardarCambiosSriFacturasProveedoresIva012.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosSriFacturasProveedoresIva012.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosSriFacturasProveedoresIva012ItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesSriFacturasProveedoresIva012ActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarSriFacturasProveedoresIva012.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarSriFacturasProveedoresIva012ActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralSriFacturasProveedoresIva012.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralSriFacturasProveedoresIva012ActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonidSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"idSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_empresaSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_empresaSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_empresaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_empresaSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_periodo_declaraSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_periodo_declaraSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_periodo_declaraSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_periodo_declaraSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonrucSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"rucSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_comprobanteSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_comprobanteSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_completo_clienteSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_completo_clienteSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonruc_datoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ruc_datoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnumero_documentoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"numero_documentoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonfecha_emisionSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonfecha_registro_contableSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"fecha_registro_contableSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnumero_serieSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"numero_serieSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtontotal_ivaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"total_ivaSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtontotal_sin_ivaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_ivaSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_tipo_ivaSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_ivaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ivaSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_retencion_ivaSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_ivaSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_retencion_ivaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_ivaSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtontransfe_iva_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"transfe_iva_retenidoSriFacturasProveedoresIva012Busqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Update.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Update"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_prestaSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonpresta_iva_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"presta_iva_retenidoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_retencion_fuente1SriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_fuente1_porcentajeSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_fuente1_porcentajeSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_fuente1_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_fuente1_retenidoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_retencion_fuente2SriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_fuente2_porcentajeSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_fuente2_porcentajeSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_fuente2_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_fuente2_retenidoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_retencion_iva1SriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_retencion_iva1SriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_iva_bien_porcentajeSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_iva_bien_porcentajeSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_iva_bien_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_iva_bien_retenidoSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonnombre_tipo_retencion_iva2SriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"nombre_tipo_retencion_iva2SriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_iva_servicio_porcentajeSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_iva_servicio_porcentajeSriFacturasProveedoresIva012Busqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jButtonret_iva_servicio_retenidoSriFacturasProveedoresIva012Busqueda.addActionListener(new ButtonActionListener(this,"ret_iva_servicio_retenidoSriFacturasProveedoresIva012Busqueda"));
		
		
		this.jButtonBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012.addActionListener(new ButtonActionListener(this,"BusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionSriFacturasProveedoresIva012.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionSriFacturasProveedoresIva012ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarSriFacturasProveedoresIva012ActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarSriFacturasProveedoresIva012.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosSriFacturasProveedoresIva012(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s()) {
					srifacturasproveedoresiva012Aux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:srifacturasproveedoresiva012s) {
					srifacturasproveedoresiva012Aux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosSriFacturasProveedoresIva012ItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s()) {
						srifacturasproveedoresiva012Aux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:srifacturasproveedoresiva012s) {
						srifacturasproveedoresiva012Aux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:srifacturasproveedoresiva012s) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosSriFacturasProveedoresIva012.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosSriFacturasProveedoresIva012.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosSriFacturasProveedoresIva012ItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosSriFacturasProveedoresIva012.getSelectedRows();
			
			SriFacturasProveedoresIva012 srifacturasproveedoresiva012Local=new SriFacturasProveedoresIva012();
			
			//this.seleccionarTodosSriFacturasProveedoresIva012(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					srifacturasproveedoresiva012Local =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s().toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					srifacturasproveedoresiva012Local =(SriFacturasProveedoresIva012) this.srifacturasproveedoresiva012s.toArray()[this.jTableDatosSriFacturasProveedoresIva012.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				srifacturasproveedoresiva012Local.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s()) {
						srifacturasproveedoresiva012Aux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:srifacturasproveedoresiva012s) {
						srifacturasproveedoresiva012Aux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosSriFacturasProveedoresIva012.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosSriFacturasProveedoresIva012.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosSriFacturasProveedoresIva012,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualSriFacturasProveedoresIva012ItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarSriFacturasProveedoresIva012ParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralSriFacturasProveedoresIva012ActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralSriFacturasProveedoresIva012.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s()) {
				
						if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUC)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnombre_tipo_comprobante(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnombre_completo_cliente(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setruc_dato(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnumero_documento(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setfecha_registro_contable(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnumero_serie(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA)) {
							existe=true;
							srifacturasproveedoresiva012Aux.settotal_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA)) {
							existe=true;
							srifacturasproveedoresiva012Aux.settotal_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.settransfe_iva_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setpresta_iva_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnombre_tipo_retencion_fuente1(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_fuente1_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_fuente1_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnombre_tipo_retencion_fuente2(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_fuente2_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_fuente2_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnombre_tipo_retencion_iva1(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_iva_bien_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_iva_bien_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnombre_tipo_retencion_iva2(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_iva_servicio_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_iva_servicio_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:srifacturasproveedoresiva012s) {
					
						if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUC)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnombre_tipo_comprobante(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnombre_completo_cliente(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setruc_dato(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnumero_documento(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setfecha_registro_contable(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnumero_serie(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA)) {
							existe=true;
							srifacturasproveedoresiva012Aux.settotal_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA)) {
							existe=true;
							srifacturasproveedoresiva012Aux.settotal_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.settransfe_iva_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setpresta_iva_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnombre_tipo_retencion_fuente1(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_fuente1_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_fuente1_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnombre_tipo_retencion_fuente2(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_fuente2_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_fuente2_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnombre_tipo_retencion_iva1(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_iva_bien_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_iva_bien_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setnombre_tipo_retencion_iva2(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_iva_servicio_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO)) {
							existe=true;
							srifacturasproveedoresiva012Aux.setret_iva_servicio_retenido(Double.parseDouble(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesSriFacturasProveedoresIva012ActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioSriFacturasProveedoresIva012=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteSriFacturasProveedoresIva012) {				
					conSplash=true;//false;										
					
					//this.startProcessSriFacturasProveedoresIva012(conSplash);
				
					this.generarReporteSriFacturasProveedoresIva012sSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoSriFacturasProveedoresIva012sSeleccionados();
				//this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoSriFacturasProveedoresIva012sSeleccionados(false);
				//this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoSriFacturasProveedoresIva012sSeleccionados(true);
				//this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessSriFacturasProveedoresIva012();
				
				this.exportarSriFacturasProveedoresIva012sSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionSriFacturasProveedoresIva012s();
				//this.importarSriFacturasProveedoresIva012s();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessSriFacturasProveedoresIva012();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelSriFacturasProveedoresIva012sSeleccionados();
				//this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Sri Facturas Proveedores Iva012", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessSriFacturasProveedoresIva012();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoSriFacturasProveedoresIva012)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeySriFacturasProveedoresIva012(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Sri Facturas Proveedores Iva012",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.setSelectedIndex(0);					
				}	
			} 			
			else if(SriFacturasProveedoresIva012BeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteSriFacturasProveedoresIva012) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessSriFacturasProveedoresIva012(conSplash);
					
						//this.actualizarParametrosGeneralSriFacturasProveedoresIva012();
						
						this.generarReporteProcesoAccionSriFacturasProveedoresIva012sSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Sri Facturas Proveedores Iva012ES SELECCIONADOS?", "MANTENIMIENTO DE Sri Facturas Proveedores Iva012", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessSriFacturasProveedoresIva012();
				
						this.actualizarParametrosGeneralSriFacturasProveedoresIva012();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.srifacturasproveedoresiva012ReturnGeneral=srifacturasproveedoresiva012Logic.procesarAccionSriFacturasProveedoresIva012sWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s(),this.srifacturasproveedoresiva012ParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarSriFacturasProveedoresIva012ReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralSriFacturasProveedoresIva012();
					
					SriFacturasProveedoresIva012BeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarSriFacturasProveedoresIva012ReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesSriFacturasProveedoresIva012.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxTiposAccionesFormularioSriFacturasProveedoresIva012.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessSriFacturasProveedoresIva012(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesSriFacturasProveedoresIva012ActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessSriFacturasProveedoresIva012();
			
			if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados=new ArrayList<SriFacturasProveedoresIva012>();		
			SriFacturasProveedoresIva012 srifacturasproveedoresiva012=new SriFacturasProveedoresIva012();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesSriFacturasProveedoresIva012.getSelectedItem();
			
			
			
			
			srifacturasproveedoresiva012sSeleccionados=this.getSriFacturasProveedoresIva012sSeleccionados(true);
			//this.sTipoAccion;
			
			if(srifacturasproveedoresiva012sSeleccionados.size()==1) {
				for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:srifacturasproveedoresiva012sSeleccionados) {
					srifacturasproveedoresiva012=srifacturasproveedoresiva012Aux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessSriFacturasProveedoresIva012();
			
      		//this.finishProcessSriFacturasProveedoresIva012(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarSriFacturasProveedoresIva012ReturnGeneral() throws Exception {
		if(this.srifacturasproveedoresiva012ReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.srifacturasproveedoresiva012ReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.srifacturasproveedoresiva012ReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.srifacturasproveedoresiva012ReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.srifacturasproveedoresiva012ReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.srifacturasproveedoresiva012ReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
		}
		
		if(this.srifacturasproveedoresiva012ReturnGeneral.getConRetornoLista() || this.srifacturasproveedoresiva012ReturnGeneral.getConRetornoObjeto()) {
			if(this.srifacturasproveedoresiva012ReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.srifacturasproveedoresiva012Logic.setSriFacturasProveedoresIva012s(this.srifacturasproveedoresiva012ReturnGeneral.getSriFacturasProveedoresIva012s());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			
			this.inicializarActualizarBindingSriFacturasProveedoresIva012(false);
		}
	}
	
	public void actualizarParametrosGeneralSriFacturasProveedoresIva012() throws Exception {
		
		
	}
	
	public ArrayList<SriFacturasProveedoresIva012> getSriFacturasProveedoresIva012sSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados=new ArrayList<SriFacturasProveedoresIva012>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioSriFacturasProveedoresIva012) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s()) {
					if(srifacturasproveedoresiva012Aux.getIsSelected()) {
						srifacturasproveedoresiva012sSeleccionados.add(srifacturasproveedoresiva012Aux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:this.srifacturasproveedoresiva012s) {
					if(srifacturasproveedoresiva012Aux.getIsSelected()) {
						srifacturasproveedoresiva012sSeleccionados.add(srifacturasproveedoresiva012Aux);				
					}
				}
			}
			
			if(srifacturasproveedoresiva012sSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						srifacturasproveedoresiva012sSeleccionados.addAll(this.srifacturasproveedoresiva012Logic.getSriFacturasProveedoresIva012s());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						srifacturasproveedoresiva012sSeleccionados.addAll(this.srifacturasproveedoresiva012s);				
					}
				}
			}
		} else {
			srifacturasproveedoresiva012sSeleccionados.add(this.srifacturasproveedoresiva012);
		}
		
		return srifacturasproveedoresiva012sSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteSriFacturasProveedoresIva012sSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalSriFacturasProveedoresIva012sSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoSriFacturasProveedoresIva012sSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoSriFacturasProveedoresIva012sSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoSriFacturasProveedoresIva012sSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Sri Facturas Proveedores Iva012",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesSriFacturasProveedoresIva012sSeleccionados() throws Exception {
		ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados=new ArrayList<SriFacturasProveedoresIva012>();		
		
		srifacturasproveedoresiva012sSeleccionados=this.getSriFacturasProveedoresIva012sSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteSriFacturasProveedoresIva012s("Todos",srifacturasproveedoresiva012sSeleccionados);
		
	}	
	
	public void generarReporteNormalSriFacturasProveedoresIva012sSeleccionados() throws Exception {
		ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados=new ArrayList<SriFacturasProveedoresIva012>();		
		
		srifacturasproveedoresiva012sSeleccionados=this.getSriFacturasProveedoresIva012sSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteSriFacturasProveedoresIva012s("Todos",srifacturasproveedoresiva012sSeleccionados);
	}		
	
	public void generarReporteProcesoAccionSriFacturasProveedoresIva012sSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados=new ArrayList<SriFacturasProveedoresIva012>();
		
		srifacturasproveedoresiva012sSeleccionados=this.getSriFacturasProveedoresIva012sSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteSriFacturasProveedoresIva012s("Todos",srifacturasproveedoresiva012sSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoSriFacturasProveedoresIva012sSeleccionados() throws Exception {
		ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados=new ArrayList<SriFacturasProveedoresIva012>();		
		
		
		this.abrirInicializarFrameReporteDinamicoSriFacturasProveedoresIva012();
		
		
		srifacturasproveedoresiva012sSeleccionados=this.getSriFacturasProveedoresIva012sSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoSriFacturasProveedoresIva012();
		
		
		//this.generarReporteSriFacturasProveedoresIva012s("Todos",srifacturasproveedoresiva012sSeleccionados ,srifacturasproveedoresiva012Implementable,srifacturasproveedoresiva012ImplementableHome);
	}
	
	public void mostrarImportacionSriFacturasProveedoresIva012s() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionSriFacturasProveedoresIva012();
		
		this.abrirFrameImportacionSriFacturasProveedoresIva012();		
		
			
		//this.generarReporteSriFacturasProveedoresIva012s("Todos",srifacturasproveedoresiva012sSeleccionados ,srifacturasproveedoresiva012Implementable,srifacturasproveedoresiva012ImplementableHome);
	}
	
	public void importarSriFacturasProveedoresIva012s() throws Exception {		
	
	}
	
	public void exportarSriFacturasProveedoresIva012sSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelSriFacturasProveedoresIva012sSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoSriFacturasProveedoresIva012sSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlSriFacturasProveedoresIva012sSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Sri Facturas Proveedores Iva012",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoSriFacturasProveedoresIva012sSeleccionados() throws Exception {
		ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados=new ArrayList<SriFacturasProveedoresIva012>();		
		
		srifacturasproveedoresiva012sSeleccionados=this.getSriFacturasProveedoresIva012sSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"srifacturasproveedoresiva012."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarSriFacturasProveedoresIva012(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:srifacturasproveedoresiva012sSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarSriFacturasProveedoresIva012(srifacturasproveedoresiva012Aux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//srifacturasproveedoresiva012Aux.setsDetalleGeneralEntityReporte(srifacturasproveedoresiva012Aux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri Facturas Proveedores Iva012",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarSriFacturasProveedoresIva012(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDPERIODODECLARA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUC;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPOIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=srifacturasproveedoresiva012.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getperiododeclara_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getruc();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getnombre_tipo_comprobante();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getnombre_completo_cliente();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getruc_dato();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getnumero_documento();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getfecha_registro_contable().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getnumero_serie();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.gettotal_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.gettotal_sin_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.gettipoiva_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.gettiporetencioniva_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.gettransfe_iva_retenido().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.gettiporetencionivapresta_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getpresta_iva_retenido().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente1();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getret_fuente1_porcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getret_fuente1_retenido().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente2();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getret_fuente2_porcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getret_fuente2_retenido().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getnombre_tipo_retencion_iva1();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getret_iva_bien_porcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getret_iva_bien_retenido().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getnombre_tipo_retencion_iva2();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getret_iva_servicio_porcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=srifacturasproveedoresiva012.getret_iva_servicio_retenido().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelSriFacturasProveedoresIva012sSeleccionados() throws Exception {
		ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados=new ArrayList<SriFacturasProveedoresIva012>();		
		
		srifacturasproveedoresiva012sSeleccionados=this.getSriFacturasProveedoresIva012sSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"srifacturasproveedoresiva012.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("SriFacturasProveedoresIva012s");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelSriFacturasProveedoresIva012(row);				
				iRow++;
			}				
			
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:srifacturasproveedoresiva012sSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelSriFacturasProveedoresIva012(srifacturasproveedoresiva012Aux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri Facturas Proveedores Iva012",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlSriFacturasProveedoresIva012sSeleccionados() throws Exception {
		ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados=new ArrayList<SriFacturasProveedoresIva012>();		
		
		srifacturasproveedoresiva012sSeleccionados=this.getSriFacturasProveedoresIva012sSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"srifacturasproveedoresiva012.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("srifacturasproveedoresiva012s");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("srifacturasproveedoresiva012");
			//elementRoot.appendChild(element);
		
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:srifacturasproveedoresiva012sSeleccionados) {
				element = document.createElement("srifacturasproveedoresiva012");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlSriFacturasProveedoresIva012(srifacturasproveedoresiva012Aux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri Facturas Proveedores Iva012",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelSriFacturasProveedoresIva012(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDPERIODODECLARA);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUC);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TOTALSINIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPOIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_TRANSFEIVARETENIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_PRESTAIVARETENIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1PORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE1RETENIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2PORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETFUENTE2RETENIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENPORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVABIENRETENIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIOPORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RETIVASERVICIORETENIDO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getperiododeclara_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getruc());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_comprobante());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getnombre_completo_cliente());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getruc_dato());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getnumero_documento());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getfecha_registro_contable());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getnumero_serie());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.gettotal_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.gettotal_sin_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.gettipoiva_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.gettiporetencioniva_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.gettransfe_iva_retenido());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.gettiporetencionivapresta_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getpresta_iva_retenido());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente1());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getret_fuente1_porcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getret_fuente1_retenido());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente2());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getret_fuente2_porcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getret_fuente2_retenido());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_retencion_iva1());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getret_iva_bien_porcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getret_iva_bien_retenido());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getnombre_tipo_retencion_iva2());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getret_iva_servicio_porcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(srifacturasproveedoresiva012.getret_iva_servicio_retenido());				
	}
	
	public void setFilaDatosExportarXmlSriFacturasProveedoresIva012(SriFacturasProveedoresIva012 srifacturasproveedoresiva012,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(srifacturasproveedoresiva012.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(srifacturasproveedoresiva012.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(srifacturasproveedoresiva012.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementperiododeclara_descripcion = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.IDPERIODODECLARA);
		elementperiododeclara_descripcion.appendChild(document.createTextNode(srifacturasproveedoresiva012.getperiododeclara_descripcion()));
		element.appendChild(elementperiododeclara_descripcion);

		Element elementruc = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.RUC);
		elementruc.appendChild(document.createTextNode(srifacturasproveedoresiva012.getruc().trim()));
		element.appendChild(elementruc);

		Element elementnombre_tipo_comprobante = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.NOMBRETIPOCOMPROBANTE);
		elementnombre_tipo_comprobante.appendChild(document.createTextNode(srifacturasproveedoresiva012.getnombre_tipo_comprobante().trim()));
		element.appendChild(elementnombre_tipo_comprobante);

		Element elementnombre_completo_cliente = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.NOMBRECOMPLETOCLIENTE);
		elementnombre_completo_cliente.appendChild(document.createTextNode(srifacturasproveedoresiva012.getnombre_completo_cliente().trim()));
		element.appendChild(elementnombre_completo_cliente);

		Element elementruc_dato = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.RUCDATO);
		elementruc_dato.appendChild(document.createTextNode(srifacturasproveedoresiva012.getruc_dato().trim()));
		element.appendChild(elementruc_dato);

		Element elementnumero_documento = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.NUMERODOCUMENTO);
		elementnumero_documento.appendChild(document.createTextNode(srifacturasproveedoresiva012.getnumero_documento().trim()));
		element.appendChild(elementnumero_documento);

		Element elementfecha_emision = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(srifacturasproveedoresiva012.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementfecha_registro_contable = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.FECHAREGISTROCONTABLE);
		elementfecha_registro_contable.appendChild(document.createTextNode(srifacturasproveedoresiva012.getfecha_registro_contable().toString().trim()));
		element.appendChild(elementfecha_registro_contable);

		Element elementnumero_serie = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.NUMEROSERIE);
		elementnumero_serie.appendChild(document.createTextNode(srifacturasproveedoresiva012.getnumero_serie().trim()));
		element.appendChild(elementnumero_serie);

		Element elementtotal_iva = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.TOTALIVA);
		elementtotal_iva.appendChild(document.createTextNode(srifacturasproveedoresiva012.gettotal_iva().toString().trim()));
		element.appendChild(elementtotal_iva);

		Element elementtotal_sin_iva = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.TOTALSINIVA);
		elementtotal_sin_iva.appendChild(document.createTextNode(srifacturasproveedoresiva012.gettotal_sin_iva().toString().trim()));
		element.appendChild(elementtotal_sin_iva);

		Element elementtipoiva_descripcion = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.IDTIPOIVA);
		elementtipoiva_descripcion.appendChild(document.createTextNode(srifacturasproveedoresiva012.gettipoiva_descripcion()));
		element.appendChild(elementtipoiva_descripcion);

		Element elementtiporetencioniva_descripcion = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.IDTIPORETENCIONIVA);
		elementtiporetencioniva_descripcion.appendChild(document.createTextNode(srifacturasproveedoresiva012.gettiporetencioniva_descripcion()));
		element.appendChild(elementtiporetencioniva_descripcion);

		Element elementtransfe_iva_retenido = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.TRANSFEIVARETENIDO);
		elementtransfe_iva_retenido.appendChild(document.createTextNode(srifacturasproveedoresiva012.gettransfe_iva_retenido().toString().trim()));
		element.appendChild(elementtransfe_iva_retenido);

		Element elementtiporetencionivapresta_descripcion = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.IDTIPORETENCIONIVAPRESTA);
		elementtiporetencionivapresta_descripcion.appendChild(document.createTextNode(srifacturasproveedoresiva012.gettiporetencionivapresta_descripcion()));
		element.appendChild(elementtiporetencionivapresta_descripcion);

		Element elementpresta_iva_retenido = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.PRESTAIVARETENIDO);
		elementpresta_iva_retenido.appendChild(document.createTextNode(srifacturasproveedoresiva012.getpresta_iva_retenido().toString().trim()));
		element.appendChild(elementpresta_iva_retenido);

		Element elementnombre_tipo_retencion_fuente1 = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.NOMBRETIPORETENCIONFUENTE1);
		elementnombre_tipo_retencion_fuente1.appendChild(document.createTextNode(srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente1().trim()));
		element.appendChild(elementnombre_tipo_retencion_fuente1);

		Element elementret_fuente1_porcentaje = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.RETFUENTE1PORCENTAJE);
		elementret_fuente1_porcentaje.appendChild(document.createTextNode(srifacturasproveedoresiva012.getret_fuente1_porcentaje().toString().trim()));
		element.appendChild(elementret_fuente1_porcentaje);

		Element elementret_fuente1_retenido = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.RETFUENTE1RETENIDO);
		elementret_fuente1_retenido.appendChild(document.createTextNode(srifacturasproveedoresiva012.getret_fuente1_retenido().toString().trim()));
		element.appendChild(elementret_fuente1_retenido);

		Element elementnombre_tipo_retencion_fuente2 = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.NOMBRETIPORETENCIONFUENTE2);
		elementnombre_tipo_retencion_fuente2.appendChild(document.createTextNode(srifacturasproveedoresiva012.getnombre_tipo_retencion_fuente2().trim()));
		element.appendChild(elementnombre_tipo_retencion_fuente2);

		Element elementret_fuente2_porcentaje = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.RETFUENTE2PORCENTAJE);
		elementret_fuente2_porcentaje.appendChild(document.createTextNode(srifacturasproveedoresiva012.getret_fuente2_porcentaje().toString().trim()));
		element.appendChild(elementret_fuente2_porcentaje);

		Element elementret_fuente2_retenido = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.RETFUENTE2RETENIDO);
		elementret_fuente2_retenido.appendChild(document.createTextNode(srifacturasproveedoresiva012.getret_fuente2_retenido().toString().trim()));
		element.appendChild(elementret_fuente2_retenido);

		Element elementnombre_tipo_retencion_iva1 = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.NOMBRETIPORETENCIONIVA1);
		elementnombre_tipo_retencion_iva1.appendChild(document.createTextNode(srifacturasproveedoresiva012.getnombre_tipo_retencion_iva1().trim()));
		element.appendChild(elementnombre_tipo_retencion_iva1);

		Element elementret_iva_bien_porcentaje = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.RETIVABIENPORCENTAJE);
		elementret_iva_bien_porcentaje.appendChild(document.createTextNode(srifacturasproveedoresiva012.getret_iva_bien_porcentaje().toString().trim()));
		element.appendChild(elementret_iva_bien_porcentaje);

		Element elementret_iva_bien_retenido = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.RETIVABIENRETENIDO);
		elementret_iva_bien_retenido.appendChild(document.createTextNode(srifacturasproveedoresiva012.getret_iva_bien_retenido().toString().trim()));
		element.appendChild(elementret_iva_bien_retenido);

		Element elementnombre_tipo_retencion_iva2 = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.NOMBRETIPORETENCIONIVA2);
		elementnombre_tipo_retencion_iva2.appendChild(document.createTextNode(srifacturasproveedoresiva012.getnombre_tipo_retencion_iva2().trim()));
		element.appendChild(elementnombre_tipo_retencion_iva2);

		Element elementret_iva_servicio_porcentaje = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.RETIVASERVICIOPORCENTAJE);
		elementret_iva_servicio_porcentaje.appendChild(document.createTextNode(srifacturasproveedoresiva012.getret_iva_servicio_porcentaje().toString().trim()));
		element.appendChild(elementret_iva_servicio_porcentaje);

		Element elementret_iva_servicio_retenido = document.createElement(SriFacturasProveedoresIva012ConstantesFunciones.RETIVASERVICIORETENIDO);
		elementret_iva_servicio_retenido.appendChild(document.createTextNode(srifacturasproveedoresiva012.getret_iva_servicio_retenido().toString().trim()));
		element.appendChild(elementret_iva_servicio_retenido);
	}
	
	public void generarReporteGroupGenericoSriFacturasProveedoresIva012sSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados=new ArrayList<SriFacturasProveedoresIva012>();
		
		srifacturasproveedoresiva012sSeleccionados=this.getSriFacturasProveedoresIva012sSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoSriFacturasProveedoresIva012(srifacturasproveedoresiva012sSeleccionados);
		
		this.generarReporteSriFacturasProveedoresIva012s("Todos",srifacturasproveedoresiva012sSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoSriFacturasProveedoresIva012(ArrayList<SriFacturasProveedoresIva012> srifacturasproveedoresiva012sSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(SriFacturasProveedoresIva012 srifacturasproveedoresiva012Aux:srifacturasproveedoresiva012sSeleccionados) {
				srifacturasproveedoresiva012Aux.setsDetalleGeneralEntityReporte(srifacturasproveedoresiva012Aux.toString());
			
				if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDPERIODODECLARA)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.getperiododeclara_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUC)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.getruc());
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPOCOMPROBANTE)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.getnombre_tipo_comprobante());
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRECOMPLETOCLIENTE)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.getnombre_completo_cliente());
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_RUCDATO)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.getruc_dato());
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMERODOCUMENTO)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.getnumero_documento());
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(srifacturasproveedoresiva012Aux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_FECHAREGISTROCONTABLE)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(srifacturasproveedoresiva012Aux.getfecha_registro_contable()));
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NUMEROSERIE)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.getnumero_serie());
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPOIVA)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.gettipoiva_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVA)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.gettiporetencioniva_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_IDTIPORETENCIONIVAPRESTA)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.gettiporetencionivapresta_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE1)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.getnombre_tipo_retencion_fuente1());
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONFUENTE2)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.getnombre_tipo_retencion_fuente2());
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA1)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.getnombre_tipo_retencion_iva1());
				}
				 else if(sTipoSeleccionar.equals(SriFacturasProveedoresIva012ConstantesFunciones.LABEL_NOMBRETIPORETENCIONIVA2)) {
					existe=true;
					srifacturasproveedoresiva012Aux.setsDescripcionGeneralEntityReporte1(srifacturasproveedoresiva012Aux.getnombre_tipo_retencion_iva2());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriFacturasProveedoresIva012ConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesSriFacturasProveedoresIva012(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=true;
				this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=true;
				this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=true;
			}
			
			this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=true;
				} else {
					this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012=true;
			this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=true;
				} else {
					this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012=true;
			this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012=true;
			this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=true;
				} else {
					this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012=true;
			this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=false;
				} else {
					this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=true;
			this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=true;
			this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=true;
			this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=true;
				} else {
					this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=false;
				} else {
					this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012=true;
			this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=false;
				} else {
					this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(SriFacturasProveedoresIva012JInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=true;
			this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=true;
			this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=true;
		} else {
			this.actualizarEstadoPanelsSriFacturasProveedoresIva012(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarSriFacturasProveedoresIva012=false;
			//this.isVisibilidadCeldaVerFormSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaDuplicarSriFacturasProveedoresIva012=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=false;
		} else {
			this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
			if(!srifacturasproveedoresiva012SessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=false;												
			}
			
			this.jButtonCerrarSriFacturasProveedoresIva012.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=false;
		}
		
		if(!this.permiteMantenimiento(this.srifacturasproveedoresiva012)) {
			this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012=false;
			this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012=false;
		}
		
		
		//SE DESHABILITA SIEMPRE
		this.isVisibilidadCeldaNuevoSriFacturasProveedoresIva012=false;
		this.isVisibilidadCeldaNuevoRelacionesSriFacturasProveedoresIva012=false;
		this.isVisibilidadCeldaGuardarCambiosSriFacturasProveedoresIva012=false;
		//this.isVisibilidadCeldaModificarSriFacturasProveedoresIva012=true;
		this.isVisibilidadCeldaActualizarSriFacturasProveedoresIva012=false;
		this.isVisibilidadCeldaEliminarSriFacturasProveedoresIva012=false;
		//this.isVisibilidadCeldaCancelarSriFacturasProveedoresIva012=true;			
		this.isVisibilidadCeldaGuardarSriFacturasProveedoresIva012=false;
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesSriFacturasProveedoresIva012() {
	}
	
	public void actualizarEstadoPanelsSriFacturasProveedoresIva012(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012!=null) {
				this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSriFacturasProveedoresIva012!=null) {
				this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosSriFacturasProveedoresIva012!=null) {
				this.jScrollPanelDatosSriFacturasProveedoresIva012.setVisible(true);
			}
			
			if(this.jPanelPaginacionSriFacturasProveedoresIva012!=null) {
				this.jPanelPaginacionSriFacturasProveedoresIva012.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesSriFacturasProveedoresIva012!=null) {
				this.jPanelParametrosReportesSriFacturasProveedoresIva012.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012!=null) {
				this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSriFacturasProveedoresIva012!=null) {
				this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosSriFacturasProveedoresIva012!=null) {
				this.jScrollPanelDatosSriFacturasProveedoresIva012.setVisible(false);
			}
			
			if(this.jPanelPaginacionSriFacturasProveedoresIva012!=null) {
				this.jPanelPaginacionSriFacturasProveedoresIva012.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesSriFacturasProveedoresIva012!=null) {
				this.jPanelParametrosReportesSriFacturasProveedoresIva012.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012!=null) {
				this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSriFacturasProveedoresIva012!=null) {
				this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosSriFacturasProveedoresIva012!=null) {
				this.jScrollPanelDatosSriFacturasProveedoresIva012.setVisible(false);
			}
			
			if(this.jPanelPaginacionSriFacturasProveedoresIva012!=null) {
				this.jPanelPaginacionSriFacturasProveedoresIva012.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesSriFacturasProveedoresIva012!=null) {
				this.jPanelParametrosReportesSriFacturasProveedoresIva012.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012!=null) {
				this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSriFacturasProveedoresIva012!=null) {
				this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosSriFacturasProveedoresIva012!=null) {
				this.jScrollPanelDatosSriFacturasProveedoresIva012.setVisible(false);
			}
			
			if(this.jPanelPaginacionSriFacturasProveedoresIva012!=null) {
				this.jPanelPaginacionSriFacturasProveedoresIva012.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesSriFacturasProveedoresIva012!=null) {
				this.jPanelParametrosReportesSriFacturasProveedoresIva012.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012!=null) {
				this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSriFacturasProveedoresIva012!=null) {
				this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosSriFacturasProveedoresIva012!=null) {
				this.jScrollPanelDatosSriFacturasProveedoresIva012.setVisible(true);
			}
			
			if(this.jPanelPaginacionSriFacturasProveedoresIva012!=null) {
				this.jPanelPaginacionSriFacturasProveedoresIva012.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesSriFacturasProveedoresIva012!=null) {
				this.jPanelParametrosReportesSriFacturasProveedoresIva012.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012!=null) {
				this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSriFacturasProveedoresIva012!=null) {
				this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosSriFacturasProveedoresIva012!=null) {
				this.jScrollPanelDatosSriFacturasProveedoresIva012.setVisible(true);
			}
			
			if(this.jPanelPaginacionSriFacturasProveedoresIva012!=null) {
				this.jPanelPaginacionSriFacturasProveedoresIva012.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesSriFacturasProveedoresIva012!=null) {
				this.jPanelParametrosReportesSriFacturasProveedoresIva012.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012!=null) {
				this.jScrollPanelDatosEdicionSriFacturasProveedoresIva012.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSriFacturasProveedoresIva012!=null) {
				this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosSriFacturasProveedoresIva012!=null) {
				this.jScrollPanelDatosSriFacturasProveedoresIva012.setVisible(true);
			}
			
			if(this.jPanelPaginacionSriFacturasProveedoresIva012!=null) {
				this.jPanelPaginacionSriFacturasProveedoresIva012.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesSriFacturasProveedoresIva012!=null) {
				this.jPanelParametrosReportesSriFacturasProveedoresIva012.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasSriFacturasProveedoresIva012!=null) {
					this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesSriFacturasProveedoresIva012!=null) {
				this.jPanelParametrosReportesSriFacturasProveedoresIva012.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.srifacturasproveedoresiva012SessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSriFacturasProveedoresIva012!=null) {
				this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesSriFacturasProveedoresIva012!=null) {
				this.jPanelParametrosReportesSriFacturasProveedoresIva012.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadBusquedaSriFacturasProveedoresIva012=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaSriFacturasProveedoresIva012) {this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.remove(jPanelBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodoDeclara(Boolean isParaPeriodoDeclara){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoDeclaraNegation=!isParaPeriodoDeclara;

			this.isVisibilidadBusquedaSriFacturasProveedoresIva012=isParaPeriodoDeclara;
			if(!this.isVisibilidadBusquedaSriFacturasProveedoresIva012) {this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.remove(jPanelBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoIva(Boolean isParaTipoIva){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoIvaNegation=!isParaTipoIva;

			this.isVisibilidadBusquedaSriFacturasProveedoresIva012=isParaTipoIvaNegation;
			if(!this.isVisibilidadBusquedaSriFacturasProveedoresIva012) {this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.remove(jPanelBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoRetencionIva(Boolean isParaTipoRetencionIva){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoRetencionIvaNegation=!isParaTipoRetencionIva;

			this.isVisibilidadBusquedaSriFacturasProveedoresIva012=isParaTipoRetencionIvaNegation;
			if(!this.isVisibilidadBusquedaSriFacturasProveedoresIva012) {this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.remove(jPanelBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoRetencionIvaPresta(Boolean isParaTipoRetencionIvaPresta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoRetencionIvaPrestaNegation=!isParaTipoRetencionIvaPresta;

			this.isVisibilidadBusquedaSriFacturasProveedoresIva012=isParaTipoRetencionIvaPrestaNegation;
			if(!this.isVisibilidadBusquedaSriFacturasProveedoresIva012) {this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.remove(jPanelBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012);}
		}
		
	}
	
	
	
	
	
	
	public void guardarDatosBusquedaSession() throws Exception {
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaSriFacturasProveedoresIva012(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioSriFacturasProveedoresIva012() {
		this.updateBorderResaltarBusquedasFormularioSriFacturasProveedoresIva012();
		this.updateVisibilidadBusquedasFormularioSriFacturasProveedoresIva012();
		this.updateHabilitarBusquedasFormularioSriFacturasProveedoresIva012();
	}
	
	public void updateBorderResaltarBusquedasFormularioSriFacturasProveedoresIva012() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.getComponents().length>0) {
	

		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012!=null) {
			index= this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.indexOfComponent(this.jPanelBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.getComponent(index);
				jPanel.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioSriFacturasProveedoresIva012() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.indexOfComponent(this.jPanelBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012);
			if(!this.srifacturasproveedoresiva012ConstantesFunciones.mostrarBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012 && index>-1) {
				this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioSriFacturasProveedoresIva012() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.indexOfComponent(this.jPanelBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012);
				this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setEnabledAt(index,this.srifacturasproveedoresiva012ConstantesFunciones.activarBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaSriFacturasProveedoresIva012(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("BusquedaSriFacturasProveedoresIva012")) {
			index= this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.indexOfComponent(this.jPanelBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012);

			this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSriFacturasProveedoresIva012.getComponent(index);

			this.srifacturasproveedoresiva012ConstantesFunciones.setResaltarBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012(resaltar);

			jPanel.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarBusquedaSriFacturasProveedoresIva012SriFacturasProveedoresIva012);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarSriFacturasProveedoresIva012.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioSriFacturasProveedoresIva012() throws Exception {

		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioSriFacturasProveedoresIva012();
		this.updateVisibilidadResaltarControlesFormularioSriFacturasProveedoresIva012();
		this.updateHabilitarResaltarControlesFormularioSriFacturasProveedoresIva012();
		
	}
	
	public void updateBorderResaltarControlesFormularioSriFacturasProveedoresIva012() throws Exception {
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltaridSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelidSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltaridSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_empresaSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_empresaSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_periodo_declaraSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_periodo_declaraSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarrucSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldrucSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarrucSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_comprobanteSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_comprobanteSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_comprobanteSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_completo_clienteSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_completo_clienteSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_completo_clienteSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarruc_datoSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldruc_datoSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarruc_datoSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnumero_documentoSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_documentoSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnumero_documentoSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarfecha_emisionSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_emisionSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarfecha_emisionSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarfecha_registro_contableSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_registro_contableSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarfecha_registro_contableSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnumero_serieSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_serieSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnumero_serieSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltartotal_ivaSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_ivaSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltartotal_ivaSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltartotal_sin_ivaSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_sin_ivaSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltartotal_sin_ivaSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_tipo_ivaSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_tipo_ivaSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_tipo_retencion_ivaSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_tipo_retencion_ivaSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltartransfe_iva_retenidoSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtransfe_iva_retenidoSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltartransfe_iva_retenidoSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarpresta_iva_retenidoSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldpresta_iva_retenidoSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarpresta_iva_retenidoSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente1SriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente1_porcentajeSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_porcentajeSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente1_porcentajeSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente1_retenidoSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_retenidoSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente1_retenidoSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente2SriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente2_porcentajeSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_porcentajeSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente2_porcentajeSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente2_retenidoSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_retenidoSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_fuente2_retenidoSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_iva1SriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva1SriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_iva1SriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_bien_porcentajeSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_porcentajeSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_bien_porcentajeSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_bien_retenidoSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_retenidoSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_bien_retenidoSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_iva2SriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva2SriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarnombre_tipo_retencion_iva2SriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_servicio_porcentajeSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_porcentajeSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_servicio_porcentajeSriFacturasProveedoresIva012);}
		if(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_servicio_retenidoSriFacturasProveedoresIva012!=null && this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_retenidoSriFacturasProveedoresIva012.setBorder(this.srifacturasproveedoresiva012ConstantesFunciones.resaltarret_iva_servicio_retenidoSriFacturasProveedoresIva012);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioSriFacturasProveedoresIva012() throws Exception {		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
	
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelidSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostraridSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelidSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostraridSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarid_empresaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelid_empresaSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarid_empresaSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarid_periodo_declaraSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelid_periodo_declaraSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarid_periodo_declaraSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldrucSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarrucSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelrucSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarrucSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_comprobanteSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_comprobanteSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelnombre_tipo_comprobanteSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_comprobanteSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_completo_clienteSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_completo_clienteSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelnombre_completo_clienteSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_completo_clienteSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldruc_datoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarruc_datoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelruc_datoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarruc_datoSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_documentoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnumero_documentoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelnumero_documentoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnumero_documentoSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_emisionSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarfecha_emisionSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelfecha_emisionSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarfecha_emisionSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_registro_contableSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarfecha_registro_contableSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelfecha_registro_contableSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarfecha_registro_contableSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_serieSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnumero_serieSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelnumero_serieSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnumero_serieSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_ivaSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrartotal_ivaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPaneltotal_ivaSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrartotal_ivaSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_sin_ivaSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrartotal_sin_ivaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPaneltotal_sin_ivaSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrartotal_sin_ivaSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarid_tipo_ivaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelid_tipo_ivaSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarid_tipo_ivaSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarid_tipo_retencion_ivaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelid_tipo_retencion_ivaSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarid_tipo_retencion_ivaSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtransfe_iva_retenidoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrartransfe_iva_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPaneltransfe_iva_retenidoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrartransfe_iva_retenidoSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldpresta_iva_retenidoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarpresta_iva_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelpresta_iva_retenidoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarpresta_iva_retenidoSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente1SriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_porcentajeSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_fuente1_porcentajeSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelret_fuente1_porcentajeSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_fuente1_porcentajeSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_retenidoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_fuente1_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelret_fuente1_retenidoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_fuente1_retenidoSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente2SriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_porcentajeSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_fuente2_porcentajeSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelret_fuente2_porcentajeSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_fuente2_porcentajeSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_retenidoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_fuente2_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelret_fuente2_retenidoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_fuente2_retenidoSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva1SriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_retencion_iva1SriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelnombre_tipo_retencion_iva1SriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_retencion_iva1SriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_porcentajeSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_iva_bien_porcentajeSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelret_iva_bien_porcentajeSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_iva_bien_porcentajeSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_retenidoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_iva_bien_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelret_iva_bien_retenidoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_iva_bien_retenidoSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva2SriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_retencion_iva2SriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelnombre_tipo_retencion_iva2SriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarnombre_tipo_retencion_iva2SriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_porcentajeSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_iva_servicio_porcentajeSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelret_iva_servicio_porcentajeSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_iva_servicio_porcentajeSriFacturasProveedoresIva012);
		//this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_retenidoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_iva_servicio_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jPanelret_iva_servicio_retenidoSriFacturasProveedoresIva012.setVisible(this.srifacturasproveedoresiva012ConstantesFunciones.mostrarret_iva_servicio_retenidoSriFacturasProveedoresIva012);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioSriFacturasProveedoresIva012() throws Exception {
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormSriFacturasProveedoresIva012!=null) {
	
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jLabelidSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activaridSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_empresaSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarid_empresaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_periodo_declaraSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarid_periodo_declaraSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldrucSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarrucSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_comprobanteSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_comprobanteSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_completo_clienteSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_completo_clienteSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldruc_datoSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarruc_datoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_documentoSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarnumero_documentoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_emisionSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarfecha_emisionSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jDateChooserfecha_registro_contableSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarfecha_registro_contableSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldnumero_serieSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarnumero_serieSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_ivaSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activartotal_ivaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtotal_sin_ivaSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activartotal_sin_ivaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_ivaSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarid_tipo_ivaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_ivaSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarid_tipo_retencion_ivaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldtransfe_iva_retenidoSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activartransfe_iva_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jComboBoxid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarid_tipo_retencion_iva_prestaSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldpresta_iva_retenidoSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarpresta_iva_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente1SriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_fuente1SriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_porcentajeSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente1_porcentajeSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente1_retenidoSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente1_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_fuente2SriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_fuente2SriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_porcentajeSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente2_porcentajeSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_fuente2_retenidoSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarret_fuente2_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva1SriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_iva1SriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_porcentajeSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_bien_porcentajeSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_bien_retenidoSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_bien_retenidoSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextAreanombre_tipo_retencion_iva2SriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarnombre_tipo_retencion_iva2SriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_porcentajeSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_servicio_porcentajeSriFacturasProveedoresIva012);
		this.jInternalFrameDetalleFormSriFacturasProveedoresIva012.jTextFieldret_iva_servicio_retenidoSriFacturasProveedoresIva012.setEnabled(this.srifacturasproveedoresiva012ConstantesFunciones.activarret_iva_servicio_retenidoSriFacturasProveedoresIva012);
		}
	}
	
		
}